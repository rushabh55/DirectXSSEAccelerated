; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Engine Class\Assignment 1\Scratch\DXSSE\FluidCS11\FluidCS11.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUhxizgxsUwchhvUuofrwxhBBUzhhvnyobwvyftUuofrwxhBBOlyq@55522135E7E575BA
PUBLIC	?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumPurple
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSeaGreen
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSlateBlue
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSpringGreen
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumTurquoise
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumVioletRed
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	_SID_SCommandBarState
PUBLIC	?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MidnightBlue
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MintCream
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MistyRose
PUBLIC	?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Moccasin
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::NavajoWhite
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?Navy@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Navy
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OldLace
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?Olive@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Olive
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OliveDrab
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?Orange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orange
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OrangeRed
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orchid
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleGoldenrod
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PaleGreen
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleTurquoise
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleVioletRed
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PapayaWhip
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PeachPuff
PUBLIC	_IID_ID3D11ShaderReflectionVariable
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?Peru@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Peru
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?Pink@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Pink
PUBLIC	?Plum@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Plum
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?is_monotonic@steady_clock@chrono@std@@2_NB	; std::chrono::steady_clock::is_monotonic
PUBLIC	?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PowderBlue
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?Purple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Purple
PUBLIC	?is_steady@steady_clock@chrono@std@@2_NB	; std::chrono::steady_clock::is_steady
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?Red@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Red
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RosyBrown
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RoyalBlue
PUBLIC	?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SaddleBrown
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Salmon
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SandyBrown
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaGreen
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaShell
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Sienna
PUBLIC	?Silver@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Silver
PUBLIC	?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SkyBlue
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateBlue
PUBLIC	?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateGray
PUBLIC	_IID_ID3D11ShaderReflectionConstantBuffer
PUBLIC	?Snow@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Snow
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SpringGreen
PUBLIC	?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SteelBlue
PUBLIC	?Tan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Tan
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?Teal@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Teal
PUBLIC	?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Thistle
PUBLIC	?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Tomato
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Transparent
PUBLIC	?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Turquoise
PUBLIC	?Violet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Violet
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Wheat
PUBLIC	?White@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::White
PUBLIC	?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::WhiteSmoke
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Yellow
PUBLIC	?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::YellowGreen
PUBLIC	?value@?$integral_constant@I$07@std@@2IB	; std::integral_constant<unsigned int,8>::value
PUBLIC	_IID_ID3D11ShaderReflection
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?value@?$integral_constant@I$03@std@@2IB	; std::integral_constant<unsigned int,4>::value
PUBLIC	_IID_ID3D11LibraryReflection
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	_IID_ID3D11FunctionReflection
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?value@?$_Is_ratio@U?$ratio@$00$0JIJGIA@@std@@@chrono@std@@2_NB ; std::chrono::_Is_ratio<std::ratio<1,10000000> >::value
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?value@?$integral_constant@H$0A@@std@@2HB	; std::integral_constant<int,0>::value
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	_IID_ID3D11FunctionParameterReflection
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	_IID_ID3D11Module
PUBLIC	?value@?$integral_constant@I$01@std@@2IB	; std::integral_constant<unsigned int,2>::value
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	_IID_ID3D11ModuleInstance
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@I$00@std@@2IB	; std::integral_constant<unsigned int,1>::value
PUBLIC	_IID_ID3D11Linker
PUBLIC	?value@?$_Maximum@$S@std@@2IB			; std::_Maximum<>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	_IID_ID3D11LinkingNode
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	_IID_ID3D11FunctionLinkingGraph
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	_ConcRT_ProviderGuid
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	_ConcRTEventGuid
PUBLIC	_SchedulerEventGuid
PUBLIC	_ScheduleGroupEventGuid
PUBLIC	_ContextEventGuid
PUBLIC	_ChoreEventGuid
PUBLIC	_VirtualProcessorEventGuid
PUBLIC	_LockEventGuid
PUBLIC	_ResourceManagerEventGuid
PUBLIC	_PPLParallelInvokeEventGuid
PUBLIC	?value@?$_Sign_of@$0GE@@std@@2_JB		; std::_Sign_of<100>::value
PUBLIC	_PPLParallelForEventGuid
PUBLIC	_PPLParallelForeachEventGuid
PUBLIC	_AgentEventGuid
PUBLIC	?value@?$_Sign_of@$00@std@@2_JB			; std::_Sign_of<1>::value
PUBLIC	?g_iNullu32@@3IA				; g_iNullu32
PUBLIC	?g_pParticleVS@@3PAUID3D11VertexShader@@A	; g_pParticleVS
PUBLIC	?value@?$_Abs@$0GE@@std@@2_JB			; std::_Abs<100>::value
PUBLIC	?g_pParticleGS@@3PAUID3D11GeometryShader@@A	; g_pParticleGS
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?g_pParticlePS@@3PAUID3D11PixelShader@@A	; g_pParticlePS
PUBLIC	?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A	; g_pBuildGridCS
PUBLIC	?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
PUBLIC	?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
PUBLIC	?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRepositionParticlesCS
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
PUBLIC	?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A	; g_pForce_SimpleCS
PUBLIC	?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
PUBLIC	?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A	; g_pForce_SharedCS
PUBLIC	?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A	; g_pDensity_GridCS
PUBLIC	?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A	; g_pForce_GridCS
PUBLIC	?value@?$_Abs@$00@std@@2_JB			; std::_Abs<1>::value
PUBLIC	?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A	; g_pIntegrateCS
PUBLIC	?g_pSortBitonic@@3PAUID3D11ComputeShader@@A	; g_pSortBitonic
PUBLIC	?g_pSortTranspose@@3PAUID3D11ComputeShader@@A	; g_pSortTranspose
PUBLIC	?g_pParticles@@3PAUID3D11Buffer@@A		; g_pParticles
PUBLIC	?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
PUBLIC	?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
PUBLIC	?g_pSortedParticles@@3PAUID3D11Buffer@@A	; g_pSortedParticles
PUBLIC	?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
PUBLIC	?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
PUBLIC	?g_pParticleDensity@@3PAUID3D11Buffer@@A	; g_pParticleDensity
PUBLIC	?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
PUBLIC	?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
PUBLIC	?g_pParticleForces@@3PAUID3D11Buffer@@A		; g_pParticleForces
PUBLIC	?value@?$_GcdX@$00$0A@@std@@2_JB		; std::_GcdX<1,0>::value
PUBLIC	?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
PUBLIC	?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
PUBLIC	?g_pGrid@@3PAUID3D11Buffer@@A			; g_pGrid
PUBLIC	?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A	; g_pGridSRV
PUBLIC	?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A	; g_pGridUAV
PUBLIC	?g_pGridPingPong@@3PAUID3D11Buffer@@A		; g_pGridPingPong
PUBLIC	?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
PUBLIC	?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
PUBLIC	?value@?$_GcdX@$0GE@$00@std@@2_JB		; std::_GcdX<100,1>::value
PUBLIC	?g_pGridIndices@@3PAUID3D11Buffer@@A		; g_pGridIndices
PUBLIC	?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
PUBLIC	?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?m_pProcessBuffer@@3PAUID3D11Buffer@@A		; m_pProcessBuffer
PUBLIC	?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A	; m_pProcessSRV
PUBLIC	?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
PUBLIC	?m_pProcessCS@@3PAUID3D11ComputeShader@@A	; m_pProcessCS
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?value@?$_Gcd@$0GE@$00@std@@2_JB		; std::_Gcd<100,1>::value
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?num@?$ratio@$0GE@$00@std@@2_JB			; std::ratio<100,1>::num
PUBLIC	?den@?$ratio@$0GE@$00@std@@2_JB			; std::ratio<100,1>::den
PUBLIC	?_N1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_N1
PUBLIC	?_D1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_D1
PUBLIC	?value@?$_Sign_of@$0DLJKMKAA@@std@@2_JB		; std::_Sign_of<1000000000>::value
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?value@?$_Abs@$0DLJKMKAA@@std@@2_JB		; std::_Abs<1000000000>::value
PUBLIC	?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A	; g_pcbSimulationConstants
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?g_pcbRenderConstants@@3PAUID3D11Buffer@@A	; g_pcbRenderConstants
PUBLIC	?g_pSortCB@@3PAUID3D11Buffer@@A			; g_pSortCB
PUBLIC	?value@?$_GcdX@$0DLJKMKAA@$00@std@@2_JB		; std::_GcdX<1000000000,1>::value
PUBLIC	?value@?$_GcdX@$00$0DLJKMKAA@@std@@2_JB		; std::_GcdX<1,1000000000>::value
PUBLIC	?value@?$_Gcd@$00$0DLJKMKAA@@std@@2_JB		; std::_Gcd<1,1000000000>::value
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?num@?$ratio@$00$0DLJKMKAA@@std@@2_JB		; std::ratio<1,1000000000>::num
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?den@?$ratio@$00$0DLJKMKAA@@std@@2_JB		; std::ratio<1,1000000000>::den
PUBLIC	?_N2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_N2
PUBLIC	?_D2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_D2
PUBLIC	?value@?$_GcdX@$0GE@$0A@@std@@2_JB		; std::_GcdX<100,0>::value
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?value@?$_GcdX@$0DLJKMKAA@$0GE@@std@@2_JB	; std::_GcdX<1000000000,100>::value
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?value@?$_GcdX@$0GE@$0DLJKMKAA@@std@@2_JB	; std::_GcdX<100,1000000000>::value
PUBLIC	?value@?$_Gcd@$0GE@$0DLJKMKAA@@std@@2_JB	; std::_Gcd<100,1000000000>::value
PUBLIC	?_Gx@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_Gx
PUBLIC	?value@?$_GcdX@$00$00@std@@2_JB			; std::_GcdX<1,1>::value
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?value@?$_Gcd@$00$00@std@@2_JB			; std::_Gcd<1,1>::value
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?_Gy@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_Gy
PUBLIC	?value@?$_Safe_multX@$00$00$00@std@@2_JB	; std::_Safe_multX<1,1,1>::value
PUBLIC	?value@?$_Safe_mult@$00$00@std@@2_JB		; std::_Safe_mult<1,1>::value
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?value@?$_Abs@$0JIJGIA@@std@@2_JB		; std::_Abs<10000000>::value
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?value@?$_Safe_multX@$00$0JIJGIA@$00@std@@2_JB	; std::_Safe_multX<1,10000000,1>::value
PUBLIC	?g_iNumParticles@@3IA				; g_iNumParticles
PUBLIC	?value@?$_Safe_mult@$00$0JIJGIA@@std@@2_JB	; std::_Safe_mult<1,10000000>::value
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_monotonic@system_clock@chrono@std@@2_NB	; std::chrono::system_clock::is_monotonic
PUBLIC	?is_steady@system_clock@chrono@std@@2_NB	; std::chrono::system_clock::is_steady
PUBLIC	?g_eSimMode@@3W4eSimulationMode@@A		; g_eSimMode
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?timeout_infinite@event@Concurrency@@2IB	; Concurrency::event::timeout_infinite
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	_CLSID_WICImagingFactory
PUBLIC	_CLSID_WICImagingFactory1
PUBLIC	_CLSID_WICImagingFactory2
PUBLIC	_GUID_VendorMicrosoft
PUBLIC	_GUID_VendorMicrosoftBuiltIn
PUBLIC	_CLSID_WICPngDecoder
PUBLIC	_CLSID_WICPngDecoder1
PUBLIC	_CLSID_WICPngDecoder2
PUBLIC	_CLSID_WICBmpDecoder
PUBLIC	_CLSID_WICIcoDecoder
PUBLIC	_CLSID_WICJpegDecoder
PUBLIC	_CLSID_WICGifDecoder
PUBLIC	_CLSID_WICTiffDecoder
PUBLIC	_CLSID_WICWmpDecoder
PUBLIC	_CLSID_WICDdsDecoder
PUBLIC	_CLSID_WICBmpEncoder
PUBLIC	_CLSID_WICPngEncoder
PUBLIC	_CLSID_WICJpegEncoder
PUBLIC	_CLSID_WICGifEncoder
PUBLIC	_CLSID_WICTiffEncoder
PUBLIC	_CLSID_WICWmpEncoder
PUBLIC	_CLSID_WICDdsEncoder
PUBLIC	_GUID_ContainerFormatBmp
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	_GUID_ContainerFormatPng
PUBLIC	_GUID_ContainerFormatIco
PUBLIC	_GUID_ContainerFormatJpeg
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	_GUID_ContainerFormatTiff
PUBLIC	_GUID_ContainerFormatGif
PUBLIC	_GUID_ContainerFormatWmp
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	_GUID_ContainerFormatDds
PUBLIC	_CLSID_WICImagingCategories
PUBLIC	_CATID_WICBitmapDecoders
PUBLIC	_CATID_WICBitmapEncoders
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	_CATID_WICPixelFormats
PUBLIC	_CATID_WICFormatConverters
PUBLIC	_CATID_WICMetadataReader
PUBLIC	_CATID_WICMetadataWriter
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	_CLSID_WICDefaultFormatConverter
PUBLIC	_CLSID_WICFormatConverterHighColor
PUBLIC	_CLSID_WICFormatConverterNChannel
PUBLIC	_CLSID_WICFormatConverterWMPhoto
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	_CLSID_WICPlanarFormatConverter
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	_GUID_WICPixelFormatDontCare
PUBLIC	_GUID_WICPixelFormat1bppIndexed
PUBLIC	_GUID_WICPixelFormat2bppIndexed
PUBLIC	_GUID_WICPixelFormat4bppIndexed
PUBLIC	?value@?$_Sign_of@$0JIJGIA@@std@@2_JB		; std::_Sign_of<10000000>::value
PUBLIC	_GUID_WICPixelFormat8bppIndexed
PUBLIC	_GUID_WICPixelFormatBlackWhite
PUBLIC	_GUID_WICPixelFormat2bppGray
PUBLIC	_GUID_WICPixelFormat4bppGray
PUBLIC	_GUID_WICPixelFormat8bppGray
PUBLIC	_GUID_WICPixelFormat8bppAlpha
PUBLIC	_GUID_WICPixelFormat16bppBGR555
PUBLIC	_GUID_WICPixelFormat16bppBGR565
PUBLIC	_GUID_WICPixelFormat16bppBGRA5551
PUBLIC	_GUID_WICPixelFormat16bppGray
PUBLIC	_GUID_WICPixelFormat24bppBGR
PUBLIC	_GUID_WICPixelFormat24bppRGB
PUBLIC	_GUID_WICPixelFormat32bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGRA
PUBLIC	_GUID_WICPixelFormat32bppPBGRA
PUBLIC	_GUID_WICPixelFormat32bppGrayFloat
PUBLIC	_GUID_WICPixelFormat32bppRGBA
PUBLIC	?value@?$_GcdX@$0JIJGIA@$00@std@@2_JB		; std::_GcdX<10000000,1>::value
PUBLIC	_GUID_WICPixelFormat32bppPRGBA
PUBLIC	_GUID_WICPixelFormat48bppRGB
PUBLIC	_GUID_WICPixelFormat48bppBGR
PUBLIC	_GUID_WICPixelFormat64bppRGBA
PUBLIC	_GUID_WICPixelFormat64bppBGRA
PUBLIC	_GUID_WICPixelFormat64bppPRGBA
PUBLIC	_GUID_WICPixelFormat64bppPBGRA
PUBLIC	_GUID_WICPixelFormat16bppGrayFixedPoint
PUBLIC	?value@?$_GcdX@$00$0JIJGIA@@std@@2_JB		; std::_GcdX<1,10000000>::value
PUBLIC	_GUID_WICPixelFormat32bppBGR101010
PUBLIC	_GUID_WICPixelFormat48bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat48bppBGRFixedPoint
PUBLIC	_GUID_WICPixelFormat96bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBAFloat
PUBLIC	_GUID_WICPixelFormat128bppPRGBAFloat
PUBLIC	_GUID_WICPixelFormat128bppRGBFloat
PUBLIC	_GUID_WICPixelFormat32bppCMYK
PUBLIC	?value@?$_Gcd@$00$0JIJGIA@@std@@2_JB		; std::_Gcd<1,10000000>::value
PUBLIC	_GUID_WICPixelFormat64bppRGBAFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppBGRAFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBAFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppRGBAHalf
PUBLIC	_GUID_WICPixelFormat64bppRGBHalf
PUBLIC	_GUID_WICPixelFormat48bppRGBHalf
PUBLIC	?num@?$ratio@$00$0JIJGIA@@std@@2_JB		; std::ratio<1,10000000>::num
PUBLIC	_GUID_WICPixelFormat32bppRGBE
PUBLIC	?particles@@3PAUParticle@@A			; particles
PUBLIC	_GUID_WICPixelFormat16bppGrayHalf
PUBLIC	?den@?$ratio@$00$0JIJGIA@@std@@2_JB		; std::ratio<1,10000000>::den
PUBLIC	_GUID_WICPixelFormat32bppGrayFixedPoint
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102XR
PUBLIC	_GUID_WICPixelFormat64bppCMYK
PUBLIC	_GUID_WICPixelFormat24bpp3Channels
PUBLIC	_GUID_WICPixelFormat32bpp4Channels
PUBLIC	_GUID_WICPixelFormat40bpp5Channels
PUBLIC	_GUID_WICPixelFormat48bpp6Channels
PUBLIC	_GUID_WICPixelFormat56bpp7Channels
PUBLIC	?_N2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB ; std::_Ratio_divide<std::ratio<1,10000000>,std::ratio<1,10000000> >::_N2
PUBLIC	_GUID_WICPixelFormat64bpp8Channels
PUBLIC	_GUID_WICPixelFormat48bpp3Channels
PUBLIC	?_D2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB ; std::_Ratio_divide<std::ratio<1,10000000>,std::ratio<1,10000000> >::_D2
PUBLIC	_GUID_WICPixelFormat64bpp4Channels
PUBLIC	_GUID_WICPixelFormat80bpp5Channels
PUBLIC	_GUID_WICPixelFormat96bpp6Channels
PUBLIC	_GUID_WICPixelFormat112bpp7Channels
PUBLIC	_GUID_WICPixelFormat128bpp8Channels
PUBLIC	_GUID_WICPixelFormat40bppCMYKAlpha
PUBLIC	_GUID_WICPixelFormat80bppCMYKAlpha
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	_GUID_WICPixelFormat32bpp3ChannelsAlpha
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	_GUID_WICPixelFormat40bpp4ChannelsAlpha
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	_GUID_WICPixelFormat48bpp5ChannelsAlpha
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	_GUID_WICPixelFormat56bpp6ChannelsAlpha
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	_GUID_WICPixelFormat64bpp7ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat72bpp8ChannelsAlpha
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	_GUID_WICPixelFormat64bpp3ChannelsAlpha
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	_GUID_WICPixelFormat80bpp4ChannelsAlpha
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	_GUID_WICPixelFormat96bpp5ChannelsAlpha
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	_GUID_WICPixelFormat112bpp6ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat128bpp7ChannelsAlpha
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	_GUID_WICPixelFormat144bpp8ChannelsAlpha
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	_GUID_WICPixelFormat8bppY
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	_GUID_WICPixelFormat8bppCb
PUBLIC	?_N1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_N1
PUBLIC	_GUID_WICPixelFormat8bppCr
PUBLIC	_GUID_WICPixelFormat16bppCbCr
PUBLIC	?_D1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_D1
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?value@?$_Gcd@$0JIJGIA@$00@std@@2_JB		; std::_Gcd<10000000,1>::value
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?value@?$_Gcd@$0A@$0A@@std@@2_JB		; std::_Gcd<0,0>::value
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?num@?$ratio@$0JIJGIA@$00@std@@2_JB		; std::ratio<10000000,1>::num
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMask3
PUBLIC	?den@?$ratio@$0JIJGIA@$00@std@@2_JB		; std::ratio<10000000,1>::den
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskX
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskW
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?_N2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_N2
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?_D2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_D2
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?_Gx@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_Gx
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AliceBlue
PUBLIC	?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AntiqueWhite
PUBLIC	?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Aqua
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Aquamarine
PUBLIC	?Azure@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Azure
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?Beige@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Beige
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Bisque
PUBLIC	?value@?$_GcdX@$0JIJGIA@$0A@@std@@2_JB		; std::_GcdX<10000000,0>::value
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?Black@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Black
PUBLIC	?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::BlanchedAlmond
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?Blue@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Blue
PUBLIC	?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BlueViolet
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?Brown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Brown
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BurlyWood
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::CadetBlue
PUBLIC	?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chartreuse
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?value@?$_GcdX@$0JIJGIA@$0JIJGIA@@std@@2_JB	; std::_GcdX<10000000,10000000>::value
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chocolate
PUBLIC	?Coral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Coral
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::CornflowerBlue
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Cornsilk
PUBLIC	?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Crimson
PUBLIC	?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Cyan
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkBlue
PUBLIC	?_S_cancelBitsMask@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelBitsMask
PUBLIC	?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkCyan
PUBLIC	?value@?$_Gcd@$0JIJGIA@$0JIJGIA@@std@@2_JB	; std::_Gcd<10000000,10000000>::value
PUBLIC	?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkGoldenrod
PUBLIC	?_S_cancelNone@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelNone
PUBLIC	?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGray
PUBLIC	?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGreen
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?_S_cancelStarted@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelStarted
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkKhaki
PUBLIC	?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkMagenta
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?_S_cancelDeferredShootdownOwner@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelDeferredShootdownOwner
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkOliveGreen
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrange
PUBLIC	?_S_cancelShotdownOwner@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelShotdownOwner
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrchid
PUBLIC	?_Gy@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_Gy
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkRed
PUBLIC	?_S_nonNull@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_nonNull
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSalmon
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSeaGreen
PUBLIC	?_S_cancelException@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelException
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateBlue
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateGray
PUBLIC	?_S_notInlined@_TaskCollectionBase@details@Concurrency@@1HB ; Concurrency::details::_TaskCollectionBase::_S_notInlined
PUBLIC	?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkTurquoise
PUBLIC	?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkViolet
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?_S_structured@_TaskCollectionBase@details@Concurrency@@1HB ; Concurrency::details::_TaskCollectionBase::_S_structured
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepPink
PUBLIC	?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepSkyBlue
PUBLIC	?_S_localCancel@_TaskCollectionBase@details@Concurrency@@1HB ; Concurrency::details::_TaskCollectionBase::_S_localCancel
PUBLIC	?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DimGray
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DodgerBlue
PUBLIC	?_S_reserved@_TaskCollectionBase@details@Concurrency@@1HB ; Concurrency::details::_TaskCollectionBase::_S_reserved
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Firebrick
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::FloralWhite
PUBLIC	?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::ForestGreen
PUBLIC	?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Fuchsia
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Gainsboro
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GhostWhite
PUBLIC	?Gold@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gold
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?num@?$ratio@$00$00@std@@2_JB			; std::ratio<1,1>::num
PUBLIC	?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Goldenrod
PUBLIC	?Gray@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gray
PUBLIC	?den@?$ratio@$00$00@std@@2_JB			; std::ratio<1,1>::den
PUBLIC	?Green@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Green
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GreenYellow
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Honeydew
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::HotPink
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::IndianRed
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Indigo
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Ivory
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Khaki
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Lavender
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LavenderBlush
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LawnGreen
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LemonChiffon
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightBlue
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCoral
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCyan
PUBLIC	?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightGoldenrodYellow
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGreen
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGray
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightPink
PUBLIC	?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSalmon
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSeaGreen
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSkyBlue
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSlateGray
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipY
PUBLIC	?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSteelBlue
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightYellow
PUBLIC	_IID_ID3D11ShaderReflectionType
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipW
PUBLIC	?Lime@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Lime
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LimeGreen
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?Linen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Linen
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Magenta
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Maroon
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumAquamarine
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumBlue
PUBLIC	?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumOrchid
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
;	COMDAT ___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUhxizgxsUwchhvUuofrwxhBBUzhhvnyobwvyftUuofrwxhBBOlyq@55522135E7E575BA
_BSS	SEGMENT
___@@_PchSym_@00@UvmtrmvLxozhhUzhhrtmnvmgLBUhxizgxsUwchhvUuofrwxhBBUzhhvnyobwvyftUuofrwxhBBOlyq@55522135E7E575BA DD 01H DUP (?)
_BSS	ENDS
_BSS	SEGMENT
?g_iNullu32@@3IA DD 01H DUP (?)				; g_iNullu32
?g_pParticleVS@@3PAUID3D11VertexShader@@A DD 01H DUP (?) ; g_pParticleVS
?g_pParticleGS@@3PAUID3D11GeometryShader@@A DD 01H DUP (?) ; g_pParticleGS
?g_pParticlePS@@3PAUID3D11PixelShader@@A DD 01H DUP (?)	; g_pParticlePS
?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pBuildGridCS
?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pClearGridIndicesCS
?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pBuildGridIndicesCS
?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pRearrangeParticlesCS
?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pRepositionParticlesCS
?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pDensity_SimpleCS
?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pForce_SimpleCS
?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pDensity_SharedCS
?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pForce_SharedCS
?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pDensity_GridCS
?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pForce_GridCS
?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pIntegrateCS
?g_pSortBitonic@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pSortBitonic
?g_pSortTranspose@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pSortTranspose
?g_pParticles@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pParticles
?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pParticlesSRV
?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pParticlesUAV
?g_pSortedParticles@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pSortedParticles
?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pSortedParticlesSRV
?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pSortedParticlesUAV
?g_pParticleDensity@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pParticleDensity
?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pParticleDensitySRV
?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pParticleDensityUAV
?g_pParticleForces@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pParticleForces
?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pParticleForcesSRV
?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pParticleForcesUAV
?g_pGrid@@3PAUID3D11Buffer@@A DD 01H DUP (?)		; g_pGrid
?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pGridSRV
?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pGridUAV
?g_pGridPingPong@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pGridPingPong
?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pGridPingPongSRV
?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pGridPingPongUAV
?g_pGridIndices@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pGridIndices
?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pGridIndicesSRV
?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pGridIndicesUAV
?m_pProcessBuffer@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; m_pProcessBuffer
?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; m_pProcessSRV
?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; m_pProcessUAV
?m_pProcessCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; m_pProcessCS
?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A DD 01H DUP (?) ; g_pcbSimulationConstants
?g_pcbRenderConstants@@3PAUID3D11Buffer@@A DD 01H DUP (?) ; g_pcbRenderConstants
?g_pSortCB@@3PAUID3D11Buffer@@A DD 01H DUP (?)		; g_pSortCB
?particles@@3PAUParticle@@A DD 01H DUP (?)		; particles
_BSS	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+008
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3ababbr ; 0.729412 ; DirectX::Colors::MediumOrchid
	DD	03eaaaaabr			; 0.333333
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumBlue
	DD	000000000r			; 0
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ecccccer ; 0.4 ; DirectX::Colors::MediumAquamarine
	DD	03f4dcdcfr			; 0.803922
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Maroon
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Magenta
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?Linen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Linen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Linen
	DD	03f70f0f2r			; 0.941177
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e48c8car ; 0.196078 ; DirectX::Colors::LimeGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?Lime@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lime@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Lime
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionType
CONST	SEGMENT
_IID_ID3D11ShaderReflectionType DD 06e6ffa6aH
	DW	09baeH
	DW	04613H
	DB	0a5H
	DB	01eH
	DB	091H
	DB	065H
	DB	02dH
	DB	050H
	DB	08cH
	DB	021H
CONST	ENDS
;	COMDAT ?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightYellow
	DD	03f800000r			; 1
	DD	03f60e0e2r			; 0.878431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::LightSteelBlue
	DD	03f44c4c6r			; 0.768628
	DD	03f5edee0r			; 0.870588
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eeeeef0r ; 0.466667 ; DirectX::Colors::LightSlateGray
	DD	03f088889r			; 0.533333
	DD	03f19999ar			; 0.6
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-005
	DD	037800000r			; 1.52588e-005
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-005
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::LightSkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e008081r ; 0.12549 ; DirectX::Colors::LightSeaGreen
	DD	03f32b2b3r			; 0.698039
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightSalmon
	DD	03f20a0a1r			; 0.627451
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightPink
	DD	03f36b6b7r			; 0.713726
	DD	03f41c1c3r			; 0.756863
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f53d3d5r ; 0.827451 ; DirectX::Colors::LightGray
	DD	03f53d3d5r			; 0.827451
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f109091r ; 0.564706 ; DirectX::Colors::LightGreen
	DD	03f6eeef0r			; 0.933333
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::LightGoldenrodYellow
	DD	03f7afafcr			; 0.980392
	DD	03f52d2d4r			; 0.823529
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f60e0e2r ; 0.878431 ; DirectX::Colors::LightCyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::LightCoral
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::LightBlue
	DD	03f58d8dar			; 0.847059
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LemonChiffon
	DD	03f7afafcr			; 0.980392
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef8f8far ; 0.486275 ; DirectX::Colors::LawnGreen
	DD	03f7cfcfer			; 0.988235
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LavenderBlush
	DD	03f70f0f2r			; 0.941177
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f66e6e8r ; 0.901961 ; DirectX::Colors::Lavender
	DD	03f66e6e8r			; 0.901961
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+006 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+006
	DD	04b000000r			; 8.38861e+006
	DD	04b000000r			; 8.38861e+006
CONST	ENDS
;	COMDAT ?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Khaki
	DD	03f66e6e8r			; 0.901961
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-005 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-005
	DD	030000100r			; 4.65675e-010
	DD	030000100r			; 4.65675e-010
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Ivory
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e969697r ; 0.294118 ; DirectX::Colors::Indigo
	DD	000000000r			; 0
	DD	03f028283r			; 0.509804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::IndianRed
	DD	03eb8b8b9r			; 0.360784
	DD	03eb8b8b9r			; 0.360784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::HotPink
	DD	03ed2d2d4r			; 0.411765
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-005 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-010
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Honeydew
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::GreenYellow
	DD	03f800000r			; 1
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?Green@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Green@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Green
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?den@?$ratio@$00$00@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$00$00@std@@2_JB DQ 0000000000000001H	; std::ratio<1,1>::den
CONST	ENDS
;	COMDAT ?Gray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Gray
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Goldenrod
	DD	03f25a5a6r			; 0.647059
	DD	03e008081r			; 0.12549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?num@?$ratio@$00$00@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$00$00@std@@2_JB DQ 0000000000000001H	; std::ratio<1,1>::num
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?Gold@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gold@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Gold
	DD	03f57d7d9r			; 0.843137
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f78f8far ; 0.972549 ; DirectX::Colors::GhostWhite
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-006
	DD	031004020r			; 1.86629e-009
	DD	02faaaaabr			; 3.10441e-010
CONST	ENDS
;	COMDAT ?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Gainsboro
	DD	03f5cdcder			; 0.862745
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Fuchsia
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e088889r ; 0.133333 ; DirectX::Colors::ForestGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::FloralWhite
	DD	03f7afafcr			; 0.980392
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+008
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f32b2b3r ; 0.698039 ; DirectX::Colors::Firebrick
	DD	03e088889r			; 0.133333
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?_S_reserved@_TaskCollectionBase@details@Concurrency@@1HB
CONST	SEGMENT
?_S_reserved@_TaskCollectionBase@details@Concurrency@@1HB DD 0cH ; Concurrency::details::_TaskCollectionBase::_S_reserved
CONST	ENDS
;	COMDAT ?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03df0f0f2r ; 0.117647 ; DirectX::Colors::DodgerBlue
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed2d2d4r ; 0.411765 ; DirectX::Colors::DimGray
	DD	03ed2d2d4r			; 0.411765
	DD	03ed2d2d4r			; 0.411765
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_S_localCancel@_TaskCollectionBase@details@Concurrency@@1HB
CONST	SEGMENT
?_S_localCancel@_TaskCollectionBase@details@Concurrency@@1HB DD 02H ; Concurrency::details::_TaskCollectionBase::_S_localCancel
CONST	ENDS
;	COMDAT ?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DeepSkyBlue
	DD	03f3fbfc0r			; 0.74902
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DeepPink
	DD	03da0a0a1r			; 0.0784314
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?_S_structured@_TaskCollectionBase@details@Concurrency@@1HB
CONST	SEGMENT
?_S_structured@_TaskCollectionBase@details@Concurrency@@1HB DD 01H ; Concurrency::details::_TaskCollectionBase::_S_structured
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-008 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-005
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-010
CONST	ENDS
;	COMDAT ?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f149495r ; 0.580392 ; DirectX::Colors::DarkViolet
	DD	000000000r			; 0
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkTurquoise
	DD	03f4eced0r			; 0.807843
	DD	03f51d1d3r			; 0.819608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_S_notInlined@_TaskCollectionBase@details@Concurrency@@1HB
CONST	SEGMENT
?_S_notInlined@_TaskCollectionBase@details@Concurrency@@1HB DD 0ffffffffH ; Concurrency::details::_TaskCollectionBase::_S_notInlined
CONST	ENDS
;	COMDAT ?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e3cbcbdr ; 0.184314 ; DirectX::Colors::DarkSlateGray
	DD	03e9e9e9fr			; 0.309804
	DD	03e9e9e9fr			; 0.309804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::DarkSlateBlue
	DD	03e74f4f6r			; 0.239216
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?_S_cancelException@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelException@_TaskCollectionBase@details@Concurrency@@1IB DD 0cH ; Concurrency::details::_TaskCollectionBase::_S_cancelException
CONST	ENDS
;	COMDAT ?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0f8f90r ; 0.560784 ; DirectX::Colors::DarkSeaGreen
	DD	03f3cbcbdr			; 0.737255
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f69e9ebr ; 0.913726 ; DirectX::Colors::DarkSalmon
	DD	03f169697r			; 0.588235
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?_S_nonNull@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_nonNull@_TaskCollectionBase@details@Concurrency@@1IB DD 08H ; Concurrency::details::_TaskCollectionBase::_S_nonNull
CONST	ENDS
;	COMDAT ?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkRed
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?_Gy@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_Gy@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000989680H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_Gy
CONST	ENDS
;	COMDAT ?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f19999ar ; 0.6 ; DirectX::Colors::DarkOrchid
	DD	03e48c8car			; 0.196078
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?_S_cancelShotdownOwner@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelShotdownOwner@_TaskCollectionBase@details@Concurrency@@1IB DD 03H ; Concurrency::details::_TaskCollectionBase::_S_cancelShotdownOwner
CONST	ENDS
;	COMDAT ?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DarkOrange
	DD	03f0c8c8dr			; 0.54902
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eaaaaabr ; 0.333333 ; DirectX::Colors::DarkOliveGreen
	DD	03ed6d6d8r			; 0.419608
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?_S_cancelDeferredShootdownOwner@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelDeferredShootdownOwner@_TaskCollectionBase@details@Concurrency@@1IB DD 02H ; Concurrency::details::_TaskCollectionBase::_S_cancelDeferredShootdownOwner
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkMagenta
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3dbdber ; 0.741176 ; DirectX::Colors::DarkKhaki
	DD	03f37b7b8r			; 0.717647
	DD	03ed6d6d8r			; 0.419608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?_S_cancelStarted@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelStarted@_TaskCollectionBase@details@Concurrency@@1IB DD 01H ; Concurrency::details::_TaskCollectionBase::_S_cancelStarted
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-007 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-007
	DD	034000000r			; 1.19209e-007
	DD	034000000r			; 1.19209e-007
CONST	ENDS
;	COMDAT ?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkGreen
	DD	03ec8c8car			; 0.392157
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f29a9aar ; 0.662745 ; DirectX::Colors::DarkGray
	DD	03f29a9aar			; 0.662745
	DD	03f29a9aar			; 0.662745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_S_cancelNone@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelNone@_TaskCollectionBase@details@Concurrency@@1IB DD 00H ; Concurrency::details::_TaskCollectionBase::_S_cancelNone
CONST	ENDS
;	COMDAT ?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f38b8b9r ; 0.721569 ; DirectX::Colors::DarkGoldenrod
	DD	03f068687r			; 0.52549
	DD	03d30b0b1r			; 0.0431373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0JIJGIA@$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0JIJGIA@$0JIJGIA@@std@@2_JB DQ 0000000000989680H ; std::_Gcd<10000000,10000000>::value
CONST	ENDS
;	COMDAT ?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkCyan
	DD	03f0b8b8cr			; 0.545098
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_S_cancelBitsMask@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelBitsMask@_TaskCollectionBase@details@Concurrency@@1IB DD 03H ; Concurrency::details::_TaskCollectionBase::_S_cancelBitsMask
CONST	ENDS
;	COMDAT ?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkBlue
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Cyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Crimson
	DD	03da0a0a1r			; 0.0784314
	DD	03e70f0f2r			; 0.235294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Cornsilk
	DD	03f78f8far			; 0.972549
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ec8c8car ; 0.392157 ; DirectX::Colors::CornflowerBlue
	DD	03f159596r			; 0.584314
	DD	03f6dedefr			; 0.929412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?Coral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Coral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Coral
	DD	03efeff00r			; 0.498039
	DD	03ea0a0a1r			; 0.313726
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Chocolate
	DD	03ed2d2d4r			; 0.411765
	DD	03df0f0f2r			; 0.117647
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0JIJGIA@$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0JIJGIA@$0JIJGIA@@std@@2_JB DQ 0000000000989680H ; std::_GcdX<10000000,10000000>::value
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Chartreuse
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ebebebfr ; 0.372549 ; DirectX::Colors::CadetBlue
	DD	03f1e9e9fr			; 0.619608
	DD	03f20a0a1r			; 0.627451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5edee0r ; 0.870588 ; DirectX::Colors::BurlyWood
	DD	03f38b8b9r			; 0.721569
	DD	03f078788r			; 0.529412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?Brown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Brown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f25a5a6r ; 0.647059 ; DirectX::Colors::Brown
	DD	03e28a8a9r			; 0.164706
	DD	03e28a8a9r			; 0.164706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0a8a8br ; 0.541176 ; DirectX::Colors::BlueViolet
	DD	03e2cacadr			; 0.168627
	DD	03f62e2e4r			; 0.886275
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Blue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Blue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Blue
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::BlanchedAlmond
	DD	03f6bebedr			; 0.921569
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Black@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Black@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Black
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0JIJGIA@$0A@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0JIJGIA@$0A@@std@@2_JB DQ 0000000000989680H ; std::_GcdX<10000000,0>::value
CONST	ENDS
;	COMDAT ?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Bisque
	DD	03f64e4e6r			; 0.894118
	DD	03f44c4c6r			; 0.768628
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?Beige@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Beige@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Beige
	DD	03f75f5f7r			; 0.960784
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?Azure@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Azure@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Azure
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Aquamarine
	DD	03f800000r			; 1
	DD	03f54d4d6r			; 0.831373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Aqua
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::AntiqueWhite
	DD	03f6bebedr			; 0.921569
	DD	03f57d7d9r			; 0.843137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::AliceBlue
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?_Gx@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_Gx@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_Gx
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?_D2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_D2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_D2
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?_N2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_N2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000989680H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_N2
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?den@?$ratio@$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$0JIJGIA@$00@std@@2_JB DQ 0000000000000001H ; std::ratio<10000000,1>::den
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?num@?$ratio@$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$0JIJGIA@$00@std@@2_JB DQ 0000000000989680H ; std::ratio<10000000,1>::num
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0A@$0A@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0A@$0A@@std@@2_JB DQ 0000000000000001H	; std::_Gcd<0,0>::value
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0JIJGIA@$00@std@@2_JB DQ 0000000000000001H ; std::_Gcd<10000000,1>::value
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?_D1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_D1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000989680H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_D1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppCbCr
CONST	SEGMENT
_GUID_WICPixelFormat16bppCbCr DD 0ff95ba6eH
	DW	011e0H
	DW	04263H
	DB	0bbH
	DB	045H
	DB	01H
	DB	072H
	DB	01fH
	DB	034H
	DB	060H
	DB	0a4H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppCr
CONST	SEGMENT
_GUID_WICPixelFormat8bppCr DD 0b8145053H
	DW	02116H
	DW	049f0H
	DB	088H
	DB	035H
	DB	0edH
	DB	084H
	DB	04bH
	DB	020H
	DB	05cH
	DB	051H
CONST	ENDS
;	COMDAT ?_N1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_N1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_N1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppCb
CONST	SEGMENT
_GUID_WICPixelFormat8bppCb DD 01339f224H
	DW	06bfeH
	DW	04c3eH
	DB	093H
	DB	02H
	DB	0e4H
	DB	0f3H
	DB	0a6H
	DB	0d0H
	DB	0caH
	DB	02aH
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppY
CONST	SEGMENT
_GUID_WICPixelFormat8bppY DD 091b4db54H
	DW	02df9H
	DW	042f0H
	DB	0b4H
	DB	049H
	DB	029H
	DB	09H
	DB	0bbH
	DB	03dH
	DB	0f8H
	DB	08eH
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat144bpp8ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat144bpp8ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	039H
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bpp7ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat128bpp7ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	038H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat112bpp6ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat112bpp6ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	037H
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bpp5ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat96bpp5ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	036H
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bpp4ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bpp4ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	035H
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp3ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat64bpp3ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	034H
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-005
	DD	03824bec9r			; 3.92783e-005
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat72bpp8ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat72bpp8ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	033H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp7ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat64bpp7ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	032H
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat56bpp6ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat56bpp6ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	031H
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-007 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp5ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat48bpp5ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	030H
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-005
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bpp4ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bpp4ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02fH
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-008 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bpp3ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat32bpp3ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02eH
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-006
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bpp8Channels
CONST	SEGMENT
_GUID_WICPixelFormat128bpp8Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat112bpp7Channels
CONST	SEGMENT
_GUID_WICPixelFormat112bpp7Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bpp6Channels
CONST	SEGMENT
_GUID_WICPixelFormat96bpp6Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	029H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bpp5Channels
CONST	SEGMENT
_GUID_WICPixelFormat80bpp5Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	028H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp4Channels
CONST	SEGMENT
_GUID_WICPixelFormat64bpp4Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	027H
CONST	ENDS
;	COMDAT ?_D2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB
CONST	SEGMENT
?_D2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB DQ 0000000000989680H ; std::_Ratio_divide<std::ratio<1,10000000>,std::ratio<1,10000000> >::_D2
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp3Channels
CONST	SEGMENT
_GUID_WICPixelFormat48bpp3Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	026H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp8Channels
CONST	SEGMENT
_GUID_WICPixelFormat64bpp8Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	025H
CONST	ENDS
;	COMDAT ?_N2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB
CONST	SEGMENT
?_N2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_divide<std::ratio<1,10000000>,std::ratio<1,10000000> >::_N2
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat56bpp7Channels
CONST	SEGMENT
_GUID_WICPixelFormat56bpp7Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	024H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp6Channels
CONST	SEGMENT
_GUID_WICPixelFormat48bpp6Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	023H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bpp5Channels
CONST	SEGMENT
_GUID_WICPixelFormat40bpp5Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	022H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bpp4Channels
CONST	SEGMENT
_GUID_WICPixelFormat32bpp4Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	021H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bpp3Channels
CONST	SEGMENT
_GUID_WICPixelFormat24bpp3Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	020H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat64bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102XR
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102XR DD 0de6b9aH
	DW	0c101H
	DW	0434bH
	DB	0b5H
	DB	02H
	DB	0d0H
	DB	016H
	DB	05eH
	DB	0e1H
	DB	012H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102 DD 025238d72H
	DW	0fcf9H
	DW	04522H
	DB	0b5H
	DB	014H
	DB	055H
	DB	078H
	DB	0e5H
	DB	0adH
	DB	055H
	DB	0e0H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03fH
CONST	ENDS
;	COMDAT ?den@?$ratio@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$00$0JIJGIA@@std@@2_JB DQ 0000000000989680H ; std::ratio<1,10000000>::den
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayHalf
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBE
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBE DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03dH
CONST	ENDS
;	COMDAT ?num@?$ratio@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$00$0JIJGIA@@std@@2_JB DQ 0000000000000001H ; std::ratio<1,10000000>::num
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	042H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	041H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	040H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRAFixedPoint DD 0356de33cH
	DW	054d2H
	DW	04a23H
	DB	0bbH
	DB	04H
	DB	09bH
	DB	07bH
	DB	0f9H
	DB	0b1H
	DB	0d4H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01dH
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$00$0JIJGIA@@std@@2_JB DQ 0000000000000001H ; std::_Gcd<1,10000000>::value
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat32bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppPRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppPRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	019H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat96bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	018H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGRFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGRFixedPoint DD 049ca140eH
	DW	0cab6H
	DW	0493bH
	DB	09dH
	DB	0dfH
	DB	060H
	DB	018H
	DB	07cH
	DB	037H
	DB	053H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	012H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR101010
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR101010 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	014H
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$00$0JIJGIA@@std@@2_JB DQ 0000000000000001H ; std::_GcdX<1,10000000>::value
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPBGRA DD 08c518e8eH
	DW	0a4ecH
	DW	0468bH
	DB	0aeH
	DB	070H
	DB	0c9H
	DB	0a3H
	DB	05aH
	DB	09cH
	DB	055H
	DB	030H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	017H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRA DD 01562ff7cH
	DW	0d352H
	DW	046f9H
	DB	097H
	DB	09eH
	DB	042H
	DB	097H
	DB	06bH
	DB	079H
	DB	022H
	DB	046H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	016H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGR DD 0e605a384H
	DW	0b468H
	DW	046ceH
	DB	0bbH
	DB	02eH
	DB	036H
	DB	0f1H
	DB	080H
	DB	0e6H
	DB	043H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	015H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPRGBA DD 03cc4a650H
	DW	0a527H
	DW	04d37H
	DB	0a9H
	DB	016H
	DB	031H
	DB	042H
	DB	0c7H
	DB	0ebH
	DB	0edH
	DB	0baH
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0JIJGIA@$00@std@@2_JB DQ 0000000000000001H ; std::_GcdX<10000000,1>::value
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA DD 0f5c7ad2dH
	DW	06a8dH
	DW	043ddH
	DB	0a7H
	DB	0a8H
	DB	0a2H
	DB	099H
	DB	035H
	DB	026H
	DB	01aH
	DB	0e9H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFloat
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	011H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	010H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat24bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat24bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGray
CONST	SEGMENT
_GUID_WICPixelFormat16bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGRA5551
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGRA5551 DD 05ec7c2bH
	DW	0f1e6H
	DW	04961H
	DB	0adH
	DB	046H
	DB	0e1H
	DB	0ccH
	DB	081H
	DB	0aH
	DB	087H
	DB	0d2H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR565
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR565 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR555
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR555 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	09H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppAlpha
CONST	SEGMENT
_GUID_WICPixelFormat8bppAlpha DD 0e6cd0116H
	DW	0eebaH
	DW	04161H
	DB	0aaH
	DB	085H
	DB	027H
	DB	0ddH
	DB	09fH
	DB	0b3H
	DB	0a8H
	DB	095H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppGray
CONST	SEGMENT
_GUID_WICPixelFormat8bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	08H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppGray
CONST	SEGMENT
_GUID_WICPixelFormat4bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	07H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppGray
CONST	SEGMENT
_GUID_WICPixelFormat2bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	06H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatBlackWhite
CONST	SEGMENT
_GUID_WICPixelFormatBlackWhite DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	05H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat8bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	04H
CONST	ENDS
;	COMDAT ?value@?$_Sign_of@$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Sign_of@$0JIJGIA@@std@@2_JB DQ 0000000000000001H ; std::_Sign_of<10000000>::value
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat4bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat2bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat1bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat1bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatDontCare
CONST	SEGMENT
_GUID_WICPixelFormatDontCare DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	00H
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT _CLSID_WICPlanarFormatConverter
CONST	SEGMENT
_CLSID_WICPlanarFormatConverter DD 0184132b8H
	DW	032f8H
	DW	04784H
	DB	091H
	DB	031H
	DB	0ddH
	DB	072H
	DB	024H
	DB	0b2H
	DB	034H
	DB	038H
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterWMPhoto
CONST	SEGMENT
_CLSID_WICFormatConverterWMPhoto DD 09cb5172bH
	DW	0d600H
	DW	046baH
	DB	0abH
	DB	077H
	DB	077H
	DB	0bbH
	DB	07eH
	DB	03aH
	DB	00H
	DB	0d9H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterNChannel
CONST	SEGMENT
_CLSID_WICFormatConverterNChannel DD 0c17cabb2H
	DW	0d4a3H
	DW	047d7H
	DB	0a5H
	DB	057H
	DB	033H
	DB	09bH
	DB	02eH
	DB	0fbH
	DB	0d4H
	DB	0f1H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterHighColor
CONST	SEGMENT
_CLSID_WICFormatConverterHighColor DD 0ac75d454H
	DW	09f37H
	DW	048f8H
	DB	0b9H
	DB	072H
	DB	04eH
	DB	019H
	DB	0bcH
	DB	085H
	DB	060H
	DB	011H
CONST	ENDS
;	COMDAT _CLSID_WICDefaultFormatConverter
CONST	SEGMENT
_CLSID_WICDefaultFormatConverter DD 01a3f11dcH
	DW	0b514H
	DW	04b17H
	DB	08cH
	DB	05fH
	DB	021H
	DB	054H
	DB	051H
	DB	038H
	DB	052H
	DB	0f1H
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT _CATID_WICMetadataWriter
CONST	SEGMENT
_CATID_WICMetadataWriter DD 0abe3b9a4H
	DW	0257dH
	DW	04b97H
	DB	0bdH
	DB	01aH
	DB	029H
	DB	04aH
	DB	0f4H
	DB	096H
	DB	022H
	DB	02eH
CONST	ENDS
;	COMDAT _CATID_WICMetadataReader
CONST	SEGMENT
_CATID_WICMetadataReader DD 05af94d8H
	DW	07174H
	DW	04cd2H
	DB	0beH
	DB	04aH
	DB	041H
	DB	024H
	DB	0b8H
	DB	0eH
	DB	0e4H
	DB	0b8H
CONST	ENDS
;	COMDAT _CATID_WICFormatConverters
CONST	SEGMENT
_CATID_WICFormatConverters DD 07835eae8H
	DW	0bf14H
	DW	049d1H
	DB	093H
	DB	0ceH
	DB	053H
	DB	03aH
	DB	040H
	DB	07bH
	DB	022H
	DB	048H
CONST	ENDS
;	COMDAT _CATID_WICPixelFormats
CONST	SEGMENT
_CATID_WICPixelFormats DD 02b46e70fH
	DW	0cda7H
	DW	0473eH
	DB	089H
	DB	0f6H
	DB	0dcH
	DB	096H
	DB	030H
	DB	0a2H
	DB	039H
	DB	0bH
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT _CATID_WICBitmapEncoders
CONST	SEGMENT
_CATID_WICBitmapEncoders DD 0ac757296H
	DW	03522H
	DW	04e11H
	DB	098H
	DB	062H
	DB	0c1H
	DB	07bH
	DB	0e5H
	DB	0a1H
	DB	076H
	DB	07eH
CONST	ENDS
;	COMDAT _CATID_WICBitmapDecoders
CONST	SEGMENT
_CATID_WICBitmapDecoders DD 07ed96837H
	DW	096f0H
	DW	04812H
	DB	0b2H
	DB	011H
	DB	0f1H
	DB	03cH
	DB	024H
	DB	011H
	DB	07eH
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_WICImagingCategories
CONST	SEGMENT
_CLSID_WICImagingCategories DD 0fae3d380H
	DW	0fea4H
	DW	04623H
	DB	08cH
	DB	075H
	DB	0c6H
	DB	0b6H
	DB	011H
	DB	010H
	DB	0b6H
	DB	081H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatDds
CONST	SEGMENT
_GUID_ContainerFormatDds DD 09967cb95H
	DW	02e85H
	DW	04ac8H
	DB	08cH
	DB	0a2H
	DB	083H
	DB	0d7H
	DB	0ccH
	DB	0d4H
	DB	025H
	DB	0c9H
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT _GUID_ContainerFormatWmp
CONST	SEGMENT
_GUID_ContainerFormatWmp DD 057a37caaH
	DW	0367aH
	DW	04540H
	DB	091H
	DB	06bH
	DB	0f1H
	DB	083H
	DB	0c5H
	DB	09H
	DB	03aH
	DB	04bH
CONST	ENDS
;	COMDAT _GUID_ContainerFormatGif
CONST	SEGMENT
_GUID_ContainerFormatGif DD 01f8a5601H
	DW	07d4dH
	DW	04cbdH
	DB	09cH
	DB	082H
	DB	01bH
	DB	0c8H
	DB	0d4H
	DB	0eeH
	DB	0b9H
	DB	0a5H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatTiff
CONST	SEGMENT
_GUID_ContainerFormatTiff DD 0163bcc30H
	DW	0e2e9H
	DW	04f0bH
	DB	096H
	DB	01dH
	DB	0a3H
	DB	0e9H
	DB	0fdH
	DB	0b7H
	DB	088H
	DB	0a3H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT _GUID_ContainerFormatJpeg
CONST	SEGMENT
_GUID_ContainerFormatJpeg DD 019e4a5aaH
	DW	05662H
	DW	04fc5H
	DB	0a0H
	DB	0c0H
	DB	017H
	DB	058H
	DB	02H
	DB	08eH
	DB	010H
	DB	057H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatIco
CONST	SEGMENT
_GUID_ContainerFormatIco DD 0a3a860c4H
	DW	0338fH
	DW	04c17H
	DB	091H
	DB	09aH
	DB	0fbH
	DB	0a4H
	DB	0b5H
	DB	062H
	DB	08fH
	DB	021H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatPng
CONST	SEGMENT
_GUID_ContainerFormatPng DD 01b7cfaf4H
	DW	0713fH
	DW	0473cH
	DB	0bbH
	DB	0cdH
	DB	061H
	DB	037H
	DB	042H
	DB	05fH
	DB	0aeH
	DB	0afH
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT _GUID_ContainerFormatBmp
CONST	SEGMENT
_GUID_ContainerFormatBmp DD 0af1d87eH
	DW	0fcfeH
	DW	04188H
	DB	0bdH
	DB	0ebH
	DB	0a7H
	DB	090H
	DB	064H
	DB	071H
	DB	0cbH
	DB	0e3H
CONST	ENDS
;	COMDAT _CLSID_WICDdsEncoder
CONST	SEGMENT
_CLSID_WICDdsEncoder DD 0a61dde94H
	DW	066ceH
	DW	04ac1H
	DB	088H
	DB	01bH
	DB	071H
	DB	068H
	DB	05H
	DB	088H
	DB	089H
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_WICWmpEncoder
CONST	SEGMENT
_CLSID_WICWmpEncoder DD 0ac4ce3cbH
	DW	0e1c1H
	DW	044cdH
	DB	082H
	DB	015H
	DB	05aH
	DB	016H
	DB	065H
	DB	050H
	DB	09eH
	DB	0c2H
CONST	ENDS
;	COMDAT _CLSID_WICTiffEncoder
CONST	SEGMENT
_CLSID_WICTiffEncoder DD 0131be10H
	DW	02001H
	DW	04c5fH
	DB	0a9H
	DB	0b0H
	DB	0ccH
	DB	088H
	DB	0faH
	DB	0b6H
	DB	04cH
	DB	0e8H
CONST	ENDS
;	COMDAT _CLSID_WICGifEncoder
CONST	SEGMENT
_CLSID_WICGifEncoder DD 0114f5598H
	DW	0b22H
	DW	040a0H
	DB	086H
	DB	0a1H
	DB	0c8H
	DB	03eH
	DB	0a4H
	DB	095H
	DB	0adH
	DB	0bdH
CONST	ENDS
;	COMDAT _CLSID_WICJpegEncoder
CONST	SEGMENT
_CLSID_WICJpegEncoder DD 01a34f5c1H
	DW	04a5aH
	DW	046dcH
	DB	0b6H
	DB	044H
	DB	01fH
	DB	045H
	DB	067H
	DB	0e7H
	DB	0a6H
	DB	076H
CONST	ENDS
;	COMDAT _CLSID_WICPngEncoder
CONST	SEGMENT
_CLSID_WICPngEncoder DD 027949969H
	DW	0876aH
	DW	041d7H
	DB	094H
	DB	047H
	DB	056H
	DB	08fH
	DB	06aH
	DB	035H
	DB	0a4H
	DB	0dcH
CONST	ENDS
;	COMDAT _CLSID_WICBmpEncoder
CONST	SEGMENT
_CLSID_WICBmpEncoder DD 069be8bb4H
	DW	0d66dH
	DW	047c8H
	DB	086H
	DB	05aH
	DB	0edH
	DB	015H
	DB	089H
	DB	043H
	DB	037H
	DB	082H
CONST	ENDS
;	COMDAT _CLSID_WICDdsDecoder
CONST	SEGMENT
_CLSID_WICDdsDecoder DD 09053699fH
	DW	0a341H
	DW	0429dH
	DB	09eH
	DB	090H
	DB	0eeH
	DB	043H
	DB	07cH
	DB	0f8H
	DB	0cH
	DB	073H
CONST	ENDS
;	COMDAT _CLSID_WICWmpDecoder
CONST	SEGMENT
_CLSID_WICWmpDecoder DD 0a26cec36H
	DW	0234cH
	DW	04950H
	DB	0aeH
	DB	016H
	DB	0e3H
	DB	04aH
	DB	0acH
	DB	0e7H
	DB	01dH
	DB	0dH
CONST	ENDS
;	COMDAT _CLSID_WICTiffDecoder
CONST	SEGMENT
_CLSID_WICTiffDecoder DD 0b54e85d9H
	DW	0fe23H
	DW	0499fH
	DB	08bH
	DB	088H
	DB	06aH
	DB	0ceH
	DB	0a7H
	DB	013H
	DB	075H
	DB	02bH
CONST	ENDS
;	COMDAT _CLSID_WICGifDecoder
CONST	SEGMENT
_CLSID_WICGifDecoder DD 0381dda3cH
	DW	09ce9H
	DW	04834H
	DB	0a2H
	DB	03eH
	DB	01fH
	DB	098H
	DB	0f8H
	DB	0fcH
	DB	052H
	DB	0beH
CONST	ENDS
;	COMDAT _CLSID_WICJpegDecoder
CONST	SEGMENT
_CLSID_WICJpegDecoder DD 09456a480H
	DW	0e88bH
	DW	043eaH
	DB	09eH
	DB	073H
	DB	0bH
	DB	02dH
	DB	09bH
	DB	071H
	DB	0b1H
	DB	0caH
CONST	ENDS
;	COMDAT _CLSID_WICIcoDecoder
CONST	SEGMENT
_CLSID_WICIcoDecoder DD 0c61bfcdfH
	DW	02e0fH
	DW	04aadH
	DB	0a8H
	DB	0d7H
	DB	0e0H
	DB	06bH
	DB	0afH
	DB	0ebH
	DB	0cdH
	DB	0feH
CONST	ENDS
;	COMDAT _CLSID_WICBmpDecoder
CONST	SEGMENT
_CLSID_WICBmpDecoder DD 06b462062H
	DW	07cbfH
	DW	0400dH
	DB	09fH
	DB	0dbH
	DB	081H
	DB	03dH
	DB	0d1H
	DB	0fH
	DB	027H
	DB	078H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder2
CONST	SEGMENT
_CLSID_WICPngDecoder2 DD 0e018945bH
	DW	0aa86H
	DW	04008H
	DB	09bH
	DB	0d4H
	DB	067H
	DB	077H
	DB	0a1H
	DB	0e4H
	DB	0cH
	DB	011H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder1
CONST	SEGMENT
_CLSID_WICPngDecoder1 DD 0389ea17bH
	DW	05078H
	DW	04cdeH
	DB	0b6H
	DB	0efH
	DB	025H
	DB	0c1H
	DB	051H
	DB	075H
	DB	0c7H
	DB	051H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder
CONST	SEGMENT
_CLSID_WICPngDecoder DD 0389ea17bH
	DW	05078H
	DW	04cdeH
	DB	0b6H
	DB	0efH
	DB	025H
	DB	0c1H
	DB	051H
	DB	075H
	DB	0c7H
	DB	051H
CONST	ENDS
;	COMDAT _GUID_VendorMicrosoftBuiltIn
CONST	SEGMENT
_GUID_VendorMicrosoftBuiltIn DD 0257a30fdH
	DW	06b6H
	DW	0462bH
	DB	0aeH
	DB	0a4H
	DB	063H
	DB	0f7H
	DB	0bH
	DB	086H
	DB	0e5H
	DB	033H
CONST	ENDS
;	COMDAT _GUID_VendorMicrosoft
CONST	SEGMENT
_GUID_VendorMicrosoft DD 0f0e749caH
	DW	0edefH
	DW	04589H
	DB	0a7H
	DB	03aH
	DB	0eeH
	DB	0eH
	DB	062H
	DB	06aH
	DB	02aH
	DB	02bH
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory2
CONST	SEGMENT
_CLSID_WICImagingFactory2 DD 0317d06e8H
	DW	05f24H
	DW	0433dH
	DB	0bdH
	DB	0f7H
	DB	079H
	DB	0ceH
	DB	068H
	DB	0d8H
	DB	0abH
	DB	0c2H
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory1
CONST	SEGMENT
_CLSID_WICImagingFactory1 DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory
CONST	SEGMENT
_CLSID_WICImagingFactory DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?timeout_infinite@event@Concurrency@@2IB
CONST	SEGMENT
?timeout_infinite@event@Concurrency@@2IB DD 0ffffffffH	; Concurrency::event::timeout_infinite
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?is_steady@system_clock@chrono@std@@2_NB
CONST	SEGMENT
?is_steady@system_clock@chrono@std@@2_NB DB 00H		; std::chrono::system_clock::is_steady
CONST	ENDS
;	COMDAT ?is_monotonic@system_clock@chrono@std@@2_NB
CONST	SEGMENT
?is_monotonic@system_clock@chrono@std@@2_NB DB 00H	; std::chrono::system_clock::is_monotonic
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Safe_mult@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Safe_mult@$00$0JIJGIA@@std@@2_JB DQ 0000000000989680H ; std::_Safe_mult<1,10000000>::value
CONST	ENDS
_DATA	SEGMENT
?g_iNumParticles@@3IA DD 08000H				; g_iNumParticles
?g_eSimMode@@3W4eSimulationMode@@A DD 02H		; g_eSimMode
_DATA	ENDS
;	COMDAT ?value@?$_Safe_multX@$00$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Safe_multX@$00$0JIJGIA@$00@std@@2_JB DQ 0000000000989680H ; std::_Safe_multX<1,10000000,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?value@?$_Abs@$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Abs@$0JIJGIA@@std@@2_JB DQ 0000000000989680H	; std::_Abs<10000000>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Safe_mult@$00$00@std@@2_JB
CONST	SEGMENT
?value@?$_Safe_mult@$00$00@std@@2_JB DQ 0000000000000001H ; std::_Safe_mult<1,1>::value
CONST	ENDS
;	COMDAT ?value@?$_Safe_multX@$00$00$00@std@@2_JB
CONST	SEGMENT
?value@?$_Safe_multX@$00$00$00@std@@2_JB DQ 0000000000000001H ; std::_Safe_multX<1,1,1>::value
CONST	ENDS
;	COMDAT ?_Gy@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_Gy@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_Gy
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$00$00@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$00$00@std@@2_JB DQ 0000000000000001H	; std::_Gcd<1,1>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$00$00@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$00$00@std@@2_JB DQ 0000000000000001H	; std::_GcdX<1,1>::value
CONST	ENDS
;	COMDAT ?_Gx@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_Gx@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000064H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_Gx
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0GE@$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0GE@$0DLJKMKAA@@std@@2_JB DQ 0000000000000064H ; std::_Gcd<100,1000000000>::value
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0GE@$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0GE@$0DLJKMKAA@@std@@2_JB DQ 0000000000000064H ; std::_GcdX<100,1000000000>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0DLJKMKAA@$0GE@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0DLJKMKAA@$0GE@@std@@2_JB DQ 0000000000000064H ; std::_GcdX<1000000000,100>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0GE@$0A@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0GE@$0A@@std@@2_JB DQ 0000000000000064H	; std::_GcdX<100,0>::value
CONST	ENDS
;	COMDAT ?_D2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_D2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 000000003b9aca00H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_D2
CONST	ENDS
;	COMDAT ?_N2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_N2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_N2
CONST	ENDS
;	COMDAT ?den@?$ratio@$00$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$00$0DLJKMKAA@@std@@2_JB DQ 000000003b9aca00H ; std::ratio<1,1000000000>::den
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?num@?$ratio@$00$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$00$0DLJKMKAA@@std@@2_JB DQ 0000000000000001H ; std::ratio<1,1000000000>::num
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$00$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$00$0DLJKMKAA@@std@@2_JB DQ 0000000000000001H ; std::_Gcd<1,1000000000>::value
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$00$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$00$0DLJKMKAA@@std@@2_JB DQ 0000000000000001H ; std::_GcdX<1,1000000000>::value
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0DLJKMKAA@$00@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0DLJKMKAA@$00@std@@2_JB DQ 0000000000000001H ; std::_GcdX<1000000000,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?value@?$_Abs@$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_Abs@$0DLJKMKAA@@std@@2_JB DQ 000000003b9aca00H ; std::_Abs<1000000000>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Sign_of@$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_Sign_of@$0DLJKMKAA@@std@@2_JB DQ 0000000000000001H ; std::_Sign_of<1000000000>::value
CONST	ENDS
;	COMDAT ?_D1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_D1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_D1
CONST	ENDS
;	COMDAT ?_N1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_N1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000064H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_N1
CONST	ENDS
;	COMDAT ?den@?$ratio@$0GE@$00@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$0GE@$00@std@@2_JB DQ 0000000000000001H	; std::ratio<100,1>::den
CONST	ENDS
;	COMDAT ?num@?$ratio@$0GE@$00@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$0GE@$00@std@@2_JB DQ 0000000000000064H	; std::ratio<100,1>::num
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0GE@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0GE@$00@std@@2_JB DQ 0000000000000001H	; std::_Gcd<100,1>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0GE@$00@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0GE@$00@std@@2_JB DQ 0000000000000001H	; std::_GcdX<100,1>::value
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$00$0A@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$00$0A@@std@@2_JB DQ 0000000000000001H	; std::_GcdX<1,0>::value
CONST	ENDS
;	COMDAT ?value@?$_Abs@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Abs@$00@std@@2_JB DQ 0000000000000001H	; std::_Abs<1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Abs@$0GE@@std@@2_JB
CONST	SEGMENT
?value@?$_Abs@$0GE@@std@@2_JB DQ 0000000000000064H	; std::_Abs<100>::value
CONST	ENDS
;	COMDAT ?value@?$_Sign_of@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Sign_of@$00@std@@2_JB DQ 0000000000000001H	; std::_Sign_of<1>::value
CONST	ENDS
;	COMDAT _AgentEventGuid
CONST	SEGMENT
_AgentEventGuid DD 0b9b5b78cH
	DW	0713H
	DW	04898H
	DB	0a2H
	DB	01aH
	DB	0c6H
	DB	079H
	DB	049H
	DB	0dcH
	DB	0edH
	DB	07H
CONST	ENDS
;	COMDAT _PPLParallelForeachEventGuid
CONST	SEGMENT
_PPLParallelForeachEventGuid DD 05cb7d785H
	DW	09d66H
	DW	0465dH
	DB	0baH
	DB	0e1H
	DB	046H
	DB	011H
	DB	06H
	DB	01bH
	DB	054H
	DB	034H
CONST	ENDS
;	COMDAT _PPLParallelForEventGuid
CONST	SEGMENT
_PPLParallelForEventGuid DD 031c8da6bH
	DW	06165H
	DW	04042H
	DB	08bH
	DB	092H
	DB	094H
	DB	09eH
	DB	031H
	DB	05fH
	DB	04dH
	DB	084H
CONST	ENDS
;	COMDAT ?value@?$_Sign_of@$0GE@@std@@2_JB
CONST	SEGMENT
?value@?$_Sign_of@$0GE@@std@@2_JB DQ 0000000000000001H	; std::_Sign_of<100>::value
CONST	ENDS
;	COMDAT _PPLParallelInvokeEventGuid
CONST	SEGMENT
_PPLParallelInvokeEventGuid DD 0d1b5b133H
	DW	0ec3dH
	DW	049f4H
	DB	098H
	DB	0a3H
	DB	046H
	DB	04dH
	DB	01aH
	DB	09eH
	DB	046H
	DB	082H
CONST	ENDS
;	COMDAT _ResourceManagerEventGuid
CONST	SEGMENT
_ResourceManagerEventGuid DD 02718d25bH
	DW	05bf5H
	DW	04479H
	DB	08eH
	DB	088H
	DB	0baH
	DB	0bcH
	DB	064H
	DB	0bdH
	DB	0bfH
	DB	0caH
CONST	ENDS
;	COMDAT _LockEventGuid
CONST	SEGMENT
_LockEventGuid DD 079a60dc6H
	DW	05fc8H
	DW	04952H
	DB	0a4H
	DB	01cH
	DB	011H
	DB	063H
	DB	0aeH
	DB	0ecH
	DB	05eH
	DB	0b8H
CONST	ENDS
;	COMDAT _VirtualProcessorEventGuid
CONST	SEGMENT
_VirtualProcessorEventGuid DD 02f27805fH
	DW	01676H
	DW	04eccH
	DB	096H
	DB	0faH
	DB	07eH
	DB	0b0H
	DB	09dH
	DB	044H
	DB	030H
	DB	02fH
CONST	ENDS
;	COMDAT _ChoreEventGuid
CONST	SEGMENT
_ChoreEventGuid DD 07e854ec7H
	DW	0cdc4H
	DW	0405aH
	DB	0b5H
	DB	0b2H
	DB	0aaH
	DB	0f7H
	DB	0c9H
	DB	0e7H
	DB	0d4H
	DB	0cH
CONST	ENDS
;	COMDAT _ContextEventGuid
CONST	SEGMENT
_ContextEventGuid DD 05727a00fH
	DW	050beH
	DW	04519H
	DB	082H
	DB	056H
	DB	0f7H
	DB	069H
	DB	098H
	DB	071H
	DB	0feH
	DB	0cbH
CONST	ENDS
;	COMDAT _ScheduleGroupEventGuid
CONST	SEGMENT
_ScheduleGroupEventGuid DD 0e8a3bf1fH
	DW	0a86bH
	DW	04390H
	DB	09cH
	DB	060H
	DB	053H
	DB	090H
	DB	0b9H
	DB	069H
	DB	0d2H
	DB	02cH
CONST	ENDS
;	COMDAT _SchedulerEventGuid
CONST	SEGMENT
_SchedulerEventGuid DD 0e2091f8aH
	DW	01e0aH
	DW	04731H
	DB	084H
	DB	0a2H
	DB	0dH
	DB	0d5H
	DB	07cH
	DB	08aH
	DB	052H
	DB	061H
CONST	ENDS
;	COMDAT _ConcRTEventGuid
CONST	SEGMENT
_ConcRTEventGuid DD 072b14a7dH
	DW	0704cH
	DW	0423eH
	DB	092H
	DB	0f8H
	DB	07eH
	DB	06dH
	DB	064H
	DB	0bcH
	DB	0b9H
	DB	02aH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT _ConcRT_ProviderGuid
CONST	SEGMENT
_ConcRT_ProviderGuid DD 0f7b697a3H
	DW	04db5H
	DW	04d3bH
	DB	0beH
	DB	071H
	DB	0c4H
	DB	0d2H
	DB	084H
	DB	0e6H
	DB	059H
	DB	02fH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionLinkingGraph
CONST	SEGMENT
_IID_ID3D11FunctionLinkingGraph DD 054133220H
	DW	01ce8H
	DW	043d3H
	DB	082H
	DB	036H
	DB	098H
	DB	055H
	DB	0c5H
	DB	0ceH
	DB	0ecH
	DB	0ffH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT _IID_ID3D11LinkingNode
CONST	SEGMENT
_IID_ID3D11LinkingNode DD 0d80dd70cH
	DW	08d2fH
	DW	04751H
	DB	094H
	DB	0a1H
	DB	03H
	DB	0c7H
	DB	09bH
	DB	035H
	DB	056H
	DB	0dbH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$_Maximum@$S@std@@2IB
CONST	SEGMENT
?value@?$_Maximum@$S@std@@2IB DD 00H			; std::_Maximum<>::value
CONST	ENDS
;	COMDAT _IID_ID3D11Linker
CONST	SEGMENT
_IID_ID3D11Linker DD 059a6cd0eH
	DW	0e10dH
	DW	04c1fH
	DB	088H
	DB	0c0H
	DB	063H
	DB	0abH
	DB	0a1H
	DB	0daH
	DB	0f3H
	DB	0eH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$00@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$00@std@@2IB DD 01H		; std::integral_constant<unsigned int,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11ModuleInstance
CONST	SEGMENT
_IID_ID3D11ModuleInstance DD 0469e07f7H
	DW	045aH
	DW	048d5H
	DB	0aaH
	DB	012H
	DB	068H
	DB	0a4H
	DB	078H
	DB	0cdH
	DB	0f7H
	DB	05dH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$01@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$01@std@@2IB DD 02H		; std::integral_constant<unsigned int,2>::value
CONST	ENDS
;	COMDAT _IID_ID3D11Module
CONST	SEGMENT
_IID_ID3D11Module DD 0cac701eeH
	DW	080fcH
	DW	04122H
	DB	082H
	DB	042H
	DB	010H
	DB	0b3H
	DB	09cH
	DB	08cH
	DB	0ecH
	DB	034H
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionParameterReflection
CONST	SEGMENT
_IID_ID3D11FunctionParameterReflection DD 042757488H
	DW	0334fH
	DW	047feH
	DB	098H
	DB	02eH
	DB	01aH
	DB	065H
	DB	0d0H
	DB	08cH
	DB	0c4H
	DB	062H
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?value@?$integral_constant@H$0A@@std@@2HB
CONST	SEGMENT
?value@?$integral_constant@H$0A@@std@@2HB DD 00H	; std::integral_constant<int,0>::value
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Is_ratio@U?$ratio@$00$0JIJGIA@@std@@@chrono@std@@2_NB
CONST	SEGMENT
?value@?$_Is_ratio@U?$ratio@$00$0JIJGIA@@std@@@chrono@std@@2_NB DB 01H ; std::chrono::_Is_ratio<std::ratio<1,10000000> >::value
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionReflection
CONST	SEGMENT
_IID_ID3D11FunctionReflection DD 0207bcecbH
	DW	0d683H
	DW	04a06H
	DB	0a8H
	DB	0a3H
	DB	09bH
	DB	014H
	DB	09bH
	DB	09fH
	DB	073H
	DB	0a4H
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT _IID_ID3D11LibraryReflection
CONST	SEGMENT
_IID_ID3D11LibraryReflection DD 054384f1bH
	DW	05b3eH
	DW	04bb7H
	DB	0aeH
	DB	01H
	DB	060H
	DB	0baH
	DB	030H
	DB	097H
	DB	0cbH
	DB	0b6H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$03@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$03@std@@2IB DD 04H		; std::integral_constant<unsigned int,4>::value
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflection
CONST	SEGMENT
_IID_ID3D11ShaderReflection DD 08d536ca1H
	DW	0ccaH
	DW	04956H
	DB	0a8H
	DB	037H
	DB	078H
	DB	069H
	DB	063H
	DB	075H
	DB	055H
	DB	084H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$07@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$07@std@@2IB DD 08H		; std::integral_constant<unsigned int,8>::value
CONST	ENDS
;	COMDAT ?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f1a9a9br ; 0.603922 ; DirectX::Colors::YellowGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Yellow
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::WhiteSmoke
	DD	03f75f5f7r			; 0.960784
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?White@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?White@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::White
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Wheat
	DD	03f5edee0r			; 0.870588
	DD	03f33b3b4r			; 0.701961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?Violet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Violet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::Violet
	DD	03f028283r			; 0.509804
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e808081r ; 0.25098 ; DirectX::Colors::Turquoise
	DD	03f60e0e2r			; 0.878431
	DD	03f50d0d2r			; 0.815686
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Transparent
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Tomato
	DD	03ec6c6c8r			; 0.388235
	DD	03e8e8e8fr			; 0.278431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f58d8dar ; 0.847059 ; DirectX::Colors::Thistle
	DD	03f3fbfc0r			; 0.74902
	DD	03f58d8dar			; 0.847059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Teal@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Teal@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Teal
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?Tan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Tan
	DD	03f34b4b5r			; 0.705882
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e8c8c8dr ; 0.27451 ; DirectX::Colors::SteelBlue
	DD	03f028283r			; 0.509804
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::SpringGreen
	DD	03f800000r			; 1
	DD	03efeff00r			; 0.498039
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?Snow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Snow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Snow
	DD	03f7afafcr			; 0.980392
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionConstantBuffer
CONST	SEGMENT
_IID_ID3D11ShaderReflectionConstantBuffer DD 0eb62d63dH
	DW	093ddH
	DW	04318H
	DB	08aH
	DB	0e8H
	DB	0c6H
	DB	0f8H
	DB	03aH
	DB	0d3H
	DB	071H
	DB	0b8H
CONST	ENDS
;	COMDAT ?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ee0e0e2r ; 0.439216 ; DirectX::Colors::SlateGray
	DD	03f008081r			; 0.501961
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed4d4d6r ; 0.415686 ; DirectX::Colors::SlateBlue
	DD	03eb4b4b5r			; 0.352941
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::SkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f6bebedr			; 0.921569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Silver@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Silver@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f40c0c2r ; 0.752941 ; DirectX::Colors::Silver
	DD	03f40c0c2r			; 0.752941
	DD	03f40c0c2r			; 0.752941
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f20a0a1r ; 0.627451 ; DirectX::Colors::Sienna
	DD	03ea4a4a5r			; 0.321569
	DD	03e34b4b5r			; 0.176471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::SeaShell
	DD	03f75f5f7r			; 0.960784
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e38b8b9r ; 0.180392 ; DirectX::Colors::SeaGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03eaeaeafr			; 0.341176
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f74f4f6r ; 0.956863 ; DirectX::Colors::SandyBrown
	DD	03f24a4a5r			; 0.643137
	DD	03ec0c0c2r			; 0.376471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Salmon
	DD	03f008081r			; 0.501961
	DD	03ee4e4e6r			; 0.447059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::SaddleBrown
	DD	03e8a8a8br			; 0.270588
	DD	03d989899r			; 0.0745098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e828283r ; 0.254902 ; DirectX::Colors::RoyalBlue
	DD	03ed2d2d4r			; 0.411765
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3cbcbdr ; 0.737255 ; DirectX::Colors::RosyBrown
	DD	03f0f8f90r			; 0.560784
	DD	03f0f8f90r			; 0.560784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?Red@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Red@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Red
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?is_steady@steady_clock@chrono@std@@2_NB
CONST	SEGMENT
?is_steady@steady_clock@chrono@std@@2_NB DB 01H		; std::chrono::steady_clock::is_steady
CONST	ENDS
;	COMDAT ?Purple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Purple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Purple
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::PowderBlue
	DD	03f60e0e2r			; 0.878431
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_monotonic@steady_clock@chrono@std@@2_NB
CONST	SEGMENT
?is_monotonic@steady_clock@chrono@std@@2_NB DB 01H	; std::chrono::steady_clock::is_monotonic
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-005 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-005
	DD	0b7364261r			; -1.08635e-005
	DD	0b7364261r			; -1.08635e-005
CONST	ENDS
;	COMDAT ?Plum@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Plum@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5ddddfr ; 0.866667 ; DirectX::Colors::Plum
	DD	03f20a0a1r			; 0.627451
	DD	03f5ddddfr			; 0.866667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Pink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Pink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Pink
	DD	03f40c0c2r			; 0.752941
	DD	03f4bcbcdr			; 0.796079
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?Peru@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Peru@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::Peru
	DD	03f058586r			; 0.521569
	DD	03e7cfcfer			; 0.247059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionVariable
CONST	SEGMENT
_IID_ID3D11ShaderReflectionVariable DD 051f23923H
	DW	0f3e5H
	DW	04bd1H
	DB	091H
	DB	0cbH
	DB	060H
	DB	061H
	DB	077H
	DB	0d8H
	DB	0dbH
	DB	04cH
CONST	ENDS
;	COMDAT ?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PeachPuff
	DD	03f5adadcr			; 0.854902
	DD	03f39b9bar			; 0.72549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PapayaWhip
	DD	03f6feff1r			; 0.937255
	DD	03f55d5d7r			; 0.835294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5bdbddr ; 0.858824 ; DirectX::Colors::PaleVioletRed
	DD	03ee0e0e2r			; 0.439216
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2fafb0r ; 0.686275 ; DirectX::Colors::PaleTurquoise
	DD	03f6eeef0r			; 0.933333
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f189899r ; 0.596078 ; DirectX::Colors::PaleGreen
	DD	03f7bfbfdr			; 0.984314
	DD	03f189899r			; 0.596078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::PaleGoldenrod
	DD	03f68e8ear			; 0.909804
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Orchid
	DD	03ee0e0e2r			; 0.439216
	DD	03f56d6d8r			; 0.839216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::OrangeRed
	DD	03e8a8a8br			; 0.270588
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?Orange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Orange
	DD	03f25a5a6r			; 0.647059
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed6d6d8r ; 0.419608 ; DirectX::Colors::OliveDrab
	DD	03f0e8e8fr			; 0.556863
	DD	03e0c8c8dr			; 0.137255
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?Olive@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Olive@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Olive
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7dfdffr ; 0.992157 ; DirectX::Colors::OldLace
	DD	03f75f5f7r			; 0.960784
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?Navy@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Navy@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Navy
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::NavajoWhite
	DD	03f5edee0r			; 0.870588
	DD	03f2dadaer			; 0.678431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Moccasin
	DD	03f64e4e6r			; 0.894118
	DD	03f35b5b6r			; 0.709804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::MistyRose
	DD	03f64e4e6r			; 0.894118
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::MintCream
	DD	03f800000r			; 1
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+009 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+009 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+009
	DD	04f7fffffr			; 4.29497e+009
	DD	04f7fffffr			; 4.29497e+009
CONST	ENDS
;	COMDAT ?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03dc8c8car ; 0.0980392 ; DirectX::Colors::MidnightBlue
	DD	03dc8c8car			; 0.0980392
	DD	03ee0e0e2r			; 0.439216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _SID_SCommandBarState
CONST	SEGMENT
_SID_SCommandBarState DD 0b99eaa5cH
	DW	03850H
	DW	04400H
	DB	0bcH
	DB	033H
	DB	02cH
	DB	0e5H
	DB	034H
	DB	04H
	DB	08bH
	DB	0f8H
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+009 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+009
	DD	04effffffr			; 2.14748e+009
	DD	04effffffr			; 2.14748e+009
CONST	ENDS
;	COMDAT ?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f47c7c9r ; 0.780392 ; DirectX::Colors::MediumVioletRed
	DD	03da8a8a9r			; 0.0823529
	DD	03f058586r			; 0.521569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+009 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::MediumTurquoise
	DD	03f51d1d3r			; 0.819608
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumSpringGreen
	DD	03f7afafcr			; 0.980392
	DD	03f1a9a9br			; 0.603922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+006
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef6f6f8r ; 0.482353 ; DirectX::Colors::MediumSlateBlue
	DD	03ed0d0d2r			; 0.407843
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e70f0f2r ; 0.235294 ; DirectX::Colors::MediumSeaGreen
	DD	03f33b3b4r			; 0.701961
	DD	03ee2e2e4r			; 0.443137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
CONST	SEGMENT
$SG191488 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191493 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191494 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189651 DB	' : ', 00H
$SG191508 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191509 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191514 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191515 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189679 DB	0aH, 00H
	ORG $+2
$SG191520 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191521 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189698 DB	'Particles', 00H
	ORG $+2
$SG191535 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191536 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191541 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191542 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189708 DB	'Sorted', 00H
	ORG $+1
$SG189709 DB	'Sorted SRV', 00H
	ORG $+1
$SG191547 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191548 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189710 DB	'Sorted UAV', 00H
	ORG $+1
$SG191562 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191563 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191568 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191569 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189727 DB	'Forces', 00H
	ORG $+1
$SG189728 DB	'Forces SRV', 00H
	ORG $+1
$SG191574 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191575 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189729 DB	'Forces UAV', 00H
	ORG $+1
$SG191584 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H, 'C', 00H, 'B', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG191585 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191594 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H, 'C', 00H, 'B', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG191595 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191604 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H, 'C', 00H, 'B', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG191605 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191614 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H, 'C', 00H, 'B', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG191615 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189604 DB	'POS: ', 00H
	ORG $+2
$SG189696 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'N'
	DB	00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	's', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ',', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H
	DB	'e', 00H, 's', 00H, ')', 00H, 00H, 00H
$SG189697 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189699 DB	'Particles SRV', 00H
	ORG $+2
$SG189700 DB	'Particles UAV', 00H
	ORG $+2
$SG189746 DB	'Density', 00H
$SG189747 DB	'Density SRV', 00H
$SG189706 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'N'
	DB	00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S', 00H, 'o', 00H
	DB	'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'P', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e'
	DB	00H, 's', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ',', 00H, ' ', 00H
	DB	'&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S', 00H, 'o', 00H, 'r'
	DB	00H, 't', 00H, 'e', 00H, 'd', 00H, 'P', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, 'U'
	DB	00H, 'A', 00H, 'V', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's'
	DB	00H, ')', 00H, 00H, 00H
$SG189707 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189725 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, ' '
	DB	00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'N', 00H
	DB	'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i'
	DB	00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, ',', 00H, ' ', 00H
	DB	'&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'F'
	DB	00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, 'S', 00H
	DB	'R', 00H, 'V', 00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_'
	DB	00H, 'p', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')', 00H
	DB	00H, 00H
$SG189726 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189744 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'D', 00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, ' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H, 'i', 00H
	DB	'N', 00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'D', 00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l'
	DB	00H, 'e', 00H, 'D', 00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'D'
	DB	00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H
	DB	'U', 00H, 'A', 00H, 'V', 00H, ')', 00H, 00H, 00H
$SG189745 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189748 DB	'Density UAV', 00H
$SG189766 DB	'Grid SRV', 00H
	ORG $+3
$SG189763 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'u', 00H, '3'
	DB	00H, '2', 00H, ' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H
	DB	'i', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G'
	DB	00H, 'r', 00H, 'i', 00H, 'd', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'g', 00H, '_', 00H, 'p', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd'
	DB	00H, 'S', 00H, 'R', 00H, 'V', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'g', 00H, '_', 00H, 'p', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd'
	DB	00H, 'U', 00H, 'A', 00H, 'V', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189764 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189765 DB	'Grid', 00H
	ORG $+3
$SG189767 DB	'Grid UAV', 00H
	ORG $+3
$SG189774 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189775 DB	'PingPong', 00H
	ORG $+3
$SG189773 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'u', 00H, '3'
	DB	00H, '2', 00H, ' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H
	DB	'i', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G'
	DB	00H, 'r', 00H, 'i', 00H, 'd', 00H, 'P', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'P', 00H, 'o', 00H, 'n', 00H, 'g', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G', 00H, 'r', 00H
	DB	'i', 00H, 'd', 00H, 'P', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'P'
	DB	00H, 'o', 00H, 'n', 00H, 'g', 00H, 'S', 00H, 'R', 00H, 'V', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G'
	DB	00H, 'r', 00H, 'i', 00H, 'd', 00H, 'P', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'P', 00H, 'o', 00H, 'n', 00H, 'g', 00H, 'U', 00H, 'A'
	DB	00H, 'V', 00H, ')', 00H, 00H, 00H
	ORG $+2
_g_pNullSRV DD	00H
$SG189776 DB	'PingPong SRV', 00H
	ORG $+3
_g_pNullUAV DD	00H
$SG189777 DB	'PingPong UAV', 00H
	ORG $+3
$SG189792 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'u', 00H, '3'
	DB	00H, '2', 00H, '2', 00H, ' ', 00H, '>', 00H, '(', 00H, 'N', 00H
	DB	'U', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'R', 00H, 'I', 00H, 'D'
	DB	00H, '_', 00H, 'I', 00H, 'N', 00H, 'D', 00H, 'I', 00H, 'C', 00H
	DB	'E', 00H, 'S', 00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_'
	DB	00H, 'p', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H, 'I', 00H
	DB	'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'i'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, 'S', 00H, 'R', 00H, 'V', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G'
	DB	00H, 'r', 00H, 'i', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, 'U', 00H, 'A', 00H, 'V'
	DB	00H, ')', 00H, 00H, 00H
$SG189793 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189794 DB	'Indices', 00H
$SG189795 DB	'Indices SRV', 00H
$SG189796 DB	'Indices UAV', 00H
$SG189858 DB	'vs_5_0', 00H
	ORG $+1
$SG189859 DB	'ParticleVS', 00H
	ORG $+1
$SG189860 DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'l', 00H, 'e', 00H, 'V', 00H, 'S', 00H, '.', 00H, 'h', 00H, 'l'
	DB	00H, 's', 00H, 'l', 00H, 00H, 00H
$SG189864 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'V', 00H, 'S', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'V', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, '"', 00H, 'v'
	DB	00H, 's', 00H, '_', 00H, '5', 00H, '_', 00H, '0', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG189865 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189872 DB	'ParticleVS', 00H
	ORG $+1
$SG189869 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'x', 00H, 'S', 00H, 'h'
	DB	00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H, 'p', 00H
	DB	'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H
	DB	'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'V'
	DB	00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189870 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189873 DB	'gs_5_0', 00H
	ORG $+1
$SG189874 DB	'ParticleGS', 00H
	ORG $+1
$SG189875 DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'l', 00H, 'e', 00H, 'G', 00H, 'S', 00H, '.', 00H, 'h', 00H, 'l'
	DB	00H, 's', 00H, 'l', 00H, 00H, 00H
$SG189887 DB	'ParticleGS', 00H
	ORG $+1
$SG189879 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'G', 00H, 'S', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'G', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, '"', 00H, 'g'
	DB	00H, 's', 00H, '_', 00H, '5', 00H, '_', 00H, '0', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG189880 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189888 DB	'ps_5_0', 00H
	ORG $+1
$SG189889 DB	'ParticlePS', 00H
	ORG $+1
$SG189884 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'G', 00H
	DB	'e', 00H, 'o', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'r', 00H, 'y'
	DB	00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'(', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H
	DB	',', 00H, ' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b'
	DB	00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l'
	DB	00H, 'e', 00H, 'G', 00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189885 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189890 DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'l', 00H, 'e', 00H, 'P', 00H, 'S', 00H, '.', 00H, 'h', 00H, 'l'
	DB	00H, 's', 00H, 'l', 00H, 00H, 00H
$SG189902 DB	'ParticlePS', 00H
	ORG $+1
$SG189894 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'P', 00H, 'S', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'P', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, '"', 00H, 'p'
	DB	00H, 's', 00H, '_', 00H, '5', 00H, '_', 00H, '0', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG189895 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189904 DB	'cs_5_0', 00H
	ORG $+1
$SG189907 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, '.', 00H
	DB	'.', 00H, 00H, 00H
	ORG $+2
$SG189899 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'P', 00H
	DB	'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'S', 00H, 'h', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H, 'p', 00H, 'B', 00H
	DB	'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e'
	DB	00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'p', 00H
	DB	'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '('
	DB	00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H
	DB	'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&'
	DB	00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'P', 00H, 'S'
	DB	00H, ')', 00H, 00H, 00H
$SG189900 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189905 DB	'cs_4_0', 00H
	ORG $+1
$SG189908 DB	'IntegrateCS', 00H
$SG189909 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG189914 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'I', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H, 'S'
	DB	00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG189915 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189923 DB	'IntegrateCS', 00H
$SG189920 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'I', 00H
	DB	'n', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189921 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189924 DB	'DensityCS_Simple', 00H
	ORG $+3
$SG189925 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG189930 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'D', 00H, 'e', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, 'C', 00H, 'S', 00H
	DB	'_', 00H, 'S', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e'
	DB	00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H
	DB	'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H
	DB	'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N'
	DB	00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E'
	DB	00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189931 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG188910 DB	'D', 00H, 'E', 00H, 'B', 00H, 'U', 00H, 'G', 00H, 00H, 00H
$SG188911 DB	'O', 00H, 'u', 00H, 'r', 00H, ' ', 00H, 'F', 00H, 'i', 00H
	DB	'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 00H, 00H
	ORG $+2
$SG188912 DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '1', 00H, 00H
	DB	00H
	ORG $+2
$SG189936 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'D', 00H
	DB	'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, '_'
	DB	00H, 'S', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG189937 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189939 DB	'DensityCS_Simple', 00H
	ORG $+3
$SG189940 DB	'ForceCS_Simple', 00H
	ORG $+1
$SG189941 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG188920 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, 00H, 00H
$SG189956 DB	'DensityCS_Shared', 00H
	ORG $+3
$SG189946 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'F', 00H, 'o', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 'C', 00H, 'S', 00H, '_', 00H, 'S', 00H
	DB	'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3'
	DB	00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H
	DB	'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S'
	DB	00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG189947 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189955 DB	'ForceCS_Simple', 00H
	ORG $+1
$SG189971 DB	'DensityCS_Shared', 00H
	ORG $+3
$SG189952 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'S', 00H
	DB	')', 00H, 00H, 00H
$SG189953 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189957 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG189962 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'D', 00H, 'e', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, 'C', 00H, 'S', 00H
	DB	'_', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd'
	DB	00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H
	DB	'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H
	DB	'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N'
	DB	00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E'
	DB	00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189963 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189968 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'D', 00H
	DB	'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, '_'
	DB	00H, 'S', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H
	DB	'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG189969 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189972 DB	'ForceCS_Shared', 00H
	ORG $+1
$SG189973 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG189987 DB	'ForceCS_Shared', 00H
	ORG $+1
_XM_PI	DD	040490fdbr			; 3.14159
$SG189978 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'F', 00H, 'o', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 'C', 00H, 'S', 00H, '_', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3'
	DB	00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H
	DB	'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S'
	DB	00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG189979 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189988 DB	'DensityCS_Grid', 00H
	ORG $+1
_XM_2PI	DD	040c90fdbr			; 6.28319
$SG189984 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'S', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, 'C', 00H, 'S', 00H
	DB	')', 00H, 00H, 00H
$SG189985 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189989 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG189994 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'D', 00H, 'e', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, 'C', 00H, 'S', 00H
	DB	'_', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3'
	DB	00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H
	DB	'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S'
	DB	00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG189995 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190003 DB	'DensityCS_Grid', 00H
	ORG $+1
_XM_1DIVPI DD	03ea2f983r			; 0.31831
$SG190000 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'D', 00H
	DB	'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, '_'
	DB	00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H, 'C', 00H, 'S', 00H
	DB	')', 00H, 00H, 00H
$SG190001 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190004 DB	'ForceCS_Grid', 00H
	ORG $+3
_XM_1DIV2PI DD	03e22f983r			; 0.159155
$SG190005 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
_XM_PIDIV2 DD	03fc90fdbr			; 1.5708
_XM_PIDIV4 DD	03f490fdbr			; 0.785398
$SG190020 DB	'BuildGridCS', 00H
$SG190010 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'F', 00H, 'o', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 'C', 00H, 'S', 00H, '_', 00H, 'G', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C'
	DB	00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C'
	DB	00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E'
	DB	00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H
	DB	'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' '
	DB	00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H
	DB	'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190011 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190016 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'G', 00H, 'r'
	DB	00H, 'i', 00H, 'd', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG190017 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190019 DB	'ForceCS_Grid', 00H
	ORG $+3
$SG190021 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
_g_fInitialParticleSpacing DD 03b9374bcr	; 0.0045
$SG190026 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'B', 00H, 'u', 00H, 'i'
	DB	00H, 'l', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H
	DB	'C', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H, 'S'
	DB	00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG190027 DB	'FluidCS11.cpp', 00H
	ORG $+2
_g_fSmoothlen DD 03c449ba6r			; 0.012
_g_fPressureStiffness DD 045800000r		; 4096
_g_fParticleMass DD 03951b717r			; 0.0002
_g_fViscosity DD 040833333r			; 4.1
_g_fMaxAllowableTimeStep DD 03d4ccccdr		; 0.05
$SG190032 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'B', 00H
	DB	'u', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190033 DB	'FluidCS11.cpp', 00H
	ORG $+2
_g_fParticleRenderSize DD 03ba42aedr		; 0.00501
$SG190035 DB	'BuildGridCS', 00H
$SG190036 DB	'ClearGridIndicesCS', 00H
	ORG $+1
$SG190037 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190042 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'C', 00H, 'l', 00H, 'e'
	DB	00H, 'a', 00H, 'r', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H
	DB	'I', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's'
	DB	00H, 'C', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H
	DB	'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't'
	DB	00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H
	DB	'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T'
	DB	00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H
	DB	'0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l'
	DB	00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
	ORG $+2
_g_fMapHeight DD 03f99999ar			; 1.2
$SG190043 DB	'FluidCS11.cpp', 00H
	ORG $+2
_g_fWallStiffness DD 048927c00r			; 300000
$SG190051 DB	'ClearGridIndicesCS', 00H
	ORG $+1
$SG190048 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'C', 00H
	DB	'l', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'G', 00H, 'r', 00H, 'i'
	DB	00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG190049 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190052 DB	'BuildGridIndicesCS', 00H
	ORG $+1
$SG190053 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190067 DB	'BuildGridIndicesCS', 00H
	ORG $+1
$SG190058 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'B', 00H, 'u', 00H, 'i'
	DB	00H, 'l', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H
	DB	'I', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's'
	DB	00H, 'C', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H
	DB	'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't'
	DB	00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H
	DB	'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T'
	DB	00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H
	DB	'0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l'
	DB	00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190059 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190084 DB	'BitonicSort', 00H
$SG190064 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'B', 00H
	DB	'u', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'i'
	DB	00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG190065 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190068 DB	'RearrangeParticlesCS', 00H
	ORG $+3
$SG190069 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190074 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'R', 00H, 'e', 00H, 'a'
	DB	00H, 'r', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, 'C', 00H, 'S', 00H, '"', 00H, ',', 00H
	DB	' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g'
	DB	00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H
	DB	'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L'
	DB	00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I'
	DB	00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H
	DB	',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p'
	DB	00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190075 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190080 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'R', 00H
	DB	'e', 00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g'
	DB	00H, 'e', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, 'C', 00H, 'S', 00H, ')'
	DB	00H, 00H, 00H
$SG190081 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190083 DB	'RearrangeParticlesCS', 00H
	ORG $+3
$SG190085 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'e', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'S', 00H, 'o', 00H, 'r', 00H, 't', 00H, '1', 00H, '1', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190090 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, 'e', 00H, 'S', 00H, 'h', 00H, 'a', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's', 00H
	DB	'l', 00H, '"', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l'
	DB	00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'o', 00H, 'n', 00H, 'i'
	DB	00H, 'c', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r'
	DB	00H, 'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H
	DB	'B', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R'
	DB	00H, 'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H
	DB	'S', 00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&'
	DB	00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H
	DB	00H, 00H
$SG190091 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190096 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S', 00H
	DB	'o', 00H, 'r', 00H, 't', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'o'
	DB	00H, 'n', 00H, 'i', 00H, 'c', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190097 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190099 DB	'BitonicSort', 00H
$SG190100 DB	'MatrixTranspose', 00H
$SG190101 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'e', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'S', 00H, 'o', 00H, 'r', 00H, 't', 00H, '1', 00H, '1', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190115 DB	'MatrixTranspose', 00H
$SG190131 DB	'ProcessCS', 00H
	ORG $+2
$SG190106 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, 'e', 00H, 'S', 00H, 'h', 00H, 'a', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's', 00H
	DB	'l', 00H, '"', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l'
	DB	00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x'
	DB	00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C'
	DB	00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C'
	DB	00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E'
	DB	00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H
	DB	'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' '
	DB	00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H
	DB	'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG190107 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190112 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S', 00H
	DB	'o', 00H, 'r', 00H, 't', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG190113 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190116 DB	'Process', 00H
$SG190117 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190122 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, '"', 00H, ',', 00H
	DB	' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g'
	DB	00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H
	DB	'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L'
	DB	00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I'
	DB	00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H
	DB	',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p'
	DB	00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG190123 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189132 DB	'FPS : ', 00H
	ORG $+1
$SG189179 DB	' Stats : ', 00H
	ORG $+2
$SG190128 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'P', 00H
	DB	'r', 00H, 'o', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, 'C'
	DB	00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190129 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190136 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 'i', 00H, 'm', 00H, 'u', 00H, 'l', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 's', 00H, '(', 00H, 'p', 00H, 'd'
	DB	00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, ')', 00H, 00H, 00H
$SG190137 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190148 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n'
	DB	00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, '<', 00H, ' ', 00H, 'C', 00H, 'B', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'u', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't'
	DB	00H, 'a', 00H, 'n', 00H, 't', 00H, 's', 00H, ' ', 00H, '>', 00H
	DB	'(', 00H, 'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ',', 00H, ' ', 00H
	DB	'&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'c', 00H, 'b', 00H, 'S'
	DB	00H, 'i', 00H, 'm', 00H, 'u', 00H, 'l', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'n', 00H, 't', 00H, 's', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG190149 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189236 DB	' FrameStats : ', 00H
	ORG $+5
$SG190160 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n'
	DB	00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, '<', 00H, ' ', 00H, 'C', 00H, 'B', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 't', 00H, 's'
	DB	00H, ' ', 00H, '>', 00H, '(', 00H, 'p', 00H, 'd', 00H, '3', 00H
	DB	'd', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'c', 00H, 'b', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	'a', 00H, 'n', 00H, 't', 00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190161 DB	'FluidCS11.cpp', 00H
	ORG $+6
$SG190172 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n'
	DB	00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, '<', 00H, ' ', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, 'C', 00H, 'B', 00H, ' ', 00H, '>', 00H, '(', 00H, 'p', 00H
	DB	'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i'
	DB	00H, 'c', 00H, 'e', 00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H
	DB	'_', 00H, 'p', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'C'
	DB	00H, 'B', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190173 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191427 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191428 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191433 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191434 DB	'FluidCS11.cpp', 00H
	ORG $+6
$SG191439 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191440 DB	'FluidCS11.cpp', 00H
	ORG $+6
$SG191454 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191455 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191460 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191461 DB	'FluidCS11.cpp', 00H
	ORG $+6
$SG191466 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191467 DB	'FluidCS11.cpp', 00H
	ORG $+6
$SG191481 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191482 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191487 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-007
	DD	030800000r			; 9.31323e-010
CONST	ENDS
;	COMDAT ?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f139394r ; 0.576471 ; DirectX::Colors::MediumPurple
	DD	03ee0e0e2r			; 0.439216
	DD	03f5bdbddr			; 0.858824
	DD	03f800000r			; 1
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	_wWinMain@16
PUBLIC	_hypot
PUBLIC	_fabsf
PUBLIC	_sqrtf
PUBLIC	?pow@@YAMMH@Z					; pow
PUBLIC	??$_Pow_int@M@@YAMMH@Z				; _Pow_int<float>
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	_wmemcpy
PUBLIC	_wmemmove
PUBLIC	?length@?$char_traits@_W@std@@SAIPB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?eq@?$char_traits@_W@std@@SA_NAB_W0@Z		; std::char_traits<wchar_t>::eq
PUBLIC	?to_char_type@?$char_traits@_W@std@@SA_WABG@Z	; std::char_traits<wchar_t>::to_char_type
PUBLIC	?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z	; std::char_traits<wchar_t>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z	; std::char_traits<wchar_t>::eq_int_type
PUBLIC	?not_eof@?$char_traits@_W@std@@SAGABG@Z		; std::char_traits<wchar_t>::not_eof
PUBLIC	?eof@?$char_traits@_W@std@@SAGXZ		; std::char_traits<wchar_t>::eof
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Ignore@std@@QAE@XZ				; std::_Ignore::_Ignore
PUBLIC	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ	; DirectX::XMVECTORF32::operator __m128
PUBLIC	??BXMVECTORF32@DirectX@@QBEPBMXZ		; DirectX::XMVECTORF32::operator float const *
PUBLIC	??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ	; DirectX::XMVECTORI32::operator __m128
PUBLIC	??0XMMATRIX@DirectX@@QAE@XZ			; DirectX::XMMATRIX::XMMATRIX
PUBLIC	??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z		; DirectX::XMMATRIX::operator*
PUBLIC	??0XMFLOAT2@DirectX@@QAE@XZ			; DirectX::XMFLOAT2::XMFLOAT2
PUBLIC	??0XMFLOAT2@DirectX@@QAE@MM@Z			; DirectX::XMFLOAT2::XMFLOAT2
PUBLIC	??0XMFLOAT2A@DirectX@@QAE@XZ			; DirectX::XMFLOAT2A::XMFLOAT2A
PUBLIC	??0XMFLOAT2A@DirectX@@QAE@MM@Z			; DirectX::XMFLOAT2A::XMFLOAT2A
PUBLIC	??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z		; DirectX::XMFLOAT2A::operator=
PUBLIC	??0XMFLOAT3@DirectX@@QAE@XZ			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??0XMFLOAT3@DirectX@@QAE@MMM@Z			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??0XMFLOAT3A@DirectX@@QAE@XZ			; DirectX::XMFLOAT3A::XMFLOAT3A
PUBLIC	??0XMFLOAT3A@DirectX@@QAE@MMM@Z			; DirectX::XMFLOAT3A::XMFLOAT3A
PUBLIC	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z		; DirectX::XMFLOAT3A::operator=
PUBLIC	??0XMFLOAT4@DirectX@@QAE@XZ			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	??0XMFLOAT4@DirectX@@QAE@MMMM@Z			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	??0XMFLOAT4A@DirectX@@QAE@XZ			; DirectX::XMFLOAT4A::XMFLOAT4A
PUBLIC	??0XMFLOAT4X4@DirectX@@QAE@XZ			; DirectX::XMFLOAT4X4::XMFLOAT4X4
PUBLIC	?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
PUBLIC	?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ; DirectX::XMStoreFloat4x4
PUBLIC	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z	; DirectX::XMVectorSet
PUBLIC	?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ; DirectX::XMMatrixMultiply
PUBLIC	?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ; DirectX::XMMatrixTranspose
PUBLIC	?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ; DirectX::XMMatrixTranslation
PUBLIC	?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ; DirectX::XMMatrixOrthographicLH
PUBLIC	?XMScalarNearEqual@DirectX@@YA_NMMM@Z		; DirectX::XMScalarNearEqual
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
PUBLIC	?WaitDialogProc@@YGHPAUHWND__@@IIJ@Z		; WaitDialogProc
PUBLIC	?WaitThread@@YGIPAX@Z				; WaitThread
PUBLIC	??0CWaitDlg@@QAE@XZ				; CWaitDlg::CWaitDlg
PUBLIC	??1CWaitDlg@@QAE@XZ				; CWaitDlg::~CWaitDlg
PUBLIC	?IsRunning@CWaitDlg@@QBE_NXZ			; CWaitDlg::IsRunning
PUBLIC	?UpdateProgressBar@CWaitDlg@@QAEXXZ		; CWaitDlg::UpdateProgressBar
PUBLIC	?GetDialogControls@CWaitDlg@@QAE_NXZ		; CWaitDlg::GetDialogControls
PUBLIC	?ShowDialog@CWaitDlg@@QAE_NPA_W@Z		; CWaitDlg::ShowDialog
PUBLIC	?DestroyDialog@CWaitDlg@@QAEXXZ			; CWaitDlg::DestroyDialog
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
PUBLIC	??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z ; std::_DebugHeapDelete<std::_Facet_base>
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z		; std::_Debug_pointer<wchar_t>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	??0?$allocator@UParticle@@@std@@QAE@XZ		; std::allocator<Particle>::allocator<Particle>
PUBLIC	?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z ; std::allocator<Particle>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Particle> >::_Wrap_alloc<std::allocator<Particle> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z ; std::_Wrap_alloc<std::allocator<Particle> >::deallocate
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Particle> >::_Vector_val<std::_Simple_types<Particle> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Particle> >::~_Vector_val<std::_Simple_types<Particle> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::~_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal
PUBLIC	??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::vector<Particle,std::allocator<Particle> >::vector<Particle,std::allocator<Particle> >
PUBLIC	??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::vector<Particle,std::allocator<Particle> >::~vector<Particle,std::allocator<Particle> >
PUBLIC	?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z ; std::vector<Particle,std::allocator<Particle> >::_Destroy
PUBLIC	?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ ; std::vector<Particle,std::allocator<Particle> >::_Tidy
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$addressof@_W@std@@YAPA_WAA_W@Z		; std::addressof<wchar_t>
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Allocate@_W@std@@YAPA_WIPA_W@Z		; std::_Allocate<wchar_t>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z		; std::forward<wchar_t * &>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z ; std::_Ptr_cat<Particle,Particle>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z ; std::_Wrap_alloc<std::allocator<Particle> >::destroy<Particle>
PUBLIC	??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z ; std::allocator_traits<std::allocator<Particle> >::destroy<Particle>
PUBLIC	??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z ; std::allocator<Particle>::destroy<Particle>
PUBLIC	??0CBRenderConstants@@QAE@XZ			; CBRenderConstants::CBRenderConstants
PUBLIC	?ModifyDeviceSettings@@YG_NPAUDXUTDeviceSettings@@PAX@Z ; ModifyDeviceSettings
PUBLIC	?MsgProc@@YGJPAUHWND__@@IIJPA_NPAX@Z		; MsgProc
PUBLIC	?IsD3D11DeviceAcceptable@@YG_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z ; IsD3D11DeviceAcceptable
PUBLIC	?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z ; OnD3D11CreateDevice
PUBLIC	?OnD3D11ResizedSwapChain@@YGJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z ; OnD3D11ResizedSwapChain
PUBLIC	?OnD3D11ReleasingSwapChain@@YGXPAX@Z		; OnD3D11ReleasingSwapChain
PUBLIC	?OnD3D11DestroyDevice@@YGXPAX@Z			; OnD3D11DestroyDevice
PUBLIC	?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z ; OnD3D11FrameRender
PUBLIC	?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z ; CreateSimulationBuffers
PUBLIC	?InitApp@@YAXXZ					; InitApp
PUBLIC	?RenderText@@YAXXZ				; RenderText
PUBLIC	?LoadTexture@@YAXXZ				; LoadTexture
PUBLIC	?SWindowProc@@YGJPAUHWND__@@IIJ@Z		; SWindowProc
PUBLIC	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
PUBLIC	??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
PUBLIC	?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
PUBLIC	?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
PUBLIC	?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z ; CreateStructuredBuffer<Particle>
PUBLIC	??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z ; CreateStructuredBuffer<ParticleForces>
PUBLIC	??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z ; CreateStructuredBuffer<ParticleDensity>
PUBLIC	??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z ; CreateStructuredBuffer<unsigned int>
PUBLIC	??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z ; CreateStructuredBuffer<u322>
PUBLIC	?UpdateColor@@YAXXZ				; UpdateColor
PUBLIC	??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z ; CreateStructuredBuffer<FOO>
PUBLIC	??$CreateConstantBuffer@UFOO@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<FOO>
PUBLIC	??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<CBSimulationConstants>
PUBLIC	??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<CBRenderConstants>
PUBLIC	??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<SortCB>
PUBLIC	?GPUSort@@YAXPAUID3D11DeviceContext@@PAUID3D11UnorderedAccessView@@PAUID3D11ShaderResourceView@@12@Z ; GPUSort
PUBLIC	?SimulateFluid_Simple@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Simple
PUBLIC	?SimulateFluid_Shared@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Shared
PUBLIC	?SimulateFluid_Grid@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Grid
PUBLIC	?SimulateFluid@@YAXPAUID3D11DeviceContext@@M@Z	; SimulateFluid
PUBLIC	?RenderFluid@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@M@Z ; RenderFluid
PUBLIC	?OnUpdate@@YAXXZ				; OnUpdate
PUBLIC	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?0?$AA?5?$AA0?$AA?4@ ; `string'
PUBLIC	??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?0?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAF?$AAa?$AAr?$AAZ?$AA?0?$AA?5?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?0?$AA?5@ ; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?g_vGravity@@3UXMFLOAT2A@DirectX@@A		; g_vGravity
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	?mousePosition@@3UXMFLOAT2A@DirectX@@A		; mousePosition
PUBLIC	??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	__TI1D
PUBLIC	__CTA1D
PUBLIC	??_R0D@8					; char `RTTI Type Descriptor'
PUBLIC	__CT??_R0D@81
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3727c5ac
PUBLIC	__real@3f800000
PUBLIC	__real@3faaaaab
PUBLIC	__real@40000000
PUBLIC	__real@42340000
PUBLIC	__real@42800000
PUBLIC	__real@439d8000
PUBLIC	__real@45800000
PUBLIC	__real@bf800000
PUBLIC	__real@c2340000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__CreateDialogParamW@20:PROC
EXTRN	__imp__GetDlgItem@8:PROC
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__SetWindowTextW@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__GetCursorPos@4:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__calloc:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp___hypot:PROC
EXTRN	__imp___CrtSetDbgFlag:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp_??0bad_cast@std@@QAE@PBD@Z:PROC
EXTRN	??0CommonStates@DirectX@@QAE@PAUID3D11Device@@@Z:PROC ; DirectX::CommonStates::CommonStates
EXTRN	??1CommonStates@DirectX@@UAE@XZ:PROC		; DirectX::CommonStates::~CommonStates
EXTRN	?NonPremultiplied@CommonStates@DirectX@@QBAPAUID3D11BlendState@@XZ:PROC ; DirectX::CommonStates::NonPremultiplied
EXTRN	__imp___wassert:PROC
EXTRN	?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z:PROC ; DXUTSetCallbackMsgProc
EXTRN	?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z:PROC ; DXUTSetCallbackDeviceChanging
EXTRN	?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z:PROC ; DXUTSetCallbackD3D11DeviceAcceptable
EXTRN	?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z:PROC ; DXUTSetCallbackD3D11DeviceCreated
EXTRN	?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z:PROC ; DXUTSetCallbackD3D11SwapChainResized
EXTRN	?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z:PROC ; DXUTSetCallbackD3D11FrameRender
EXTRN	?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z:PROC ; DXUTSetCallbackD3D11SwapChainReleasing
EXTRN	?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z:PROC ; DXUTSetCallbackD3D11DeviceDestroyed
EXTRN	?DXUTInit@@YGJ_N0PA_W0@Z:PROC			; DXUTInit
EXTRN	?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z:PROC ; DXUTCreateWindow
EXTRN	?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z:PROC ; DXUTCreateDevice
EXTRN	?DXUTMainLoop@@YGJPAUHACCEL__@@@Z:PROC		; DXUTMainLoop
EXTRN	?DXUTSetCursorSettings@@YGX_N0@Z:PROC		; DXUTSetCursorSettings
EXTRN	?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ:PROC ; DXUTGetD3D11RenderTargetView
EXTRN	?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ:PROC ; DXUTGetD3D11DepthStencilView
EXTRN	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ:PROC	; DXUTGetD3D11Device
EXTRN	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ:PROC ; DXUTGetD3D11DeviceContext
EXTRN	?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ:PROC	; DXUTGetHINSTANCE
EXTRN	?DXUTGetHWND@@YGPAUHWND__@@XZ:PROC		; DXUTGetHWND
EXTRN	?DXUTIsWindowed@@YG_NXZ:PROC			; DXUTIsWindowed
EXTRN	?DXUTGetFPS@@YGMXZ:PROC				; DXUTGetFPS
EXTRN	?DXUTGetFrameStats@@YGPB_W_N@Z:PROC		; DXUTGetFrameStats
EXTRN	?DXUTGetDeviceStats@@YGPB_WXZ:PROC		; DXUTGetDeviceStats
EXTRN	?DXUTGetExitCode@@YGHXZ:PROC			; DXUTGetExitCode
EXTRN	?DXUTTrace@@YGJPBDKJPB_W_N@Z:PROC		; DXUTTrace
EXTRN	?OnDestroyDevice@CDXUTResourceCache@@QAEJXZ:PROC ; CDXUTResourceCache::OnDestroyDevice
EXTRN	?DXUTGetGlobalResourceCache@@YGAAVCDXUTResourceCache@@XZ:PROC ; DXUTGetGlobalResourceCache
EXTRN	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z:PROC ; DXUTCompileFromFile
EXTRN	__imp___beginthreadex:PROC
EXTRN	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__imp_??0id@locale@std@@QAE@I@Z:PROC
EXTRN	__imp_??Bid@locale@std@@QAEIXZ:PROC
EXTRN	__imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC
EXTRN	__imp_?widen@?$ctype@_W@std@@QBE_WD@Z:PROC
EXTRN	__imp_?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	__imp_?_Syserror_map@std@@YAPBDH@Z:PROC
EXTRN	__imp_?_Winerror_map@std@@YAPBDH@Z:PROC
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ:PROC
EXTRN	__imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@M@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z:PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??0bad_cast@std@@QAE@ABV01@@Z:PROC		; std::bad_cast::bad_cast
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1bad_cast@std@@UAE@XZ:PROC			; std::bad_cast::~bad_cast
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEPAV12@PA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsputn
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	_WKPDID_D3DDebugObjectName:BYTE
EXTRN	__imp_?id@?$ctype@_W@std@@2V0locale@2@A:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

_GRAVITY_DOWN DB 010H DUP (?)
?g_vGravity@@3UXMFLOAT2A@DirectX@@A DB 010H DUP (?)	; g_vGravity
_g_fMapWidth DD	01H DUP (?)
_g_vPlanes DB	040H DUP (?)
_ParticlesRW DB	010H DUP (?)
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
_BSS	ENDS
_BSS	SEGMENT
?mousePosition@@3UXMFLOAT2A@DirectX@@A DB 010H DUP (?)	; mousePosition
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c2340000
CONST	SEGMENT
__real@c2340000 DD 0c2340000r			; -45
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@45800000
CONST	SEGMENT
__real@45800000 DD 045800000r			; 4096
CONST	ENDS
;	COMDAT __real@439d8000
CONST	SEGMENT
__real@439d8000 DD 0439d8000r			; 315
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3faaaaab
CONST	SEGMENT
__real@3faaaaab DD 03faaaaabr			; 1.33333
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-005
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$al'
	DB	'locator@_W@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 00H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	050H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	FLAT:??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$alloca'
	DB	'tor@_W@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 00H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0D@81
xdata$x	SEGMENT
__CT??_R0D@81 DD 01H
	DD	FLAT:??_R0D@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0D@8
data$r	SEGMENT
??_R0D@8 DD	FLAT:??_7type_info@@6B@			; char `RTTI Type Descriptor'
	DD	00H
	DB	'.D', 00H
data$r	ENDS
;	COMDAT __CTA1D
xdata$x	SEGMENT
__CTA1D	DD	01H
	DD	FLAT:__CT??_R0D@81
xdata$x	ENDS
;	COMDAT __TI1D
xdata$x	SEGMENT
__TI1D	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1D
xdata$x	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	058H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@ DD 00H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
	DD	050H
CONST	ENDS
;	COMDAT ??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD FLAT:??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DD	FLAT:??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ
	DD	FLAT:?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEPAV12@PA_W_J@Z
	DD	FLAT:?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAF?$AAa?$AAr?$AAZ?$AA?0?$AA?5?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?0?$AA?5@
CONST	SEGMENT
??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAF?$AAa?$AAr?$AAZ?$AA?0?$AA?5?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?0?$AA?5@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'F', 00H
	DB	'a', 00H, 'r', 00H, 'Z', 00H, ',', 00H, ' ', 00H, 'N', 00H, 'e'
	DB	00H, 'a', 00H, 'r', 00H, 'Z', 00H, ',', 00H, ' ', 00H, '0', 00H
	DB	'.', 00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '1', 00H, 'f'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?0?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?0?$AA?5?$AA0@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'V', 00H
	DB	'i', 00H, 'e', 00H, 'w', 00H, 'H', 00H, 'e', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, '1', 00H, 'f', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?0?$AA?5?$AA0?$AA?4@
CONST	SEGMENT
??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?0?$AA?5?$AA0?$AA?4@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'V', 00H
	DB	'i', 00H, 'e', 00H, 'w', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't'
	DB	00H, 'h', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H
	DB	'f', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '1', 00H, 'f', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'k', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '8', 00H, '.', 00H, '1', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'x', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'p'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ DB 'p', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'k', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '8', 00H, '.', 00H, '1', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, '.', 00H, 'i', 00H, 'n', 00H
	DB	'l', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16 ; DirectX::g_XMReciprocalTwoPi
_DATA	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMTwoPi
_DATA	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMReciprocalPi
_DATA	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMPi
_DATA	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMHalfPi
_DATA	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMNegativePi
_DATA	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMNegativeTwoPi
_DATA	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMPiConstants0
_DATA	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	ORG $+4
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$0
__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$3
__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 01H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$4
__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$3
	DD	00H
	DD	00H
__ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?RenderText@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RenderText@@YAXXZ$0
__unwindtable$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z$0
__unwindtable$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z$0
__unwindtable$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z$0
__ehfuncinfo$?RenderText@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RenderText@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0
__ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMTanEstCoefficients$initializer$ DD FLAT:??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMPiConstants0$initializer$ DD FLAT:??__Eg_XMPiConstants0@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMNegativeTwoPi$initializer$ DD FLAT:??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMNegativePi$initializer$ DD FLAT:??__Eg_XMNegativePi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMHalfPi$initializer$ DD FLAT:??__Eg_XMHalfPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMPi$initializer$ DD FLAT:??__Eg_XMPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMReciprocalPi$initializer$ DD FLAT:??__Eg_XMReciprocalPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMTwoPi$initializer$ DD FLAT:??__Eg_XMTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMReciprocalTwoPi$initializer$ DD FLAT:??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
	ORG $-16
_GRAVITY_DOWN$initializer$ DD FLAT:??__EGRAVITY_DOWN@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_g_vGravity$initializer$ DD FLAT:??__Eg_vGravity@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_g_fMapWidth$initializer$ DD FLAT:??__Eg_fMapWidth@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_g_vPlanes$initializer$ DD FLAT:??__Eg_vPlanes@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_ParticlesRW$initializer$ DD FLAT:??__EParticlesRW@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
	ORG $-20
_mousePosition$initializer$ DD FLAT:??__EmousePosition@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv298 = -228						; size = 4
tv387 = -224						; size = 4
tv290 = -220						; size = 4
tv385 = -216						; size = 4
tv251 = -212						; size = 4
tv351 = -208						; size = 4
tv349 = -204						; size = 4
$T1 = -197						; size = 1
_pData$ = -192						; size = 160
_UAVInitialCounts$ = -16				; size = 4
_deviceContext$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?OnUpdate@@YAXXZ PROC					; OnUpdate
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 1025
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1026
	call	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
	mov	DWORD PTR _deviceContext$[ebp], eax
; Line 1027
	cmp	DWORD PTR _deviceContext$[ebp], 0
	jne	SHORT $LN1@OnUpdate
; Line 1028
	mov	BYTE PTR $T1[ebp], 49			; 00000031H
	push	OFFSET __TI1D
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN1@OnUpdate:
; Line 1030
	mov	DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 1031
	push	48					; 00000030H
	push	0
	lea	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR _pData$[ebp+48]
	call	??0XMFLOAT2A@DirectX@@QAE@XZ		; DirectX::XMFLOAT2A::XMFLOAT2A
	lea	ecx, DWORD PTR _pData$[ebp+64]
	call	??0XMFLOAT4A@DirectX@@QAE@XZ		; DirectX::XMFLOAT4A::XMFLOAT4A
	push	OFFSET ??0XMFLOAT3A@DirectX@@QAE@XZ	; DirectX::XMFLOAT3A::XMFLOAT3A
	push	4
	push	16					; 00000010H
	lea	edx, DWORD PTR _pData$[ebp+80]
	push	edx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	lea	ecx, DWORD PTR _pData$[ebp+144]
	call	??0XMFLOAT2A@DirectX@@QAE@XZ		; DirectX::XMFLOAT2A::XMFLOAT2A
; Line 1034
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	mov	DWORD PTR _pData$[ebp], eax
; Line 1037
	movss	xmm0, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR _pData$[ebp+8], xmm0
; Line 1038
	movss	xmm0, DWORD PTR _g_fPressureStiffness
	movss	DWORD PTR _pData$[ebp+12], xmm0
; Line 1039
	movss	xmm0, DWORD PTR __real@45800000
	movss	DWORD PTR _pData$[ebp+16], xmm0
; Line 1040
	movss	xmm0, DWORD PTR _g_fParticleMass
	mulss	xmm0, DWORD PTR __real@439d8000
	movss	xmm1, DWORD PTR __real@42800000
	mulss	xmm1, DWORD PTR _XM_PI
	push	9
	push	ecx
	movss	xmm2, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR [esp], xmm2
	movss	DWORD PTR tv349[ebp], xmm0
	movss	DWORD PTR tv351[ebp], xmm1
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fstp	DWORD PTR tv251[ebp]
	movss	xmm0, DWORD PTR tv351[ebp]
	mulss	xmm0, DWORD PTR tv251[ebp]
	movss	xmm1, DWORD PTR tv349[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _pData$[ebp+20], xmm1
; Line 1041
	movss	xmm0, DWORD PTR _g_fParticleMass
	mulss	xmm0, DWORD PTR __real@c2340000
	push	6
	push	ecx
	movss	xmm1, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv385[ebp], xmm0
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fstp	DWORD PTR tv290[ebp]
	movss	xmm0, DWORD PTR tv290[ebp]
	mulss	xmm0, DWORD PTR _XM_PI
	movss	xmm1, DWORD PTR tv385[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _pData$[ebp+24], xmm1
; Line 1042
	movss	xmm0, DWORD PTR _g_fParticleMass
	mulss	xmm0, DWORD PTR _g_fViscosity
	mulss	xmm0, DWORD PTR __real@42340000
	push	6
	push	ecx
	movss	xmm1, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv387[ebp], xmm0
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fstp	DWORD PTR tv298[ebp]
	movss	xmm0, DWORD PTR tv298[ebp]
	mulss	xmm0, DWORD PTR _XM_PI
	movss	xmm1, DWORD PTR tv387[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _pData$[ebp+28], xmm1
; Line 1044
	push	OFFSET ?g_vGravity@@3UXMFLOAT2A@DirectX@@A ; g_vGravity
	lea	ecx, DWORD PTR _pData$[ebp+48]
	call	??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT2A::operator=
; Line 1048
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR _pData$[ebp+64], xmm0
; Line 1049
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR _pData$[ebp+68], xmm0
; Line 1050
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pData$[ebp+72], xmm0
; Line 1051
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pData$[ebp+76], xmm0
; Line 1054
	movss	xmm0, DWORD PTR _g_fWallStiffness
	movss	DWORD PTR _pData$[ebp+32], xmm0
; Line 1055
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	add	edx, OFFSET _g_vPlanes
	push	edx
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	lea	ecx, DWORD PTR _pData$[ebp+ecx+80]
	call	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT3A::operator=
; Line 1056
	mov	edx, 16					; 00000010H
	shl	edx, 0
	add	edx, OFFSET _g_vPlanes
	push	edx
	mov	eax, 16					; 00000010H
	shl	eax, 0
	lea	ecx, DWORD PTR _pData$[ebp+eax+80]
	call	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT3A::operator=
; Line 1057
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, OFFSET _g_vPlanes
	push	ecx
	mov	edx, 16					; 00000010H
	shl	edx, 1
	lea	ecx, DWORD PTR _pData$[ebp+edx+80]
	call	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT3A::operator=
; Line 1058
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, OFFSET _g_vPlanes
	push	ecx
	mov	edx, 16					; 00000010H
	imul	eax, edx, 3
	lea	ecx, DWORD PTR _pData$[ebp+eax+80]
	call	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT3A::operator=
; Line 1059
	push	OFFSET ?mousePosition@@3UXMFLOAT2A@DirectX@@A ; mousePosition
	lea	ecx, DWORD PTR _pData$[ebp+144]
	call	??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT2A::operator=
; Line 1060
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
	push	ecx
	mov	edx, DWORD PTR _deviceContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _deviceContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1061
	mov	esi, esp
	push	0
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	push	ecx
	mov	edx, DWORD PTR _deviceContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _deviceContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+192]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1062
	mov	esi, esp
	push	OFFSET ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	push	1
	push	0
	mov	eax, DWORD PTR _deviceContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _deviceContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+284]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1063
	mov	esi, esp
	lea	ecx, DWORD PTR _UAVInitialCounts$[ebp]
	push	ecx
	push	OFFSET ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
	push	1
	push	0
	mov	edx, DWORD PTR _deviceContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _deviceContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+272]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1064
	mov	esi, esp
	push	OFFSET ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	push	1
	push	0
	mov	eax, DWORD PTR _deviceContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _deviceContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1065
	mov	esi, esp
	push	1
	push	1
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _deviceContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _deviceContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+164]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@OnUpdate:
; Line 1066
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@OnUpdate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	3
$LN7@OnUpdate:
	DD	2
	DD	$LN6@OnUpdate
$LN6@OnUpdate:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN4@OnUpdate
	DD	-192					; ffffff40H
	DD	160					; 000000a0H
	DD	$LN5@OnUpdate
$LN5@OnUpdate:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN4@OnUpdate:
	DB	85					; 00000055H
	DB	65					; 00000041H
	DB	86					; 00000056H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?OnUpdate@@YAXXZ ENDP					; OnUpdate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -752						; size = 64
$T2 = -688						; size = 64
$T3 = -624						; size = 64
$T4 = -560						; size = 64
_pData$ = -488						; size = 80
_mViewProjection$ = -400				; size = 64
$T5 = -320						; size = 64
_mProjection$ = -240					; size = 64
$T6 = -160						; size = 64
_mView$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_pd3dImmediateContext$ = 12				; size = 4
_fElapsedTime$ = 16					; size = 4
?RenderFluid@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@M@Z PROC ; RenderFluid
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 983
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 760				; 000002f8H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-760]
	mov	ecx, 190				; 000000beH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 985
	movss	xmm1, DWORD PTR _g_fMapHeight
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm1, DWORD PTR __real@40000000
	movss	xmm0, DWORD PTR _g_fMapWidth
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	divss	xmm0, DWORD PTR __real@40000000
	movss	xmm2, DWORD PTR __real@00000000
	call	?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ; DirectX::XMMatrixTranslation
	movaps	XMMWORD PTR $T3[ebp+48], xmm3
	movaps	XMMWORD PTR $T3[ebp+32], xmm2
	movaps	XMMWORD PTR $T3[ebp+16], xmm1
	movaps	XMMWORD PTR $T3[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T3[ebp]
	lea	edi, DWORD PTR $T6[ebp]
	rep movsd
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T6[ebp]
	lea	edi, DWORD PTR _mView$[ebp]
	rep movsd
; Line 986
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@00000000
	movss	xmm1, DWORD PTR _g_fMapHeight
	movss	xmm0, DWORD PTR _g_fMapWidth
	call	?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ; DirectX::XMMatrixOrthographicLH
	movaps	XMMWORD PTR $T2[ebp+48], xmm3
	movaps	XMMWORD PTR $T2[ebp+32], xmm2
	movaps	XMMWORD PTR $T2[ebp+16], xmm1
	movaps	XMMWORD PTR $T2[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T2[ebp]
	lea	edi, DWORD PTR $T5[ebp]
	rep movsd
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T5[ebp]
	lea	edi, DWORD PTR _mProjection$[ebp]
	rep movsd
; Line 987
	lea	edx, DWORD PTR _mViewProjection$[ebp]
	lea	ecx, DWORD PTR _mView$[ebp]
	movaps	xmm0, XMMWORD PTR _mProjection$[ebp]
	movaps	xmm1, XMMWORD PTR _mProjection$[ebp+16]
	movaps	xmm2, XMMWORD PTR _mProjection$[ebp+32]
	movaps	xmm3, XMMWORD PTR _mProjection$[ebp+48]
	call	??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z	; DirectX::XMMATRIX::operator*
; Line 990
	lea	ecx, DWORD PTR _pData$[ebp]
	call	??0CBRenderConstants@@QAE@XZ
; Line 992
	movaps	xmm0, XMMWORD PTR _mViewProjection$[ebp]
	movaps	xmm1, XMMWORD PTR _mViewProjection$[ebp+16]
	movaps	xmm2, XMMWORD PTR _mViewProjection$[ebp+32]
	movaps	xmm3, XMMWORD PTR _mViewProjection$[ebp+48]
	call	?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ; DirectX::XMMatrixTranspose
	movaps	XMMWORD PTR $T1[ebp+48], xmm3
	movaps	XMMWORD PTR $T1[ebp+32], xmm2
	movaps	XMMWORD PTR $T1[ebp+16], xmm1
	movaps	XMMWORD PTR $T1[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T1[ebp]
	lea	edi, DWORD PTR $T4[ebp]
	rep movsd
	lea	ecx, DWORD PTR _pData$[ebp]
	movaps	xmm0, XMMWORD PTR $T4[ebp]
	movaps	xmm1, XMMWORD PTR $T4[ebp+16]
	movaps	xmm2, XMMWORD PTR $T4[ebp+32]
	movaps	xmm3, XMMWORD PTR $T4[ebp+48]
	call	?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ; DirectX::XMStoreFloat4x4
; Line 993
	movss	xmm0, DWORD PTR _g_fParticleRenderSize
	movss	DWORD PTR _pData$[ebp+64], xmm0
; Line 995
	mov	esi, esp
	push	0
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	mov	edx, DWORD PTR [eax+192]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 998
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	push	eax
	mov	ecx, DWORD PTR [edx+44]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 999
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	edx
	mov	eax, DWORD PTR [ecx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1000
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1003
	mov	esi, esp
	push	OFFSET ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	edx
	mov	eax, DWORD PTR [ecx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1004
	mov	esi, esp
	push	OFFSET ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1005
	mov	esi, esp
	push	OFFSET ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1008
	mov	esi, esp
	push	OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	edx
	mov	eax, DWORD PTR [ecx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1009
	mov	esi, esp
	push	OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	push	1
	push	1
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	push	eax
	mov	ecx, DWORD PTR [edx+100]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1010
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	mov	edx, DWORD PTR [eax+96]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1017
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	push	eax
	mov	ecx, DWORD PTR [edx+52]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1020
	mov	esi, esp
	push	OFFSET _g_pNullSRV
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1021
	mov	esi, esp
	push	OFFSET _g_pNullSRV
	push	1
	push	1
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	edx
	mov	eax, DWORD PTR [ecx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1022
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@RenderFlui
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
$LN8@RenderFlui:
	DD	4
	DD	$LN7@RenderFlui
$LN7@RenderFlui:
	DD	-80					; ffffffb0H
	DD	64					; 00000040H
	DD	$LN3@RenderFlui
	DD	-240					; ffffff10H
	DD	64					; 00000040H
	DD	$LN4@RenderFlui
	DD	-400					; fffffe70H
	DD	64					; 00000040H
	DD	$LN5@RenderFlui
	DD	-488					; fffffe18H
	DD	80					; 00000050H
	DD	$LN6@RenderFlui
$LN6@RenderFlui:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN5@RenderFlui:
	DB	109					; 0000006dH
	DB	86					; 00000056H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN4@RenderFlui:
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN3@RenderFlui:
	DB	109					; 0000006dH
	DB	86					; 00000056H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	0
?RenderFluid@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@M@Z ENDP ; RenderFluid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv206 = -232						; size = 4
tv324 = -228						; size = 4
tv397 = -224						; size = 4
tv284 = -220						; size = 4
tv395 = -216						; size = 4
tv277 = -212						; size = 4
tv393 = -208						; size = 4
tv391 = -204						; size = 4
tv75 = -200						; size = 4
_pData$ = -192						; size = 160
_UAVInitialCounts$ = -12				; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
_fElapsedTime$ = 12					; size = 4
?SimulateFluid@@YAXPAUID3D11DeviceContext@@M@Z PROC	; SimulateFluid
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 899
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 900
	mov	DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 903
	push	48					; 00000030H
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR _pData$[ebp+48]
	call	??0XMFLOAT2A@DirectX@@QAE@XZ		; DirectX::XMFLOAT2A::XMFLOAT2A
	lea	ecx, DWORD PTR _pData$[ebp+64]
	call	??0XMFLOAT4A@DirectX@@QAE@XZ		; DirectX::XMFLOAT4A::XMFLOAT4A
	push	OFFSET ??0XMFLOAT3A@DirectX@@QAE@XZ	; DirectX::XMFLOAT3A::XMFLOAT3A
	push	4
	push	16					; 00000010H
	lea	ecx, DWORD PTR _pData$[ebp+80]
	push	ecx
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	lea	ecx, DWORD PTR _pData$[ebp+144]
	call	??0XMFLOAT2A@DirectX@@QAE@XZ		; DirectX::XMFLOAT2A::XMFLOAT2A
; Line 906
	mov	edx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	mov	DWORD PTR _pData$[ebp], edx
; Line 908
	movss	xmm0, DWORD PTR _fElapsedTime$[ebx]
	comiss	xmm0, DWORD PTR _g_fMaxAllowableTimeStep
	jbe	SHORT $LN13@SimulateFl
	movss	xmm0, DWORD PTR _g_fMaxAllowableTimeStep
	movss	DWORD PTR tv75[ebp], xmm0
	jmp	SHORT $LN14@SimulateFl
$LN13@SimulateFl:
	movss	xmm0, DWORD PTR _fElapsedTime$[ebx]
	movss	DWORD PTR tv75[ebp], xmm0
$LN14@SimulateFl:
	movss	xmm0, DWORD PTR tv75[ebp]
	movss	DWORD PTR _pData$[ebp+4], xmm0
; Line 909
	movss	xmm0, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR _pData$[ebp+8], xmm0
; Line 910
	movss	xmm0, DWORD PTR _g_fPressureStiffness
	movss	DWORD PTR _pData$[ebp+12], xmm0
; Line 911
	movss	xmm0, DWORD PTR __real@45800000
	movss	DWORD PTR _pData$[ebp+16], xmm0
; Line 912
	movss	xmm0, DWORD PTR _g_fParticleMass
	mulss	xmm0, DWORD PTR __real@439d8000
	movss	xmm1, DWORD PTR __real@42800000
	mulss	xmm1, DWORD PTR _XM_PI
	push	9
	push	ecx
	movss	xmm2, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR [esp], xmm2
	movss	DWORD PTR tv391[ebp], xmm0
	movss	DWORD PTR tv393[ebp], xmm1
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fstp	DWORD PTR tv277[ebp]
	movss	xmm0, DWORD PTR tv393[ebp]
	mulss	xmm0, DWORD PTR tv277[ebp]
	movss	xmm1, DWORD PTR tv391[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _pData$[ebp+20], xmm1
; Line 913
	movss	xmm0, DWORD PTR _g_fParticleMass
	mulss	xmm0, DWORD PTR __real@c2340000
	push	6
	push	ecx
	movss	xmm1, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv395[ebp], xmm0
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fstp	DWORD PTR tv284[ebp]
	movss	xmm0, DWORD PTR tv284[ebp]
	mulss	xmm0, DWORD PTR _XM_PI
	movss	xmm1, DWORD PTR tv395[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _pData$[ebp+24], xmm1
; Line 914
	movss	xmm0, DWORD PTR _g_fParticleMass
	mulss	xmm0, DWORD PTR _g_fViscosity
	mulss	xmm0, DWORD PTR __real@42340000
	push	6
	push	ecx
	movss	xmm1, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR [esp], xmm1
	movss	DWORD PTR tv397[ebp], xmm0
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fstp	DWORD PTR tv324[ebp]
	movss	xmm0, DWORD PTR tv324[ebp]
	mulss	xmm0, DWORD PTR _XM_PI
	movss	xmm1, DWORD PTR tv397[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _pData$[ebp+28], xmm1
; Line 916
	push	OFFSET ?g_vGravity@@3UXMFLOAT2A@DirectX@@A ; g_vGravity
	lea	ecx, DWORD PTR _pData$[ebp+48]
	call	??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT2A::operator=
; Line 920
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR _pData$[ebp+64], xmm0
; Line 921
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _g_fSmoothlen
	movss	DWORD PTR _pData$[ebp+68], xmm0
; Line 922
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pData$[ebp+72], xmm0
; Line 923
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR _pData$[ebp+76], xmm0
; Line 926
	movss	xmm0, DWORD PTR _g_fWallStiffness
	movss	DWORD PTR _pData$[ebp+32], xmm0
; Line 927
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, OFFSET _g_vPlanes
	push	ecx
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	lea	ecx, DWORD PTR _pData$[ebp+eax+80]
	call	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT3A::operator=
; Line 928
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, OFFSET _g_vPlanes
	push	ecx
	mov	edx, 16					; 00000010H
	shl	edx, 0
	lea	ecx, DWORD PTR _pData$[ebp+edx+80]
	call	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT3A::operator=
; Line 929
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, OFFSET _g_vPlanes
	push	eax
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	lea	ecx, DWORD PTR _pData$[ebp+ecx+80]
	call	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT3A::operator=
; Line 930
	mov	edx, 16					; 00000010H
	imul	eax, edx, 3
	add	eax, OFFSET _g_vPlanes
	push	eax
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	lea	ecx, DWORD PTR _pData$[ebp+edx+80]
	call	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT3A::operator=
; Line 931
	push	OFFSET ?mousePosition@@3UXMFLOAT2A@DirectX@@A ; mousePosition
	lea	ecx, DWORD PTR _pData$[ebp+144]
	call	??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z	; DirectX::XMFLOAT2A::operator=
; Line 933
	mov	esi, esp
	push	0
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	mov	edx, DWORD PTR [eax+192]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 936
	mov	esi, esp
	push	49					; 00000031H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	test	eax, eax
	je	SHORT $LN10@SimulateFl
; Line 938
	mov	DWORD PTR ?g_eSimMode@@3W4eSimulationMode@@A, 0 ; g_eSimMode
; Line 940
	jmp	SHORT $LN6@SimulateFl
$LN10@SimulateFl:
; Line 941
	mov	esi, esp
	push	50					; 00000032H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, ax
	test	ecx, ecx
	je	SHORT $LN8@SimulateFl
; Line 943
	mov	DWORD PTR ?g_eSimMode@@3W4eSimulationMode@@A, 1 ; g_eSimMode
; Line 945
	jmp	SHORT $LN6@SimulateFl
$LN8@SimulateFl:
; Line 946
	mov	esi, esp
	push	51					; 00000033H
	call	DWORD PTR __imp__GetAsyncKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, ax
	test	edx, edx
	je	SHORT $LN6@SimulateFl
; Line 948
	mov	DWORD PTR ?g_eSimMode@@3W4eSimulationMode@@A, 0 ; g_eSimMode
$LN6@SimulateFl:
; Line 952
	mov	eax, DWORD PTR ?g_eSimMode@@3W4eSimulationMode@@A ; g_eSimMode
	mov	DWORD PTR tv206[ebp], eax
	cmp	DWORD PTR tv206[ebp], 0
	je	SHORT $LN3@SimulateFl
	cmp	DWORD PTR tv206[ebp], 1
	je	SHORT $LN2@SimulateFl
	cmp	DWORD PTR tv206[ebp], 2
	je	SHORT $LN1@SimulateFl
	jmp	SHORT $LN4@SimulateFl
$LN3@SimulateFl:
; Line 955
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	call	?SimulateFluid_Simple@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Simple
	add	esp, 4
; Line 956
	jmp	SHORT $LN4@SimulateFl
$LN2@SimulateFl:
; Line 960
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	edx
	call	?SimulateFluid_Shared@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Shared
	add	esp, 4
; Line 961
	jmp	SHORT $LN4@SimulateFl
$LN1@SimulateFl:
; Line 965
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	push	eax
	call	?SimulateFluid_Grid@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Grid
	add	esp, 4
$LN4@SimulateFl:
; Line 970
	mov	esi, esp
	lea	ecx, DWORD PTR _UAVInitialCounts$[ebp]
	push	ecx
	push	OFFSET _g_pNullUAV
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	mov	edx, DWORD PTR [eax+272]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 971
	mov	esi, esp
	push	OFFSET _g_pNullSRV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 972
	mov	esi, esp
	push	OFFSET _g_pNullSRV
	push	1
	push	1
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 973
	mov	esi, esp
	push	OFFSET _g_pNullSRV
	push	1
	push	2
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	ecx
	mov	edx, DWORD PTR [eax+268]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 974
	mov	esi, esp
	push	OFFSET _g_pNullSRV
	push	1
	push	3
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebx]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 975
	mov	esi, esp
	push	OFFSET _g_pNullSRV
	push	1
	push	4
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebx]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebx]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 976
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@SimulateFl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	1
$LN18@SimulateFl:
	DD	2
	DD	$LN17@SimulateFl
$LN17@SimulateFl:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN15@SimulateFl
	DD	-192					; ffffff40H
	DD	160					; 000000a0H
	DD	$LN16@SimulateFl
$LN16@SimulateFl:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN15@SimulateFl:
	DB	85					; 00000055H
	DB	65					; 00000041H
	DB	86					; 00000056H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SimulateFluid@@YAXPAUID3D11DeviceContext@@M@Z ENDP	; SimulateFluid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_UAVInitialCounts$ = -8					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?SimulateFluid_Grid@@YAXPAUID3D11DeviceContext@@@Z PROC	; SimulateFluid_Grid
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 835
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 836
	mov	DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 839
	mov	esi, esp
	push	OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+284]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 840
	mov	esi, esp
	lea	ecx, DWORD PTR _UAVInitialCounts$[ebp]
	push	ecx
	push	OFFSET ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+272]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 841
	mov	esi, esp
	push	OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 843
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 844
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 847
	mov	edx, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
	push	edx
	mov	eax, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
	push	eax
	mov	ecx, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	push	ecx
	mov	edx, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	call	?GPUSort@@YAXPAUID3D11DeviceContext@@PAUID3D11UnorderedAccessView@@PAUID3D11ShaderResourceView@@12@Z ; GPUSort
	add	esp, 20					; 00000014H
; Line 850
	mov	esi, esp
	push	OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+284]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 851
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$[ebp]
	push	edx
	push	OFFSET ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 852
	mov	esi, esp
	push	OFFSET ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	push	1
	push	3
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 855
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 856
	mov	esi, esp
	push	1
	push	1
	push	256					; 00000100H
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 857
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 858
	mov	esi, esp
	push	1
	push	1
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+164]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 861
	mov	esi, esp
	lea	eax, DWORD PTR _UAVInitialCounts$[ebp]
	push	eax
	push	OFFSET ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+272]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 862
	mov	esi, esp
	push	OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+268]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 863
	mov	esi, esp
	push	OFFSET ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	push	1
	push	3
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 866
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 867
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 870
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$[ebp]
	push	edx
	push	OFFSET _g_pNullUAV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 871
	mov	esi, esp
	push	OFFSET _g_pNullSRV
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 872
	mov	esi, esp
	push	OFFSET ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+268]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 873
	mov	esi, esp
	push	OFFSET ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	push	1
	push	3
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 874
	mov	esi, esp
	push	OFFSET ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
	push	1
	push	4
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 877
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$[ebp]
	push	edx
	push	OFFSET ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 878
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 879
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 882
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$[ebp]
	push	edx
	push	OFFSET ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 883
	mov	esi, esp
	push	OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	push	1
	push	1
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 884
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 885
	mov	esi, esp
	push	1
	push	1
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+164]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 888
	mov	esi, esp
	lea	eax, DWORD PTR _UAVInitialCounts$[ebp]
	push	eax
	push	OFFSET ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+272]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 889
	mov	esi, esp
	push	OFFSET ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	push	1
	push	2
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+268]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 890
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+276]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 891
	mov	esi, esp
	push	1
	push	1
	mov	edx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	edx, 8
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+164]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 892
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SimulateFl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@SimulateFl:
	DD	1
	DD	$LN4@SimulateFl
$LN4@SimulateFl:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@SimulateFl
$LN3@SimulateFl:
	DB	85					; 00000055H
	DB	65					; 00000041H
	DB	86					; 00000056H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SimulateFluid_Grid@@YAXPAUID3D11DeviceContext@@@Z ENDP	; SimulateFluid_Grid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_UAVInitialCounts$ = -8					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?SimulateFluid_Shared@@YAXPAUID3D11DeviceContext@@@Z PROC ; SimulateFluid_Shared
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 795
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 796
	mov	DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 799
	mov	esi, esp
	push	OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+284]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 800
	mov	esi, esp
	push	OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 803
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$[ebp]
	push	edx
	push	OFFSET ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 804
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 805
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 808
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$[ebp]
	push	edx
	push	OFFSET ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 809
	mov	esi, esp
	push	OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	push	1
	push	1
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 810
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 811
	mov	esi, esp
	push	1
	push	1
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+164]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 814
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
	push	eax
	mov	ecx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+188]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 815
	mov	esi, esp
	push	OFFSET ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 816
	mov	esi, esp
	lea	ecx, DWORD PTR _UAVInitialCounts$[ebp]
	push	ecx
	push	OFFSET ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+272]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 817
	mov	esi, esp
	push	OFFSET ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	push	1
	push	2
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 818
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 819
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 820
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SimulateFl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@SimulateFl:
	DD	1
	DD	$LN4@SimulateFl
$LN4@SimulateFl:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@SimulateFl
$LN3@SimulateFl:
	DB	85					; 00000055H
	DB	65					; 00000041H
	DB	86					; 00000056H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SimulateFluid_Shared@@YAXPAUID3D11DeviceContext@@@Z ENDP ; SimulateFluid_Shared
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_UAVInitialCounts$ = -8					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?SimulateFluid_Simple@@YAXPAUID3D11DeviceContext@@@Z PROC ; SimulateFluid_Simple
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 763
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 764
	mov	DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 767
	mov	esi, esp
	push	OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+284]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 768
	mov	esi, esp
	push	OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 771
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$[ebp]
	push	edx
	push	OFFSET ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 772
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 773
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 776
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$[ebp]
	push	edx
	push	OFFSET ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 777
	mov	esi, esp
	push	OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	push	1
	push	1
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 778
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 779
	mov	esi, esp
	push	1
	push	1
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+164]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 782
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
	push	eax
	mov	ecx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+188]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 783
	mov	esi, esp
	push	OFFSET ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 784
	mov	esi, esp
	lea	ecx, DWORD PTR _UAVInitialCounts$[ebp]
	push	ecx
	push	OFFSET ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+272]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 785
	mov	esi, esp
	push	OFFSET ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	push	1
	push	2
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 786
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 787
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shr	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 788
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SimulateFl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@SimulateFl:
	DD	1
	DD	$LN4@SimulateFl
$LN4@SimulateFl:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@SimulateFl
$LN3@SimulateFl:
	DB	85					; 00000055H
	DB	65					; 00000041H
	DB	86					; 00000056H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SimulateFluid_Simple@@YAXPAUID3D11DeviceContext@@@Z ENDP ; SimulateFluid_Simple
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_constants2$1 = -128					; size = 16
_UAVInitialCounts$2 = -104				; size = 4
_pViewNULL$3 = -92					; size = 4
_constants1$4 = -80					; size = 16
_level$5 = -60						; size = 4
_UAVInitialCounts$6 = -52				; size = 4
_constants$7 = -40					; size = 16
_level$8 = -20						; size = 4
_MATRIX_HEIGHT$ = -16					; size = 4
_MATRIX_WIDTH$ = -12					; size = 4
_NUM_ELEMENTS$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
_inUAV$ = 12						; size = 4
_inSRV$ = 16						; size = 4
_tempUAV$ = 20						; size = 4
_tempSRV$ = 24						; size = 4
?GPUSort@@YAXPAUID3D11DeviceContext@@PAUID3D11UnorderedAccessView@@PAUID3D11ShaderResourceView@@12@Z PROC ; GPUSort
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-132]
	mov	ecx, 33					; 00000021H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 701
	mov	esi, esp
	push	OFFSET ?g_pSortCB@@3PAUID3D11Buffer@@A	; g_pSortCB
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+284]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 703
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	mov	DWORD PTR _NUM_ELEMENTS$[ebp], ecx
; Line 704
	mov	DWORD PTR _MATRIX_WIDTH$[ebp], 256	; 00000100H
; Line 705
	mov	edx, DWORD PTR _NUM_ELEMENTS$[ebp]
	shr	edx, 8
	mov	DWORD PTR _MATRIX_HEIGHT$[ebp], edx
; Line 709
	mov	DWORD PTR _level$8[ebp], 2
	jmp	SHORT $LN6@GPUSort
$LN5@GPUSort:
	mov	eax, DWORD PTR _level$8[ebp]
	shl	eax, 1
	mov	DWORD PTR _level$8[ebp], eax
$LN6@GPUSort:
	cmp	DWORD PTR _level$8[ebp], 256		; 00000100H
	ja	$LN4@GPUSort
; Line 711
	mov	ecx, DWORD PTR _level$8[ebp]
	mov	DWORD PTR _constants$7[ebp], ecx
	mov	edx, DWORD PTR _level$8[ebp]
	mov	DWORD PTR _constants$7[ebp+4], edx
	mov	eax, DWORD PTR _MATRIX_HEIGHT$[ebp]
	mov	DWORD PTR _constants$7[ebp+8], eax
	mov	DWORD PTR _constants$7[ebp+12], 256	; 00000100H
; Line 712
	mov	esi, esp
	push	0
	push	0
	lea	ecx, DWORD PTR _constants$7[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+192]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 715
	mov	DWORD PTR _UAVInitialCounts$6[ebp], 0
; Line 716
	mov	esi, esp
	lea	ecx, DWORD PTR _UAVInitialCounts$6[ebp]
	push	ecx
	lea	edx, DWORD PTR _inUAV$[ebp]
	push	edx
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 717
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 718
	mov	esi, esp
	push	1
	push	1
	mov	eax, DWORD PTR _NUM_ELEMENTS$[ebp]
	shr	eax, 8
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 720
	jmp	$LN5@GPUSort
$LN4@GPUSort:
; Line 724
	mov	DWORD PTR _level$5[ebp], 512		; 00000200H
	jmp	SHORT $LN3@GPUSort
$LN2@GPUSort:
	mov	edx, DWORD PTR _level$5[ebp]
	shl	edx, 1
	mov	DWORD PTR _level$5[ebp], edx
$LN3@GPUSort:
	mov	eax, DWORD PTR _level$5[ebp]
	cmp	eax, DWORD PTR _NUM_ELEMENTS$[ebp]
	ja	$LN7@GPUSort
; Line 726
	mov	ecx, DWORD PTR _level$5[ebp]
	shr	ecx, 8
	mov	DWORD PTR _constants1$4[ebp], ecx
	mov	edx, DWORD PTR _NUM_ELEMENTS$[ebp]
	not	edx
	and	edx, DWORD PTR _level$5[ebp]
	shr	edx, 8
	mov	DWORD PTR _constants1$4[ebp+4], edx
	mov	DWORD PTR _constants1$4[ebp+8], 256	; 00000100H
	mov	eax, DWORD PTR _MATRIX_HEIGHT$[ebp]
	mov	DWORD PTR _constants1$4[ebp+12], eax
; Line 727
	mov	esi, esp
	push	0
	push	0
	lea	ecx, DWORD PTR _constants1$4[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+192]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 730
	mov	DWORD PTR _pViewNULL$3[ebp], 0
; Line 731
	mov	DWORD PTR _UAVInitialCounts$2[ebp], 0
; Line 732
	mov	esi, esp
	lea	ecx, DWORD PTR _pViewNULL$3[ebp]
	push	ecx
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+268]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 733
	mov	esi, esp
	lea	eax, DWORD PTR _UAVInitialCounts$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempUAV$[ebp]
	push	ecx
	push	1
	push	0
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+272]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 734
	mov	esi, esp
	lea	eax, DWORD PTR _inSRV$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 735
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 736
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _MATRIX_HEIGHT$[ebp]
	shr	ecx, 4
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+164]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 739
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+276]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 740
	mov	esi, esp
	push	1
	push	1
	mov	edx, DWORD PTR _NUM_ELEMENTS$[ebp]
	shr	edx, 8
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+164]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 742
	mov	DWORD PTR _constants2$1[ebp], 256	; 00000100H
	mov	ecx, DWORD PTR _level$5[ebp]
	mov	DWORD PTR _constants2$1[ebp+4], ecx
	mov	edx, DWORD PTR _MATRIX_HEIGHT$[ebp]
	mov	DWORD PTR _constants2$1[ebp+8], edx
	mov	DWORD PTR _constants2$1[ebp+12], 256	; 00000100H
; Line 743
	mov	esi, esp
	push	0
	push	0
	lea	eax, DWORD PTR _constants2$1[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+192]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 746
	mov	esi, esp
	lea	eax, DWORD PTR _pViewNULL$3[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 747
	mov	esi, esp
	lea	edx, DWORD PTR _UAVInitialCounts$2[ebp]
	push	edx
	lea	eax, DWORD PTR _inUAV$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+272]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 748
	mov	esi, esp
	lea	edx, DWORD PTR _tempSRV$[ebp]
	push	edx
	push	1
	push	0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+268]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 749
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+276]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 750
	mov	esi, esp
	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _MATRIX_HEIGHT$[ebp]
	shr	eax, 4
	push	eax
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+164]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 753
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 754
	mov	esi, esp
	push	1
	push	1
	mov	ecx, DWORD PTR _NUM_ELEMENTS$[ebp]
	shr	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+164]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 755
	jmp	$LN2@GPUSort
$LN7@GPUSort:
; Line 756
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@GPUSort
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 132				; 00000084H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@GPUSort:
	DD	6
	DD	$LN15@GPUSort
$LN15@GPUSort:
	DD	-40					; ffffffd8H
	DD	16					; 00000010H
	DD	$LN9@GPUSort
	DD	-52					; ffffffccH
	DD	4
	DD	$LN10@GPUSort
	DD	-80					; ffffffb0H
	DD	16					; 00000010H
	DD	$LN11@GPUSort
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN12@GPUSort
	DD	-104					; ffffff98H
	DD	4
	DD	$LN13@GPUSort
	DD	-128					; ffffff80H
	DD	16					; 00000010H
	DD	$LN14@GPUSort
$LN14@GPUSort:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	50					; 00000032H
	DB	0
$LN13@GPUSort:
	DB	85					; 00000055H
	DB	65					; 00000041H
	DB	86					; 00000056H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN12@GPUSort:
	DB	112					; 00000070H
	DB	86					; 00000056H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	78					; 0000004eH
	DB	85					; 00000055H
	DB	76					; 0000004cH
	DB	76					; 0000004cH
	DB	0
$LN11@GPUSort:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	49					; 00000031H
	DB	0
$LN10@GPUSort:
	DB	85					; 00000055H
	DB	65					; 00000041H
	DB	86					; 00000056H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN9@GPUSort:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?GPUSort@@YAXPAUID3D11DeviceContext@@PAUID3D11UnorderedAccessView@@PAUID3D11ShaderResourceView@@12@Z ENDP ; GPUSort
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z
_TEXT	SEGMENT
_Desc$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_ppCB$ = 12						; size = 4
??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z PROC ; CreateConstantBuffer<SortCB>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 368
	mov	DWORD PTR _hr$[ebp], 0
; Line 371
	mov	DWORD PTR _Desc$[ebp+4], 0
; Line 372
	mov	DWORD PTR _Desc$[ebp+8], 4
; Line 373
	mov	DWORD PTR _Desc$[ebp+12], 0
; Line 374
	mov	DWORD PTR _Desc$[ebp+16], 0
; Line 375
	mov	DWORD PTR _Desc$[ebp], 16		; 00000010H
; Line 376
	mov	esi, esp
	mov	eax, DWORD PTR _ppCB$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _Desc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateCons
	push	1
	push	OFFSET $SG191614
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	376					; 00000178H
	push	OFFSET $SG191615
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN2@CreateCons
$LN1@CreateCons:
; Line 378
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@CreateCons:
; Line 379
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CreateCons
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@CreateCons:
	DD	1
	DD	$LN5@CreateCons
$LN5@CreateCons:
	DD	-36					; ffffffdcH
	DD	24					; 00000018H
	DD	$LN4@CreateCons
$LN4@CreateCons:
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ENDP ; CreateConstantBuffer<SortCB>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z
_TEXT	SEGMENT
_Desc$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_ppCB$ = 12						; size = 4
??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z PROC ; CreateConstantBuffer<CBRenderConstants>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 368
	mov	DWORD PTR _hr$[ebp], 0
; Line 371
	mov	DWORD PTR _Desc$[ebp+4], 0
; Line 372
	mov	DWORD PTR _Desc$[ebp+8], 4
; Line 373
	mov	DWORD PTR _Desc$[ebp+12], 0
; Line 374
	mov	DWORD PTR _Desc$[ebp+16], 0
; Line 375
	mov	DWORD PTR _Desc$[ebp], 80		; 00000050H
; Line 376
	mov	esi, esp
	mov	eax, DWORD PTR _ppCB$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _Desc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateCons
	push	1
	push	OFFSET $SG191604
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	376					; 00000178H
	push	OFFSET $SG191605
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN2@CreateCons
$LN1@CreateCons:
; Line 378
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@CreateCons:
; Line 379
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CreateCons
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@CreateCons:
	DD	1
	DD	$LN5@CreateCons
$LN5@CreateCons:
	DD	-36					; ffffffdcH
	DD	24					; 00000018H
	DD	$LN4@CreateCons
$LN4@CreateCons:
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ENDP ; CreateConstantBuffer<CBRenderConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z
_TEXT	SEGMENT
_Desc$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_ppCB$ = 12						; size = 4
??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z PROC ; CreateConstantBuffer<CBSimulationConstants>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 368
	mov	DWORD PTR _hr$[ebp], 0
; Line 371
	mov	DWORD PTR _Desc$[ebp+4], 0
; Line 372
	mov	DWORD PTR _Desc$[ebp+8], 4
; Line 373
	mov	DWORD PTR _Desc$[ebp+12], 0
; Line 374
	mov	DWORD PTR _Desc$[ebp+16], 0
; Line 375
	mov	DWORD PTR _Desc$[ebp], 160		; 000000a0H
; Line 376
	mov	esi, esp
	mov	eax, DWORD PTR _ppCB$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _Desc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateCons
	push	1
	push	OFFSET $SG191594
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	376					; 00000178H
	push	OFFSET $SG191595
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN2@CreateCons
$LN1@CreateCons:
; Line 378
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@CreateCons:
; Line 379
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CreateCons
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@CreateCons:
	DD	1
	DD	$LN5@CreateCons
$LN5@CreateCons:
	DD	-36					; ffffffdcH
	DD	24					; 00000018H
	DD	$LN4@CreateCons
$LN4@CreateCons:
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ENDP ; CreateConstantBuffer<CBSimulationConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateConstantBuffer@UFOO@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z
_TEXT	SEGMENT
_Desc$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_ppCB$ = 12						; size = 4
??$CreateConstantBuffer@UFOO@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z PROC ; CreateConstantBuffer<FOO>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 368
	mov	DWORD PTR _hr$[ebp], 0
; Line 371
	mov	DWORD PTR _Desc$[ebp+4], 0
; Line 372
	mov	DWORD PTR _Desc$[ebp+8], 4
; Line 373
	mov	DWORD PTR _Desc$[ebp+12], 0
; Line 374
	mov	DWORD PTR _Desc$[ebp+16], 0
; Line 375
	mov	DWORD PTR _Desc$[ebp], 16		; 00000010H
; Line 376
	mov	esi, esp
	mov	eax, DWORD PTR _ppCB$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _Desc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateCons
	push	1
	push	OFFSET $SG191584
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	376					; 00000178H
	push	OFFSET $SG191585
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN2@CreateCons
$LN1@CreateCons:
; Line 378
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@CreateCons:
; Line 379
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CreateCons
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@CreateCons:
	DD	1
	DD	$LN5@CreateCons
$LN5@CreateCons:
	DD	-36					; ffffffdcH
	DD	24					; 00000018H
	DD	$LN4@CreateCons
$LN4@CreateCons:
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateConstantBuffer@UFOO@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ENDP ; CreateConstantBuffer<FOO>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z PROC ; CreateStructuredBuffer<FOO>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 388
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 389
	mov	DWORD PTR _hr$[ebp], 0
; Line 393
	xor	eax, eax
	mov	DWORD PTR _bufferDesc$[ebp], eax
	mov	DWORD PTR _bufferDesc$[ebp+4], eax
	mov	DWORD PTR _bufferDesc$[ebp+8], eax
	mov	DWORD PTR _bufferDesc$[ebp+12], eax
	mov	DWORD PTR _bufferDesc$[ebp+16], eax
	mov	DWORD PTR _bufferDesc$[ebp+20], eax
; Line 394
	mov	ecx, DWORD PTR _iNumElements$[ebp]
	shl	ecx, 4
	mov	DWORD PTR _bufferDesc$[ebp], ecx
; Line 395
	mov	DWORD PTR _bufferDesc$[ebp+4], 0
; Line 397
	movzx	edx, BYTE PTR _read$[ebp]
	test	edx, edx
	je	SHORT $LN5@CreateStru
; Line 398
	mov	DWORD PTR _bufferDesc$[ebp+12], 0
; Line 399
	jmp	SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 400
	mov	DWORD PTR _bufferDesc$[ebp+12], 196608	; 00030000H
$LN4@CreateStru:
; Line 402
	mov	DWORD PTR _bufferDesc$[ebp+8], 136	; 00000088H
; Line 403
	mov	DWORD PTR _bufferDesc$[ebp+16], 64	; 00000040H
; Line 404
	mov	DWORD PTR _bufferDesc$[ebp+20], 16	; 00000010H
; Line 407
	xor	eax, eax
	mov	DWORD PTR _bufferInitData$[ebp], eax
	mov	DWORD PTR _bufferInitData$[ebp+4], eax
	mov	DWORD PTR _bufferInitData$[ebp+8], eax
; Line 408
	mov	ecx, DWORD PTR _pInitialData$[ebp]
	mov	DWORD PTR _bufferInitData$[ebp], ecx
; Line 409
	cmp	DWORD PTR _pInitialData$[ebp], 0
	je	SHORT $LN8@CreateStru
	lea	edx, DWORD PTR _bufferInitData$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN9@CreateStru
$LN8@CreateStru:
	mov	DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
	mov	esi, esp
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	lea	edx, DWORD PTR _bufferDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CreateStru
	push	1
	push	OFFSET $SG191562
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	409					; 00000199H
	push	OFFSET $SG191563
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN6@CreateStru
$LN3@CreateStru:
; Line 413
	xor	edx, edx
	mov	DWORD PTR _srvDesc$[ebp], edx
	mov	DWORD PTR _srvDesc$[ebp+4], edx
	mov	DWORD PTR _srvDesc$[ebp+8], edx
	mov	DWORD PTR _srvDesc$[ebp+12], edx
	mov	DWORD PTR _srvDesc$[ebp+16], edx
	mov	DWORD PTR _srvDesc$[ebp+20], edx
; Line 414
	mov	DWORD PTR _srvDesc$[ebp], 0
; Line 415
	mov	DWORD PTR _srvDesc$[ebp+4], 1
; Line 416
	mov	eax, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _srvDesc$[ebp+12], eax
; Line 417
	mov	esi, esp
	mov	ecx, DWORD PTR _ppSRV$[ebp]
	push	ecx
	lea	edx, DWORD PTR _srvDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@CreateStru
	push	1
	push	OFFSET $SG191568
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	417					; 000001a1H
	push	OFFSET $SG191569
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 421
	xor	ecx, ecx
	mov	DWORD PTR _uavDesc$[ebp], ecx
	mov	DWORD PTR _uavDesc$[ebp+4], ecx
	mov	DWORD PTR _uavDesc$[ebp+8], ecx
	mov	DWORD PTR _uavDesc$[ebp+12], ecx
	mov	DWORD PTR _uavDesc$[ebp+16], ecx
; Line 422
	mov	DWORD PTR _uavDesc$[ebp], 0
; Line 423
	mov	DWORD PTR _uavDesc$[ebp+4], 1
; Line 424
	mov	edx, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _uavDesc$[ebp+12], edx
; Line 425
	mov	esi, esp
	mov	eax, DWORD PTR _ppUAV$[ebp]
	push	eax
	lea	ecx, DWORD PTR _uavDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppBuffer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateStru
	push	1
	push	OFFSET $SG191574
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	425					; 000001a9H
	push	OFFSET $SG191575
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 427
	mov	eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 428
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@CreateStru
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@CreateStru:
	DD	4
	DD	$LN14@CreateStru
$LN14@CreateStru:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN10@CreateStru
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN11@CreateStru
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN12@CreateStru
	DD	-120					; ffffff88H
	DD	20					; 00000014H
	DD	$LN13@CreateStru
$LN13@CreateStru:
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN12@CreateStru:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN11@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN10@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z ENDP ; CreateStructuredBuffer<FOO>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv197 = -120						; size = 8
tv193 = -108						; size = 4
tv188 = -104						; size = 8
tv184 = -92						; size = 4
$T1 = -88						; size = 4
$T2 = -81						; size = 1
_deviceContext$ = -80					; size = 4
_hr$ = -76						; size = 4
_hr2$ = -72						; size = 4
_device$ = -68						; size = 4
$T3 = -64						; size = 16
_color$4 = -32						; size = 16
_colorConst$5 = -12					; size = 4
_i$6 = -8						; size = 4
_f$ = -4						; size = 4
?UpdateColor@@YAXXZ PROC				; UpdateColor
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 538
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 539
	mov	esi, esp
	push	16					; 00000010H
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	eax
	call	DWORD PTR __imp__calloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _f$[ebp], eax
; Line 540
	mov	DWORD PTR _i$6[ebp], 0
	jmp	SHORT $LN8@UpdateColo
$LN7@UpdateColo:
	mov	ecx, DWORD PTR _i$6[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$6[ebp], ecx
$LN8@UpdateColo:
	mov	edx, DWORD PTR _i$6[ebp]
	cmp	edx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	jae	$LN6@UpdateColo
; Line 542
	mov	eax, DWORD PTR _i$6[ebp]
	mov	DWORD PTR tv184[ebp], eax
	cvtsi2sd xmm0, DWORD PTR tv184[ebp]
	mov	ecx, DWORD PTR tv184[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv188[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv188[ebp]
	mov	edx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	mov	DWORD PTR tv193[ebp], edx
	cvtsi2sd xmm1, DWORD PTR tv193[ebp]
	mov	eax, DWORD PTR tv193[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv197[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv197[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _colorConst$5[ebp], xmm0
; Line 543
	push	ecx
	movss	xmm0, DWORD PTR _colorConst$5[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _colorConst$5[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _colorConst$5[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _colorConst$5[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _color$4[ebp]
	call	??0XMFLOAT4@DirectX@@QAE@MMMM@Z		; DirectX::XMFLOAT4::XMFLOAT4
; Line 544
	lea	ecx, DWORD PTR _color$4[ebp]
	call	?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
	movaps	XMMWORD PTR $T3[ebp], xmm0
	mov	ecx, DWORD PTR _f$[ebp]
	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; Line 545
	jmp	$LN7@UpdateColo
$LN6@UpdateColo:
; Line 546
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _device$[ebp], eax
; Line 547
	cmp	DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
	je	SHORT $LN5@UpdateColo
	mov	edx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
$LN5@UpdateColo:
; Line 548
	cmp	DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
	je	SHORT $LN4@UpdateColo
	mov	eax, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
$LN4@UpdateColo:
; Line 549
	cmp	DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
	je	SHORT $LN3@UpdateColo
	mov	ecx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
$LN3@UpdateColo:
; Line 550
	cmp	DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
	je	SHORT $LN2@UpdateColo
	mov	edx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
$LN2@UpdateColo:
; Line 551
	push	0
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	push	OFFSET ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
	push	OFFSET ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	push	OFFSET ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	ecx
	call	??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z ; CreateStructuredBuffer<FOO>
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hr2$[ebp], eax
; Line 552
	push	OFFSET ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	mov	edx, DWORD PTR _device$[ebp]
	push	edx
	call	??$CreateConstantBuffer@UFOO@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<FOO>
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
; Line 553
	call	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
	mov	DWORD PTR _deviceContext$[ebp], eax
; Line 555
	mov	esi, esp
	push	OFFSET ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	push	0
	push	3
	mov	eax, DWORD PTR _deviceContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _deviceContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 556
	mov	esi, esp
	push	OFFSET ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	push	0
	push	3
	mov	ecx, DWORD PTR _deviceContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _deviceContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+124]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 558
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@UpdateColo
; Line 559
	mov	BYTE PTR $T2[ebp], 49			; 00000031H
	push	OFFSET __TI1D
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8
$LN1@UpdateColo:
; Line 560
	mov	eax, DWORD PTR _f$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN9@UpdateColo:
; Line 561
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@UpdateColo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
$LN13@UpdateColo:
	DD	1
	DD	$LN12@UpdateColo
$LN12@UpdateColo:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN11@UpdateColo
$LN11@UpdateColo:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?UpdateColor@@YAXXZ ENDP				; UpdateColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z PROC ; CreateStructuredBuffer<u322>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 388
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 389
	mov	DWORD PTR _hr$[ebp], 0
; Line 393
	xor	eax, eax
	mov	DWORD PTR _bufferDesc$[ebp], eax
	mov	DWORD PTR _bufferDesc$[ebp+4], eax
	mov	DWORD PTR _bufferDesc$[ebp+8], eax
	mov	DWORD PTR _bufferDesc$[ebp+12], eax
	mov	DWORD PTR _bufferDesc$[ebp+16], eax
	mov	DWORD PTR _bufferDesc$[ebp+20], eax
; Line 394
	mov	ecx, DWORD PTR _iNumElements$[ebp]
	shl	ecx, 3
	mov	DWORD PTR _bufferDesc$[ebp], ecx
; Line 395
	mov	DWORD PTR _bufferDesc$[ebp+4], 0
; Line 397
	movzx	edx, BYTE PTR _read$[ebp]
	test	edx, edx
	je	SHORT $LN5@CreateStru
; Line 398
	mov	DWORD PTR _bufferDesc$[ebp+12], 0
; Line 399
	jmp	SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 400
	mov	DWORD PTR _bufferDesc$[ebp+12], 196608	; 00030000H
$LN4@CreateStru:
; Line 402
	mov	DWORD PTR _bufferDesc$[ebp+8], 136	; 00000088H
; Line 403
	mov	DWORD PTR _bufferDesc$[ebp+16], 64	; 00000040H
; Line 404
	mov	DWORD PTR _bufferDesc$[ebp+20], 8
; Line 407
	xor	eax, eax
	mov	DWORD PTR _bufferInitData$[ebp], eax
	mov	DWORD PTR _bufferInitData$[ebp+4], eax
	mov	DWORD PTR _bufferInitData$[ebp+8], eax
; Line 408
	mov	ecx, DWORD PTR _pInitialData$[ebp]
	mov	DWORD PTR _bufferInitData$[ebp], ecx
; Line 409
	cmp	DWORD PTR _pInitialData$[ebp], 0
	je	SHORT $LN8@CreateStru
	lea	edx, DWORD PTR _bufferInitData$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN9@CreateStru
$LN8@CreateStru:
	mov	DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
	mov	esi, esp
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	lea	edx, DWORD PTR _bufferDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CreateStru
	push	1
	push	OFFSET $SG191535
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	409					; 00000199H
	push	OFFSET $SG191536
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN6@CreateStru
$LN3@CreateStru:
; Line 413
	xor	edx, edx
	mov	DWORD PTR _srvDesc$[ebp], edx
	mov	DWORD PTR _srvDesc$[ebp+4], edx
	mov	DWORD PTR _srvDesc$[ebp+8], edx
	mov	DWORD PTR _srvDesc$[ebp+12], edx
	mov	DWORD PTR _srvDesc$[ebp+16], edx
	mov	DWORD PTR _srvDesc$[ebp+20], edx
; Line 414
	mov	DWORD PTR _srvDesc$[ebp], 0
; Line 415
	mov	DWORD PTR _srvDesc$[ebp+4], 1
; Line 416
	mov	eax, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _srvDesc$[ebp+12], eax
; Line 417
	mov	esi, esp
	mov	ecx, DWORD PTR _ppSRV$[ebp]
	push	ecx
	lea	edx, DWORD PTR _srvDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@CreateStru
	push	1
	push	OFFSET $SG191541
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	417					; 000001a1H
	push	OFFSET $SG191542
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 421
	xor	ecx, ecx
	mov	DWORD PTR _uavDesc$[ebp], ecx
	mov	DWORD PTR _uavDesc$[ebp+4], ecx
	mov	DWORD PTR _uavDesc$[ebp+8], ecx
	mov	DWORD PTR _uavDesc$[ebp+12], ecx
	mov	DWORD PTR _uavDesc$[ebp+16], ecx
; Line 422
	mov	DWORD PTR _uavDesc$[ebp], 0
; Line 423
	mov	DWORD PTR _uavDesc$[ebp+4], 1
; Line 424
	mov	edx, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _uavDesc$[ebp+12], edx
; Line 425
	mov	esi, esp
	mov	eax, DWORD PTR _ppUAV$[ebp]
	push	eax
	lea	ecx, DWORD PTR _uavDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppBuffer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateStru
	push	1
	push	OFFSET $SG191547
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	425					; 000001a9H
	push	OFFSET $SG191548
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 427
	mov	eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 428
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@CreateStru
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@CreateStru:
	DD	4
	DD	$LN14@CreateStru
$LN14@CreateStru:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN10@CreateStru
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN11@CreateStru
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN12@CreateStru
	DD	-120					; ffffff88H
	DD	20					; 00000014H
	DD	$LN13@CreateStru
$LN13@CreateStru:
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN12@CreateStru:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN11@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN10@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z ENDP ; CreateStructuredBuffer<u322>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z PROC ; CreateStructuredBuffer<unsigned int>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 388
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 389
	mov	DWORD PTR _hr$[ebp], 0
; Line 393
	xor	eax, eax
	mov	DWORD PTR _bufferDesc$[ebp], eax
	mov	DWORD PTR _bufferDesc$[ebp+4], eax
	mov	DWORD PTR _bufferDesc$[ebp+8], eax
	mov	DWORD PTR _bufferDesc$[ebp+12], eax
	mov	DWORD PTR _bufferDesc$[ebp+16], eax
	mov	DWORD PTR _bufferDesc$[ebp+20], eax
; Line 394
	mov	ecx, DWORD PTR _iNumElements$[ebp]
	shl	ecx, 2
	mov	DWORD PTR _bufferDesc$[ebp], ecx
; Line 395
	mov	DWORD PTR _bufferDesc$[ebp+4], 0
; Line 397
	movzx	edx, BYTE PTR _read$[ebp]
	test	edx, edx
	je	SHORT $LN5@CreateStru
; Line 398
	mov	DWORD PTR _bufferDesc$[ebp+12], 0
; Line 399
	jmp	SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 400
	mov	DWORD PTR _bufferDesc$[ebp+12], 196608	; 00030000H
$LN4@CreateStru:
; Line 402
	mov	DWORD PTR _bufferDesc$[ebp+8], 136	; 00000088H
; Line 403
	mov	DWORD PTR _bufferDesc$[ebp+16], 64	; 00000040H
; Line 404
	mov	DWORD PTR _bufferDesc$[ebp+20], 4
; Line 407
	xor	eax, eax
	mov	DWORD PTR _bufferInitData$[ebp], eax
	mov	DWORD PTR _bufferInitData$[ebp+4], eax
	mov	DWORD PTR _bufferInitData$[ebp+8], eax
; Line 408
	mov	ecx, DWORD PTR _pInitialData$[ebp]
	mov	DWORD PTR _bufferInitData$[ebp], ecx
; Line 409
	cmp	DWORD PTR _pInitialData$[ebp], 0
	je	SHORT $LN8@CreateStru
	lea	edx, DWORD PTR _bufferInitData$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN9@CreateStru
$LN8@CreateStru:
	mov	DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
	mov	esi, esp
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	lea	edx, DWORD PTR _bufferDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CreateStru
	push	1
	push	OFFSET $SG191508
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	409					; 00000199H
	push	OFFSET $SG191509
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN6@CreateStru
$LN3@CreateStru:
; Line 413
	xor	edx, edx
	mov	DWORD PTR _srvDesc$[ebp], edx
	mov	DWORD PTR _srvDesc$[ebp+4], edx
	mov	DWORD PTR _srvDesc$[ebp+8], edx
	mov	DWORD PTR _srvDesc$[ebp+12], edx
	mov	DWORD PTR _srvDesc$[ebp+16], edx
	mov	DWORD PTR _srvDesc$[ebp+20], edx
; Line 414
	mov	DWORD PTR _srvDesc$[ebp], 0
; Line 415
	mov	DWORD PTR _srvDesc$[ebp+4], 1
; Line 416
	mov	eax, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _srvDesc$[ebp+12], eax
; Line 417
	mov	esi, esp
	mov	ecx, DWORD PTR _ppSRV$[ebp]
	push	ecx
	lea	edx, DWORD PTR _srvDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@CreateStru
	push	1
	push	OFFSET $SG191514
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	417					; 000001a1H
	push	OFFSET $SG191515
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 421
	xor	ecx, ecx
	mov	DWORD PTR _uavDesc$[ebp], ecx
	mov	DWORD PTR _uavDesc$[ebp+4], ecx
	mov	DWORD PTR _uavDesc$[ebp+8], ecx
	mov	DWORD PTR _uavDesc$[ebp+12], ecx
	mov	DWORD PTR _uavDesc$[ebp+16], ecx
; Line 422
	mov	DWORD PTR _uavDesc$[ebp], 0
; Line 423
	mov	DWORD PTR _uavDesc$[ebp+4], 1
; Line 424
	mov	edx, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _uavDesc$[ebp+12], edx
; Line 425
	mov	esi, esp
	mov	eax, DWORD PTR _ppUAV$[ebp]
	push	eax
	lea	ecx, DWORD PTR _uavDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppBuffer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateStru
	push	1
	push	OFFSET $SG191520
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	425					; 000001a9H
	push	OFFSET $SG191521
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 427
	mov	eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 428
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@CreateStru
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@CreateStru:
	DD	4
	DD	$LN14@CreateStru
$LN14@CreateStru:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN10@CreateStru
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN11@CreateStru
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN12@CreateStru
	DD	-120					; ffffff88H
	DD	20					; 00000014H
	DD	$LN13@CreateStru
$LN13@CreateStru:
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN12@CreateStru:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN11@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN10@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z ENDP ; CreateStructuredBuffer<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z PROC ; CreateStructuredBuffer<ParticleDensity>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 388
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 389
	mov	DWORD PTR _hr$[ebp], 0
; Line 393
	xor	eax, eax
	mov	DWORD PTR _bufferDesc$[ebp], eax
	mov	DWORD PTR _bufferDesc$[ebp+4], eax
	mov	DWORD PTR _bufferDesc$[ebp+8], eax
	mov	DWORD PTR _bufferDesc$[ebp+12], eax
	mov	DWORD PTR _bufferDesc$[ebp+16], eax
	mov	DWORD PTR _bufferDesc$[ebp+20], eax
; Line 394
	mov	ecx, DWORD PTR _iNumElements$[ebp]
	shl	ecx, 2
	mov	DWORD PTR _bufferDesc$[ebp], ecx
; Line 395
	mov	DWORD PTR _bufferDesc$[ebp+4], 0
; Line 397
	movzx	edx, BYTE PTR _read$[ebp]
	test	edx, edx
	je	SHORT $LN5@CreateStru
; Line 398
	mov	DWORD PTR _bufferDesc$[ebp+12], 0
; Line 399
	jmp	SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 400
	mov	DWORD PTR _bufferDesc$[ebp+12], 196608	; 00030000H
$LN4@CreateStru:
; Line 402
	mov	DWORD PTR _bufferDesc$[ebp+8], 136	; 00000088H
; Line 403
	mov	DWORD PTR _bufferDesc$[ebp+16], 64	; 00000040H
; Line 404
	mov	DWORD PTR _bufferDesc$[ebp+20], 4
; Line 407
	xor	eax, eax
	mov	DWORD PTR _bufferInitData$[ebp], eax
	mov	DWORD PTR _bufferInitData$[ebp+4], eax
	mov	DWORD PTR _bufferInitData$[ebp+8], eax
; Line 408
	mov	ecx, DWORD PTR _pInitialData$[ebp]
	mov	DWORD PTR _bufferInitData$[ebp], ecx
; Line 409
	cmp	DWORD PTR _pInitialData$[ebp], 0
	je	SHORT $LN8@CreateStru
	lea	edx, DWORD PTR _bufferInitData$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN9@CreateStru
$LN8@CreateStru:
	mov	DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
	mov	esi, esp
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	lea	edx, DWORD PTR _bufferDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CreateStru
	push	1
	push	OFFSET $SG191481
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	409					; 00000199H
	push	OFFSET $SG191482
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN6@CreateStru
$LN3@CreateStru:
; Line 413
	xor	edx, edx
	mov	DWORD PTR _srvDesc$[ebp], edx
	mov	DWORD PTR _srvDesc$[ebp+4], edx
	mov	DWORD PTR _srvDesc$[ebp+8], edx
	mov	DWORD PTR _srvDesc$[ebp+12], edx
	mov	DWORD PTR _srvDesc$[ebp+16], edx
	mov	DWORD PTR _srvDesc$[ebp+20], edx
; Line 414
	mov	DWORD PTR _srvDesc$[ebp], 0
; Line 415
	mov	DWORD PTR _srvDesc$[ebp+4], 1
; Line 416
	mov	eax, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _srvDesc$[ebp+12], eax
; Line 417
	mov	esi, esp
	mov	ecx, DWORD PTR _ppSRV$[ebp]
	push	ecx
	lea	edx, DWORD PTR _srvDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@CreateStru
	push	1
	push	OFFSET $SG191487
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	417					; 000001a1H
	push	OFFSET $SG191488
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 421
	xor	ecx, ecx
	mov	DWORD PTR _uavDesc$[ebp], ecx
	mov	DWORD PTR _uavDesc$[ebp+4], ecx
	mov	DWORD PTR _uavDesc$[ebp+8], ecx
	mov	DWORD PTR _uavDesc$[ebp+12], ecx
	mov	DWORD PTR _uavDesc$[ebp+16], ecx
; Line 422
	mov	DWORD PTR _uavDesc$[ebp], 0
; Line 423
	mov	DWORD PTR _uavDesc$[ebp+4], 1
; Line 424
	mov	edx, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _uavDesc$[ebp+12], edx
; Line 425
	mov	esi, esp
	mov	eax, DWORD PTR _ppUAV$[ebp]
	push	eax
	lea	ecx, DWORD PTR _uavDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppBuffer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateStru
	push	1
	push	OFFSET $SG191493
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	425					; 000001a9H
	push	OFFSET $SG191494
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 427
	mov	eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 428
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@CreateStru
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@CreateStru:
	DD	4
	DD	$LN14@CreateStru
$LN14@CreateStru:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN10@CreateStru
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN11@CreateStru
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN12@CreateStru
	DD	-120					; ffffff88H
	DD	20					; 00000014H
	DD	$LN13@CreateStru
$LN13@CreateStru:
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN12@CreateStru:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN11@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN10@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z ENDP ; CreateStructuredBuffer<ParticleDensity>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z PROC ; CreateStructuredBuffer<ParticleForces>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 388
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 389
	mov	DWORD PTR _hr$[ebp], 0
; Line 393
	xor	eax, eax
	mov	DWORD PTR _bufferDesc$[ebp], eax
	mov	DWORD PTR _bufferDesc$[ebp+4], eax
	mov	DWORD PTR _bufferDesc$[ebp+8], eax
	mov	DWORD PTR _bufferDesc$[ebp+12], eax
	mov	DWORD PTR _bufferDesc$[ebp+16], eax
	mov	DWORD PTR _bufferDesc$[ebp+20], eax
; Line 394
	mov	ecx, DWORD PTR _iNumElements$[ebp]
	shl	ecx, 3
	mov	DWORD PTR _bufferDesc$[ebp], ecx
; Line 395
	mov	DWORD PTR _bufferDesc$[ebp+4], 0
; Line 397
	movzx	edx, BYTE PTR _read$[ebp]
	test	edx, edx
	je	SHORT $LN5@CreateStru
; Line 398
	mov	DWORD PTR _bufferDesc$[ebp+12], 0
; Line 399
	jmp	SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 400
	mov	DWORD PTR _bufferDesc$[ebp+12], 196608	; 00030000H
$LN4@CreateStru:
; Line 402
	mov	DWORD PTR _bufferDesc$[ebp+8], 136	; 00000088H
; Line 403
	mov	DWORD PTR _bufferDesc$[ebp+16], 64	; 00000040H
; Line 404
	mov	DWORD PTR _bufferDesc$[ebp+20], 8
; Line 407
	xor	eax, eax
	mov	DWORD PTR _bufferInitData$[ebp], eax
	mov	DWORD PTR _bufferInitData$[ebp+4], eax
	mov	DWORD PTR _bufferInitData$[ebp+8], eax
; Line 408
	mov	ecx, DWORD PTR _pInitialData$[ebp]
	mov	DWORD PTR _bufferInitData$[ebp], ecx
; Line 409
	cmp	DWORD PTR _pInitialData$[ebp], 0
	je	SHORT $LN8@CreateStru
	lea	edx, DWORD PTR _bufferInitData$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN9@CreateStru
$LN8@CreateStru:
	mov	DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
	mov	esi, esp
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	lea	edx, DWORD PTR _bufferDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CreateStru
	push	1
	push	OFFSET $SG191454
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	409					; 00000199H
	push	OFFSET $SG191455
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN6@CreateStru
$LN3@CreateStru:
; Line 413
	xor	edx, edx
	mov	DWORD PTR _srvDesc$[ebp], edx
	mov	DWORD PTR _srvDesc$[ebp+4], edx
	mov	DWORD PTR _srvDesc$[ebp+8], edx
	mov	DWORD PTR _srvDesc$[ebp+12], edx
	mov	DWORD PTR _srvDesc$[ebp+16], edx
	mov	DWORD PTR _srvDesc$[ebp+20], edx
; Line 414
	mov	DWORD PTR _srvDesc$[ebp], 0
; Line 415
	mov	DWORD PTR _srvDesc$[ebp+4], 1
; Line 416
	mov	eax, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _srvDesc$[ebp+12], eax
; Line 417
	mov	esi, esp
	mov	ecx, DWORD PTR _ppSRV$[ebp]
	push	ecx
	lea	edx, DWORD PTR _srvDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@CreateStru
	push	1
	push	OFFSET $SG191460
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	417					; 000001a1H
	push	OFFSET $SG191461
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 421
	xor	ecx, ecx
	mov	DWORD PTR _uavDesc$[ebp], ecx
	mov	DWORD PTR _uavDesc$[ebp+4], ecx
	mov	DWORD PTR _uavDesc$[ebp+8], ecx
	mov	DWORD PTR _uavDesc$[ebp+12], ecx
	mov	DWORD PTR _uavDesc$[ebp+16], ecx
; Line 422
	mov	DWORD PTR _uavDesc$[ebp], 0
; Line 423
	mov	DWORD PTR _uavDesc$[ebp+4], 1
; Line 424
	mov	edx, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _uavDesc$[ebp+12], edx
; Line 425
	mov	esi, esp
	mov	eax, DWORD PTR _ppUAV$[ebp]
	push	eax
	lea	ecx, DWORD PTR _uavDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppBuffer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateStru
	push	1
	push	OFFSET $SG191466
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	425					; 000001a9H
	push	OFFSET $SG191467
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 427
	mov	eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 428
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@CreateStru
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@CreateStru:
	DD	4
	DD	$LN14@CreateStru
$LN14@CreateStru:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN10@CreateStru
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN11@CreateStru
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN12@CreateStru
	DD	-120					; ffffff88H
	DD	20					; 00000014H
	DD	$LN13@CreateStru
$LN13@CreateStru:
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN12@CreateStru:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN11@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN10@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z ENDP ; CreateStructuredBuffer<ParticleForces>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z PROC ; CreateStructuredBuffer<Particle>, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 387
	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 388
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	mov	DWORD PTR _pd3dDevice$[ebp], eax
; Line 389
	mov	DWORD PTR _hr$[ebp], 0
; Line 393
	xor	eax, eax
	mov	DWORD PTR _bufferDesc$[ebp], eax
	mov	DWORD PTR _bufferDesc$[ebp+4], eax
	mov	DWORD PTR _bufferDesc$[ebp+8], eax
	mov	DWORD PTR _bufferDesc$[ebp+12], eax
	mov	DWORD PTR _bufferDesc$[ebp+16], eax
	mov	DWORD PTR _bufferDesc$[ebp+20], eax
; Line 394
	mov	ecx, DWORD PTR _iNumElements$[ebp]
	shl	ecx, 4
	mov	DWORD PTR _bufferDesc$[ebp], ecx
; Line 395
	mov	DWORD PTR _bufferDesc$[ebp+4], 0
; Line 397
	movzx	edx, BYTE PTR _read$[ebp]
	test	edx, edx
	je	SHORT $LN5@CreateStru
; Line 398
	mov	DWORD PTR _bufferDesc$[ebp+12], 0
; Line 399
	jmp	SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 400
	mov	DWORD PTR _bufferDesc$[ebp+12], 196608	; 00030000H
$LN4@CreateStru:
; Line 402
	mov	DWORD PTR _bufferDesc$[ebp+8], 136	; 00000088H
; Line 403
	mov	DWORD PTR _bufferDesc$[ebp+16], 64	; 00000040H
; Line 404
	mov	DWORD PTR _bufferDesc$[ebp+20], 16	; 00000010H
; Line 407
	xor	eax, eax
	mov	DWORD PTR _bufferInitData$[ebp], eax
	mov	DWORD PTR _bufferInitData$[ebp+4], eax
	mov	DWORD PTR _bufferInitData$[ebp+8], eax
; Line 408
	mov	ecx, DWORD PTR _pInitialData$[ebp]
	mov	DWORD PTR _bufferInitData$[ebp], ecx
; Line 409
	cmp	DWORD PTR _pInitialData$[ebp], 0
	je	SHORT $LN8@CreateStru
	lea	edx, DWORD PTR _bufferInitData$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN9@CreateStru
$LN8@CreateStru:
	mov	DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
	mov	esi, esp
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	lea	edx, DWORD PTR _bufferDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CreateStru
	push	1
	push	OFFSET $SG191427
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	409					; 00000199H
	push	OFFSET $SG191428
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN6@CreateStru
$LN3@CreateStru:
; Line 413
	xor	edx, edx
	mov	DWORD PTR _srvDesc$[ebp], edx
	mov	DWORD PTR _srvDesc$[ebp+4], edx
	mov	DWORD PTR _srvDesc$[ebp+8], edx
	mov	DWORD PTR _srvDesc$[ebp+12], edx
	mov	DWORD PTR _srvDesc$[ebp+16], edx
	mov	DWORD PTR _srvDesc$[ebp+20], edx
; Line 414
	mov	DWORD PTR _srvDesc$[ebp], 0
; Line 415
	mov	DWORD PTR _srvDesc$[ebp+4], 1
; Line 416
	mov	eax, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _srvDesc$[ebp+12], eax
; Line 417
	mov	esi, esp
	mov	ecx, DWORD PTR _ppSRV$[ebp]
	push	ecx
	lea	edx, DWORD PTR _srvDesc$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@CreateStru
	push	1
	push	OFFSET $SG191433
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	417					; 000001a1H
	push	OFFSET $SG191434
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 421
	xor	ecx, ecx
	mov	DWORD PTR _uavDesc$[ebp], ecx
	mov	DWORD PTR _uavDesc$[ebp+4], ecx
	mov	DWORD PTR _uavDesc$[ebp+8], ecx
	mov	DWORD PTR _uavDesc$[ebp+12], ecx
	mov	DWORD PTR _uavDesc$[ebp+16], ecx
; Line 422
	mov	DWORD PTR _uavDesc$[ebp], 0
; Line 423
	mov	DWORD PTR _uavDesc$[ebp+4], 1
; Line 424
	mov	edx, DWORD PTR _iNumElements$[ebp]
	mov	DWORD PTR _uavDesc$[ebp+12], edx
; Line 425
	mov	esi, esp
	mov	eax, DWORD PTR _ppUAV$[ebp]
	push	eax
	lea	ecx, DWORD PTR _uavDesc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppBuffer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateStru
	push	1
	push	OFFSET $SG191439
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	425					; 000001a9H
	push	OFFSET $SG191440
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 427
	mov	eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 428
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@CreateStru
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@CreateStru:
	DD	4
	DD	$LN14@CreateStru
$LN14@CreateStru:
	DD	-40					; ffffffd8H
	DD	24					; 00000018H
	DD	$LN10@CreateStru
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN11@CreateStru
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN12@CreateStru
	DD	-120					; ffffff88H
	DD	20					; 00000014H
	DD	$LN13@CreateStru
$LN13@CreateStru:
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN12@CreateStru:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN11@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN10@CreateStru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z ENDP ; CreateStructuredBuffer<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv290 = -136						; size = 4
tv289 = -132						; size = 4
tv288 = -125						; size = 1
tv287 = -124						; size = 8
tv286 = -116						; size = 4
tv285 = -112						; size = 4
tv284 = -108						; size = 4
tv283 = -101						; size = 1
tv137 = -100						; size = 4
tv135 = -96						; size = 8
tv342 = -88						; size = 8
tv328 = -80						; size = 8
$T2 = -72						; size = 4
$T3 = -68						; size = 4
$T4 = -64						; size = 4
$T5 = -60						; size = 4
$T6 = -56						; size = 4
__Ok$ = -48						; size = 8
__Pad$ = -36						; size = 8
__Count$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 787
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 30					; 0000001eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 790
	mov	DWORD PTR __State$[ebp], 0
; Line 791
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 793
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv328[ebp], eax
	mov	DWORD PTR tv328[ebp+4], edx
	cmp	DWORD PTR tv328[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv328[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv342[ebp+4], edx
	mov	eax, DWORD PTR tv342[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv342[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorpd	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 794
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 796
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@operator
; Line 797
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 798
	jmp	$LN13@operator
$LN14@operator:
; Line 800
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 801
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator
; Line 802
	jmp	SHORT $LN10@operator
$LN9@operator:
	mov	ecx, DWORD PTR __Pad$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR __Pad$[ebp+4]
	sbb	edx, 0
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	DWORD PTR __Pad$[ebp+4], edx
$LN10@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:
; Line 804
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv283[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv284[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv283[ebp]
	push	eax
	mov	ecx, DWORD PTR tv284[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@operator
; Line 806
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 807
	jmp	SHORT $LN11@operator
$LN7@operator:
; Line 810
	jmp	$LN9@operator
$LN11@operator:
; Line 811
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN6@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv286[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv286[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	DWORD PTR tv287[ebp+4], edx
	mov	eax, DWORD PTR tv287[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	ecx, DWORD PTR tv287[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN6@operator
$LN27@operator:
; Line 812
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
$LN6@operator:
; Line 814
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN5@operator
; Line 815
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN5@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN5@operator
$LN28@operator:
; Line 817
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv288[ebp], al
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv289[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv288[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv290[ebp], eax
	mov	ecx, DWORD PTR tv290[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator
; Line 819
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 820
	jmp	SHORT $LN5@operator
$LN1@operator:
; Line 821
	jmp	$LN3@operator
$LN5@operator:
; Line 822
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 823
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN13@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator:
; Line 826
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 827
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 828
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 104				; 00000068H
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 104				; 00000068H
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__State$ = -8						; size = 4
_this$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 355
	mov	DWORD PTR __State$[ebp], 0
; Line 356
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	jne	SHORT $LN4@Getstate
; Line 357
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
$LN4@Getstate:
; Line 358
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	jne	SHORT $LN3@Getstate
; Line 359
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 360
	mov	ecx, DWORD PTR __Mode$[ebp]
	and	ecx, 8
	je	SHORT $LN2@Getstate
; Line 361
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 8
	mov	DWORD PTR __State$[ebp], edx
$LN2@Getstate:
; Line 362
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 4
	je	SHORT $LN1@Getstate
; Line 363
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 16					; 00000010H
	mov	DWORD PTR __State$[ebp], ecx
$LN1@Getstate:
; Line 364
	mov	eax, DWORD PTR __State$[ebp]
; Line 365
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 1
	je	SHORT $LN1@Tidy
; Line 341
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@Tidy
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
$LN5@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR tv88[ebp]
	sub	edx, eax
	push	edx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@Tidy:
; Line 342
	mov	esi, esp
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 343
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 345
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], edx
; Line 346
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv137 = -12						; size = 4
__Pnew$1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 312
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [ecx+60], edx
; Line 315
	cmp	DWORD PTR __Count$[ebp], 0
	je	$LN5@Init
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 6
	cmp	ecx, 6
	je	$LN5@Init
; Line 317
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Pnew$1[ebp], eax
; Line 318
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 319
	mov	eax, DWORD PTR __Pnew$1[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 321
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 4
	jne	SHORT $LN3@Init
; Line 323
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Init:
; Line 324
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, 2
	jne	SHORT $LN2@Init
; Line 328
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 24					; 00000018H
	je	SHORT $LN7@Init
	mov	edx, DWORD PTR __Pnew$1[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN8@Init
$LN7@Init:
	mov	eax, DWORD PTR __Pnew$1[ebp]
	mov	DWORD PTR tv137[ebp], eax
$LN8@Init:
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 329
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@Init
; Line 330
	mov	esi, esp
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Init:
; Line 332
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
$LN5@Init:
; Line 334
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv342 = -32						; size = 8
tv282 = -24						; size = 8
tv259 = -16						; size = 4
__Off$ = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	lea	ecx, DWORD PTR __Ptr$[ebp]
	call	??B?$fpos@H@std@@QBE_JXZ		; std::fpos<int>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 278
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN12@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN12@seekpos
; Line 279
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN12@seekpos:
; Line 281
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	DWORD PTR tv259[ebp], eax
	mov	ecx, DWORD PTR tv259[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN11@seekpos
	mov	eax, DWORD PTR tv259[ebp]
	mov	ecx, DWORD PTR __Off$[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN11@seekpos
	jmp	$LN10@seekpos
$LN11@seekpos:
; Line 283
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 1
	je	$LN9@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN9@seekpos
; Line 285
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN8@seekpos
	jg	SHORT $LN15@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN8@seekpos
$LN15@seekpos:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv282[ebp], eax
	mov	DWORD PTR tv282[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv282[ebp+4]
	jg	$LN8@seekpos
	jl	SHORT $LN16@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv282[ebp]
	ja	$LN8@seekpos
$LN16@seekpos:
; Line 287
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 288
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	je	SHORT $LN7@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN7@seekpos
; Line 290
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@seekpos:
; Line 292
	jmp	SHORT $LN6@seekpos
$LN8@seekpos:
; Line 293
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
	jmp	$LN10@seekpos
$LN9@seekpos:
; Line 295
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	$LN4@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN4@seekpos
; Line 297
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN3@seekpos
	jg	SHORT $LN17@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN3@seekpos
$LN17@seekpos:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv342[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv342[ebp+4]
	jg	SHORT $LN3@seekpos
	jl	SHORT $LN18@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv342[ebp]
	ja	SHORT $LN3@seekpos
$LN18@seekpos:
; Line 299
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 300
	jmp	SHORT $LN2@seekpos
$LN3@seekpos:
; Line 301
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekpos:
; Line 303
	jmp	SHORT $LN10@seekpos
$LN4@seekpos:
; Line 304
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN10@seekpos:
; Line 305
	mov	edx, DWORD PTR __Off$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 306
	pop	edi
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv453 = -20						; size = 8
tv360 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 228
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN21@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN21@seekoff
; Line 229
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN21@seekoff:
; Line 231
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 1
	je	$LN20@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN20@seekoff
; Line 233
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN19@seekoff
; Line 234
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 235
	jmp	SHORT $LN18@seekoff
$LN19@seekoff:
; Line 236
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN17@seekoff
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	jne	SHORT $LN17@seekoff
; Line 237
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 238
	jmp	SHORT $LN18@seekoff
$LN17@seekoff:
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN18@seekoff
; Line 239
	mov	ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Off$[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR __Off$[ebp+4], eax
$LN18@seekoff:
; Line 241
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN14@seekoff
	jg	SHORT $LN24@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN14@seekoff
$LN24@seekoff:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv360[ebp], eax
	mov	DWORD PTR tv360[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv360[ebp+4]
	jg	$LN14@seekoff
	jl	SHORT $LN25@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv360[ebp]
	ja	$LN14@seekoff
$LN25@seekoff:
; Line 243
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 244
	mov	edx, DWORD PTR __Which$[ebp]
	and	edx, 2
	je	SHORT $LN13@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN13@seekoff
; Line 246
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@seekoff:
; Line 248
	jmp	SHORT $LN12@seekoff
$LN14@seekoff:
; Line 249
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
	jmp	$LN11@seekoff
$LN20@seekoff:
; Line 251
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	je	$LN10@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN10@seekoff
; Line 253
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN9@seekoff
; Line 254
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 255
	jmp	SHORT $LN8@seekoff
$LN9@seekoff:
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN7@seekoff
; Line 256
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 257
	jmp	SHORT $LN8@seekoff
$LN7@seekoff:
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN8@seekoff
; Line 258
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 260
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN4@seekoff
	jg	SHORT $LN26@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN4@seekoff
$LN26@seekoff:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv453[ebp], eax
	mov	DWORD PTR tv453[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv453[ebp+4]
	jg	SHORT $LN4@seekoff
	jl	SHORT $LN27@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv453[ebp]
	ja	SHORT $LN4@seekoff
$LN27@seekoff:
; Line 262
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	jmp	SHORT $LN3@seekoff
$LN4@seekoff:
; Line 264
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN3@seekoff:
	jmp	SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
	mov	edx, DWORD PTR __Off$[ebp]
	or	edx, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN11@seekoff
; Line 270
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 271
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 272
	pop	edi
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@underflow
; Line 209
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN9@underflow
	jmp	$LN9@underflow
$LN8@underflow:
; Line 210
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN6@underflow
; Line 211
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	jmp	$LN9@underflow
; Line 212
	jmp	$LN9@underflow
$LN6@underflow:
; Line 213
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	jne	SHORT $LN3@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	ja	SHORT $LN4@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], eax
	ja	SHORT $LN4@underflow
$LN3@underflow:
; Line 214
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN9@underflow
; Line 215
	jmp	$LN9@underflow
$LN4@underflow:
; Line 217
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN1@underflow
; Line 218
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN1@underflow:
; Line 219
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
$LN9@underflow:
; Line 222
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -9						; size = 1
$T3 = -8						; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 195
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN3@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T2[ebp], al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 1
	imul	edx, ecx, -1
	add	eax, edx
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?eq@?$char_traits@D@std@@SA_NABD0@Z	; std::char_traits<char>::eq
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@pbackfail
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 2
	je	SHORT $LN4@pbackfail
$LN3@pbackfail:
; Line 196
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	SHORT $LN5@pbackfail
; Line 197
	jmp	SHORT $LN5@pbackfail
$LN4@pbackfail:
; Line 199
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 200
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@pbackfail
; Line 201
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
$LN1@pbackfail:
; Line 202
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
$LN5@pbackfail:
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv199 = -36						; size = 4
tv195 = -32						; size = 4
$T1 = -28						; size = 4
__Oldptr$2 = -24					; size = 4
__Newptr$3 = -20					; size = 4
__Inc$4 = -16						; size = 4
__Newsize$5 = -12					; size = 4
__Oldsize$6 = -8					; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	je	SHORT $LN17@overflow
; Line 122
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN18@overflow
	jmp	SHORT $LN16@overflow
$LN17@overflow:
; Line 123
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@overflow
; Line 124
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
	jmp	$LN18@overflow
$LN16@overflow:
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 8
	je	SHORT $LN14@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN14@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+56]
	jae	SHORT $LN14@overflow
; Line 128
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@overflow:
; Line 131
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN13@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN13@overflow
; Line 133
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
; Line 134
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN18@overflow
; Line 136
	jmp	$LN18@overflow
$LN13@overflow:
; Line 139
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN20@overflow
	mov	DWORD PTR tv195[ebp], 0
	jmp	SHORT $LN21@overflow
$LN20@overflow:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	DWORD PTR tv195[ebp], esi
$LN21@overflow:
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR __Oldsize$6[ebp], eax
; Line 140
	mov	ecx, DWORD PTR __Oldsize$6[ebp]
	mov	DWORD PTR __Newsize$5[ebp], ecx
; Line 142
	mov	edx, DWORD PTR __Newsize$5[ebp]
	shr	edx, 1
	cmp	edx, 32					; 00000020H
	jae	SHORT $LN22@overflow
	mov	DWORD PTR tv199[ebp], 32		; 00000020H
	jmp	SHORT $LN23@overflow
$LN22@overflow:
	mov	eax, DWORD PTR __Newsize$5[ebp]
	shr	eax, 1
	mov	DWORD PTR tv199[ebp], eax
$LN23@overflow:
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR __Inc$4[ebp], ecx
$LN11@overflow:
; Line 144
	cmp	DWORD PTR __Inc$4[ebp], 0
	jbe	SHORT $LN10@overflow
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, DWORD PTR __Inc$4[ebp]
	cmp	edx, DWORD PTR __Newsize$5[ebp]
	jae	SHORT $LN10@overflow
; Line 145
	mov	eax, DWORD PTR __Inc$4[ebp]
	shr	eax, 1
	mov	DWORD PTR __Inc$4[ebp], eax
	jmp	SHORT $LN11@overflow
$LN10@overflow:
; Line 146
	cmp	DWORD PTR __Inc$4[ebp], 0
	jne	SHORT $LN9@overflow
; Line 147
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN18@overflow
$LN9@overflow:
; Line 149
	mov	ecx, DWORD PTR __Newsize$5[ebp]
	add	ecx, DWORD PTR __Inc$4[ebp]
	mov	DWORD PTR __Newsize$5[ebp], ecx
; Line 151
	mov	edx, DWORD PTR __Newsize$5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Newptr$3[ebp], eax
; Line 152
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Oldptr$2[ebp], eax
; Line 154
	cmp	DWORD PTR __Oldsize$6[ebp], 0
	jbe	SHORT $LN8@overflow
; Line 155
	mov	eax, DWORD PTR __Oldsize$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN8@overflow:
; Line 157
	cmp	DWORD PTR __Oldsize$6[ebp], 0
	jne	SHORT $LN7@overflow
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 160
	mov	edx, DWORD PTR __Newptr$3[ebp]
	add	edx, DWORD PTR __Newsize$5[ebp]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 161
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, 4
	je	SHORT $LN6@overflow
; Line 162
	mov	esi, esp
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 163
	jmp	SHORT $LN5@overflow
$LN6@overflow:
; Line 164
	mov	edx, DWORD PTR __Newptr$3[ebp]
	add	edx, 1
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@overflow:
; Line 166
	jmp	$LN4@overflow
$LN7@overflow:
; Line 168
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	add	eax, DWORD PTR __Newptr$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 171
	mov	edx, DWORD PTR __Newptr$3[ebp]
	add	edx, DWORD PTR __Newsize$5[ebp]
	mov	esi, esp
	push	edx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	add	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	add	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	je	SHORT $LN3@overflow
; Line 173
	mov	esi, esp
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 174
	jmp	SHORT $LN4@overflow
$LN3@overflow:
; Line 177
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	add	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@overflow:
; Line 180
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 1
	je	SHORT $LN1@overflow
; Line 181
	mov	ecx, DWORD PTR __Oldsize$6[ebp]
	push	ecx
	mov	edx, DWORD PTR __Oldptr$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@overflow:
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 184
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
; Line 185
	mov	eax, DWORD PTR __Meta$[ebp]
$LN18@overflow:
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv91 = -124						; size = 4
$T1 = -120						; size = 4
__Nul$2 = -112						; size = 28
__Str$3 = -76						; size = 28
__Str$4 = -40						; size = 28
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	jne	$LN4@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN4@str
; Line 97
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], eax
	jae	SHORT $LN7@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@str
$LN7@str:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR tv91[ebp], ecx
$LN8@str:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR tv91[ebp]
	sub	edx, eax
	push	edx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR __Str$4[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 98
	lea	eax, DWORD PTR __Str$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR __Str$4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@str
	jmp	$LN5@str
$LN4@str:
; Line 100
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 4
	jne	SHORT $LN2@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@str
; Line 102
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	push	esi
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR __Str$3[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 103
	lea	ecx, DWORD PTR __Str$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	lea	ecx, DWORD PTR __Str$3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@str
; Line 105
	jmp	SHORT $LN5@str
$LN2@str:
; Line 107
	lea	ecx, DWORD PTR __Nul$2[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 108
	lea	eax, DWORD PTR __Nul$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR __Nul$2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@str
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN18@str:
	DD	3
	DD	$LN17@str
$LN17@str:
	DD	-40					; ffffffd8H
	DD	28					; 0000001cH
	DD	$LN14@str
	DD	-76					; ffffffb4H
	DD	28					; 0000001cH
	DD	$LN15@str
	DD	-112					; ffffff90H
	DD	28					; 0000001cH
	DD	$LN16@str
$LN16@str:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	0
$LN15@str:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN14@str:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 77
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 28
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 31
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 32
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 645
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 646
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 635
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-104]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 104				; 00000068H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-104]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx-108], eax
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 591
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN1@basic_stri
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
$LN1@basic_stri:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 104				; 00000068H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-4], ecx
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Line 592
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@basic_stri
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN5@basic_stri:
	ret	0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
_TEXT	SEGMENT
tv290 = -126						; size = 2
tv289 = -124						; size = 4
tv288 = -118						; size = 2
tv287 = -116						; size = 8
tv286 = -108						; size = 4
tv285 = -102						; size = 2
tv284 = -100						; size = 4
tv283 = -94						; size = 2
tv137 = -92						; size = 4
tv135 = -88						; size = 8
tv342 = -80						; size = 8
tv328 = -72						; size = 8
$T2 = -64						; size = 4
$T3 = -60						; size = 2
$T4 = -58						; size = 2
$T5 = -56						; size = 2
$T6 = -54						; size = 2
__Ok$ = -48						; size = 8
__Pad$ = -36						; size = 8
__Count$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 873
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 112				; 00000070H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 876
	mov	DWORD PTR __State$[ebp], 0
; Line 877
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$char_traits@_W@std@@SAIPB_W@Z	; std::char_traits<wchar_t>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 879
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv328[ebp], eax
	mov	DWORD PTR tv328[ebp+4], edx
	cmp	DWORD PTR tv328[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv328[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv342[ebp+4], edx
	mov	eax, DWORD PTR tv342[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv342[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorpd	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 880
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 882
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@operator
; Line 883
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 884
	jmp	$LN13@operator
$LN14@operator:
; Line 886
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 887
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator
; Line 888
	jmp	SHORT $LN10@operator
$LN9@operator:
	mov	ecx, DWORD PTR __Pad$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR __Pad$[ebp+4]
	sbb	edx, 0
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	DWORD PTR __Pad$[ebp+4], edx
$LN10@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:
; Line 890
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv283[ebp], ax
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv284[ebp], eax
	mov	esi, esp
	movzx	eax, WORD PTR tv283[ebp]
	push	eax
	mov	ecx, DWORD PTR tv284[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv285[ebp], ax
	mov	cx, WORD PTR tv285[ebp]
	mov	WORD PTR $T6[ebp], cx
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T5[ebp], ax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@operator
; Line 892
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 893
	jmp	SHORT $LN11@operator
$LN7@operator:
; Line 896
	jmp	$LN9@operator
$LN11@operator:
; Line 897
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN6@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv286[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv286[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	DWORD PTR tv287[ebp+4], edx
	mov	eax, DWORD PTR tv287[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	ecx, DWORD PTR tv287[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN6@operator
$LN27@operator:
; Line 898
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
$LN6@operator:
; Line 900
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN5@operator
; Line 901
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN5@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN5@operator
$LN28@operator:
; Line 903
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv288[ebp], ax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv289[ebp], eax
	mov	esi, esp
	movzx	eax, WORD PTR tv288[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv290[ebp], ax
	mov	cx, WORD PTR tv290[ebp]
	mov	WORD PTR $T4[ebp], cx
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T3[ebp], ax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator
; Line 905
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 906
	jmp	SHORT $LN5@operator
$LN1@operator:
; Line 907
	jmp	$LN3@operator
$LN5@operator:
; Line 908
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$0:
; Line 909
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN13@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator:
; Line 912
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 913
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 914
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 128				; 00000080H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv322 = -158						; size = 2
tv321 = -156						; size = 4
tv320 = -152						; size = 2
tv319 = -150						; size = 2
tv318 = -148						; size = 4
tv317 = -144						; size = 2
tv316 = -142						; size = 2
tv315 = -140						; size = 4
tv314 = -134						; size = 2
tv313 = -132						; size = 4
tv312 = -128						; size = 4
tv309 = -124						; size = 4
tv138 = -120						; size = 4
tv136 = -116						; size = 8
tv385 = -108						; size = 8
tv371 = -100						; size = 8
tv66 = -92						; size = 4
tv356 = -85						; size = 1
tv353 = -84						; size = 4
tv350 = -80						; size = 4
$T2 = -76						; size = 4
$T3 = -72						; size = 2
$T4 = -70						; size = 2
$T5 = -68						; size = 2
$T6 = -66						; size = 2
$T7 = -64						; size = 2
$T8 = -62						; size = 2
$T9 = -60						; size = 4
__Ctype_fac$10 = -56					; size = 4
__Ok$ = -48						; size = 8
__Pad$ = -36						; size = 8
__Count$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 701
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 144				; 00000090H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-160]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 702
	mov	DWORD PTR __State$[ebp], 0
; Line 703
	mov	eax, DWORD PTR __Val$[ebp]
	mov	DWORD PTR tv350[ebp], eax
	mov	ecx, DWORD PTR tv350[ebp]
	add	ecx, 1
	mov	DWORD PTR tv353[ebp], ecx
$LL28@operator:
	mov	edx, DWORD PTR tv350[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv356[ebp], al
	add	DWORD PTR tv350[ebp], 1
	cmp	BYTE PTR tv356[ebp], 0
	jne	SHORT $LL28@operator
	mov	ecx, DWORD PTR tv350[ebp]
	sub	ecx, DWORD PTR tv353[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	mov	edx, DWORD PTR tv66[ebp]
	xor	eax, eax
	mov	DWORD PTR __Count$[ebp], edx
	mov	DWORD PTR __Count$[ebp+4], eax
; Line 705
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv371[ebp], eax
	mov	DWORD PTR tv371[ebp+4], edx
	cmp	DWORD PTR tv371[ebp+4], 0
	jl	SHORT $LN20@operator
	jg	SHORT $LN29@operator
	cmp	DWORD PTR tv371[ebp], 0
	jbe	SHORT $LN20@operator
$LN29@operator:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv385[ebp], eax
	mov	DWORD PTR tv385[ebp+4], edx
	mov	eax, DWORD PTR tv385[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN20@operator
	jg	SHORT $LN30@operator
	mov	ecx, DWORD PTR tv385[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN20@operator
$LN30@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv136[ebp], eax
	mov	DWORD PTR tv136[ebp+4], edx
	jmp	SHORT $LN21@operator
$LN20@operator:
	xorpd	xmm0, xmm0
	movlpd	QWORD PTR tv136[ebp], xmm0
$LN21@operator:
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv136[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 706
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 708
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN17@operator
; Line 709
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 710
	jmp	$LN16@operator
$LN17@operator:
; Line 712
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 713
	mov	esi, esp
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv309[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	ecx, DWORD PTR tv309[ebp]
	push	ecx
	call	??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
	add	esp, 4
	mov	DWORD PTR tv312[ebp], eax
	mov	edx, DWORD PTR tv312[ebp]
	mov	DWORD PTR __Ctype_fac$10[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1locale@std@@QAE@XZ			; std::locale::~locale
; Line 714
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv313[ebp], eax
	mov	eax, DWORD PTR tv313[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN14@operator
; Line 715
	jmp	SHORT $LN13@operator
$LN12@operator:
	mov	ecx, DWORD PTR __Pad$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR __Pad$[ebp+4]
	sbb	edx, 0
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	DWORD PTR __Pad$[ebp+4], edx
$LN13@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN14@operator
	jg	SHORT $LN31@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@operator
$LN31@operator:
; Line 717
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv314[ebp], ax
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv315[ebp], eax
	mov	esi, esp
	movzx	eax, WORD PTR tv314[ebp]
	push	eax
	mov	ecx, DWORD PTR tv315[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv316[ebp], ax
	mov	cx, WORD PTR tv316[ebp]
	mov	WORD PTR $T8[ebp], cx
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T7[ebp], ax
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@operator
; Line 719
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 720
	jmp	SHORT $LN14@operator
$LN10@operator:
; Line 723
	jmp	$LN12@operator
$LN14@operator:
	jmp	SHORT $LN9@operator
$LN8@operator:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Count$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	add	edx, 1
	mov	DWORD PTR __Val$[ebp], edx
$LN9@operator:
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN7@operator
	cmp	DWORD PTR __Count$[ebp+4], 0
	jl	$LN7@operator
	jg	SHORT $LN32@operator
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	$LN7@operator
$LN32@operator:
; Line 725
	mov	esi, esp
	mov	eax, DWORD PTR __Val$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR __Ctype_fac$10[ebp]
	call	DWORD PTR __imp_?widen@?$ctype@_W@std@@QBE_WD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv317[ebp], ax
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv318[ebp], eax
	mov	esi, esp
	movzx	ecx, WORD PTR tv317[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv318[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv319[ebp], ax
	mov	dx, WORD PTR tv319[ebp]
	mov	WORD PTR $T6[ebp], dx
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T5[ebp], ax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@operator
; Line 726
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN6@operator:
; Line 728
	jmp	$LN8@operator
$LN7@operator:
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN5@operator
; Line 729
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	ecx, DWORD PTR __Pad$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR __Pad$[ebp+4]
	sbb	edx, 0
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	DWORD PTR __Pad$[ebp+4], edx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN5@operator
	jg	SHORT $LN33@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN5@operator
$LN33@operator:
; Line 731
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv320[ebp], ax
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv321[ebp], eax
	mov	esi, esp
	movzx	eax, WORD PTR tv320[ebp]
	push	eax
	mov	ecx, DWORD PTR tv321[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR tv322[ebp], ax
	mov	cx, WORD PTR tv322[ebp]
	mov	WORD PTR $T4[ebp], cx
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T3[ebp], ax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator
; Line 733
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 734
	jmp	SHORT $LN5@operator
$LN1@operator:
; Line 735
	jmp	$LN3@operator
$LN5@operator:
; Line 736
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN22@operator
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$0:
; Line 737
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN27@operator
	ret	0
$LN22@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN16@operator
$LN27@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN16@operator:
; Line 740
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 741
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 742
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN37@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 160				; 000000a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN37@operator:
	DD	1
	DD	$LN36@operator
$LN36@operator:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN34@operator
$LN34@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$3:
	lea	ecx, DWORD PTR $T9[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 80					; 00000050H
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__State$ = -8						; size = 4
_this$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 355
	mov	DWORD PTR __State$[ebp], 0
; Line 356
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	jne	SHORT $LN4@Getstate
; Line 357
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
$LN4@Getstate:
; Line 358
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	jne	SHORT $LN3@Getstate
; Line 359
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 360
	mov	ecx, DWORD PTR __Mode$[ebp]
	and	ecx, 8
	je	SHORT $LN2@Getstate
; Line 361
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 8
	mov	DWORD PTR __State$[ebp], edx
$LN2@Getstate:
; Line 362
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 4
	je	SHORT $LN1@Getstate
; Line 363
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 16					; 00000010H
	mov	DWORD PTR __State$[ebp], ecx
$LN1@Getstate:
; Line 364
	mov	eax, DWORD PTR __State$[ebp]
; Line 365
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 1
	je	SHORT $LN1@Tidy
; Line 341
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@Tidy
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
$LN5@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR tv88[ebp]
	sub	edx, eax
	sar	edx, 1
	push	edx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
$LN1@Tidy:
; Line 342
	mov	esi, esp
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 343
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 345
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], edx
; Line 346
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z
_TEXT	SEGMENT
tv141 = -12						; size = 4
__Pnew$1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 312
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [ecx+60], edx
; Line 315
	cmp	DWORD PTR __Count$[ebp], 0
	je	$LN5@Init
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 6
	cmp	ecx, 6
	je	$LN5@Init
; Line 317
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR __Pnew$1[ebp], eax
; Line 318
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 319
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], edx
; Line 321
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, 4
	jne	SHORT $LN3@Init
; Line 323
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR __Pnew$1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Init:
; Line 324
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 2
	jne	SHORT $LN2@Init
; Line 328
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, 24					; 00000018H
	je	SHORT $LN7@Init
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR tv141[ebp], edx
	jmp	SHORT $LN8@Init
$LN7@Init:
	mov	eax, DWORD PTR __Pnew$1[ebp]
	mov	DWORD PTR tv141[ebp], eax
$LN8@Init:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Pnew$1[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR tv141[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 329
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@Init
; Line 330
	mov	esi, esp
	mov	eax, DWORD PTR __Pnew$1[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Init:
; Line 332
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	or	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
$LN5@Init:
; Line 334
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv346 = -32						; size = 8
tv286 = -24						; size = 8
tv263 = -16						; size = 4
__Off$ = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	lea	ecx, DWORD PTR __Ptr$[ebp]
	call	??B?$fpos@H@std@@QBE_JXZ		; std::fpos<int>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 278
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN12@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN12@seekpos
; Line 279
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN12@seekpos:
; Line 281
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	DWORD PTR tv263[ebp], eax
	mov	ecx, DWORD PTR tv263[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN11@seekpos
	mov	eax, DWORD PTR tv263[ebp]
	mov	ecx, DWORD PTR __Off$[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN11@seekpos
	jmp	$LN10@seekpos
$LN11@seekpos:
; Line 283
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 1
	je	$LN9@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN9@seekpos
; Line 285
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN8@seekpos
	jg	SHORT $LN15@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN8@seekpos
$LN15@seekpos:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	sar	edx, 1
	mov	eax, edx
	cdq
	mov	DWORD PTR tv286[ebp], eax
	mov	DWORD PTR tv286[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv286[ebp+4]
	jg	$LN8@seekpos
	jl	SHORT $LN16@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv286[ebp]
	ja	$LN8@seekpos
$LN16@seekpos:
; Line 287
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	sar	esi, 1
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 288
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	je	SHORT $LN7@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN7@seekpos
; Line 290
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@seekpos:
; Line 292
	jmp	SHORT $LN6@seekpos
$LN8@seekpos:
; Line 293
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
	jmp	$LN10@seekpos
$LN9@seekpos:
; Line 295
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	$LN4@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN4@seekpos
; Line 297
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN3@seekpos
	jg	SHORT $LN17@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN3@seekpos
$LN17@seekpos:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	sar	edx, 1
	mov	eax, edx
	cdq
	mov	DWORD PTR tv346[ebp], eax
	mov	DWORD PTR tv346[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv346[ebp+4]
	jg	SHORT $LN3@seekpos
	jl	SHORT $LN18@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv346[ebp]
	ja	SHORT $LN3@seekpos
$LN18@seekpos:
; Line 299
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	sar	esi, 1
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 300
	jmp	SHORT $LN2@seekpos
$LN3@seekpos:
; Line 301
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekpos:
; Line 303
	jmp	SHORT $LN10@seekpos
$LN4@seekpos:
; Line 304
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN10@seekpos:
; Line 305
	mov	edx, DWORD PTR __Off$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 306
	pop	edi
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv461 = -20						; size = 8
tv368 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 228
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN21@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN21@seekoff
; Line 229
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN21@seekoff:
; Line 231
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 1
	je	$LN20@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN20@seekoff
; Line 233
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN19@seekoff
; Line 234
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	sar	edx, 1
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 235
	jmp	SHORT $LN18@seekoff
$LN19@seekoff:
; Line 236
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN17@seekoff
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	jne	SHORT $LN17@seekoff
; Line 237
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	sar	esi, 1
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 238
	jmp	SHORT $LN18@seekoff
$LN17@seekoff:
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN18@seekoff
; Line 239
	mov	ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Off$[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR __Off$[ebp+4], eax
$LN18@seekoff:
; Line 241
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN14@seekoff
	jg	SHORT $LN24@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN14@seekoff
$LN24@seekoff:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	sar	edx, 1
	mov	eax, edx
	cdq
	mov	DWORD PTR tv368[ebp], eax
	mov	DWORD PTR tv368[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv368[ebp+4]
	jg	$LN14@seekoff
	jl	SHORT $LN25@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv368[ebp]
	ja	$LN14@seekoff
$LN25@seekoff:
; Line 243
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	sar	esi, 1
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 244
	mov	edx, DWORD PTR __Which$[ebp]
	and	edx, 2
	je	SHORT $LN13@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN13@seekoff
; Line 246
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@seekoff:
; Line 248
	jmp	SHORT $LN12@seekoff
$LN14@seekoff:
; Line 249
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
	jmp	$LN11@seekoff
$LN20@seekoff:
; Line 251
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	je	$LN10@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN10@seekoff
; Line 253
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN9@seekoff
; Line 254
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	sar	edx, 1
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 255
	jmp	SHORT $LN8@seekoff
$LN9@seekoff:
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN7@seekoff
; Line 256
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	sar	esi, 1
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 257
	jmp	SHORT $LN8@seekoff
$LN7@seekoff:
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN8@seekoff
; Line 258
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 260
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN4@seekoff
	jg	SHORT $LN26@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN4@seekoff
$LN26@seekoff:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	sar	edx, 1
	mov	eax, edx
	cdq
	mov	DWORD PTR tv461[ebp], eax
	mov	DWORD PTR tv461[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv461[ebp+4]
	jg	SHORT $LN4@seekoff
	jl	SHORT $LN27@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv461[ebp]
	ja	SHORT $LN4@seekoff
$LN27@seekoff:
; Line 262
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	sar	esi, 1
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	jmp	SHORT $LN3@seekoff
$LN4@seekoff:
; Line 264
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN3@seekoff:
	jmp	SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
	mov	edx, DWORD PTR __Off$[ebp]
	or	edx, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN11@seekoff
; Line 270
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 271
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 272
	pop	edi
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@underflow
; Line 209
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	$LN9@underflow
	jmp	$LN9@underflow
$LN8@underflow:
; Line 210
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN6@underflow
; Line 211
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z ; std::char_traits<wchar_t>::to_int_type
	add	esp, 4
	jmp	$LN9@underflow
; Line 212
	jmp	$LN9@underflow
$LN6@underflow:
; Line 213
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	jne	SHORT $LN3@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	ja	SHORT $LN4@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], eax
	ja	SHORT $LN4@underflow
$LN3@underflow:
; Line 214
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	$LN9@underflow
; Line 215
	jmp	$LN9@underflow
$LN4@underflow:
; Line 217
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN1@underflow
; Line 218
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN1@underflow:
; Line 219
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z ; std::char_traits<wchar_t>::to_int_type
	add	esp, 4
$LN9@underflow:
; Line 222
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
_TEXT	SEGMENT
$T1 = -10						; size = 2
$T2 = -8						; size = 2
$T3 = -6						; size = 2
_this$ = -4						; size = 4
__Meta$ = 8						; size = 2
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 195
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN3@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T3[ebp], ax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ; std::char_traits<wchar_t>::to_char_type
	add	esp, 4
	mov	WORD PTR $T2[ebp], ax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 2
	imul	edx, ecx, -1
	add	eax, edx
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?eq@?$char_traits@_W@std@@SA_NAB_W0@Z	; std::char_traits<wchar_t>::eq
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@pbackfail
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 2
	je	SHORT $LN4@pbackfail
$LN3@pbackfail:
; Line 196
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	SHORT $LN5@pbackfail
; Line 197
	jmp	SHORT $LN5@pbackfail
$LN4@pbackfail:
; Line 199
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 200
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T1[ebp], ax
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@pbackfail
; Line 201
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	call	?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ; std::char_traits<wchar_t>::to_char_type
	add	esp, 4
	mov	si, ax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR [eax], si
$LN1@pbackfail:
; Line 202
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@_W@std@@SAGABG@Z	; std::char_traits<wchar_t>::not_eof
	add	esp, 4
$LN5@pbackfail:
; Line 204
	pop	edi
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
_TEXT	SEGMENT
tv200 = -36						; size = 4
tv196 = -32						; size = 4
$T1 = -26						; size = 2
__Oldptr$2 = -24					; size = 4
__Newptr$3 = -20					; size = 4
__Inc$4 = -16						; size = 4
__Newsize$5 = -12					; size = 4
__Oldsize$6 = -8					; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 2
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	je	SHORT $LN17@overflow
; Line 122
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	$LN18@overflow
	jmp	SHORT $LN16@overflow
$LN17@overflow:
; Line 123
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T1[ebp], ax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@overflow
; Line 124
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@_W@std@@SAGABG@Z	; std::char_traits<wchar_t>::not_eof
	add	esp, 4
	jmp	$LN18@overflow
$LN16@overflow:
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 8
	je	SHORT $LN14@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN14@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+56]
	jae	SHORT $LN14@overflow
; Line 128
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@overflow:
; Line 131
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN13@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN13@overflow
; Line 133
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ; std::char_traits<wchar_t>::to_char_type
	add	esp, 4
	mov	si, ax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR [eax], si
; Line 134
	mov	ax, WORD PTR __Meta$[ebp]
	jmp	$LN18@overflow
; Line 136
	jmp	$LN18@overflow
$LN13@overflow:
; Line 139
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN20@overflow
	mov	DWORD PTR tv196[ebp], 0
	jmp	SHORT $LN21@overflow
$LN20@overflow:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	sar	esi, 1
	mov	DWORD PTR tv196[ebp], esi
$LN21@overflow:
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR __Oldsize$6[ebp], eax
; Line 140
	mov	ecx, DWORD PTR __Oldsize$6[ebp]
	mov	DWORD PTR __Newsize$5[ebp], ecx
; Line 142
	mov	edx, DWORD PTR __Newsize$5[ebp]
	shr	edx, 1
	cmp	edx, 32					; 00000020H
	jae	SHORT $LN22@overflow
	mov	DWORD PTR tv200[ebp], 32		; 00000020H
	jmp	SHORT $LN23@overflow
$LN22@overflow:
	mov	eax, DWORD PTR __Newsize$5[ebp]
	shr	eax, 1
	mov	DWORD PTR tv200[ebp], eax
$LN23@overflow:
	mov	ecx, DWORD PTR tv200[ebp]
	mov	DWORD PTR __Inc$4[ebp], ecx
$LN11@overflow:
; Line 144
	cmp	DWORD PTR __Inc$4[ebp], 0
	jbe	SHORT $LN10@overflow
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, DWORD PTR __Inc$4[ebp]
	cmp	edx, DWORD PTR __Newsize$5[ebp]
	jae	SHORT $LN10@overflow
; Line 145
	mov	eax, DWORD PTR __Inc$4[ebp]
	shr	eax, 1
	mov	DWORD PTR __Inc$4[ebp], eax
	jmp	SHORT $LN11@overflow
$LN10@overflow:
; Line 146
	cmp	DWORD PTR __Inc$4[ebp], 0
	jne	SHORT $LN9@overflow
; Line 147
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	$LN18@overflow
$LN9@overflow:
; Line 149
	mov	ecx, DWORD PTR __Newsize$5[ebp]
	add	ecx, DWORD PTR __Inc$4[ebp]
	mov	DWORD PTR __Newsize$5[ebp], ecx
; Line 151
	mov	edx, DWORD PTR __Newsize$5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
	mov	DWORD PTR __Newptr$3[ebp], eax
; Line 152
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Oldptr$2[ebp], eax
; Line 154
	cmp	DWORD PTR __Oldsize$6[ebp], 0
	jbe	SHORT $LN8@overflow
; Line 155
	mov	eax, DWORD PTR __Oldsize$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
$LN8@overflow:
; Line 157
	cmp	DWORD PTR __Oldsize$6[ebp], 0
	jne	SHORT $LN7@overflow
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 160
	mov	edx, DWORD PTR __Newsize$5[ebp]
	mov	eax, DWORD PTR __Newptr$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	je	SHORT $LN6@overflow
; Line 162
	mov	esi, esp
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 163
	jmp	SHORT $LN5@overflow
$LN6@overflow:
; Line 164
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	add	ecx, 2
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@overflow:
; Line 166
	jmp	$LN4@overflow
$LN7@overflow:
; Line 168
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, DWORD PTR __Oldptr$2[ebp]
	sar	edx, 1
	mov	eax, DWORD PTR __Newptr$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], ecx
; Line 171
	mov	eax, DWORD PTR __Newsize$5[ebp]
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	esi, esp
	push	edx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	je	SHORT $LN3@overflow
; Line 173
	mov	esi, esp
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 174
	jmp	SHORT $LN4@overflow
$LN3@overflow:
; Line 177
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 2
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@overflow:
; Line 180
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, 1
	je	SHORT $LN1@overflow
; Line 181
	mov	eax, DWORD PTR __Oldsize$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
$LN1@overflow:
; Line 182
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	or	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 184
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ; std::char_traits<wchar_t>::to_char_type
	add	esp, 4
	mov	si, ax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR [eax], si
; Line 185
	mov	ax, WORD PTR __Meta$[ebp]
$LN18@overflow:
; Line 187
	pop	edi
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
tv91 = -124						; size = 4
$T1 = -120						; size = 4
__Nul$2 = -112						; size = 28
__Str$3 = -76						; size = 28
__Str$4 = -40						; size = 28
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	jne	$LN4@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN4@str
; Line 97
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], eax
	jae	SHORT $LN7@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@str
$LN7@str:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR tv91[ebp], ecx
$LN8@str:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR tv91[ebp]
	sub	edx, eax
	sar	edx, 1
	push	edx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR __Str$4[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 98
	lea	eax, DWORD PTR __Str$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR __Str$4[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@str
	jmp	$LN5@str
$LN4@str:
; Line 100
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 4
	jne	$LN2@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@str
; Line 102
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	sar	esi, 1
	push	esi
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR __Str$3[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 103
	lea	ecx, DWORD PTR __Str$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	lea	ecx, DWORD PTR __Str$3[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@str
; Line 105
	jmp	SHORT $LN5@str
$LN2@str:
; Line 107
	lea	ecx, DWORD PTR __Nul$2[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 108
	lea	eax, DWORD PTR __Nul$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR __Nul$2[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@str
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN18@str:
	DD	3
	DD	$LN17@str
$LN17@str:
	DD	-40					; ffffffd8H
	DD	28					; 0000001cH
	DD	$LN14@str
	DD	-76					; ffffffb4H
	DD	28					; 0000001cH
	DD	$LN15@str
	DD	-112					; ffffff90H
	DD	28					; 0000001cH
	DD	$LN16@str
$LN16@str:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	0
$LN15@str:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN14@str:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 77
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 28
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
; Line 31
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
; Line 32
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 545
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 546
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 547
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 536
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-80]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-80], OFFSET ??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-80]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 80					; 00000050H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-80]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx-84], eax
; Line 537
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN1@basic_ostr
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
$LN1@basic_ostr:
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 80					; 00000050H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx-4], eax
	mov	eax, DWORD PTR __Mode$[ebp]
	or	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 493
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@basic_ostr
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN5@basic_ostr:
	ret	0
__unwindfunclet$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_hWnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?SWindowProc@@YGJPAUHWND__@@IIJ@Z PROC			; SWindowProc
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 175
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 177
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN1@SWindowPro
	jmp	SHORT $LN2@SWindowPro
$LN1@SWindowPro:
; Line 183
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 184
	xor	eax, eax
	jmp	SHORT $LN4@SWindowPro
$LN2@SWindowPro:
; Line 189
	mov	esi, esp
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@SWindowPro:
; Line 190
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SWindowProc@@YGJPAUHWND__@@IIJ@Z ENDP			; SWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?LoadTexture@@YAXXZ PROC				; LoadTexture
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 165
	push	ebp
	mov	ebp, esp
; Line 167
	pop	ebp
	ret	0
?LoadTexture@@YAXXZ ENDP				; LoadTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv153 = -208						; size = 4
$T2 = -204						; size = 28
_outs$ = -172						; size = 152
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?RenderText@@YAXXZ PROC					; RenderText
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 304
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RenderText@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 196				; 000000c4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 305
	push	1
	push	2
	lea	ecx, DWORD PTR _outs$[ebp]
	call	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 306
	push	OFFSET $SG189132
	lea	eax, DWORD PTR _outs$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 307
	call	?DXUTGetFPS@@YGMXZ			; DXUTGetFPS
	mov	esi, esp
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _outs$[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@M@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 308
	push	OFFSET $SG189179
	lea	ecx, DWORD PTR _outs$[ebp]
	push	ecx
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 309
	call	?DXUTGetDeviceStats@@YGPB_WXZ		; DXUTGetDeviceStats
	push	eax
	lea	edx, DWORD PTR _outs$[ebp]
	push	edx
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 310
	push	OFFSET $SG189236
	lea	eax, DWORD PTR _outs$[ebp]
	push	eax
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 311
	push	0
	call	?DXUTGetFrameStats@@YGPB_W_N@Z		; DXUTGetFrameStats
	push	eax
	lea	ecx, DWORD PTR _outs$[ebp]
	push	ecx
	call	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
	add	esp, 8
; Line 312
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	lea	ecx, DWORD PTR _outs$[ebp]
	call	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
	mov	DWORD PTR tv153[ebp], eax
	mov	ecx, DWORD PTR tv153[ebp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	mov	esi, esp
	push	eax
	mov	edi, esp
	call	DWORD PTR __imp__GetActiveWindow@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__SetWindowTextW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 313
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _outs$[ebp]
	call	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@RenderText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@RenderText:
	DD	1
	DD	$LN7@RenderText
$LN7@RenderText:
	DD	-172					; ffffff54H
	DD	152					; 00000098H
	DD	$LN5@RenderText
$LN5@RenderText:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RenderText@@YAXXZ$0:
	lea	ecx, DWORD PTR _outs$[ebp]
	jmp	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
__ehhandler$?RenderText@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RenderText@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RenderText@@YAXXZ ENDP					; RenderText
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?InitApp@@YAXXZ PROC					; InitApp
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	push	0
	push	0
	push	1
	push	1
	call	?DXUTInit@@YGJ_N0PA_W0@Z		; DXUTInit
; Line 288
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?InitApp@@YAXXZ ENDP					; InitApp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv637 = -432						; size = 4
tv363 = -428						; size = 4
tv349 = -424						; size = 4
tv335 = -420						; size = 4
tv883 = -416						; size = 8
tv879 = -404						; size = 4
tv873 = -400						; size = 8
tv869 = -388						; size = 4
tv844 = -384						; size = 8
tv842 = -376						; size = 4
tv839 = -370						; size = 2
tv831 = -368						; size = 8
tv827 = -360						; size = 4
$T2 = -356						; size = 4
$T3 = -352						; size = 4
$T4 = -348						; size = 4
$T5 = -344						; size = 4
$T6 = -340						; size = 4
$T7 = -336						; size = 4
$T8 = -332						; size = 4
$T9 = -328						; size = 4
$T10 = -324						; size = 4
$T11 = -320						; size = 4
$T12 = -316						; size = 28
$T13 = -288						; size = 16
_pos$14 = -260						; size = 16
_POS$15 = -240						; size = 16
_y$16 = -224						; size = 4
_x$17 = -220						; size = 4
_i$18 = -216						; size = 4
_ss$ = -208						; size = 176
_iStartingWidth$ = -28					; size = 4
_hr$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_pd3dDevice$ = 8					; size = 4
?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z PROC	; CreateSimulationBuffers
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 435
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	sub	esp, 428				; 000001acH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 436
	mov	DWORD PTR _hr$[ebp], 0
; Line 439
	cmp	DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A, 0 ; g_pParticles
	je	SHORT $LN35@CreateSimu
	mov	eax, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A, 0 ; g_pParticles
$LN35@CreateSimu:
; Line 440
	cmp	DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticlesSRV
	je	SHORT $LN34@CreateSimu
	mov	ecx, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticlesSRV
$LN34@CreateSimu:
; Line 441
	cmp	DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticlesUAV
	je	SHORT $LN33@CreateSimu
	mov	edx, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticlesUAV
$LN33@CreateSimu:
; Line 443
	cmp	DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A, 0 ; g_pSortedParticles
	je	SHORT $LN32@CreateSimu
	mov	eax, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A, 0 ; g_pSortedParticles
$LN32@CreateSimu:
; Line 444
	cmp	DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pSortedParticlesSRV
	je	SHORT $LN31@CreateSimu
	mov	ecx, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pSortedParticlesSRV
$LN31@CreateSimu:
; Line 445
	cmp	DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pSortedParticlesUAV
	je	SHORT $LN30@CreateSimu
	mov	edx, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pSortedParticlesUAV
$LN30@CreateSimu:
; Line 447
	cmp	DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A, 0 ; g_pParticleForces
	je	SHORT $LN29@CreateSimu
	mov	eax, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A, 0 ; g_pParticleForces
$LN29@CreateSimu:
; Line 448
	cmp	DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleForcesSRV
	je	SHORT $LN28@CreateSimu
	mov	ecx, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleForcesSRV
$LN28@CreateSimu:
; Line 449
	cmp	DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleForcesUAV
	je	SHORT $LN27@CreateSimu
	mov	edx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleForcesUAV
$LN27@CreateSimu:
; Line 451
	cmp	DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A, 0 ; g_pParticleDensity
	je	SHORT $LN26@CreateSimu
	mov	eax, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A, 0 ; g_pParticleDensity
$LN26@CreateSimu:
; Line 452
	cmp	DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleDensitySRV
	je	SHORT $LN25@CreateSimu
	mov	ecx, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleDensitySRV
$LN25@CreateSimu:
; Line 453
	cmp	DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleDensityUAV
	je	SHORT $LN24@CreateSimu
	mov	edx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleDensityUAV
$LN24@CreateSimu:
; Line 455
	cmp	DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridSRV
	je	SHORT $LN23@CreateSimu
	mov	eax, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridSRV
$LN23@CreateSimu:
; Line 456
	cmp	DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridUAV
	je	SHORT $LN22@CreateSimu
	mov	ecx, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridUAV
$LN22@CreateSimu:
; Line 457
	cmp	DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A, 0 ; g_pGrid
	je	SHORT $LN21@CreateSimu
	mov	edx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A, 0 ; g_pGrid
$LN21@CreateSimu:
; Line 459
	cmp	DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridPingPongSRV
	je	SHORT $LN20@CreateSimu
	mov	eax, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridPingPongSRV
$LN20@CreateSimu:
; Line 460
	cmp	DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridPingPongUAV
	je	SHORT $LN19@CreateSimu
	mov	ecx, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridPingPongUAV
$LN19@CreateSimu:
; Line 461
	cmp	DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A, 0 ; g_pGridPingPong
	je	SHORT $LN18@CreateSimu
	mov	edx, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A, 0 ; g_pGridPingPong
$LN18@CreateSimu:
; Line 463
	cmp	DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridIndicesSRV
	je	SHORT $LN17@CreateSimu
	mov	eax, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridIndicesSRV
$LN17@CreateSimu:
; Line 464
	cmp	DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridIndicesUAV
	je	SHORT $LN16@CreateSimu
	mov	ecx, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridIndicesUAV
$LN16@CreateSimu:
; Line 465
	cmp	DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A, 0 ; g_pGridIndices
	je	SHORT $LN15@CreateSimu
	mov	edx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A, 0 ; g_pGridIndices
$LN15@CreateSimu:
; Line 467
	cmp	DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
	je	SHORT $LN14@CreateSimu
	mov	eax, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
$LN14@CreateSimu:
; Line 468
	cmp	DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A, 0 ; m_pProcessCS
	je	SHORT $LN13@CreateSimu
	mov	ecx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A, 0 ; m_pProcessCS
$LN13@CreateSimu:
; Line 469
	cmp	DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
	je	SHORT $LN12@CreateSimu
	mov	edx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
$LN12@CreateSimu:
; Line 470
	cmp	DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
	je	SHORT $LN11@CreateSimu
	mov	eax, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
$LN11@CreateSimu:
; Line 474
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	mov	DWORD PTR tv827[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv827[ebp]
	mov	edx, DWORD PTR tv827[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv831[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv831[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fnstcw	WORD PTR tv839[ebp]
	movzx	eax, WORD PTR tv839[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv842[ebp], eax
	fldcw	WORD PTR tv842[ebp]
	fistp	QWORD PTR tv844[ebp]
	fldcw	WORD PTR tv839[ebp]
	mov	eax, DWORD PTR tv844[ebp]
	mov	DWORD PTR _iStartingWidth$[ebp], eax
; Line 475
	xor	ecx, ecx
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	mov	edx, 16					; 00000010H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T11[ebp], eax
	mov	eax, DWORD PTR $T11[ebp]
	mov	DWORD PTR ?particles@@3PAUParticle@@A, eax ; particles
; Line 476
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	shl	ecx, 4
	push	ecx
	push	0
	mov	edx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 477
	push	1
	push	3
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 478
	mov	DWORD PTR _i$18[ebp], 0
	jmp	SHORT $LN10@CreateSimu
$LN9@CreateSimu:
	mov	eax, DWORD PTR _i$18[ebp]
	add	eax, 1
	mov	DWORD PTR _i$18[ebp], eax
$LN10@CreateSimu:
	mov	ecx, DWORD PTR _i$18[ebp]
	cmp	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	jae	$LN8@CreateSimu
; Line 481
	mov	eax, DWORD PTR _i$18[ebp]
	xor	edx, edx
	div	DWORD PTR _iStartingWidth$[ebp]
	mov	DWORD PTR _x$17[ebp], edx
; Line 482
	mov	eax, DWORD PTR _i$18[ebp]
	xor	edx, edx
	div	DWORD PTR _iStartingWidth$[ebp]
	mov	DWORD PTR _y$16[ebp], eax
; Line 485
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _y$16[ebp]
	mov	DWORD PTR tv869[ebp], edx
	cvtsi2sd xmm0, DWORD PTR tv869[ebp]
	mov	eax, DWORD PTR tv869[ebp]
	shr	eax, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
	movsd	QWORD PTR tv873[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv873[ebp]
	mulss	xmm0, DWORD PTR _g_fInitialParticleSpacing
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _x$17[ebp]
	mov	DWORD PTR tv879[ebp], ecx
	cvtsi2sd xmm0, DWORD PTR tv879[ebp]
	mov	edx, DWORD PTR tv879[ebp]
	shr	edx, 31					; 0000001fH
	addsd	xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
	movsd	QWORD PTR tv883[ebp], xmm0
	cvtsd2ss xmm0, QWORD PTR tv883[ebp]
	mulss	xmm0, DWORD PTR _g_fInitialParticleSpacing
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _pos$14[ebp]
	call	??0XMFLOAT4@DirectX@@QAE@MMMM@Z		; DirectX::XMFLOAT4::XMFLOAT4
; Line 486
	lea	eax, DWORD PTR _ss$[ebp]
	test	eax, eax
	je	SHORT $LN38@CreateSimu
	lea	ecx, DWORD PTR _ss$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv335[ebp], ecx
	jmp	SHORT $LN39@CreateSimu
$LN38@CreateSimu:
	mov	DWORD PTR tv335[ebp], 0
$LN39@CreateSimu:
	push	OFFSET $SG189604
	mov	edx, DWORD PTR tv335[ebp]
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 487
	mov	esi, esp
	mov	eax, DWORD PTR _x$17[ebp]
	push	eax
	lea	ecx, DWORD PTR _ss$[ebp+16]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 488
	lea	ecx, DWORD PTR _ss$[ebp]
	test	ecx, ecx
	je	SHORT $LN40@CreateSimu
	lea	edx, DWORD PTR _ss$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR tv349[ebp], edx
	jmp	SHORT $LN41@CreateSimu
$LN40@CreateSimu:
	mov	DWORD PTR tv349[ebp], 0
$LN41@CreateSimu:
	push	OFFSET $SG189651
	mov	eax, DWORD PTR tv349[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 489
	mov	esi, esp
	mov	ecx, DWORD PTR _y$16[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ss$[ebp+16]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 490
	lea	edx, DWORD PTR _ss$[ebp]
	test	edx, edx
	je	SHORT $LN42@CreateSimu
	lea	eax, DWORD PTR _ss$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv363[ebp], eax
	jmp	SHORT $LN43@CreateSimu
$LN42@CreateSimu:
	mov	DWORD PTR tv363[ebp], 0
$LN43@CreateSimu:
	push	OFFSET $SG189679
	mov	ecx, DWORD PTR tv363[ebp]
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 491
	lea	ecx, DWORD PTR _pos$14[ebp]
	call	?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
	movaps	XMMWORD PTR $T13[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T13[ebp]
	movaps	XMMWORD PTR _POS$15[ebp], xmm0
; Line 492
	mov	edx, DWORD PTR _i$18[ebp]
	shl	edx, 4
	add	edx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
	movups	xmm0, XMMWORD PTR _POS$15[ebp]
	movups	XMMWORD PTR [edx], xmm0
; Line 493
	jmp	$LN9@CreateSimu
$LN8@CreateSimu:
; Line 495
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	lea	ecx, DWORD PTR _ss$[ebp]
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	DWORD PTR tv637[ebp], eax
	mov	ecx, DWORD PTR tv637[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 497
	push	0
	mov	ecx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
	push	ecx
	push	OFFSET ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	push	OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	OFFSET ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
	mov	edx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	edx
	call	??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z ; CreateStructuredBuffer<Particle>
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@CreateSimu
	push	1
	push	OFFSET $SG189696
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	497					; 000001f1H
	push	OFFSET $SG189697
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T10[ebp]
	jmp	$LN36@CreateSimu
$LN7@CreateSimu:
; Line 498
	push	OFFSET $SG189698
	mov	ecx, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 499
	push	OFFSET $SG189699
	mov	edx, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 500
	push	OFFSET $SG189700
	mov	eax, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 502
	push	0
	mov	ecx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
	push	ecx
	push	OFFSET ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
	push	OFFSET ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	push	OFFSET ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
	mov	edx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	edx
	call	??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z ; CreateStructuredBuffer<Particle>
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@CreateSimu
	push	1
	push	OFFSET $SG189706
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	502					; 000001f6H
	push	OFFSET $SG189707
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T9[ebp]
	jmp	$LN36@CreateSimu
$LN6@CreateSimu:
; Line 503
	push	OFFSET $SG189708
	mov	ecx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 504
	push	OFFSET $SG189709
	mov	edx, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 505
	push	OFFSET $SG189710
	mov	eax, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 507
	push	0
	push	0
	push	OFFSET ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	push	OFFSET ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	push	OFFSET ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	ecx
	call	??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z ; CreateStructuredBuffer<ParticleForces>
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN5@CreateSimu
	push	1
	push	OFFSET $SG189725
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	507					; 000001fbH
	push	OFFSET $SG189726
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN36@CreateSimu
$LN5@CreateSimu:
; Line 508
	push	OFFSET $SG189727
	mov	eax, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 509
	push	OFFSET $SG189728
	mov	ecx, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 510
	push	OFFSET $SG189729
	mov	edx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 512
	push	0
	push	0
	push	OFFSET ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	push	OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	push	OFFSET ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
	mov	eax, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	eax
	call	??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z ; CreateStructuredBuffer<ParticleDensity>
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@CreateSimu
	push	1
	push	OFFSET $SG189744
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	512					; 00000200H
	push	OFFSET $SG189745
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN36@CreateSimu
$LN4@CreateSimu:
; Line 513
	push	OFFSET $SG189746
	mov	edx, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 514
	push	OFFSET $SG189747
	mov	eax, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 515
	push	OFFSET $SG189748
	mov	ecx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 517
	push	0
	push	0
	push	OFFSET ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
	push	OFFSET ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	push	OFFSET ?g_pGrid@@3PAUID3D11Buffer@@A	; g_pGrid
	mov	edx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	edx
	call	??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z ; CreateStructuredBuffer<unsigned int>
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CreateSimu
	push	1
	push	OFFSET $SG189763
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	517					; 00000205H
	push	OFFSET $SG189764
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN36@CreateSimu
$LN3@CreateSimu:
; Line 518
	push	OFFSET $SG189765
	mov	ecx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 519
	push	OFFSET $SG189766
	mov	edx, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 520
	push	OFFSET $SG189767
	mov	eax, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 522
	push	0
	push	0
	push	OFFSET ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
	push	OFFSET ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
	push	OFFSET ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
	mov	ecx, DWORD PTR ?g_iNumParticles@@3IA	; g_iNumParticles
	push	ecx
	call	??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z ; CreateStructuredBuffer<unsigned int>
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@CreateSimu
	push	1
	push	OFFSET $SG189773
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	522					; 0000020aH
	push	OFFSET $SG189774
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN36@CreateSimu
$LN2@CreateSimu:
; Line 523
	push	OFFSET $SG189775
	mov	eax, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 524
	push	OFFSET $SG189776
	mov	ecx, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 525
	push	OFFSET $SG189777
	mov	edx, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 527
	push	0
	push	0
	push	OFFSET ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
	push	OFFSET ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
	push	OFFSET ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
	push	65536					; 00010000H
	call	??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z ; CreateStructuredBuffer<u322>
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CreateSimu
	push	1
	push	OFFSET $SG189792
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	527					; 0000020fH
	push	OFFSET $SG189793
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T4[ebp]
	jmp	SHORT $LN36@CreateSimu
$LN1@CreateSimu:
; Line 528
	push	OFFSET $SG189794
	mov	ecx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 529
	push	OFFSET $SG189795
	mov	edx, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 530
	push	OFFSET $SG189796
	mov	eax, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 532
	mov	ecx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
	mov	DWORD PTR $T3[ebp], ecx
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 534
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ss$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T2[ebp]
$LN36@CreateSimu:
; Line 535
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN50@CreateSimu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	2
$LN50@CreateSimu:
	DD	2
	DD	$LN49@CreateSimu
$LN49@CreateSimu:
	DD	-208					; ffffff30H
	DD	176					; 000000b0H
	DD	$LN46@CreateSimu
	DD	-260					; fffffefcH
	DD	16					; 00000010H
	DD	$LN47@CreateSimu
$LN47@CreateSimu:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN46@CreateSimu:
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z$0:
	lea	ecx, DWORD PTR _ss$[ebp]
	jmp	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__ehhandler$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-444]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z ENDP	; CreateSimulationBuffers
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDSV$ = -44						; size = 4
_pRTV$ = -40						; size = 4
_states$ = -32						; size = 12
_deviceContext$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pd3dDevice$ = 8					; size = 4
_pd3dImmediateContext$ = 12				; size = 4
_fTime$ = 16						; size = 8
_fElapsedTime$ = 24					; size = 4
_pUserContext$ = 28					; size = 4
?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z PROC ; OnD3D11FrameRender
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 1072
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1073
	call	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
	mov	DWORD PTR _deviceContext$[ebp], eax
; Line 1074
	call	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
	push	eax
	lea	ecx, DWORD PTR _states$[ebp]
	call	??0CommonStates@DirectX@@QAE@PAUID3D11Device@@@Z ; DirectX::CommonStates::CommonStates
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1075
	mov	esi, esp
	push	-1
	push	0
	lea	eax, DWORD PTR _states$[ebp]
	push	eax
	call	?NonPremultiplied@CommonStates@DirectX@@QBAPAUID3D11BlendState@@XZ ; DirectX::CommonStates::NonPremultiplied
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _deviceContext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _deviceContext$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+140]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1077
	call	?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ ; DXUTGetD3D11RenderTargetView
	mov	DWORD PTR _pRTV$[ebp], eax
; Line 1078
	mov	ecx, OFFSET ?White@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::White
	call	??BXMVECTORF32@DirectX@@QBEPBMXZ	; DirectX::XMVECTORF32::operator float const *
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _pRTV$[ebp]
	push	edx
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+200]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1079
	call	?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ ; DXUTGetD3D11DepthStencilView
	mov	DWORD PTR _pDSV$[ebp], eax
; Line 1080
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR _pDSV$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dImmediateContext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+212]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1081
	call	?UpdateColor@@YAXXZ			; UpdateColor
; Line 1082
	push	ecx
	movss	xmm0, DWORD PTR _fElapsedTime$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _pd3dImmediateContext$[ebp]
	push	eax
	call	?SimulateFluid@@YAXPAUID3D11DeviceContext@@M@Z ; SimulateFluid
; Line 1084
	add	esp, 4
	movss	xmm0, DWORD PTR _fElapsedTime$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _pd3dImmediateContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	call	?RenderFluid@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@M@Z ; RenderFluid
	add	esp, 12					; 0000000cH
; Line 1086
	call	?RenderText@@YAXXZ			; RenderText
; Line 1087
	call	?UpdateColor@@YAXXZ			; UpdateColor
; Line 1090
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _states$[ebp]
	call	??1CommonStates@DirectX@@UAE@XZ		; DirectX::CommonStates::~CommonStates
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@OnD3D11Fra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN7@OnD3D11Fra:
	DD	1
	DD	$LN6@OnD3D11Fra
$LN6@OnD3D11Fra:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN4@OnD3D11Fra
$LN4@OnD3D11Fra:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z$0:
	lea	ecx, DWORD PTR _states$[ebp]
	jmp	??1CommonStates@DirectX@@UAE@XZ		; DirectX::CommonStates::~CommonStates
__ehhandler$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z ENDP ; OnD3D11FrameRender
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pUserContext$ = 8					; size = 4
?OnD3D11DestroyDevice@@YGXPAX@Z PROC			; OnD3D11DestroyDevice
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 1106
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1107
	call	?DXUTGetGlobalResourceCache@@YGAAVCDXUTResourceCache@@XZ ; DXUTGetGlobalResourceCache
	mov	ecx, eax
	call	?OnDestroyDevice@CDXUTResourceCache@@QAEJXZ ; CDXUTResourceCache::OnDestroyDevice
; Line 1109
	cmp	DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A, 0 ; g_pcbSimulationConstants
	je	SHORT $LN45@OnD3D11Des
	mov	eax, DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A, 0 ; g_pcbSimulationConstants
$LN45@OnD3D11Des:
; Line 1110
	cmp	DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A, 0 ; g_pcbRenderConstants
	je	SHORT $LN44@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A, 0 ; g_pcbRenderConstants
$LN44@OnD3D11Des:
; Line 1111
	cmp	DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A, 0 ; g_pSortCB
	je	SHORT $LN43@OnD3D11Des
	mov	edx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A, 0 ; g_pSortCB
$LN43@OnD3D11Des:
; Line 1113
	cmp	DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A, 0 ; g_pParticleVS
	je	SHORT $LN42@OnD3D11Des
	mov	eax, DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A, 0 ; g_pParticleVS
$LN42@OnD3D11Des:
; Line 1114
	cmp	DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A, 0 ; g_pParticleGS
	je	SHORT $LN41@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A, 0 ; g_pParticleGS
$LN41@OnD3D11Des:
; Line 1115
	cmp	DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A, 0 ; g_pParticlePS
	je	SHORT $LN40@OnD3D11Des
	mov	edx, DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A, 0 ; g_pParticlePS
$LN40@OnD3D11Des:
; Line 1117
	cmp	DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pIntegrateCS
	je	SHORT $LN39@OnD3D11Des
	mov	eax, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pIntegrateCS
$LN39@OnD3D11Des:
; Line 1118
	cmp	DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_SimpleCS
	je	SHORT $LN38@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_SimpleCS
$LN38@OnD3D11Des:
; Line 1119
	cmp	DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_SimpleCS
	je	SHORT $LN37@OnD3D11Des
	mov	edx, DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_SimpleCS
$LN37@OnD3D11Des:
; Line 1120
	cmp	DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_SharedCS
	je	SHORT $LN36@OnD3D11Des
	mov	eax, DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_SharedCS
$LN36@OnD3D11Des:
; Line 1121
	cmp	DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_SharedCS
	je	SHORT $LN35@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_SharedCS
$LN35@OnD3D11Des:
; Line 1122
	cmp	DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_GridCS
	je	SHORT $LN34@OnD3D11Des
	mov	edx, DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_GridCS
$LN34@OnD3D11Des:
; Line 1123
	cmp	DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_GridCS
	je	SHORT $LN33@OnD3D11Des
	mov	eax, DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_GridCS
$LN33@OnD3D11Des:
; Line 1124
	cmp	DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pBuildGridCS
	je	SHORT $LN32@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pBuildGridCS
$LN32@OnD3D11Des:
; Line 1125
	cmp	DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pClearGridIndicesCS
	je	SHORT $LN31@OnD3D11Des
	mov	edx, DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pClearGridIndicesCS
$LN31@OnD3D11Des:
; Line 1126
	cmp	DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pBuildGridIndicesCS
	je	SHORT $LN30@OnD3D11Des
	mov	eax, DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pBuildGridIndicesCS
$LN30@OnD3D11Des:
; Line 1127
	cmp	DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pRearrangeParticlesCS
	je	SHORT $LN29@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pRearrangeParticlesCS
$LN29@OnD3D11Des:
; Line 1128
	cmp	DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A, 0 ; g_pSortBitonic
	je	SHORT $LN28@OnD3D11Des
	mov	edx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A, 0 ; g_pSortBitonic
$LN28@OnD3D11Des:
; Line 1129
	cmp	DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A, 0 ; g_pSortTranspose
	je	SHORT $LN27@OnD3D11Des
	mov	eax, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A, 0 ; g_pSortTranspose
$LN27@OnD3D11Des:
; Line 1131
	cmp	DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A, 0 ; g_pParticles
	je	SHORT $LN26@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A, 0 ; g_pParticles
$LN26@OnD3D11Des:
; Line 1132
	cmp	DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticlesSRV
	je	SHORT $LN25@OnD3D11Des
	mov	edx, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticlesSRV
$LN25@OnD3D11Des:
; Line 1133
	cmp	DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticlesUAV
	je	SHORT $LN24@OnD3D11Des
	mov	eax, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticlesUAV
$LN24@OnD3D11Des:
; Line 1135
	cmp	DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A, 0 ; g_pSortedParticles
	je	SHORT $LN23@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A, 0 ; g_pSortedParticles
$LN23@OnD3D11Des:
; Line 1136
	cmp	DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pSortedParticlesSRV
	je	SHORT $LN22@OnD3D11Des
	mov	edx, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pSortedParticlesSRV
$LN22@OnD3D11Des:
; Line 1137
	cmp	DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pSortedParticlesUAV
	je	SHORT $LN21@OnD3D11Des
	mov	eax, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pSortedParticlesUAV
$LN21@OnD3D11Des:
; Line 1139
	cmp	DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A, 0 ; g_pParticleForces
	je	SHORT $LN20@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A, 0 ; g_pParticleForces
$LN20@OnD3D11Des:
; Line 1140
	cmp	DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleForcesSRV
	je	SHORT $LN19@OnD3D11Des
	mov	edx, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleForcesSRV
$LN19@OnD3D11Des:
; Line 1141
	cmp	DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleForcesUAV
	je	SHORT $LN18@OnD3D11Des
	mov	eax, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleForcesUAV
$LN18@OnD3D11Des:
; Line 1143
	cmp	DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A, 0 ; g_pParticleDensity
	je	SHORT $LN17@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A, 0 ; g_pParticleDensity
$LN17@OnD3D11Des:
; Line 1144
	cmp	DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleDensitySRV
	je	SHORT $LN16@OnD3D11Des
	mov	edx, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleDensitySRV
$LN16@OnD3D11Des:
; Line 1145
	cmp	DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleDensityUAV
	je	SHORT $LN15@OnD3D11Des
	mov	eax, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleDensityUAV
$LN15@OnD3D11Des:
; Line 1147
	cmp	DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridSRV
	je	SHORT $LN14@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridSRV
$LN14@OnD3D11Des:
; Line 1148
	cmp	DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridUAV
	je	SHORT $LN13@OnD3D11Des
	mov	edx, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridUAV
$LN13@OnD3D11Des:
; Line 1149
	cmp	DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A, 0 ; g_pGrid
	je	SHORT $LN12@OnD3D11Des
	mov	eax, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A, 0 ; g_pGrid
$LN12@OnD3D11Des:
; Line 1151
	cmp	DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridPingPongSRV
	je	SHORT $LN11@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridPingPongSRV
$LN11@OnD3D11Des:
; Line 1152
	cmp	DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridPingPongUAV
	je	SHORT $LN10@OnD3D11Des
	mov	edx, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridPingPongUAV
$LN10@OnD3D11Des:
; Line 1153
	cmp	DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A, 0 ; g_pGridPingPong
	je	SHORT $LN9@OnD3D11Des
	mov	eax, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A, 0 ; g_pGridPingPong
$LN9@OnD3D11Des:
; Line 1155
	cmp	DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridIndicesSRV
	je	SHORT $LN8@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridIndicesSRV
$LN8@OnD3D11Des:
; Line 1156
	cmp	DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridIndicesUAV
	je	SHORT $LN7@OnD3D11Des
	mov	edx, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridIndicesUAV
$LN7@OnD3D11Des:
; Line 1157
	cmp	DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A, 0 ; g_pGridIndices
	je	SHORT $LN6@OnD3D11Des
	mov	eax, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A, 0 ; g_pGridIndices
$LN6@OnD3D11Des:
; Line 1159
	cmp	DWORD PTR ?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pRepositionParticlesCS
	je	SHORT $LN5@OnD3D11Des
	mov	ecx, DWORD PTR ?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRepositionParticlesCS
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRepositionParticlesCS
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pRepositionParticlesCS
$LN5@OnD3D11Des:
; Line 1161
	cmp	DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
	je	SHORT $LN4@OnD3D11Des
	mov	edx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
$LN4@OnD3D11Des:
; Line 1162
	cmp	DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A, 0 ; m_pProcessCS
	je	SHORT $LN3@OnD3D11Des
	mov	eax, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A, 0 ; m_pProcessCS
$LN3@OnD3D11Des:
; Line 1163
	cmp	DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
	je	SHORT $LN2@OnD3D11Des
	mov	ecx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
$LN2@OnD3D11Des:
; Line 1164
	cmp	DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
	je	SHORT $LN46@OnD3D11Des
	mov	edx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
$LN46@OnD3D11Des:
; Line 1165
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?OnD3D11DestroyDevice@@YGXPAX@Z ENDP			; OnD3D11DestroyDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pUserContext$ = 8					; size = 4
?OnD3D11ReleasingSwapChain@@YGXPAX@Z PROC		; OnD3D11ReleasingSwapChain
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 1097
	push	ebp
	mov	ebp, esp
; Line 1099
	pop	ebp
	ret	4
?OnD3D11ReleasingSwapChain@@YGXPAX@Z ENDP		; OnD3D11ReleasingSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pd3dDevice$ = 8					; size = 4
_pSwapChain$ = 12					; size = 4
_pBackBufferSurfaceDesc$ = 16				; size = 4
_pUserContext$ = 20					; size = 4
?OnD3D11ResizedSwapChain@@YGJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z PROC ; OnD3D11ResizedSwapChain
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 687
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 689
	xor	eax, eax
; Line 690
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OnD3D11ResizedSwapChain@@YGJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z ENDP ; OnD3D11ResizedSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv258 = -740						; size = 4
$T2 = -736						; size = 4
$T3 = -732						; size = 4
$T4 = -728						; size = 4
$T5 = -724						; size = 4
$T6 = -720						; size = 4
$T7 = -716						; size = 4
$T8 = -712						; size = 4
$T9 = -708						; size = 4
$T10 = -704						; size = 4
$T11 = -700						; size = 4
$T12 = -696						; size = 4
$T13 = -692						; size = 4
$T14 = -688						; size = 4
$T15 = -684						; size = 4
$T16 = -680						; size = 4
$T17 = -676						; size = 4
$T18 = -672						; size = 4
$T19 = -668						; size = 4
$T20 = -664						; size = 4
$T21 = -660						; size = 4
$T22 = -656						; size = 4
$T23 = -652						; size = 4
$T24 = -648						; size = 4
$T25 = -644						; size = 4
$T26 = -640						; size = 4
$T27 = -636						; size = 4
$T28 = -632						; size = 4
$T29 = -628						; size = 4
$T30 = -624						; size = 4
$T31 = -620						; size = 4
$T32 = -616						; size = 4
$T33 = -612						; size = 4
$T34 = -608						; size = 4
_CompilingShadersDlg$ = -600				; size = 556
_CSTarget$ = -40					; size = 4
_pBlob$ = -32						; size = 4
_pd3dImmediateContext$ = -24				; size = 4
_hr$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pd3dDevice$ = 8					; size = 4
_pBackBufferSurfaceDesc$ = 12				; size = 4
_pUserContext$ = 16					; size = 4
?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z PROC ; OnD3D11CreateDevice
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 567
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 728				; 000002d8H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-740]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 570
	call	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
	mov	DWORD PTR _pd3dImmediateContext$[ebp], eax
; Line 573
	mov	DWORD PTR _pBlob$[ebp], 0
; Line 577
	lea	eax, DWORD PTR _pBlob$[ebp]
	push	eax
	push	0
	push	2048					; 00000800H
	push	OFFSET $SG189858
	push	OFFSET $SG189859
	push	0
	push	OFFSET $SG189860
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN55@OnD3D11Cre
	push	1
	push	OFFSET $SG189864
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	577					; 00000241H
	push	OFFSET $SG189865
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN56@OnD3D11Cre
$LN55@OnD3D11Cre:
; Line 578
	mov	esi, esp
	push	OFFSET ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+48]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN54@OnD3D11Cre
	push	1
	push	OFFSET $SG189869
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	578					; 00000242H
	push	OFFSET $SG189870
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN56@OnD3D11Cre
$LN54@OnD3D11Cre:
; Line 579
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN53@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN53@OnD3D11Cre:
; Line 580
	push	OFFSET $SG189872
	mov	ecx, DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 582
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	push	OFFSET $SG189873
	push	OFFSET $SG189874
	push	0
	push	OFFSET $SG189875
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN52@OnD3D11Cre
	push	1
	push	OFFSET $SG189879
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	582					; 00000246H
	push	OFFSET $SG189880
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN56@OnD3D11Cre
$LN52@OnD3D11Cre:
; Line 583
	mov	esi, esp
	push	OFFSET ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
	push	0
	mov	ecx, DWORD PTR _pBlob$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edi, esp
	mov	eax, DWORD PTR _pBlob$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	call	ecx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN51@OnD3D11Cre
	push	1
	push	OFFSET $SG189884
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	583					; 00000247H
	push	OFFSET $SG189885
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN56@OnD3D11Cre
$LN51@OnD3D11Cre:
; Line 584
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN50@OnD3D11Cre
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN50@OnD3D11Cre:
; Line 585
	push	OFFSET $SG189887
	mov	eax, DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
	push	eax
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 587
	lea	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	push	0
	push	2048					; 00000800H
	push	OFFSET $SG189888
	push	OFFSET $SG189889
	push	0
	push	OFFSET $SG189890
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN49@OnD3D11Cre
	push	1
	push	OFFSET $SG189894
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	587					; 0000024bH
	push	OFFSET $SG189895
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN56@OnD3D11Cre
$LN49@OnD3D11Cre:
; Line 588
	mov	esi, esp
	push	OFFSET ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
	push	0
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pBlob$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	edi, esp
	mov	eax, DWORD PTR _pBlob$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN48@OnD3D11Cre
	push	1
	push	OFFSET $SG189899
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	588					; 0000024cH
	push	OFFSET $SG189900
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	jmp	$LN56@OnD3D11Cre
$LN48@OnD3D11Cre:
; Line 589
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN47@OnD3D11Cre
	mov	ecx, DWORD PTR _pBlob$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pBlob$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN47@OnD3D11Cre:
; Line 590
	push	OFFSET $SG189902
	mov	edx, DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
	push	edx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 593
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+148]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 45056				; 0000b000H
	jl	SHORT $LN58@OnD3D11Cre
	mov	DWORD PTR tv258[ebp], OFFSET $SG189904
	jmp	SHORT $LN59@OnD3D11Cre
$LN58@OnD3D11Cre:
	mov	DWORD PTR tv258[ebp], OFFSET $SG189905
$LN59@OnD3D11Cre:
	mov	ecx, DWORD PTR tv258[ebp]
	mov	DWORD PTR _CSTarget$[ebp], ecx
; Line 595
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??0CWaitDlg@@QAE@XZ			; CWaitDlg::CWaitDlg
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	push	OFFSET $SG189907
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	?ShowDialog@CWaitDlg@@QAE_NPA_W@Z	; CWaitDlg::ShowDialog
; Line 598
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG189908
	push	0
	push	OFFSET $SG189909
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN46@OnD3D11Cre
	push	1
	push	OFFSET $SG189914
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	598					; 00000256H
	push	OFFSET $SG189915
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T34[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T34[ebp]
	jmp	$LN56@OnD3D11Cre
$LN46@OnD3D11Cre:
; Line 599
	mov	esi, esp
	push	OFFSET ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN45@OnD3D11Cre
	push	1
	push	OFFSET $SG189920
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	599					; 00000257H
	push	OFFSET $SG189921
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T33[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T33[ebp]
	jmp	$LN56@OnD3D11Cre
$LN45@OnD3D11Cre:
; Line 600
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN44@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN44@OnD3D11Cre:
; Line 601
	push	OFFSET $SG189923
	mov	ecx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 603
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG189924
	push	0
	push	OFFSET $SG189925
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN43@OnD3D11Cre
	push	1
	push	OFFSET $SG189930
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	603					; 0000025bH
	push	OFFSET $SG189931
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T32[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T32[ebp]
	jmp	$LN56@OnD3D11Cre
$LN43@OnD3D11Cre:
; Line 604
	mov	esi, esp
	push	OFFSET ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN42@OnD3D11Cre
	push	1
	push	OFFSET $SG189936
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	604					; 0000025cH
	push	OFFSET $SG189937
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T31[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T31[ebp]
	jmp	$LN56@OnD3D11Cre
$LN42@OnD3D11Cre:
; Line 605
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN41@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN41@OnD3D11Cre:
; Line 606
	push	OFFSET $SG189939
	mov	ecx, DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 608
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG189940
	push	0
	push	OFFSET $SG189941
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN40@OnD3D11Cre
	push	1
	push	OFFSET $SG189946
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	608					; 00000260H
	push	OFFSET $SG189947
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T30[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T30[ebp]
	jmp	$LN56@OnD3D11Cre
$LN40@OnD3D11Cre:
; Line 609
	mov	esi, esp
	push	OFFSET ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN39@OnD3D11Cre
	push	1
	push	OFFSET $SG189952
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	609					; 00000261H
	push	OFFSET $SG189953
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T29[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T29[ebp]
	jmp	$LN56@OnD3D11Cre
$LN39@OnD3D11Cre:
; Line 610
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN38@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN38@OnD3D11Cre:
; Line 611
	push	OFFSET $SG189955
	mov	ecx, DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 613
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG189956
	push	0
	push	OFFSET $SG189957
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN37@OnD3D11Cre
	push	1
	push	OFFSET $SG189962
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	613					; 00000265H
	push	OFFSET $SG189963
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T28[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T28[ebp]
	jmp	$LN56@OnD3D11Cre
$LN37@OnD3D11Cre:
; Line 614
	mov	esi, esp
	push	OFFSET ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN36@OnD3D11Cre
	push	1
	push	OFFSET $SG189968
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	614					; 00000266H
	push	OFFSET $SG189969
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T27[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T27[ebp]
	jmp	$LN56@OnD3D11Cre
$LN36@OnD3D11Cre:
; Line 615
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN35@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN35@OnD3D11Cre:
; Line 616
	push	OFFSET $SG189971
	mov	ecx, DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 618
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG189972
	push	0
	push	OFFSET $SG189973
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN34@OnD3D11Cre
	push	1
	push	OFFSET $SG189978
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	618					; 0000026aH
	push	OFFSET $SG189979
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T26[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T26[ebp]
	jmp	$LN56@OnD3D11Cre
$LN34@OnD3D11Cre:
; Line 619
	mov	esi, esp
	push	OFFSET ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN33@OnD3D11Cre
	push	1
	push	OFFSET $SG189984
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	619					; 0000026bH
	push	OFFSET $SG189985
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T25[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T25[ebp]
	jmp	$LN56@OnD3D11Cre
$LN33@OnD3D11Cre:
; Line 620
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN32@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN32@OnD3D11Cre:
; Line 621
	push	OFFSET $SG189987
	mov	ecx, DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 623
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG189988
	push	0
	push	OFFSET $SG189989
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN31@OnD3D11Cre
	push	1
	push	OFFSET $SG189994
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	623					; 0000026fH
	push	OFFSET $SG189995
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T24[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T24[ebp]
	jmp	$LN56@OnD3D11Cre
$LN31@OnD3D11Cre:
; Line 624
	mov	esi, esp
	push	OFFSET ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN30@OnD3D11Cre
	push	1
	push	OFFSET $SG190000
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	624					; 00000270H
	push	OFFSET $SG190001
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T23[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T23[ebp]
	jmp	$LN56@OnD3D11Cre
$LN30@OnD3D11Cre:
; Line 625
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN29@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN29@OnD3D11Cre:
; Line 626
	push	OFFSET $SG190003
	mov	ecx, DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 628
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG190004
	push	0
	push	OFFSET $SG190005
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN28@OnD3D11Cre
	push	1
	push	OFFSET $SG190010
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	628					; 00000274H
	push	OFFSET $SG190011
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T22[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T22[ebp]
	jmp	$LN56@OnD3D11Cre
$LN28@OnD3D11Cre:
; Line 629
	mov	esi, esp
	push	OFFSET ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN27@OnD3D11Cre
	push	1
	push	OFFSET $SG190016
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	629					; 00000275H
	push	OFFSET $SG190017
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T21[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T21[ebp]
	jmp	$LN56@OnD3D11Cre
$LN27@OnD3D11Cre:
; Line 630
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN26@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN26@OnD3D11Cre:
; Line 631
	push	OFFSET $SG190019
	mov	ecx, DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 633
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG190020
	push	0
	push	OFFSET $SG190021
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN25@OnD3D11Cre
	push	1
	push	OFFSET $SG190026
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	633					; 00000279H
	push	OFFSET $SG190027
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T20[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T20[ebp]
	jmp	$LN56@OnD3D11Cre
$LN25@OnD3D11Cre:
; Line 634
	mov	esi, esp
	push	OFFSET ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN24@OnD3D11Cre
	push	1
	push	OFFSET $SG190032
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	634					; 0000027aH
	push	OFFSET $SG190033
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T19[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T19[ebp]
	jmp	$LN56@OnD3D11Cre
$LN24@OnD3D11Cre:
; Line 635
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN23@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN23@OnD3D11Cre:
; Line 636
	push	OFFSET $SG190035
	mov	ecx, DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 638
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG190036
	push	0
	push	OFFSET $SG190037
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN22@OnD3D11Cre
	push	1
	push	OFFSET $SG190042
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	638					; 0000027eH
	push	OFFSET $SG190043
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T18[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T18[ebp]
	jmp	$LN56@OnD3D11Cre
$LN22@OnD3D11Cre:
; Line 639
	mov	esi, esp
	push	OFFSET ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN21@OnD3D11Cre
	push	1
	push	OFFSET $SG190048
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	639					; 0000027fH
	push	OFFSET $SG190049
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T17[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T17[ebp]
	jmp	$LN56@OnD3D11Cre
$LN21@OnD3D11Cre:
; Line 640
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN20@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN20@OnD3D11Cre:
; Line 641
	push	OFFSET $SG190051
	mov	ecx, DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 643
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG190052
	push	0
	push	OFFSET $SG190053
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN19@OnD3D11Cre
	push	1
	push	OFFSET $SG190058
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	643					; 00000283H
	push	OFFSET $SG190059
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T16[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T16[ebp]
	jmp	$LN56@OnD3D11Cre
$LN19@OnD3D11Cre:
; Line 644
	mov	esi, esp
	push	OFFSET ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN18@OnD3D11Cre
	push	1
	push	OFFSET $SG190064
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	644					; 00000284H
	push	OFFSET $SG190065
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T15[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T15[ebp]
	jmp	$LN56@OnD3D11Cre
$LN18@OnD3D11Cre:
; Line 645
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN17@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN17@OnD3D11Cre:
; Line 646
	push	OFFSET $SG190067
	mov	ecx, DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 648
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG190068
	push	0
	push	OFFSET $SG190069
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN16@OnD3D11Cre
	push	1
	push	OFFSET $SG190074
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	648					; 00000288H
	push	OFFSET $SG190075
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T14[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T14[ebp]
	jmp	$LN56@OnD3D11Cre
$LN16@OnD3D11Cre:
; Line 649
	mov	esi, esp
	push	OFFSET ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN15@OnD3D11Cre
	push	1
	push	OFFSET $SG190080
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	649					; 00000289H
	push	OFFSET $SG190081
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T13[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T13[ebp]
	jmp	$LN56@OnD3D11Cre
$LN15@OnD3D11Cre:
; Line 650
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN14@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN14@OnD3D11Cre:
; Line 651
	push	OFFSET $SG190083
	mov	ecx, DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 654
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG190084
	push	0
	push	OFFSET $SG190085
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN13@OnD3D11Cre
	push	1
	push	OFFSET $SG190090
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	654					; 0000028eH
	push	OFFSET $SG190091
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T12[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T12[ebp]
	jmp	$LN56@OnD3D11Cre
$LN13@OnD3D11Cre:
; Line 655
	mov	esi, esp
	push	OFFSET ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN12@OnD3D11Cre
	push	1
	push	OFFSET $SG190096
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	655					; 0000028fH
	push	OFFSET $SG190097
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T11[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T11[ebp]
	jmp	$LN56@OnD3D11Cre
$LN12@OnD3D11Cre:
; Line 656
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN11@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN11@OnD3D11Cre:
; Line 657
	push	OFFSET $SG190099
	mov	ecx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 659
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG190100
	push	0
	push	OFFSET $SG190101
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN10@OnD3D11Cre
	push	1
	push	OFFSET $SG190106
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	659					; 00000293H
	push	OFFSET $SG190107
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T10[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T10[ebp]
	jmp	$LN56@OnD3D11Cre
$LN10@OnD3D11Cre:
; Line 660
	mov	esi, esp
	push	OFFSET ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN9@OnD3D11Cre
	push	1
	push	OFFSET $SG190112
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	660					; 00000294H
	push	OFFSET $SG190113
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T9[ebp]
	jmp	$LN56@OnD3D11Cre
$LN9@OnD3D11Cre:
; Line 661
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN8@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN8@OnD3D11Cre:
; Line 662
	push	OFFSET $SG190115
	mov	ecx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 664
	lea	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	push	0
	push	2048					; 00000800H
	mov	eax, DWORD PTR _CSTarget$[ebp]
	push	eax
	push	OFFSET $SG190116
	push	0
	push	OFFSET $SG190117
	call	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@OnD3D11Cre
	push	1
	push	OFFSET $SG190122
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	664					; 00000298H
	push	OFFSET $SG190123
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN56@OnD3D11Cre
$LN7@OnD3D11Cre:
; Line 665
	mov	esi, esp
	push	OFFSET ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
	push	0
	mov	edx, DWORD PTR _pBlob$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edi, esp
	mov	ecx, DWORD PTR _pBlob$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@OnD3D11Cre
	push	1
	push	OFFSET $SG190128
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	665					; 00000299H
	push	OFFSET $SG190129
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN56@OnD3D11Cre
$LN6@OnD3D11Cre:
; Line 666
	cmp	DWORD PTR _pBlob$[ebp], 0
	je	SHORT $LN5@OnD3D11Cre
	mov	eax, DWORD PTR _pBlob$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pBlob$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pBlob$[ebp], 0
$LN5@OnD3D11Cre:
; Line 667
	push	OFFSET $SG190131
	mov	ecx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
	push	ecx
	call	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
	add	esp, 8
; Line 668
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	?DestroyDialog@CWaitDlg@@QAEXXZ		; CWaitDlg::DestroyDialog
; Line 671
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	call	?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z ; CreateSimulationBuffers
	add	esp, 4
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@OnD3D11Cre
	push	1
	push	OFFSET $SG190136
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	671					; 0000029fH
	push	OFFSET $SG190137
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T6[ebp]
	jmp	$LN56@OnD3D11Cre
$LN4@OnD3D11Cre:
; Line 674
	push	OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
	mov	ecx, DWORD PTR _pd3dDevice$[ebp]
	push	ecx
	call	??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<CBSimulationConstants>
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@OnD3D11Cre
	push	1
	push	OFFSET $SG190148
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	674					; 000002a2H
	push	OFFSET $SG190149
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T5[ebp]
	jmp	$LN56@OnD3D11Cre
$LN3@OnD3D11Cre:
; Line 675
	push	OFFSET ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
	mov	eax, DWORD PTR _pd3dDevice$[ebp]
	push	eax
	call	??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<CBRenderConstants>
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@OnD3D11Cre
	push	1
	push	OFFSET $SG190160
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	675					; 000002a3H
	push	OFFSET $SG190161
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T4[ebp]
	jmp	SHORT $LN56@OnD3D11Cre
$LN2@OnD3D11Cre:
; Line 676
	push	OFFSET ?g_pSortCB@@3PAUID3D11Buffer@@A	; g_pSortCB
	mov	edx, DWORD PTR _pd3dDevice$[ebp]
	push	edx
	call	??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<SortCB>
	add	esp, 8
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@OnD3D11Cre
	push	1
	push	OFFSET $SG190172
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	676					; 000002a4H
	push	OFFSET $SG190173
	call	?DXUTTrace@@YGJPBDKJPB_W_N@Z		; DXUTTrace
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T3[ebp]
	jmp	SHORT $LN56@OnD3D11Cre
$LN1@OnD3D11Cre:
; Line 678
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	call	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
	mov	eax, DWORD PTR $T2[ebp]
$LN56@OnD3D11Cre:
; Line 679
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN65@OnD3D11Cre
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 740				; 000002e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN65@OnD3D11Cre:
	DD	2
	DD	$LN64@OnD3D11Cre
$LN64@OnD3D11Cre:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN61@OnD3D11Cre
	DD	-600					; fffffda8H
	DD	556					; 0000022cH
	DD	$LN62@OnD3D11Cre
$LN62@OnD3D11Cre:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	83					; 00000053H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	68					; 00000044H
	DB	108					; 0000006cH
	DB	103					; 00000067H
	DB	0
$LN61@OnD3D11Cre:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z$0:
	lea	ecx, DWORD PTR _CompilingShadersDlg$[ebp]
	jmp	??1CWaitDlg@@QAE@XZ			; CWaitDlg::~CWaitDlg
__ehhandler$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-740]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z ENDP ; OnD3D11CreateDevice
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_AdapterInfo$ = 8					; size = 4
_Output$ = 12						; size = 4
_DeviceInfo$ = 16					; size = 4
_BackBufferFormat$ = 20					; size = 4
_bWindowed$ = 24					; size = 1
_pUserContext$ = 28					; size = 4
?IsD3D11DeviceAcceptable@@YG_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z PROC ; IsD3D11DeviceAcceptable
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 354
	push	ebp
	mov	ebp, esp
; Line 355
	mov	eax, DWORD PTR _DeviceInfo$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN1@IsD3D11Dev
; Line 356
	xor	al, al
	jmp	SHORT $LN2@IsD3D11Dev
$LN1@IsD3D11Dev:
; Line 358
	mov	al, 1
$LN2@IsD3D11Dev:
; Line 359
	pop	ebp
	ret	24					; 00000018H
?IsD3D11DeviceAcceptable@@YG_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z ENDP ; IsD3D11DeviceAcceptable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -36						; size = 4
$T1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
_rect$4 = -20						; size = 4
_point$5 = -12						; size = 8
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_pbNoFurtherProcessing$ = 24				; size = 4
_pUserContext$ = 28					; size = 4
?MsgProc@@YGJPAUHWND__@@IIJPA_NPAX@Z PROC		; MsgProc
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 322
	cmp	DWORD PTR _uMsg$[ebp], 513		; 00000201H
	jne	$LN4@MsgProc
; Line 325
	mov	esi, esp
	lea	eax, DWORD PTR _point$5[ebp]
	push	eax
	call	DWORD PTR __imp__GetCursorPos@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 326
	cvtsi2ss xmm0, DWORD PTR _point$5[ebp]
	movss	DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A, xmm0
; Line 327
	cvtsi2ss xmm0, DWORD PTR _point$5[ebp+4]
	movss	DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4, xmm0
; Line 328
	mov	DWORD PTR $T3[ebp], 16			; 00000010H
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN7@MsgProc
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv81[ebp], ecx
	jmp	SHORT $LN8@MsgProc
$LN7@MsgProc:
	mov	DWORD PTR tv81[ebp], 0
$LN8@MsgProc:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR _rect$4[ebp], edx
; Line 329
	mov	esi, esp
	mov	eax, DWORD PTR _rect$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@MsgProc
; Line 331
	mov	edx, DWORD PTR _rect$4[ebp]
	mov	eax, DWORD PTR [edx+8]
	cdq
	sub	eax, edx
	sar	eax, 1
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A
	subss	xmm1, xmm0
	movss	DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A, xmm1
; Line 332
	mov	eax, DWORD PTR _rect$4[ebp]
	mov	eax, DWORD PTR [eax+12]
	cdq
	sub	eax, edx
	sar	eax, 1
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4
	subss	xmm1, xmm0
	movss	DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4, xmm1
; Line 333
	movss	xmm0, DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4
	mulss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4, xmm0
$LN3@MsgProc:
; Line 335
	mov	ecx, DWORD PTR _rect$4[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 336
	mov	eax, 1
	jmp	SHORT $LN5@MsgProc
	jmp	SHORT $LN1@MsgProc
$LN4@MsgProc:
; Line 338
	mov	eax, 514				; 00000202H
	test	eax, eax
	je	SHORT $LN1@MsgProc
; Line 340
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A, xmm0
; Line 341
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4, xmm0
; Line 342
	mov	eax, 1
	jmp	SHORT $LN5@MsgProc
$LN1@MsgProc:
; Line 344
	xor	eax, eax
$LN5@MsgProc:
; Line 345
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@MsgProc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN11@MsgProc:
	DD	1
	DD	$LN10@MsgProc
$LN10@MsgProc:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN9@MsgProc
$LN9@MsgProc:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?MsgProc@@YGJPAUHWND__@@IIJPA_NPAX@Z ENDP		; MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDeviceSettings$ = 8					; size = 4
_pUserContext$ = 12					; size = 4
?ModifyDeviceSettings@@YG_NPAUDXUTDeviceSettings@@PAX@Z PROC ; ModifyDeviceSettings
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 295
	push	ebp
	mov	ebp, esp
; Line 296
	mov	al, 1
; Line 297
	pop	ebp
	ret	8
?ModifyDeviceSettings@@YG_NPAUDXUTDeviceSettings@@PAX@Z ENDP ; ModifyDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CBRenderConstants@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBRenderConstants@@QAE@XZ PROC			; CBRenderConstants::CBRenderConstants, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0XMFLOAT4X4@DirectX@@QAE@XZ		; DirectX::XMFLOAT4X4::XMFLOAT4X4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBRenderConstants@@QAE@XZ ENDP			; CBRenderConstants::CBRenderConstants
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__EmousePosition@@YAXXZ
text$di	SEGMENT
??__EmousePosition@@YAXXZ PROC				; `dynamic initializer for 'mousePosition'', COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?mousePosition@@3UXMFLOAT2A@DirectX@@A ; mousePosition
	call	??0XMFLOAT2A@DirectX@@QAE@XZ		; DirectX::XMFLOAT2A::XMFLOAT2A
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EmousePosition@@YAXXZ ENDP				; `dynamic initializer for 'mousePosition''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z PROC ; std::allocator<Particle>::destroy<Particle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z ENDP ; std::allocator<Particle>::destroy<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z PROC ; std::allocator_traits<std::allocator<Particle> >::destroy<Particle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z ; std::allocator<Particle>::destroy<Particle>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z ENDP ; std::allocator_traits<std::allocator<Particle> >::destroy<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z PROC ; std::_Wrap_alloc<std::allocator<Particle> >::destroy<Particle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z ; std::allocator_traits<std::allocator<Particle> >::destroy<Particle>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z ENDP ; std::_Wrap_alloc<std::allocator<Particle> >::destroy<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z	; std::forward<wchar_t * &>
	add	esp, 4
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z ; std::_Wrap_alloc<std::allocator<Particle> >::destroy<Particle>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z PROC ; std::_Ptr_cat<Particle,Particle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z ENDP ; std::_Ptr_cat<Particle,Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z	; std::forward<wchar_t * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z PROC		; std::forward<wchar_t * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@_W@std@@YAPA_WIPA_W@Z PROC			; std::_Allocate<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 2147483647	; 7fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@_W@std@@YAPA_WIPA_W@Z ENDP			; std::_Allocate<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z ; std::_Ptr_cat<Particle,Particle>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 141
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
; Line 143
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 130
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 132
	mov	esi, esp
	call	DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 133
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@sentry:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 123
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 124
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@sentry
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@sentry
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Ostr$[ebp]
	je	SHORT $LN1@sentry
; Line 125
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:
; Line 126
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 127
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -16						; size = 4
tv86 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 108
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv86[ebp], edx
	mov	eax, DWORD PTR tv86[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv86[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Sentry_bas:
; Line 109
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -16						; size = 4
tv87 = -12						; size = 4
tv73 = -8						; size = 4
_this$ = -4						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 101
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], ecx
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv87[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Sentry_bas:
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 141
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
; Line 143
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 130
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 132
	mov	esi, esp
	call	DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 133
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@sentry:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 123
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 124
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@sentry
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@sentry
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Ostr$[ebp]
	je	SHORT $LN1@sentry
; Line 125
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:
; Line 126
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 127
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -16						; size = 4
tv86 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 108
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv86[ebp], edx
	mov	eax, DWORD PTR tv86[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv86[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Sentry_bas:
; Line 109
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -16						; size = 4
tv87 = -12						; size = 4
tv73 = -8						; size = 4
_this$ = -4						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 101
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], ecx
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv87[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Sentry_bas:
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@_W@std@@YAPA_WAA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@_W@std@@YAPA_WAA_W@Z PROC			; std::addressof<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@_W@std@@YAPA_WAA_W@Z ENDP			; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z	; std::forward<wchar_t * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	add	edx, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR [eax+4]
	adc	esi, DWORD PTR [ecx+12]
	mov	eax, edx
	mov	edx, esi
; Line 69
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__FParticlesRW@@YAXXZ
text$yd	SEGMENT
??__FParticlesRW@@YAXXZ PROC				; `dynamic atexit destructor for 'ParticlesRW'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ParticlesRW
	call	??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::vector<Particle,std::allocator<Particle> >::~vector<Particle,std::allocator<Particle> >
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__FParticlesRW@@YAXXZ ENDP				; `dynamic atexit destructor for 'ParticlesRW''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__EParticlesRW@@YAXXZ
text$di	SEGMENT
??__EParticlesRW@@YAXXZ PROC				; `dynamic initializer for 'ParticlesRW'', COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\simdoperations.h
; Line 8
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ParticlesRW
	call	??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::vector<Particle,std::allocator<Particle> >::vector<Particle,std::allocator<Particle> >
	push	OFFSET ??__FParticlesRW@@YAXXZ		; `dynamic atexit destructor for 'ParticlesRW''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EParticlesRW@@YAXXZ ENDP				; `dynamic initializer for 'ParticlesRW''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ PROC ; std::vector<Particle,std::allocator<Particle> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z ; std::vector<Particle,std::allocator<Particle> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z ; std::_Wrap_alloc<std::allocator<Particle> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ ENDP ; std::vector<Particle,std::allocator<Particle> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z PROC ; std::vector<Particle,std::allocator<Particle> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z ENDP ; std::vector<Particle,std::allocator<Particle> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ PROC ; std::vector<Particle,std::allocator<Particle> >::~vector<Particle,std::allocator<Particle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ ; std::vector<Particle,std::allocator<Particle> >::_Tidy
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::~_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::vector<Particle,std::allocator<Particle> >::~vector<Particle,std::allocator<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ PROC ; std::vector<Particle,std::allocator<Particle> >::vector<Particle,std::allocator<Particle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@UParticle@@@std@@QAE@XZ	; std::allocator<Particle>::allocator<Particle>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::vector<Particle,std::allocator<Particle> >::vector<Particle,std::allocator<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Particle> >::_Wrap_alloc<std::allocator<Particle> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::~_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Free_proxy
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::~_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Particle> >::_Vector_val<std::_Simple_types<Particle> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Particle> >::~_Vector_val<std::_Simple_types<Particle> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Particle> >::~_Vector_val<std::_Simple_types<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Particle> >::_Vector_val<std::_Simple_types<Particle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Particle> >::_Vector_val<std::_Simple_types<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z PROC ; std::_Wrap_alloc<std::allocator<Particle> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z ; std::allocator<Particle>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<Particle> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<Particle> >::_Wrap_alloc<std::allocator<Particle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UParticle@@@std@@QAE@XZ	; std::allocator<Particle>::allocator<Particle>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<Particle> >::_Wrap_alloc<std::allocator<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z PROC ; std::allocator<Particle>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z ENDP ; std::allocator<Particle>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@UParticle@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UParticle@@@std@@QAE@XZ PROC		; std::allocator<Particle>::allocator<Particle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UParticle@@@std@@QAE@XZ ENDP		; std::allocator<Particle>::allocator<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_vPlanes@@YAXXZ
text$di	SEGMENT
??__Eg_vPlanes@@YAXXZ PROC				; `dynamic initializer for 'g_vPlanes'', COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\constants.h
; Line 108
	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET _g_vPlanes
	call	??0XMFLOAT3A@DirectX@@QAE@MMM@Z		; DirectX::XMFLOAT3A::XMFLOAT3A
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET _g_vPlanes+16
	call	??0XMFLOAT3A@DirectX@@QAE@MMM@Z		; DirectX::XMFLOAT3A::XMFLOAT3A
	push	ecx
	movss	xmm0, DWORD PTR _g_fMapWidth
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET _g_vPlanes+32
	call	??0XMFLOAT3A@DirectX@@QAE@MMM@Z		; DirectX::XMFLOAT3A::XMFLOAT3A
	push	ecx
	movss	xmm0, DWORD PTR _g_fMapHeight
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET _g_vPlanes+48
	call	??0XMFLOAT3A@DirectX@@QAE@MMM@Z		; DirectX::XMFLOAT3A::XMFLOAT3A
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_vPlanes@@YAXXZ ENDP				; `dynamic initializer for 'g_vPlanes''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_fMapWidth@@YAXXZ
text$di	SEGMENT
??__Eg_fMapWidth@@YAXXZ PROC				; `dynamic initializer for 'g_fMapWidth'', COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\constants.h
; Line 99
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR __real@3faaaaab
	mulss	xmm0, DWORD PTR _g_fMapHeight
	movss	DWORD PTR _g_fMapWidth, xmm0
	pop	ebp
	ret	0
??__Eg_fMapWidth@@YAXXZ ENDP				; `dynamic initializer for 'g_fMapWidth''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_vGravity@@YAXXZ
text$di	SEGMENT
??__Eg_vGravity@@YAXXZ PROC				; `dynamic initializer for 'g_vGravity'', COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\constants.h
; Line 92
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _GRAVITY_DOWN
	mov	DWORD PTR ?g_vGravity@@3UXMFLOAT2A@DirectX@@A, eax
	mov	ecx, DWORD PTR _GRAVITY_DOWN+4
	mov	DWORD PTR ?g_vGravity@@3UXMFLOAT2A@DirectX@@A+4, ecx
	mov	edx, DWORD PTR _GRAVITY_DOWN+8
	mov	DWORD PTR ?g_vGravity@@3UXMFLOAT2A@DirectX@@A+8, edx
	mov	eax, DWORD PTR _GRAVITY_DOWN+12
	mov	DWORD PTR ?g_vGravity@@3UXMFLOAT2A@DirectX@@A+12, eax
	pop	ebp
	ret	0
??__Eg_vGravity@@YAXXZ ENDP				; `dynamic initializer for 'g_vGravity''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__EGRAVITY_DOWN@@YAXXZ
text$di	SEGMENT
??__EGRAVITY_DOWN@@YAXXZ PROC				; `dynamic initializer for 'GRAVITY_DOWN'', COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\constants.h
; Line 91
	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	ecx, OFFSET _GRAVITY_DOWN
	call	??0XMFLOAT2A@DirectX@@QAE@MM@Z		; DirectX::XMFLOAT2A::XMFLOAT2A
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EGRAVITY_DOWN@@YAXXZ ENDP				; `dynamic initializer for 'GRAVITY_DOWN''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran:
; Line 2296
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 2291
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Ptr$3 = -8						; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 8
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$3[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$3[ebp]
	push	ecx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$3[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 7
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 2286
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	lea	eax, DWORD PTR [eax+edx*2]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 8
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -6						; size = 2
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	xor	eax, eax
	mov	WORD PTR $T1[ebp], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+20], edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Newsize$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ; std::char_traits<wchar_t>::assign
	add	esp, 8
; Line 2238
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -56						; size = 4
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv202 = -44						; size = 4
$T2 = -39						; size = 1
$T3 = -38						; size = 1
$T4 = -37						; size = 1
__Ptr$ = -32						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 7
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 2230
	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
; Line 2231
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 2232
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN11@Copy:
; Line 2233
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Copy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN23@Copy:
	DD	1
	DD	$LN22@Copy
$LN22@Copy:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN20@Copy
$LN20@Copy:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -16						; size = 4
$T1 = -9						; size = 1
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1738
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1739
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
; Line 1740
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	sub	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], edx
; Line 1351
	mov	eax, DWORD PTR __Newsize$1[ebp]
	sub	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Ptr$2[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR __Ptr$2[ebp]
	push	ecx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	edx, DWORD PTR __Newsize$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z	; std::_Debug_pointer<wchar_t>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	edx, DWORD PTR __Roff$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	push	eax
	call	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 992
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 935
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 936
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jae	SHORT $LN2@Assign_rv
; Line 938
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
	add	esp, 12					; 0000000cH
; Line 939
	jmp	SHORT $LN1@Assign_rv
$LN2@Assign_rv:
; Line 941
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	ecx, eax
	call	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
; Line 942
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN1@Assign_rv:
; Line 944
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 945
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
; Line 946
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 947
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 887
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
; Line 888
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 889
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
; Line 890
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 766
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 767
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 768
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 769
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 738
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 739
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 740
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 8
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@_W@std@@YAPA_WAA_W@Z	; std::addressof<wchar_t>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@_W@std@@QAE@XZ		; std::allocator<wchar_t>::allocator<wchar_t>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@_W@std@@QBEIXZ	; std::allocator<wchar_t>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 2147483647				; 7fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@_W@std@@YAPA_WIPA_W@Z	; std::_Allocate<wchar_t>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T2 = -64						; size = 4
$T3 = -60						; size = 12
__Pfmod$4 = -48						; size = 4
__Pf$5 = -44						; size = 4
__Id$6 = -40						; size = 4
__Psave$7 = -32						; size = 4
__Lock$8 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 561
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 567
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 569
	mov	eax, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
	mov	DWORD PTR __Psave$7[ebp], eax
; Line 571
	mov	esi, esp
	mov	ecx, DWORD PTR __imp_?id@?$ctype@_W@std@@2V0locale@2@A
	call	DWORD PTR __imp_??Bid@locale@std@@QAEIXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Id$6[ebp], eax
; Line 572
	mov	ecx, DWORD PTR __Id$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Loc$[ebp]
	call	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
	mov	DWORD PTR __Pf$5[ebp], eax
; Line 574
	cmp	DWORD PTR __Pf$5[ebp], 0
	je	SHORT $LN6@use_facet
	jmp	$LN5@use_facet
$LN6@use_facet:
; Line 576
	cmp	DWORD PTR __Psave$7[ebp], 0
	je	SHORT $LN4@use_facet
; Line 577
	mov	edx, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], edx
	jmp	SHORT $LN5@use_facet
$LN4@use_facet:
; Line 578
	mov	esi, esp
	mov	eax, DWORD PTR __Loc$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Psave$7[ebp]
	push	ecx
	call	DWORD PTR __imp_?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN2@use_facet
; Line 582
	mov	esi, esp
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T3[ebp]
	call	DWORD PTR __imp_??0bad_cast@std@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	__CxxThrowException@8
; Line 588
	jmp	SHORT $LN5@use_facet
$LN2@use_facet:
; Line 590
	mov	eax, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pf$5[ebp], eax
; Line 591
	mov	ecx, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B, ecx ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
; Line 593
	mov	edx, DWORD PTR __Psave$7[ebp]
	mov	DWORD PTR __Pfmod$4[ebp], edx
; Line 594
	mov	eax, DWORD PTR __Pfmod$4[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Pfmod$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 600
	mov	ecx, DWORD PTR __Pfmod$4[ebp]
	push	ecx
	call	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register
	add	esp, 4
$LN5@use_facet:
; Line 604
	mov	edx, DWORD PTR __Pf$5[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T2[ebp]
$LN8@use_facet:
; Line 607
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@use_facet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@use_facet:
	DD	2
	DD	$LN13@use_facet
$LN13@use_facet:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@use_facet
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@use_facet
$LN11@use_facet:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN10@use_facet:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$8[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	esi, esp
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 608
	mov	esi, esp
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Winerror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 564
	mov	esi, esp
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@_W@std@@YAXPB_W0I@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z PROC		; std::_Debug_pointer<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
	push	esi
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z ENDP		; std::_Debug_pointer<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
	push	esi
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z PROC ; std::_DebugHeapDelete<std::_Facet_base>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xdebug
; Line 56
	push	ebp
	mov	ebp, esp
	push	esi
; Line 57
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@DebugHeapD
; Line 59
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 62
	mov	esi, esp
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DebugHeapD:
; Line 64
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z ENDP ; std::_DebugHeapDelete<std::_Facet_base>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
tv83 = -20						; size = 4
tv71 = -16						; size = 4
__Ptr$1 = -12						; size = 4
__Facptr$ = -8						; size = 4
_this$ = -4						; size = 4
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 466
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Id$[ebp]
	cmp	edx, DWORD PTR [ecx+12]
	jae	SHORT $LN6@Getfacet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR __Id$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN7@Getfacet
$LN6@Getfacet:
	mov	DWORD PTR tv71[ebp], 0
$LN7@Getfacet:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR __Facptr$[ebp], edx
; Line 469
	cmp	DWORD PTR __Facptr$[ebp], 0
	jne	SHORT $LN2@Getfacet
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, BYTE PTR [ecx+20]
	test	edx, edx
	jne	SHORT $LN3@Getfacet
$LN2@Getfacet:
; Line 470
	mov	eax, DWORD PTR __Facptr$[ebp]
	jmp	SHORT $LN4@Getfacet
; Line 471
	jmp	SHORT $LN4@Getfacet
$LN3@Getfacet:
; Line 473
	mov	esi, esp
	call	DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Ptr$1[ebp], eax
; Line 476
	mov	eax, DWORD PTR __Ptr$1[ebp]
	mov	ecx, DWORD PTR __Id$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN8@Getfacet
	mov	edx, DWORD PTR __Ptr$1[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Id$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR tv83[ebp], edx
	jmp	SHORT $LN9@Getfacet
$LN8@Getfacet:
	mov	DWORD PTR tv83[ebp], 0
$LN9@Getfacet:
	mov	eax, DWORD PTR tv83[ebp]
$LN4@Getfacet:
; Line 478
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 438
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 439
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@locale
; Line 440
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z ; std::_DebugHeapDelete<std::_Facet_base>
	add	esp, 4
$LN2@locale:
; Line 441
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DestroyDialog@CWaitDlg@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyDialog@CWaitDlg@@QAEXXZ PROC			; CWaitDlg::DestroyDialog, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 96
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 1
; Line 99
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@DestroyDia
; Line 100
	jmp	SHORT $LN4@DestroyDia
$LN3@DestroyDia:
; Line 102
	mov	esi, esp
	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@DestroyDia
; Line 105
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DestroyDia:
; Line 106
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 108
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__IsWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@DestroyDia
; Line 109
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetForegroundWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@DestroyDia:
; Line 110
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyDialog@CWaitDlg@@QAEXXZ ENDP			; CWaitDlg::DestroyDialog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ShowDialog@CWaitDlg@@QAE_NPA_W@Z
_TEXT	SEGMENT
_threadAddr$ = -12					; size = 4
_this$ = -4						; size = 4
_pszInputText$ = 8					; size = 4
?ShowDialog@CWaitDlg@@QAE_NPA_W@Z PROC			; CWaitDlg::ShowDialog, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 82
	call	?DXUTIsWindowed@@YG_NXZ			; DXUTIsWindowed
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@ShowDialog
; Line 83
	xor	al, al
	jmp	SHORT $LN2@ShowDialog
$LN1@ShowDialog:
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	mov	esi, esp
	push	ecx
	call	?DXUTGetHWND@@YGPAUHWND__@@XZ		; DXUTGetHWND
	push	eax
	call	DWORD PTR __imp__GetWindowRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 87
	mov	esi, esp
	mov	edx, DWORD PTR _pszInputText$[ebp]
	push	edx
	push	260					; 00000104H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	mov	esi, esp
	lea	ecx, DWORD PTR _threadAddr$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	push	OFFSET ?WaitThread@@YGIPAX@Z		; WaitThread
	push	0
	push	0
	call	DWORD PTR __imp___beginthreadex
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 92
	mov	al, 1
$LN2@ShowDialog:
; Line 93
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ShowDialog
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@ShowDialog:
	DD	1
	DD	$LN5@ShowDialog
$LN5@ShowDialog:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@ShowDialog
$LN4@ShowDialog:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	0
?ShowDialog@CWaitDlg@@QAE_NPA_W@Z ENDP			; CWaitDlg::ShowDialog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDialogControls@CWaitDlg@@QAE_NXZ
_TEXT	SEGMENT
_hMessage$ = -16					; size = 4
_up$ = -12						; size = 4
_left$ = -8						; size = 4
_this$ = -4						; size = 4
?GetDialogControls@CWaitDlg@@QAE_NXZ PROC		; CWaitDlg::GetDialogControls, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
; Line 56
	mov	esi, esp
	push	0
	push	OFFSET ?WaitDialogProc@@YGHPAUHWND__@@IIJ@Z ; WaitDialogProc
	push	0
	push	113					; 00000071H
	call	?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ	; DXUTGetHINSTANCE
	push	eax
	call	DWORD PTR __imp__CreateDialogParamW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 57
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@GetDialogC
; Line 58
	xor	al, al
	jmp	$LN2@GetDialogC
$LN1@GetDialogC:
; Line 60
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	-21					; ffffffebH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SetWindowLongW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+28]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _left$[ebp], eax
; Line 64
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+32]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _up$[ebp], eax
; Line 66
	mov	esi, esp
	push	1
	push	0
	push	0
	mov	edx, DWORD PTR _up$[ebp]
	push	edx
	mov	eax, DWORD PTR _left$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 67
	mov	esi, esp
	push	5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 70
	mov	esi, esp
	push	1000					; 000003e8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 71
	mov	esi, esp
	push	6553600					; 00640000H
	push	0
	push	1025					; 00000401H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 74
	mov	esi, esp
	push	1001					; 000003e9H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hMessage$[ebp], eax
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _hMessage$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetWindowTextW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 77
	mov	al, 1
$LN2@GetDialogC:
; Line 78
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDialogControls@CWaitDlg@@QAE_NXZ ENDP		; CWaitDlg::GetDialogControls
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?UpdateProgressBar@CWaitDlg@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateProgressBar@CWaitDlg@@QAEXXZ PROC		; CWaitDlg::UpdateProgressBar, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 110			; 0000006eH
	jle	SHORT $LN1@UpdateProg
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN1@UpdateProg:
; Line 47
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	1026					; 00000402H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 48
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 49
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 50
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateProgressBar@CWaitDlg@@QAEXXZ ENDP		; CWaitDlg::UpdateProgressBar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsRunning@CWaitDlg@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?IsRunning@CWaitDlg@@QBE_NXZ PROC			; CWaitDlg::IsRunning, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	jne	SHORT $LN3@IsRunning
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsRunning
$LN3@IsRunning:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsRunning:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsRunning@CWaitDlg@@QBE_NXZ ENDP			; CWaitDlg::IsRunning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CWaitDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CWaitDlg@@QAE@XZ PROC				; CWaitDlg::~CWaitDlg, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DestroyDialog@CWaitDlg@@QAEXXZ		; CWaitDlg::DestroyDialog
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CWaitDlg@@QAE@XZ ENDP				; CWaitDlg::~CWaitDlg
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CWaitDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CWaitDlg@@QAE@XZ PROC				; CWaitDlg::CWaitDlg, COMDAT
; _this$ = ecx
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+16], 0
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CWaitDlg@@QAE@XZ ENDP				; CWaitDlg::CWaitDlg
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pThisDialog$ = -4					; size = 4
_pArg$ = 8						; size = 4
?WaitThread@@YGIPAX@Z PROC				; WaitThread
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 135
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 136
	mov	eax, DWORD PTR _pArg$[ebp]
	mov	DWORD PTR _pThisDialog$[ebp], eax
; Line 140
	mov	ecx, DWORD PTR _pThisDialog$[ebp]
	call	?GetDialogControls@CWaitDlg@@QAE_NXZ	; CWaitDlg::GetDialogControls
$LN2@WaitThread:
; Line 142
	mov	ecx, DWORD PTR _pThisDialog$[ebp]
	call	?IsRunning@CWaitDlg@@QBE_NXZ		; CWaitDlg::IsRunning
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@WaitThread
; Line 144
	mov	ecx, DWORD PTR _pThisDialog$[ebp]
	call	?UpdateProgressBar@CWaitDlg@@QAEXXZ	; CWaitDlg::UpdateProgressBar
; Line 145
	mov	esi, esp
	push	100					; 00000064H
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 146
	jmp	SHORT $LN2@WaitThread
$LN1@WaitThread:
; Line 148
	xor	eax, eax
; Line 149
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WaitThread@@YGIPAX@Z ENDP				; WaitThread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -8						; size = 4
_pThisDialog$ = -4					; size = 4
_hwndDlg$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WaitDialogProc@@YGHPAUHWND__@@IIJ@Z PROC		; WaitDialogProc
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\waitdlg.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 119
	mov	esi, esp
	push	-21					; ffffffebH
	mov	eax, DWORD PTR _hwndDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowLongW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pThisDialog$[ebp], eax
; Line 121
	mov	ecx, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 16			; 00000010H
	je	SHORT $LN1@WaitDialog
	cmp	DWORD PTR tv67[ebp], 272		; 00000110H
	je	SHORT $LN2@WaitDialog
	jmp	SHORT $LN3@WaitDialog
$LN2@WaitDialog:
; Line 124
	mov	eax, 1
	jmp	SHORT $LN5@WaitDialog
$LN1@WaitDialog:
; Line 126
	mov	ecx, DWORD PTR _pThisDialog$[ebp]
	call	?DestroyDialog@CWaitDlg@@QAEXXZ		; CWaitDlg::DestroyDialog
; Line 127
	mov	eax, 1
	jmp	SHORT $LN5@WaitDialog
$LN3@WaitDialog:
; Line 130
	xor	eax, eax
$LN5@WaitDialog:
; Line 131
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?WaitDialogProc@@YGHPAUHWND__@@IIJ@Z ENDP		; WaitDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
tv82 = -9						; size = 1
tv79 = -8						; size = 4
tv76 = -4						; size = 4
_pObj$ = 8						; size = 4
_pstrName$ = 12						; size = 4
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z PROC	; DXUT_SetDebugName, COMDAT
; File d:\engine class\assignment 1\scratch\dxsse\dxut\core\dxutmisc.h
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 198
	cmp	DWORD PTR _pObj$[ebp], 0
	je	SHORT $LN2@DXUT_SetDe
; Line 199
	mov	eax, DWORD PTR _pstrName$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR tv76[ebp]
	add	ecx, 1
	mov	DWORD PTR tv79[ebp], ecx
$LL4@DXUT_SetDe:
	mov	edx, DWORD PTR tv76[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv82[ebp], al
	add	DWORD PTR tv76[ebp], 1
	cmp	BYTE PTR tv82[ebp], 0
	jne	SHORT $LL4@DXUT_SetDe
	mov	ecx, DWORD PTR tv76[ebp]
	sub	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR _pstrName$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	push	OFFSET _WKPDID_D3DDebugObjectName
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DXUT_SetDe:
; Line 200
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ENDP	; DXUT_SetDebugName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran:
; Line 2296
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 2291
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Ptr$3 = -8						; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$3[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$3[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$3[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -56						; size = 4
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv202 = -44						; size = 4
$T2 = -39						; size = 1
$T3 = -38						; size = 1
$T4 = -37						; size = 1
__Ptr$ = -32						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 2232
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Copy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN23@Copy:
	DD	1
	DD	$LN22@Copy
$LN22@Copy:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN20@Copy
$LN20@Copy:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -16						; size = 4
$T1 = -9						; size = 1
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1738
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1739
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Line 1740
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 935
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 936
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jae	SHORT $LN2@Assign_rv
; Line 938
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 939
	jmp	SHORT $LN1@Assign_rv
$LN2@Assign_rv:
; Line 941
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 942
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN1@Assign_rv:
; Line 944
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 945
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
; Line 946
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 947
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 887
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Line 888
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 889
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
; Line 890
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 766
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 767
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 768
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 769
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 738
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 739
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 740
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMReciprocalTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1736
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMReciprocalTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMTwoPi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1735
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMTwoPi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMReciprocalPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMReciprocalPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMReciprocalPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1734
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMReciprocalPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMReciprocalPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMPi@DirectX@@YAXXZ PROC				; DirectX::`dynamic initializer for 'g_XMPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1733
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMPi@DirectX@@YAXXZ ENDP				; DirectX::`dynamic initializer for 'g_XMPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMHalfPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMHalfPi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMHalfPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1732
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_PIDIV2
	movss	DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_PIDIV2
	movss	DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_PIDIV2
	movss	DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_PIDIV2
	movss	DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMHalfPi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMHalfPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMNegativePi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMNegativePi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMNegativePi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1731
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMNegativePi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMNegativePi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMNegativeTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1730
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_2PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMNegativeTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMPiConstants0@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMPiConstants0@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMPiConstants0'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1705
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_PI
	movss	DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B, xmm0
	movss	xmm0, DWORD PTR _XM_2PI
	movss	DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+4, xmm0
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+8, xmm0
	movss	xmm0, DWORD PTR _XM_1DIV2PI
	movss	DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMPiConstants0@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMPiConstants0''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMTanEstCoefficients'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1703
	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _XM_1DIVPI
	movss	DWORD PTR ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B+12, xmm0
	pop	ebp
	ret	0
??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMTanEstCoefficients''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMScalarNearEqual@DirectX@@YA_NMMM@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
tv76 = -8						; size = 4
_Delta$ = -4						; size = 4
_S1$ = 8						; size = 4
_S2$ = 12						; size = 4
_Epsilon$ = 16						; size = 4
?XMScalarNearEqual@DirectX@@YA_NMMM@Z PROC		; DirectX::XMScalarNearEqual, COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmisc.inl
; Line 2150
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2151
	movss	xmm0, DWORD PTR _S1$[ebp]
	subss	xmm0, DWORD PTR _S2$[ebp]
	movss	DWORD PTR _Delta$[ebp], xmm0
; Line 2152
	push	ecx
	movss	xmm0, DWORD PTR _Delta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	fstp	DWORD PTR tv76[ebp]
	movss	xmm0, DWORD PTR _Epsilon$[ebp]
	comiss	xmm0, DWORD PTR tv76[ebp]
	jb	SHORT $LN3@XMScalarNe
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@XMScalarNe
$LN3@XMScalarNe:
	mov	DWORD PTR tv68[ebp], 0
$LN4@XMScalarNe:
	mov	al, BYTE PTR tv68[ebp]
; Line 2153
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?XMScalarNearEqual@DirectX@@YA_NMMM@Z ENDP		; DirectX::XMScalarNearEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z
_TEXT	SEGMENT
$T1 = -304						; size = 16
$T2 = -288						; size = 16
$T3 = -272						; size = 16
$T4 = -256						; size = 16
$T5 = -240						; size = 16
$T6 = -224						; size = 16
$T7 = -208						; size = 16
$T8 = -192						; size = 16
$T9 = -176						; size = 16
_vTemp$ = -160						; size = 16
_vValues$ = -144					; size = 16
_rMem$ = -128						; size = 16
_fRange$ = -104						; size = 4
_M$ = -96						; size = 64
_FarZ$ = -20						; size = 4
_NearZ$ = -16						; size = 4
_ViewHeight$ = -12					; size = 4
_ViewWidth$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z PROC ; DirectX::XMMatrixOrthographicLH, COMDAT
; _ViewWidth$ = xmm0s
; _ViewHeight$ = xmm1s
; _NearZ$ = xmm2s
; _FarZ$ = xmm3s
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 2575
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	movss	DWORD PTR _FarZ$[ebp], xmm3
	movss	DWORD PTR _NearZ$[ebp], xmm2
	movss	DWORD PTR _ViewHeight$[ebp], xmm1
	movss	DWORD PTR _ViewWidth$[ebp], xmm0
; Line 2576
	push	ecx
	movss	xmm0, DWORD PTR __real@3727c5ac
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _ViewWidth$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?XMScalarNearEqual@DirectX@@YA_NMMM@Z	; DirectX::XMScalarNearEqual
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@XMMatrixOr
	mov	esi, esp
	push	2576					; 00000a10H
	push	OFFSET ??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
	push	OFFSET ??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?0?$AA?5?$AA0?$AA?4@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMMatrixOr:
; Line 2577
	push	ecx
	movss	xmm0, DWORD PTR __real@3727c5ac
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _ViewHeight$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?XMScalarNearEqual@DirectX@@YA_NMMM@Z	; DirectX::XMScalarNearEqual
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@XMMatrixOr
	mov	esi, esp
	push	2577					; 00000a11H
	push	OFFSET ??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
	push	OFFSET ??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?0?$AA?5?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@XMMatrixOr:
; Line 2578
	push	ecx
	movss	xmm0, DWORD PTR __real@3727c5ac
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _NearZ$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _FarZ$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?XMScalarNearEqual@DirectX@@YA_NMMM@Z	; DirectX::XMScalarNearEqual
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@XMMatrixOr
	mov	esi, esp
	push	2578					; 00000a12H
	push	OFFSET ??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
	push	OFFSET ??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAF?$AAa?$AAr?$AAZ?$AA?0?$AA?5?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?0?$AA?5@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMMatrixOr:
; Line 2617
	lea	ecx, DWORD PTR _M$[ebp]
	call	??0XMMATRIX@DirectX@@QAE@XZ		; DirectX::XMMATRIX::XMMATRIX
; Line 2618
	movss	xmm0, DWORD PTR _FarZ$[ebp]
	subss	xmm0, DWORD PTR _NearZ$[ebp]
	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0
	movss	DWORD PTR _fRange$[ebp], xmm1
; Line 2625
	movss	xmm0, DWORD PTR __real@40000000
	divss	xmm0, DWORD PTR _ViewWidth$[ebp]
	movss	DWORD PTR _rMem$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@40000000
	divss	xmm0, DWORD PTR _ViewHeight$[ebp]
	movss	DWORD PTR _rMem$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _fRange$[ebp]
	movss	DWORD PTR _rMem$[ebp+8], xmm0
	movss	xmm0, DWORD PTR _fRange$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _NearZ$[ebp]
	movss	DWORD PTR _rMem$[ebp+12], xmm0
; Line 2627
	movaps	xmm0, XMMWORD PTR _rMem$[ebp]
	movaps	XMMWORD PTR _vValues$[ebp], xmm0
; Line 2628
	xorps	xmm0, xmm0
	movaps	XMMWORD PTR $T9[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T9[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2630
	movaps	xmm0, XMMWORD PTR _vValues$[ebp]
	movaps	xmm1, XMMWORD PTR _vTemp$[ebp]
	_movss	xmm1, xmm0
	movaps	XMMWORD PTR $T8[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2632
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR _vTemp$[ebp]
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 2634
	movaps	xmm0, XMMWORD PTR _vValues$[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2635
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, OFFSET ?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMMaskY
	call	??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
	movups	xmm0, XMMWORD PTR [eax]
	movaps	xmm1, XMMWORD PTR _vTemp$[ebp]
	andps	xmm1, xmm0
	movaps	XMMWORD PTR $T6[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2636
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movups	xmm0, XMMWORD PTR _vTemp$[ebp]
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 2638
	xorps	xmm0, xmm0
	movaps	XMMWORD PTR $T5[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2639
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, OFFSET ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMIdentityR3
	call	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
	movups	xmm0, XMMWORD PTR [eax]
	movaps	xmm1, XMMWORD PTR _vValues$[ebp]
	shufps	xmm1, xmm0, 238				; 000000eeH
	movaps	XMMWORD PTR $T3[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T3[ebp]
	movaps	XMMWORD PTR _vValues$[ebp], xmm0
; Line 2641
	movaps	xmm0, XMMWORD PTR _vTemp$[ebp]
	shufps	xmm0, XMMWORD PTR _vValues$[ebp], 128	; 00000080H
	movaps	XMMWORD PTR $T2[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2642
	mov	edx, 16					; 00000010H
	shl	edx, 1
	movups	xmm0, XMMWORD PTR _vTemp$[ebp]
	movups	XMMWORD PTR _M$[ebp+edx], xmm0
; Line 2644
	movaps	xmm0, XMMWORD PTR _vTemp$[ebp]
	shufps	xmm0, XMMWORD PTR _vValues$[ebp], 208	; 000000d0H
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2645
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	movups	xmm0, XMMWORD PTR _vTemp$[ebp]
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 2646
	movaps	xmm0, XMMWORD PTR _M$[ebp]
	movaps	xmm1, XMMWORD PTR _M$[ebp+16]
	movaps	xmm2, XMMWORD PTR _M$[ebp+32]
	movaps	xmm3, XMMWORD PTR _M$[ebp+48]
; Line 2649
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@XMMatrixOr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	1
$LN8@XMMatrixOr:
	DD	1
	DD	$LN7@XMMatrixOr
$LN7@XMMatrixOr:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@XMMatrixOr
$LN6@XMMatrixOr:
	DB	77					; 0000004dH
	DB	0
?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ENDP ; DirectX::XMMatrixOrthographicLH
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z
_TEXT	SEGMENT
$T1 = -128						; size = 16
_M$ = -96						; size = 64
_OffsetZ$ = -16						; size = 4
_OffsetY$ = -12						; size = 4
_OffsetX$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z PROC ; DirectX::XMMatrixTranslation, COMDAT
; _OffsetX$ = xmm0s
; _OffsetY$ = xmm1s
; _OffsetZ$ = xmm2s
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 1079
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-128]
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	movss	DWORD PTR _OffsetZ$[ebp], xmm2
	movss	DWORD PTR _OffsetY$[ebp], xmm1
	movss	DWORD PTR _OffsetX$[ebp], xmm0
; Line 1105
	lea	ecx, DWORD PTR _M$[ebp]
	call	??0XMMATRIX@DirectX@@QAE@XZ		; DirectX::XMMATRIX::XMMATRIX
; Line 1106
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 1107
	mov	edx, 16					; 00000010H
	shl	edx, 0
	movups	xmm0, XMMWORD PTR ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
	movups	XMMWORD PTR _M$[ebp+edx], xmm0
; Line 1108
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 1109
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR _OffsetZ$[ebp]
	movss	xmm1, DWORD PTR _OffsetY$[ebp]
	movss	xmm0, DWORD PTR _OffsetX$[ebp]
	call	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
	movaps	XMMWORD PTR $T1[ebp], xmm0
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR _M$[ebp+edx], xmm0
; Line 1110
	movaps	xmm0, XMMWORD PTR _M$[ebp]
	movaps	xmm1, XMMWORD PTR _M$[ebp+16]
	movaps	xmm2, XMMWORD PTR _M$[ebp+32]
	movaps	xmm3, XMMWORD PTR _M$[ebp+48]
; Line 1113
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@XMMatrixTr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	2
$LN5@XMMatrixTr:
	DD	1
	DD	$LN4@XMMatrixTr
$LN4@XMMatrixTr:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN3@XMMatrixTr
$LN3@XMMatrixTr:
	DB	77					; 0000004dH
	DB	0
?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ENDP ; DirectX::XMMatrixTranslation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z
_TEXT	SEGMENT
$T1 = -384						; size = 16
$T2 = -368						; size = 16
$T3 = -352						; size = 16
$T4 = -336						; size = 16
_mResult$ = -304					; size = 64
$T5 = -224						; size = 16
_vTemp4$ = -208						; size = 16
$T6 = -192						; size = 16
_vTemp2$ = -176						; size = 16
$T7 = -160						; size = 16
_vTemp3$ = -144						; size = 16
$T8 = -128						; size = 16
_vTemp1$ = -112						; size = 16
_M$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z PROC	; DirectX::XMMatrixTranspose, COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 543
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 384				; 00000180H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	movaps	XMMWORD PTR _M$[ebp+48], xmm3
	movaps	XMMWORD PTR _M$[ebp+32], xmm2
	movaps	XMMWORD PTR _M$[ebp+16], xmm1
	movaps	XMMWORD PTR _M$[ebp], xmm0
; Line 581
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	shufps	xmm0, XMMWORD PTR _M$[ebp+eax], 68	; 00000044H
	movaps	XMMWORD PTR $T8[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _vTemp1$[ebp], xmm0
; Line 583
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	shufps	xmm0, XMMWORD PTR _M$[ebp+eax], 238	; 000000eeH
	movaps	XMMWORD PTR $T7[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	movaps	XMMWORD PTR _vTemp3$[ebp], xmm0
; Line 585
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	mov	edx, 16					; 00000010H
	shl	edx, 1
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	shufps	xmm0, XMMWORD PTR _M$[ebp+ecx], 68	; 00000044H
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR _vTemp2$[ebp], xmm0
; Line 587
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	mov	edx, 16					; 00000010H
	shl	edx, 1
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	shufps	xmm0, XMMWORD PTR _M$[ebp+ecx], 238	; 000000eeH
	movaps	XMMWORD PTR $T5[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[ebp]
	movaps	XMMWORD PTR _vTemp4$[ebp], xmm0
; Line 588
	lea	ecx, DWORD PTR _mResult$[ebp]
	call	??0XMMATRIX@DirectX@@QAE@XZ		; DirectX::XMMATRIX::XMMATRIX
; Line 591
	movaps	xmm0, XMMWORD PTR _vTemp1$[ebp]
	shufps	xmm0, XMMWORD PTR _vTemp2$[ebp], 136	; 00000088H
	movaps	XMMWORD PTR $T4[ebp], xmm0
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR $T4[ebp]
	movups	XMMWORD PTR _mResult$[ebp+ecx], xmm0
; Line 593
	movaps	xmm0, XMMWORD PTR _vTemp1$[ebp]
	shufps	xmm0, XMMWORD PTR _vTemp2$[ebp], 221	; 000000ddH
	movaps	XMMWORD PTR $T3[ebp], xmm0
	mov	edx, 16					; 00000010H
	shl	edx, 0
	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR _mResult$[ebp+edx], xmm0
; Line 595
	movaps	xmm0, XMMWORD PTR _vTemp3$[ebp]
	shufps	xmm0, XMMWORD PTR _vTemp4$[ebp], 136	; 00000088H
	movaps	XMMWORD PTR $T2[ebp], xmm0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR _mResult$[ebp+eax], xmm0
; Line 597
	movaps	xmm0, XMMWORD PTR _vTemp3$[ebp]
	shufps	xmm0, XMMWORD PTR _vTemp4$[ebp], 221	; 000000ddH
	movaps	XMMWORD PTR $T1[ebp], xmm0
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR _mResult$[ebp+edx], xmm0
; Line 598
	movaps	xmm0, XMMWORD PTR _mResult$[ebp]
	movaps	xmm1, XMMWORD PTR _mResult$[ebp+16]
	movaps	xmm2, XMMWORD PTR _mResult$[ebp+32]
	movaps	xmm3, XMMWORD PTR _mResult$[ebp+48]
; Line 601
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@XMMatrixTr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	1
$LN6@XMMatrixTr:
	DD	2
	DD	$LN5@XMMatrixTr
$LN5@XMMatrixTr:
	DD	-80					; ffffffb0H
	DD	64					; 00000040H
	DD	$LN3@XMMatrixTr
	DD	-304					; fffffed0H
	DD	64					; 00000040H
	DD	$LN4@XMMatrixTr
$LN4@XMMatrixTr:
	DB	109					; 0000006dH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN3@XMMatrixTr:
	DB	77					; 0000004dH
	DB	0
?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ENDP	; DirectX::XMMatrixTranspose
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z
_TEXT	SEGMENT
$T1 = -944						; size = 16
$T2 = -928						; size = 16
$T3 = -912						; size = 16
$T4 = -896						; size = 16
$T5 = -880						; size = 16
$T6 = -864						; size = 16
$T7 = -848						; size = 16
$T8 = -832						; size = 16
$T9 = -816						; size = 16
$T10 = -800						; size = 16
$T11 = -784						; size = 16
$T12 = -768						; size = 16
$T13 = -752						; size = 16
$T14 = -736						; size = 16
$T15 = -720						; size = 16
$T16 = -704						; size = 16
$T17 = -688						; size = 16
$T18 = -672						; size = 16
$T19 = -656						; size = 16
$T20 = -640						; size = 16
$T21 = -624						; size = 16
$T22 = -608						; size = 16
$T23 = -592						; size = 16
$T24 = -576						; size = 16
$T25 = -560						; size = 16
$T26 = -544						; size = 16
$T27 = -528						; size = 16
$T28 = -512						; size = 16
$T29 = -496						; size = 16
$T30 = -480						; size = 16
$T31 = -464						; size = 16
$T32 = -448						; size = 16
$T33 = -432						; size = 16
$T34 = -416						; size = 16
$T35 = -400						; size = 16
$T36 = -384						; size = 16
$T37 = -368						; size = 16
$T38 = -352						; size = 16
$T39 = -336						; size = 16
$T40 = -320						; size = 16
$T41 = -304						; size = 16
$T42 = -288						; size = 16
_vZ$ = -272						; size = 16
$T43 = -256						; size = 16
_vY$ = -240						; size = 16
$T44 = -224						; size = 16
_vX$ = -208						; size = 16
_vW$ = -192						; size = 16
_mResult$ = -160					; size = 64
_M2$ = -88						; size = 4
_M1$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z PROC ; DirectX::XMMatrixMultiply, COMDAT
; _M2$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 228
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 944				; 000003b0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-944]
	mov	ecx, 236				; 000000ecH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _M2$[ebp], ecx
	movaps	XMMWORD PTR _M1$[ebp+48], xmm3
	movaps	XMMWORD PTR _M1$[ebp+32], xmm2
	movaps	XMMWORD PTR _M1$[ebp+16], xmm1
	movaps	XMMWORD PTR _M1$[ebp], xmm0
; Line 301
	lea	ecx, DWORD PTR _mResult$[ebp]
	call	??0XMMATRIX@DirectX@@QAE@XZ		; DirectX::XMMATRIX::XMMATRIX
; Line 303
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR _M1$[ebp+ecx]
	movups	XMMWORD PTR _vW$[ebp], xmm0
; Line 305
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 0
	movaps	XMMWORD PTR $T44[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T44[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 306
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 85		; 00000055H
	movaps	XMMWORD PTR $T43[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T43[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 307
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 170	; 000000aaH
	movaps	XMMWORD PTR $T42[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T42[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 308
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 255	; 000000ffH
	movaps	XMMWORD PTR $T41[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T41[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 310
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T40[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T40[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 311
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T39[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T39[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 312
	mov	edx, 16					; 00000010H
	shl	edx, 1
	add	edx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vZ$[ebp]
	mulps	xmm0, XMMWORD PTR [edx]
	movaps	XMMWORD PTR $T38[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T38[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 313
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T37[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T37[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 315
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vZ$[ebp]
	movaps	XMMWORD PTR $T36[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T36[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 316
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	addps	xmm0, XMMWORD PTR _vW$[ebp]
	movaps	XMMWORD PTR $T35[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T35[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 317
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vY$[ebp]
	movaps	XMMWORD PTR $T34[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T34[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 318
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	movups	xmm0, XMMWORD PTR _vX$[ebp]
	movups	XMMWORD PTR _mResult$[ebp+eax], xmm0
; Line 320
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	movups	xmm0, XMMWORD PTR _M1$[ebp+ecx]
	movups	XMMWORD PTR _vW$[ebp], xmm0
; Line 321
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 0
	movaps	XMMWORD PTR $T33[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T33[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 322
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 85		; 00000055H
	movaps	XMMWORD PTR $T32[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T32[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 323
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 170	; 000000aaH
	movaps	XMMWORD PTR $T31[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T31[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 324
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 255	; 000000ffH
	movaps	XMMWORD PTR $T30[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T30[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 325
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T29[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T29[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 326
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T28[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T28[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 327
	mov	edx, 16					; 00000010H
	shl	edx, 1
	add	edx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vZ$[ebp]
	mulps	xmm0, XMMWORD PTR [edx]
	movaps	XMMWORD PTR $T27[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T27[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 328
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T26[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T26[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 329
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vZ$[ebp]
	movaps	XMMWORD PTR $T25[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T25[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 330
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	addps	xmm0, XMMWORD PTR _vW$[ebp]
	movaps	XMMWORD PTR $T24[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T24[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 331
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vY$[ebp]
	movaps	XMMWORD PTR $T23[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T23[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 332
	mov	edx, 16					; 00000010H
	shl	edx, 0
	movups	xmm0, XMMWORD PTR _vX$[ebp]
	movups	XMMWORD PTR _mResult$[ebp+edx], xmm0
; Line 333
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR _M1$[ebp+eax]
	movups	XMMWORD PTR _vW$[ebp], xmm0
; Line 334
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 0
	movaps	XMMWORD PTR $T22[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T22[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 335
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 85		; 00000055H
	movaps	XMMWORD PTR $T21[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T21[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 336
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 170	; 000000aaH
	movaps	XMMWORD PTR $T20[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T20[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 337
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 255	; 000000ffH
	movaps	XMMWORD PTR $T19[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T19[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 338
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	add	edx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	mulps	xmm0, XMMWORD PTR [edx]
	movaps	XMMWORD PTR $T18[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T18[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 339
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T17[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T17[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 340
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vZ$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T16[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T16[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 341
	mov	edx, 16					; 00000010H
	imul	eax, edx, 3
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T15[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T15[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 342
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vZ$[ebp]
	movaps	XMMWORD PTR $T14[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T14[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 343
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	addps	xmm0, XMMWORD PTR _vW$[ebp]
	movaps	XMMWORD PTR $T13[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T13[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 344
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vY$[ebp]
	movaps	XMMWORD PTR $T12[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T12[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 345
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	movups	xmm0, XMMWORD PTR _vX$[ebp]
	movups	XMMWORD PTR _mResult$[ebp+ecx], xmm0
; Line 346
	mov	edx, 16					; 00000010H
	imul	eax, edx, 3
	movups	xmm0, XMMWORD PTR _M1$[ebp+eax]
	movups	XMMWORD PTR _vW$[ebp], xmm0
; Line 347
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 0
	movaps	XMMWORD PTR $T11[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T11[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 348
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 85		; 00000055H
	movaps	XMMWORD PTR $T10[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T10[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 349
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 170	; 000000aaH
	movaps	XMMWORD PTR $T9[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T9[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 350
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 255	; 000000ffH
	movaps	XMMWORD PTR $T8[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 351
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	add	edx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	mulps	xmm0, XMMWORD PTR [edx]
	movaps	XMMWORD PTR $T7[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 352
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 353
	mov	ecx, 16					; 00000010H
	shl	ecx, 1
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vZ$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T5[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 354
	mov	edx, 16					; 00000010H
	imul	eax, edx, 3
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T4[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T4[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 355
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vZ$[ebp]
	movaps	XMMWORD PTR $T3[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T3[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 356
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	addps	xmm0, XMMWORD PTR _vW$[ebp]
	movaps	XMMWORD PTR $T2[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 357
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vY$[ebp]
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 358
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	movups	xmm0, XMMWORD PTR _vX$[ebp]
	movups	XMMWORD PTR _mResult$[ebp+edx], xmm0
; Line 359
	movaps	xmm0, XMMWORD PTR _mResult$[ebp]
	movaps	xmm1, XMMWORD PTR _mResult$[ebp+16]
	movaps	xmm2, XMMWORD PTR _mResult$[ebp+32]
	movaps	xmm3, XMMWORD PTR _mResult$[ebp+48]
; Line 362
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@XMMatrixMu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
$LN6@XMMatrixMu:
	DD	2
	DD	$LN5@XMMatrixMu
$LN5@XMMatrixMu:
	DD	-80					; ffffffb0H
	DD	64					; 00000040H
	DD	$LN3@XMMatrixMu
	DD	-160					; ffffff60H
	DD	64					; 00000040H
	DD	$LN4@XMMatrixMu
$LN4@XMMatrixMu:
	DB	109					; 0000006dH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN3@XMMatrixMu:
	DB	77					; 0000004dH
	DB	49					; 00000031H
	DB	0
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ENDP ; DirectX::XMMatrixMultiply
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
_TEXT	SEGMENT
$T1 = -32						; size = 16
_w$ = -16						; size = 4
_z$ = -12						; size = 4
_y$ = -8						; size = 4
_x$ = -4						; size = 4
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z PROC		; DirectX::XMVectorSet, COMDAT
; _x$ = xmm0s
; _y$ = xmm1s
; _z$ = xmm2s
; _w$ = xmm3s
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
; Line 72
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	movss	DWORD PTR _w$[ebp], xmm3
	movss	DWORD PTR _z$[ebp], xmm2
	movss	DWORD PTR _y$[ebp], xmm1
	movss	DWORD PTR _x$[ebp], xmm0
; Line 81
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	xmm1, DWORD PTR _y$[ebp]
	movss	xmm2, DWORD PTR _z$[ebp]
	movss	xmm3, DWORD PTR _w$[ebp]
	unpcklps xmm0, xmm2
	unpcklps xmm1, xmm3
	unpcklps xmm0, xmm1
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
; Line 84
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ENDP		; DirectX::XMVectorSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z
_TEXT	SEGMENT
_M$ = -80						; size = 64
_pDestination$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z PROC ; DirectX::XMStoreFloat4x4, COMDAT
; _pDestination$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
; Line 1875
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	movaps	XMMWORD PTR _M$[ebp+48], xmm3
	movaps	XMMWORD PTR _M$[ebp+32], xmm2
	movaps	XMMWORD PTR _M$[ebp+16], xmm1
	movaps	XMMWORD PTR _M$[ebp], xmm0
	mov	DWORD PTR _pDestination$[ebp], ecx
; Line 1876
	cmp	DWORD PTR _pDestination$[ebp], 0
	jne	SHORT $LN3@XMStoreFlo
	mov	esi, esp
	push	1876					; 00000754H
	push	OFFSET ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
	push	OFFSET ??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMStoreFlo:
; Line 1905
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	mov	eax, DWORD PTR _pDestination$[ebp]
	movups	XMMWORD PTR [eax], xmm0
; Line 1906
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	movups	xmm0, XMMWORD PTR _M$[ebp+ecx]
	mov	edx, DWORD PTR _pDestination$[ebp]
	add	edx, 16					; 00000010H
	movups	XMMWORD PTR [edx], xmm0
; Line 1907
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR _M$[ebp+eax]
	mov	ecx, DWORD PTR _pDestination$[ebp]
	add	ecx, 32					; 00000020H
	movups	XMMWORD PTR [ecx], xmm0
; Line 1908
	mov	edx, 16					; 00000010H
	imul	eax, edx, 3
	movups	xmm0, XMMWORD PTR _M$[ebp+eax]
	mov	ecx, DWORD PTR _pDestination$[ebp]
	add	ecx, 48					; 00000030H
	movups	XMMWORD PTR [ecx], xmm0
; Line 1911
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@XMStoreFlo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
$LN6@XMStoreFlo:
	DD	1
	DD	$LN5@XMStoreFlo
$LN5@XMStoreFlo:
	DD	-80					; ffffffb0H
	DD	64					; 00000040H
	DD	$LN4@XMStoreFlo
$LN4@XMStoreFlo:
	DB	77					; 0000004dH
	DB	0
?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ENDP ; DirectX::XMStoreFloat4x4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 16
_pSource$ = -4						; size = 4
?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z PROC ; DirectX::XMLoadFloat4, COMDAT
; _pSource$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
; Line 701
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _pSource$[ebp], ecx
; Line 702
	cmp	DWORD PTR _pSource$[ebp], 0
	jne	SHORT $LN3@XMLoadFloa
	mov	esi, esp
	push	702					; 000002beH
	push	OFFSET ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
	push	OFFSET ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@XMLoadFloa:
; Line 713
	mov	ecx, DWORD PTR _pSource$[ebp]
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
; Line 716
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ENDP ; DirectX::XMLoadFloat4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4X4@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT4X4@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT4X4::XMFLOAT4X4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 716
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0XMFLOAT4X4@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT4X4::XMFLOAT4X4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4A@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT4A@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT4A::XMFLOAT4A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 588
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0XMFLOAT4@DirectX@@QAE@XZ		; DirectX::XMFLOAT4::XMFLOAT4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0XMFLOAT4A@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT4A::XMFLOAT4A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4@DirectX@@QAE@MMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0XMFLOAT4@DirectX@@QAE@MMMM@Z PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __x$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [eax+12], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0XMFLOAT4@DirectX@@QAE@MMMM@Z ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT4@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 578
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0XMFLOAT4@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Float3$ = 8						; size = 4
??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z PROC		; DirectX::XMFLOAT3A::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 537
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Float3$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Float3$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Float3$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ENDP		; DirectX::XMFLOAT3A::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3A@DirectX@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0XMFLOAT3A@DirectX@@QAE@MMM@Z PROC			; DirectX::XMFLOAT3A::XMFLOAT3A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 534
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0XMFLOAT3@DirectX@@QAE@MMM@Z		; DirectX::XMFLOAT3::XMFLOAT3
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0XMFLOAT3A@DirectX@@QAE@MMM@Z ENDP			; DirectX::XMFLOAT3A::XMFLOAT3A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3A@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT3A@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT3A::XMFLOAT3A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 533
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0XMFLOAT3@DirectX@@QAE@XZ		; DirectX::XMFLOAT3::XMFLOAT3
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0XMFLOAT3A@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT3A::XMFLOAT3A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3@DirectX@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0XMFLOAT3@DirectX@@QAE@MMM@Z PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 524
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __x$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0XMFLOAT3@DirectX@@QAE@MMM@Z ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT3@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 523
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0XMFLOAT3@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Float2$ = 8						; size = 4
??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z PROC		; DirectX::XMFLOAT2A::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 485
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Float2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Float2$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z ENDP		; DirectX::XMFLOAT2A::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2A@DirectX@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0XMFLOAT2A@DirectX@@QAE@MM@Z PROC			; DirectX::XMFLOAT2A::XMFLOAT2A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __x$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0XMFLOAT2@DirectX@@QAE@MM@Z		; DirectX::XMFLOAT2::XMFLOAT2
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0XMFLOAT2A@DirectX@@QAE@MM@Z ENDP			; DirectX::XMFLOAT2A::XMFLOAT2A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2A@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT2A@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT2A::XMFLOAT2A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 481
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0XMFLOAT2@DirectX@@QAE@XZ		; DirectX::XMFLOAT2::XMFLOAT2
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0XMFLOAT2A@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT2A::XMFLOAT2A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2@DirectX@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0XMFLOAT2@DirectX@@QAE@MM@Z PROC			; DirectX::XMFLOAT2::XMFLOAT2, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __x$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0XMFLOAT2@DirectX@@QAE@MM@Z ENDP			; DirectX::XMFLOAT2::XMFLOAT2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT2@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT2::XMFLOAT2, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 471
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0XMFLOAT2@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT2::XMFLOAT2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 64
$T2 = -160						; size = 64
_this$ = -92						; size = 4
___$ReturnUdt$ = -88					; size = 4
_M$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z PROC		; DirectX::XMMATRIX::operator*, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = edx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 3091
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	movaps	XMMWORD PTR _M$[ebp+48], xmm3
	movaps	XMMWORD PTR _M$[ebp+32], xmm2
	movaps	XMMWORD PTR _M$[ebp+16], xmm1
	movaps	XMMWORD PTR _M$[ebp], xmm0
	mov	DWORD PTR ___$ReturnUdt$[ebp], edx
	mov	DWORD PTR _this$[ebp], ecx
; Line 3092
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR _M$[ebp]
	movaps	xmm0, XMMWORD PTR [eax]
	movaps	xmm1, XMMWORD PTR [eax+16]
	movaps	xmm2, XMMWORD PTR [eax+32]
	movaps	xmm3, XMMWORD PTR [eax+48]
	call	?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ; DirectX::XMMatrixMultiply
	movaps	XMMWORD PTR $T1[ebp+48], xmm3
	movaps	XMMWORD PTR $T1[ebp+32], xmm2
	movaps	XMMWORD PTR $T1[ebp+16], xmm1
	movaps	XMMWORD PTR $T1[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T1[ebp]
	lea	edi, DWORD PTR $T2[ebp]
	rep movsd
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T2[ebp]
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	rep movsd
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 3093
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	2
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-80					; ffffffb0H
	DD	64					; 00000040H
	DD	$LN3@operator
$LN3@operator:
	DB	77					; 0000004dH
	DB	0
??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z ENDP		; DirectX::XMMATRIX::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMMATRIX@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMMATRIX@DirectX@@QAE@XZ PROC			; DirectX::XMMATRIX::XMMATRIX, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 431
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0XMMATRIX@DirectX@@QAE@XZ ENDP			; DirectX::XMMATRIX::XMMATRIX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ PROC		; DirectX::XMVECTORI32::operator __m128, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 330
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ ENDP		; DirectX::XMVECTORI32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BXMVECTORF32@DirectX@@QBEPBMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BXMVECTORF32@DirectX@@QBEPBMXZ PROC			; DirectX::XMVECTORF32::operator float const *, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 315
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??BXMVECTORF32@DirectX@@QBEPBMXZ ENDP			; DirectX::XMVECTORF32::operator float const *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ PROC		; DirectX::XMVECTORF32::operator __m128, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 314
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ENDP		; DirectX::XMVECTORF32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 59
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _ignore
	call	??0_Ignore@std@@QAE@XZ			; std::_Ignore::_Ignore
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Ignore@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Ignore@std@@QAE@XZ PROC				; std::_Ignore::_Ignore, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Ignore@std@@QAE@XZ ENDP				; std::_Ignore::_Ignore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 604
	push	ebp
	mov	ebp, esp
; Line 605
	or	eax, -1
; Line 606
	pop	ebp
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
tv69 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 599
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 600
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	ecx, DWORD PTR __Meta$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN5@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	test	eax, eax
	jne	SHORT $LN3@not_eof
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	mov	DWORD PTR tv68[ebp], 0
$LN4@not_eof:
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
	mov	eax, DWORD PTR tv69[ebp]
; Line 601
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 593
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 594
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
	mov	al, BYTE PTR tv65[ebp]
; Line 595
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 587
	push	ebp
	mov	ebp, esp
; Line 588
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 589
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 581
	push	ebp
	mov	ebp, esp
; Line 582
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 583
	pop	ebp
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 569
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 570
	mov	eax, DWORD PTR __Left$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@eq
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@eq
$LN3@eq:
	mov	DWORD PTR tv67[ebp], 0
$LN4@eq:
	mov	al, BYTE PTR tv67[ebp]
; Line 571
	mov	esp, ebp
	pop	ebp
	ret	0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	esi, esp
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -20						; size = 4
tv78 = -13						; size = 1
tv75 = -12						; size = 4
tv72 = -8						; size = 4
tv69 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR tv72[ebp], edx
	mov	eax, DWORD PTR tv72[ebp]
	add	eax, 1
	mov	DWORD PTR tv75[ebp], eax
$LL5@length:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv78[ebp], dl
	add	DWORD PTR tv72[ebp], 1
	cmp	BYTE PTR tv78[ebp], 0
	jne	SHORT $LL5@length
	mov	eax, DWORD PTR tv72[ebp]
	sub	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN4@length:
	mov	eax, DWORD PTR tv69[ebp]
; Line 524
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eof@?$char_traits@_W@std@@SAGXZ
_TEXT	SEGMENT
?eof@?$char_traits@_W@std@@SAGXZ PROC			; std::char_traits<wchar_t>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 387
	push	ebp
	mov	ebp, esp
; Line 388
	mov	eax, 65535				; 0000ffffH
; Line 389
	pop	ebp
	ret	0
?eof@?$char_traits@_W@std@@SAGXZ ENDP			; std::char_traits<wchar_t>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?not_eof@?$char_traits@_W@std@@SAGABG@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
tv73 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@_W@std@@SAGABG@Z PROC		; std::char_traits<wchar_t>::not_eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 382
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 383
	mov	eax, DWORD PTR __Meta$[ebp]
	movzx	esi, WORD PTR [eax]
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	movzx	ecx, ax
	cmp	esi, ecx
	je	SHORT $LN5@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	movzx	ecx, ax
	test	ecx, ecx
	jne	SHORT $LN3@not_eof
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	mov	DWORD PTR tv72[ebp], 0
$LN4@not_eof:
	mov	edx, DWORD PTR tv72[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN6@not_eof:
	mov	ax, WORD PTR tv73[ebp]
; Line 384
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$char_traits@_W@std@@SAGABG@Z ENDP		; std::char_traits<wchar_t>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z PROC	; std::char_traits<wchar_t>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 376
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 377
	mov	eax, DWORD PTR __Left$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv67[ebp], 0
$LN4@eq_int_typ:
	mov	al, BYTE PTR tv67[ebp]
; Line 378
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ENDP	; std::char_traits<wchar_t>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z PROC	; std::char_traits<wchar_t>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 370
	push	ebp
	mov	ebp, esp
; Line 371
	mov	eax, DWORD PTR __Ch$[ebp]
	mov	ax, WORD PTR [eax]
; Line 372
	pop	ebp
	ret	0
?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z ENDP	; std::char_traits<wchar_t>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_char_type@?$char_traits@_W@std@@SA_WABG@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@_W@std@@SA_WABG@Z PROC	; std::char_traits<wchar_t>::to_char_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 364
	push	ebp
	mov	ebp, esp
; Line 365
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	ax, WORD PTR [eax]
; Line 366
	pop	ebp
	ret	0
?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ENDP	; std::char_traits<wchar_t>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq@?$char_traits@_W@std@@SA_NAB_W0@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@_W@std@@SA_NAB_W0@Z PROC		; std::char_traits<wchar_t>::eq, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 352
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 353
	mov	eax, DWORD PTR __Left$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@eq
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@eq
$LN3@eq:
	mov	DWORD PTR tv67[ebp], 0
$LN4@eq:
	mov	al, BYTE PTR tv67[ebp]
; Line 354
	mov	esp, ebp
	pop	ebp
	ret	0
?eq@?$char_traits@_W@std@@SA_NAB_W0@Z ENDP		; std::char_traits<wchar_t>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 346
	push	ebp
	mov	ebp, esp
; Line 347
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
; Line 348
	pop	ebp
	ret	0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 336
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_wmemmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 337
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 311
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 313
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_wmemcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 314
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?length@?$char_traits@_W@std@@SAIPB_W@Z
_TEXT	SEGMENT
tv68 = -20						; size = 4
tv78 = -14						; size = 2
tv75 = -12						; size = 4
tv72 = -8						; size = 4
tv69 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIPB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 304
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 306
	mov	eax, DWORD PTR __First$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR tv72[ebp], edx
	mov	eax, DWORD PTR tv72[ebp]
	add	eax, 2
	mov	DWORD PTR tv75[ebp], eax
$LL5@length:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR tv78[ebp], dx
	add	DWORD PTR tv72[ebp], 2
	cmp	WORD PTR tv78[ebp], 0
	jne	SHORT $LL5@length
	mov	eax, DWORD PTR tv72[ebp]
	sub	eax, DWORD PTR tv75[ebp]
	sar	eax, 1
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN4@length:
	mov	eax, DWORD PTR tv69[ebp]
; Line 307
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@_W@std@@SAIPB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1279
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1284
	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1286
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1271
	push	ebp
	mov	ebp, esp
; Line 1274
	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1276
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 1136
	push	ebp
	mov	ebp, esp
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_sqrtf
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT
tv74 = -12						; size = 4
__Z$1 = -8						; size = 4
__N$ = -4						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
??$_Pow_int@M@@YAMMH@Z PROC				; _Pow_int<float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 1014
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1015
	cmp	DWORD PTR __Y$[ebp], 0
	jl	SHORT $LN7@Pow_int
; Line 1016
	mov	eax, DWORD PTR __Y$[ebp]
	mov	DWORD PTR __N$[ebp], eax
; Line 1017
	jmp	SHORT $LN6@Pow_int
$LN7@Pow_int:
; Line 1018
	mov	ecx, DWORD PTR __Y$[ebp]
	neg	ecx
	mov	DWORD PTR __N$[ebp], ecx
$LN6@Pow_int:
; Line 1019
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR __Z$1[ebp], xmm0
	jmp	SHORT $LN5@Pow_int
$LN4@Pow_int:
	movss	xmm0, DWORD PTR __X$[ebp]
	mulss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR __X$[ebp], xmm0
$LN5@Pow_int:
; Line 1020
	mov	edx, DWORD PTR __N$[ebp]
	and	edx, 1
	je	SHORT $LN2@Pow_int
; Line 1021
	movss	xmm0, DWORD PTR __Z$1[ebp]
	mulss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR __Z$1[ebp], xmm0
$LN2@Pow_int:
; Line 1022
	mov	eax, DWORD PTR __N$[ebp]
	shr	eax, 1
	mov	DWORD PTR __N$[ebp], eax
	jne	SHORT $LN1@Pow_int
; Line 1023
	cmp	DWORD PTR __Y$[ebp], 0
	jge	SHORT $LN10@Pow_int
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR __Z$1[ebp]
	movss	DWORD PTR tv74[ebp], xmm0
	jmp	SHORT $LN11@Pow_int
$LN10@Pow_int:
	movss	xmm0, DWORD PTR __Z$1[ebp]
	movss	DWORD PTR tv74[ebp], xmm0
$LN11@Pow_int:
	fld	DWORD PTR tv74[ebp]
	jmp	SHORT $LN3@Pow_int
$LN1@Pow_int:
	jmp	SHORT $LN4@Pow_int
$LN3@Pow_int:
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pow_int@M@@YAMMH@Z ENDP				; _Pow_int<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?pow@@YAMMH@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
?pow@@YAMMH@Z PROC					; pow, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 1118
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Y$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	??$_Pow_int@M@@YAMMH@Z			; _Pow_int<float>
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?pow@@YAMMH@Z ENDP					; pow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv70 = -4						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 774
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 775
	sqrtss	xmm0, DWORD PTR __X$[ebp]
	movss	DWORD PTR tv70[ebp], xmm0
	fld	DWORD PTR tv70[ebp]
; Line 776
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -4						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 686
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 687
	movss	xmm0, DWORD PTR __X$[ebp]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	movss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
; Line 688
	mov	esp, ebp
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
	push	esi
; Line 557
	mov	esi, esp
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp___hypot
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 558
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_wWinMain@16 PROC
; File d:\engine class\assignment 1\scratch\dxsse\fluidcs11\fluidcs11.cpp
; Line 249
	push	ebp
	mov	ebp, esp
	push	esi
; Line 253
	mov	esi, esp
	push	33					; 00000021H
	call	DWORD PTR __imp___CrtSetDbgFlag
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 260
	push	0
	push	OFFSET ?ModifyDeviceSettings@@YG_NPAUDXUTDeviceSettings@@PAX@Z ; ModifyDeviceSettings
	call	?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z ; DXUTSetCallbackDeviceChanging
; Line 261
	push	0
	push	OFFSET ?MsgProc@@YGJPAUHWND__@@IIJPA_NPAX@Z ; MsgProc
	call	?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z ; DXUTSetCallbackMsgProc
; Line 263
	push	0
	push	OFFSET ?IsD3D11DeviceAcceptable@@YG_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z ; IsD3D11DeviceAcceptable
	call	?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z ; DXUTSetCallbackD3D11DeviceAcceptable
; Line 264
	push	0
	push	OFFSET ?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z ; OnD3D11CreateDevice
	call	?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z ; DXUTSetCallbackD3D11DeviceCreated
; Line 265
	push	0
	push	OFFSET ?OnD3D11ResizedSwapChain@@YGJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z ; OnD3D11ResizedSwapChain
	call	?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z ; DXUTSetCallbackD3D11SwapChainResized
; Line 266
	push	0
	push	OFFSET ?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z ; OnD3D11FrameRender
	call	?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z ; DXUTSetCallbackD3D11FrameRender
; Line 267
	push	0
	push	OFFSET ?OnD3D11ReleasingSwapChain@@YGXPAX@Z ; OnD3D11ReleasingSwapChain
	call	?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z ; DXUTSetCallbackD3D11SwapChainReleasing
; Line 268
	push	0
	push	OFFSET ?OnD3D11DestroyDevice@@YGXPAX@Z	; OnD3D11DestroyDevice
	call	?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z ; DXUTSetCallbackD3D11DeviceDestroyed
; Line 270
	call	?InitApp@@YAXXZ				; InitApp
; Line 271
	push	0
	push	0
	push	1
	push	1
	call	?DXUTInit@@YGJ_N0PA_W0@Z		; DXUTInit
; Line 272
	push	1
	push	1
	call	?DXUTSetCursorSettings@@YGX_N0@Z	; DXUTSetCursorSettings
; Line 273
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	0
	push	0
	push	0
	push	OFFSET $SG188920
	call	?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ; DXUTCreateWindow
; Line 274
	push	1080					; 00000438H
	push	1920					; 00000780H
	push	1
	push	40960					; 0000a000H
	call	?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z ; DXUTCreateDevice
; Line 277
	push	0
	call	?DXUTMainLoop@@YGJPAUHACCEL__@@@Z	; DXUTMainLoop
; Line 278
	call	?DXUTGetExitCode@@YGHXZ			; DXUTGetExitCode
; Line 279
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
_wWinMain@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	esi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
