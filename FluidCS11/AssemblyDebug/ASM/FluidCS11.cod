; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	D:\Users\pn9623\Engine\SSE_fluid\FluidCS11\FluidCS11.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___@@_PchSym_@00@UfhvihUkmJGCDUvmtrmvUhhvPuofrwUuofrwxhBBUzhhvnyobwvyftUuofrwxhBBOlyq@28C41592EACE6808
PUBLIC	?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumPurple
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSeaGreen
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSlateBlue
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSpringGreen
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumTurquoise
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumVioletRed
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	_SID_SCommandBarState
PUBLIC	?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MidnightBlue
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MintCream
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MistyRose
PUBLIC	?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Moccasin
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::NavajoWhite
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?Navy@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Navy
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OldLace
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?Olive@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Olive
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OliveDrab
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?Orange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orange
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OrangeRed
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orchid
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleGoldenrod
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PaleGreen
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleTurquoise
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleVioletRed
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PapayaWhip
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PeachPuff
PUBLIC	_IID_ID3D11ShaderReflectionVariable
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?Peru@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Peru
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?Pink@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Pink
PUBLIC	?Plum@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Plum
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?is_monotonic@steady_clock@chrono@std@@2_NB	; std::chrono::steady_clock::is_monotonic
PUBLIC	?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PowderBlue
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?Purple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Purple
PUBLIC	?is_steady@steady_clock@chrono@std@@2_NB	; std::chrono::steady_clock::is_steady
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?Red@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Red
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RosyBrown
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RoyalBlue
PUBLIC	?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SaddleBrown
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Salmon
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SandyBrown
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaGreen
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaShell
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Sienna
PUBLIC	?Silver@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Silver
PUBLIC	?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SkyBlue
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateBlue
PUBLIC	?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateGray
PUBLIC	_IID_ID3D11ShaderReflectionConstantBuffer
PUBLIC	?Snow@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Snow
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SpringGreen
PUBLIC	?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SteelBlue
PUBLIC	?Tan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Tan
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?Teal@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Teal
PUBLIC	?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Thistle
PUBLIC	?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Tomato
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Transparent
PUBLIC	?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Turquoise
PUBLIC	?Violet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Violet
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Wheat
PUBLIC	?White@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::White
PUBLIC	?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::WhiteSmoke
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Yellow
PUBLIC	?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::YellowGreen
PUBLIC	?value@?$integral_constant@I$07@std@@2IB	; std::integral_constant<unsigned int,8>::value
PUBLIC	_IID_ID3D11ShaderReflection
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?value@?$integral_constant@I$03@std@@2IB	; std::integral_constant<unsigned int,4>::value
PUBLIC	_IID_ID3D11LibraryReflection
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	_IID_ID3D11FunctionReflection
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?value@?$integral_constant@H$0A@@std@@2HB	; std::integral_constant<int,0>::value
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	_IID_ID3D11FunctionParameterReflection
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	_IID_ID3D11Module
PUBLIC	?value@?$integral_constant@I$01@std@@2IB	; std::integral_constant<unsigned int,2>::value
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	_IID_ID3D11ModuleInstance
PUBLIC	?value@?$_Is_ratio@U?$ratio@$00$0JIJGIA@@std@@@chrono@std@@2_NB ; std::chrono::_Is_ratio<std::ratio<1,10000000> >::value
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?value@?$integral_constant@I$00@std@@2IB	; std::integral_constant<unsigned int,1>::value
PUBLIC	_IID_ID3D11Linker
PUBLIC	?value@?$_Maximum@$S@std@@2IB			; std::_Maximum<>::value
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	_IID_ID3D11LinkingNode
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	_IID_ID3D11FunctionLinkingGraph
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	_ConcRT_ProviderGuid
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	_ConcRTEventGuid
PUBLIC	_SchedulerEventGuid
PUBLIC	_ScheduleGroupEventGuid
PUBLIC	_ContextEventGuid
PUBLIC	_ChoreEventGuid
PUBLIC	_VirtualProcessorEventGuid
PUBLIC	_LockEventGuid
PUBLIC	_ResourceManagerEventGuid
PUBLIC	_PPLParallelInvokeEventGuid
PUBLIC	?value@?$_Sign_of@$0GE@@std@@2_JB		; std::_Sign_of<100>::value
PUBLIC	_PPLParallelForEventGuid
PUBLIC	_PPLParallelForeachEventGuid
PUBLIC	_AgentEventGuid
PUBLIC	?value@?$_Sign_of@$00@std@@2_JB			; std::_Sign_of<1>::value
PUBLIC	?value@?$_Abs@$0GE@@std@@2_JB			; std::_Abs<100>::value
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?value@?$_Abs@$00@std@@2_JB			; std::_Abs<1>::value
PUBLIC	?value@?$_GcdX@$00$0A@@std@@2_JB		; std::_GcdX<1,0>::value
PUBLIC	?value@?$_GcdX@$0GE@$00@std@@2_JB		; std::_GcdX<100,1>::value
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?value@?$_Gcd@$0GE@$00@std@@2_JB		; std::_Gcd<100,1>::value
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?num@?$ratio@$0GE@$00@std@@2_JB			; std::ratio<100,1>::num
PUBLIC	?den@?$ratio@$0GE@$00@std@@2_JB			; std::ratio<100,1>::den
PUBLIC	?_N1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_N1
PUBLIC	?resourceView@@3PAUID3D11ShaderResourceView@@A	; resourceView
PUBLIC	?_D1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_D1
PUBLIC	?samplerState@@3PAUID3D11SamplerState@@A	; samplerState
PUBLIC	?sBufferDesc@@3UD3D11_SAMPLER_DESC@@A		; sBufferDesc
PUBLIC	?value@?$_Sign_of@$0DLJKMKAA@@std@@2_JB		; std::_Sign_of<1000000000>::value
PUBLIC	?g_iNullu32@@3IA				; g_iNullu32
PUBLIC	?g_pParticleVS@@3PAUID3D11VertexShader@@A	; g_pParticleVS
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?g_pParticleGS@@3PAUID3D11GeometryShader@@A	; g_pParticleGS
PUBLIC	?g_pParticlePS@@3PAUID3D11PixelShader@@A	; g_pParticlePS
PUBLIC	?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A	; g_pBuildGridCS
PUBLIC	?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
PUBLIC	?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
PUBLIC	?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRepositionParticlesCS
PUBLIC	?value@?$_Abs@$0DLJKMKAA@@std@@2_JB		; std::_Abs<1000000000>::value
PUBLIC	?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
PUBLIC	?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A	; g_pForce_SimpleCS
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
PUBLIC	?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A	; g_pForce_SharedCS
PUBLIC	?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A	; g_pDensity_GridCS
PUBLIC	?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A	; g_pForce_GridCS
PUBLIC	?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A	; g_pIntegrateCS
PUBLIC	?g_pSortBitonic@@3PAUID3D11ComputeShader@@A	; g_pSortBitonic
PUBLIC	?g_pSortTranspose@@3PAUID3D11ComputeShader@@A	; g_pSortTranspose
PUBLIC	?g_pParticles@@3PAUID3D11Buffer@@A		; g_pParticles
PUBLIC	?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
PUBLIC	?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
PUBLIC	?g_pSortedParticles@@3PAUID3D11Buffer@@A	; g_pSortedParticles
PUBLIC	?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
PUBLIC	?value@?$_GcdX@$0DLJKMKAA@$00@std@@2_JB		; std::_GcdX<1000000000,1>::value
PUBLIC	?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
PUBLIC	?g_pParticleDensity@@3PAUID3D11Buffer@@A	; g_pParticleDensity
PUBLIC	?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
PUBLIC	?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
PUBLIC	?g_pParticleForces@@3PAUID3D11Buffer@@A		; g_pParticleForces
PUBLIC	?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
PUBLIC	?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
PUBLIC	?g_pGrid@@3PAUID3D11Buffer@@A			; g_pGrid
PUBLIC	?value@?$_GcdX@$00$0DLJKMKAA@@std@@2_JB		; std::_GcdX<1,1000000000>::value
PUBLIC	?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A	; g_pGridSRV
PUBLIC	?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A	; g_pGridUAV
PUBLIC	?g_pGridPingPong@@3PAUID3D11Buffer@@A		; g_pGridPingPong
PUBLIC	?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
PUBLIC	?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
PUBLIC	?g_pGridIndices@@3PAUID3D11Buffer@@A		; g_pGridIndices
PUBLIC	?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
PUBLIC	?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
PUBLIC	?value@?$_Gcd@$00$0DLJKMKAA@@std@@2_JB		; std::_Gcd<1,1000000000>::value
PUBLIC	?m_pProcessBuffer@@3PAUID3D11Buffer@@A		; m_pProcessBuffer
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A	; m_pProcessSRV
PUBLIC	?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
PUBLIC	?m_pProcessCS@@3PAUID3D11ComputeShader@@A	; m_pProcessCS
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?num@?$ratio@$00$0DLJKMKAA@@std@@2_JB		; std::ratio<1,1000000000>::num
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?den@?$ratio@$00$0DLJKMKAA@@std@@2_JB		; std::ratio<1,1000000000>::den
PUBLIC	?_N2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_N2
PUBLIC	?_D2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_D2
PUBLIC	?value@?$_GcdX@$0GE@$0A@@std@@2_JB		; std::_GcdX<100,0>::value
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?value@?$_GcdX@$0DLJKMKAA@$0GE@@std@@2_JB	; std::_GcdX<1000000000,100>::value
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A	; g_pcbSimulationConstants
PUBLIC	?g_pcbRenderConstants@@3PAUID3D11Buffer@@A	; g_pcbRenderConstants
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?g_pSortCB@@3PAUID3D11Buffer@@A			; g_pSortCB
PUBLIC	?value@?$_GcdX@$0GE@$0DLJKMKAA@@std@@2_JB	; std::_GcdX<100,1000000000>::value
PUBLIC	?value@?$_Gcd@$0GE@$0DLJKMKAA@@std@@2_JB	; std::_Gcd<100,1000000000>::value
PUBLIC	?_Gx@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_Gx
PUBLIC	?value@?$_GcdX@$00$00@std@@2_JB			; std::_GcdX<1,1>::value
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?value@?$_Gcd@$00$00@std@@2_JB			; std::_Gcd<1,1>::value
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?_Gy@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_Gy
PUBLIC	?value@?$_Safe_multX@$00$00$00@std@@2_JB	; std::_Safe_multX<1,1,1>::value
PUBLIC	?value@?$_Safe_mult@$00$00@std@@2_JB		; std::_Safe_mult<1,1>::value
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?value@?$_Abs@$0JIJGIA@@std@@2_JB		; std::_Abs<10000000>::value
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?value@?$_Safe_multX@$00$0JIJGIA@$00@std@@2_JB	; std::_Safe_multX<1,10000000,1>::value
PUBLIC	?value@?$_Safe_mult@$00$0JIJGIA@@std@@2_JB	; std::_Safe_mult<1,10000000>::value
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_monotonic@system_clock@chrono@std@@2_NB	; std::chrono::system_clock::is_monotonic
PUBLIC	?is_steady@system_clock@chrono@std@@2_NB	; std::chrono::system_clock::is_steady
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?g_iNumParticles@@3IA				; g_iNumParticles
PUBLIC	?timeout_infinite@event@Concurrency@@2IB	; Concurrency::event::timeout_infinite
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?g_eSimMode@@3W4eSimulationMode@@A		; g_eSimMode
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	_CLSID_WICImagingFactory
PUBLIC	_CLSID_WICImagingFactory1
PUBLIC	_CLSID_WICImagingFactory2
PUBLIC	_GUID_VendorMicrosoft
PUBLIC	_GUID_VendorMicrosoftBuiltIn
PUBLIC	_CLSID_WICPngDecoder
PUBLIC	_CLSID_WICPngDecoder1
PUBLIC	_CLSID_WICPngDecoder2
PUBLIC	_CLSID_WICBmpDecoder
PUBLIC	_CLSID_WICIcoDecoder
PUBLIC	_CLSID_WICJpegDecoder
PUBLIC	_CLSID_WICGifDecoder
PUBLIC	_CLSID_WICTiffDecoder
PUBLIC	_CLSID_WICWmpDecoder
PUBLIC	_CLSID_WICDdsDecoder
PUBLIC	_CLSID_WICBmpEncoder
PUBLIC	_CLSID_WICPngEncoder
PUBLIC	_CLSID_WICJpegEncoder
PUBLIC	_CLSID_WICGifEncoder
PUBLIC	_CLSID_WICTiffEncoder
PUBLIC	_CLSID_WICWmpEncoder
PUBLIC	_CLSID_WICDdsEncoder
PUBLIC	_GUID_ContainerFormatBmp
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	_GUID_ContainerFormatPng
PUBLIC	_GUID_ContainerFormatIco
PUBLIC	_GUID_ContainerFormatJpeg
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	_GUID_ContainerFormatTiff
PUBLIC	_GUID_ContainerFormatGif
PUBLIC	_GUID_ContainerFormatWmp
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	_GUID_ContainerFormatDds
PUBLIC	_CLSID_WICImagingCategories
PUBLIC	_CATID_WICBitmapDecoders
PUBLIC	_CATID_WICBitmapEncoders
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	_CATID_WICPixelFormats
PUBLIC	_CATID_WICFormatConverters
PUBLIC	_CATID_WICMetadataReader
PUBLIC	_CATID_WICMetadataWriter
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	_CLSID_WICDefaultFormatConverter
PUBLIC	_CLSID_WICFormatConverterHighColor
PUBLIC	_CLSID_WICFormatConverterNChannel
PUBLIC	_CLSID_WICFormatConverterWMPhoto
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	_CLSID_WICPlanarFormatConverter
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	_GUID_WICPixelFormatDontCare
PUBLIC	_GUID_WICPixelFormat1bppIndexed
PUBLIC	_GUID_WICPixelFormat2bppIndexed
PUBLIC	_GUID_WICPixelFormat4bppIndexed
PUBLIC	?value@?$_Sign_of@$0JIJGIA@@std@@2_JB		; std::_Sign_of<10000000>::value
PUBLIC	_GUID_WICPixelFormat8bppIndexed
PUBLIC	_GUID_WICPixelFormatBlackWhite
PUBLIC	_GUID_WICPixelFormat2bppGray
PUBLIC	_GUID_WICPixelFormat4bppGray
PUBLIC	_GUID_WICPixelFormat8bppGray
PUBLIC	_GUID_WICPixelFormat8bppAlpha
PUBLIC	_GUID_WICPixelFormat16bppBGR555
PUBLIC	_GUID_WICPixelFormat16bppBGR565
PUBLIC	_GUID_WICPixelFormat16bppBGRA5551
PUBLIC	_GUID_WICPixelFormat16bppGray
PUBLIC	_GUID_WICPixelFormat24bppBGR
PUBLIC	_GUID_WICPixelFormat24bppRGB
PUBLIC	_GUID_WICPixelFormat32bppBGR
PUBLIC	_GUID_WICPixelFormat32bppBGRA
PUBLIC	_GUID_WICPixelFormat32bppPBGRA
PUBLIC	_GUID_WICPixelFormat32bppGrayFloat
PUBLIC	_GUID_WICPixelFormat32bppRGBA
PUBLIC	?value@?$_GcdX@$0JIJGIA@$00@std@@2_JB		; std::_GcdX<10000000,1>::value
PUBLIC	_GUID_WICPixelFormat32bppPRGBA
PUBLIC	_GUID_WICPixelFormat48bppRGB
PUBLIC	_GUID_WICPixelFormat48bppBGR
PUBLIC	_GUID_WICPixelFormat64bppRGBA
PUBLIC	_GUID_WICPixelFormat64bppBGRA
PUBLIC	_GUID_WICPixelFormat64bppPRGBA
PUBLIC	_GUID_WICPixelFormat64bppPBGRA
PUBLIC	_GUID_WICPixelFormat16bppGrayFixedPoint
PUBLIC	?value@?$_GcdX@$00$0JIJGIA@@std@@2_JB		; std::_GcdX<1,10000000>::value
PUBLIC	_GUID_WICPixelFormat32bppBGR101010
PUBLIC	_GUID_WICPixelFormat48bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat48bppBGRFixedPoint
PUBLIC	_GUID_WICPixelFormat96bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBAFloat
PUBLIC	_GUID_WICPixelFormat128bppPRGBAFloat
PUBLIC	_GUID_WICPixelFormat128bppRGBFloat
PUBLIC	_GUID_WICPixelFormat32bppCMYK
PUBLIC	?value@?$_Gcd@$00$0JIJGIA@@std@@2_JB		; std::_Gcd<1,10000000>::value
PUBLIC	_GUID_WICPixelFormat64bppRGBAFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppBGRAFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBAFixedPoint
PUBLIC	_GUID_WICPixelFormat128bppRGBFixedPoint
PUBLIC	_GUID_WICPixelFormat64bppRGBAHalf
PUBLIC	_GUID_WICPixelFormat64bppRGBHalf
PUBLIC	_GUID_WICPixelFormat48bppRGBHalf
PUBLIC	?num@?$ratio@$00$0JIJGIA@@std@@2_JB		; std::ratio<1,10000000>::num
PUBLIC	_GUID_WICPixelFormat32bppRGBE
PUBLIC	_GUID_WICPixelFormat16bppGrayHalf
PUBLIC	?den@?$ratio@$00$0JIJGIA@@std@@2_JB		; std::ratio<1,10000000>::den
PUBLIC	_GUID_WICPixelFormat32bppGrayFixedPoint
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102
PUBLIC	_GUID_WICPixelFormat32bppRGBA1010102XR
PUBLIC	_GUID_WICPixelFormat64bppCMYK
PUBLIC	_GUID_WICPixelFormat24bpp3Channels
PUBLIC	_GUID_WICPixelFormat32bpp4Channels
PUBLIC	_GUID_WICPixelFormat40bpp5Channels
PUBLIC	_GUID_WICPixelFormat48bpp6Channels
PUBLIC	_GUID_WICPixelFormat56bpp7Channels
PUBLIC	?_N2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB ; std::_Ratio_divide<std::ratio<1,10000000>,std::ratio<1,10000000> >::_N2
PUBLIC	_GUID_WICPixelFormat64bpp8Channels
PUBLIC	_GUID_WICPixelFormat48bpp3Channels
PUBLIC	?_D2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB ; std::_Ratio_divide<std::ratio<1,10000000>,std::ratio<1,10000000> >::_D2
PUBLIC	_GUID_WICPixelFormat64bpp4Channels
PUBLIC	_GUID_WICPixelFormat80bpp5Channels
PUBLIC	_GUID_WICPixelFormat96bpp6Channels
PUBLIC	_GUID_WICPixelFormat112bpp7Channels
PUBLIC	_GUID_WICPixelFormat128bpp8Channels
PUBLIC	_GUID_WICPixelFormat40bppCMYKAlpha
PUBLIC	_GUID_WICPixelFormat80bppCMYKAlpha
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	_GUID_WICPixelFormat32bpp3ChannelsAlpha
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	_GUID_WICPixelFormat40bpp4ChannelsAlpha
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	_GUID_WICPixelFormat48bpp5ChannelsAlpha
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	_GUID_WICPixelFormat56bpp6ChannelsAlpha
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	_GUID_WICPixelFormat64bpp7ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat72bpp8ChannelsAlpha
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	_GUID_WICPixelFormat64bpp3ChannelsAlpha
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	_GUID_WICPixelFormat80bpp4ChannelsAlpha
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	_GUID_WICPixelFormat96bpp5ChannelsAlpha
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	_GUID_WICPixelFormat112bpp6ChannelsAlpha
PUBLIC	_GUID_WICPixelFormat128bpp7ChannelsAlpha
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	_GUID_WICPixelFormat144bpp8ChannelsAlpha
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	_GUID_WICPixelFormat8bppY
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	_GUID_WICPixelFormat8bppCb
PUBLIC	?_N1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_N1
PUBLIC	_GUID_WICPixelFormat8bppCr
PUBLIC	_GUID_WICPixelFormat16bppCbCr
PUBLIC	?_D1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_D1
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?value@?$_Gcd@$0JIJGIA@$00@std@@2_JB		; std::_Gcd<10000000,1>::value
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?value@?$_Gcd@$0A@$0A@@std@@2_JB		; std::_Gcd<0,0>::value
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?num@?$ratio@$0JIJGIA@$00@std@@2_JB		; std::ratio<10000000,1>::num
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMask3
PUBLIC	?den@?$ratio@$0JIJGIA@$00@std@@2_JB		; std::ratio<10000000,1>::den
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskX
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMMaskW
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?_N2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_N2
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?_D2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_D2
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?_Gx@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_Gx
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AliceBlue
PUBLIC	?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AntiqueWhite
PUBLIC	?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Aqua
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Aquamarine
PUBLIC	?Azure@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Azure
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?Beige@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Beige
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Bisque
PUBLIC	?value@?$_GcdX@$0JIJGIA@$0A@@std@@2_JB		; std::_GcdX<10000000,0>::value
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?Black@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Black
PUBLIC	?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::BlanchedAlmond
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?Blue@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Blue
PUBLIC	?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BlueViolet
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?Brown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Brown
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BurlyWood
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::CadetBlue
PUBLIC	?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chartreuse
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?value@?$_GcdX@$0JIJGIA@$0JIJGIA@@std@@2_JB	; std::_GcdX<10000000,10000000>::value
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chocolate
PUBLIC	?Coral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Coral
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::CornflowerBlue
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Cornsilk
PUBLIC	?particles@@3PAUParticle@@A			; particles
PUBLIC	?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Crimson
PUBLIC	?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Cyan
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkBlue
PUBLIC	?_S_cancelBitsMask@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelBitsMask
PUBLIC	?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkCyan
PUBLIC	?value@?$_Gcd@$0JIJGIA@$0JIJGIA@@std@@2_JB	; std::_Gcd<10000000,10000000>::value
PUBLIC	?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkGoldenrod
PUBLIC	?_S_cancelNone@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelNone
PUBLIC	?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGray
PUBLIC	?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGreen
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?_S_cancelStarted@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelStarted
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkKhaki
PUBLIC	?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkMagenta
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?_S_cancelDeferredShootdownOwner@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelDeferredShootdownOwner
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkOliveGreen
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrange
PUBLIC	?_S_cancelShotdownOwner@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelShotdownOwner
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrchid
PUBLIC	?_Gy@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_Gy
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkRed
PUBLIC	?_S_nonNull@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_nonNull
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSalmon
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSeaGreen
PUBLIC	?_S_cancelException@_TaskCollectionBase@details@Concurrency@@1IB ; Concurrency::details::_TaskCollectionBase::_S_cancelException
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateBlue
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateGray
PUBLIC	?_S_notInlined@_TaskCollectionBase@details@Concurrency@@1HB ; Concurrency::details::_TaskCollectionBase::_S_notInlined
PUBLIC	?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkTurquoise
PUBLIC	?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkViolet
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?_S_structured@_TaskCollectionBase@details@Concurrency@@1HB ; Concurrency::details::_TaskCollectionBase::_S_structured
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepPink
PUBLIC	?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepSkyBlue
PUBLIC	?_S_localCancel@_TaskCollectionBase@details@Concurrency@@1HB ; Concurrency::details::_TaskCollectionBase::_S_localCancel
PUBLIC	?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DimGray
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DodgerBlue
PUBLIC	?_S_reserved@_TaskCollectionBase@details@Concurrency@@1HB ; Concurrency::details::_TaskCollectionBase::_S_reserved
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Firebrick
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::FloralWhite
PUBLIC	?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::ForestGreen
PUBLIC	?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Fuchsia
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Gainsboro
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GhostWhite
PUBLIC	?Gold@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gold
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?num@?$ratio@$00$00@std@@2_JB			; std::ratio<1,1>::num
PUBLIC	?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Goldenrod
PUBLIC	?Gray@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gray
PUBLIC	?den@?$ratio@$00$00@std@@2_JB			; std::ratio<1,1>::den
PUBLIC	?Green@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Green
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GreenYellow
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Honeydew
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::HotPink
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::IndianRed
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Indigo
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Ivory
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Khaki
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Lavender
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LavenderBlush
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LawnGreen
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LemonChiffon
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightBlue
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCoral
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCyan
PUBLIC	?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightGoldenrodYellow
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGreen
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGray
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightPink
PUBLIC	?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSalmon
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSeaGreen
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSkyBlue
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSlateGray
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipY
PUBLIC	?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSteelBlue
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightYellow
PUBLIC	_IID_ID3D11ShaderReflectionType
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipW
PUBLIC	?Lime@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Lime
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LimeGreen
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?Linen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Linen
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Magenta
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Maroon
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumAquamarine
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumBlue
PUBLIC	?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumOrchid
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
;	COMDAT ___@@_PchSym_@00@UfhvihUkmJGCDUvmtrmvUhhvPuofrwUuofrwxhBBUzhhvnyobwvyftUuofrwxhBBOlyq@28C41592EACE6808
_BSS	SEGMENT
___@@_PchSym_@00@UfhvihUkmJGCDUvmtrmvUhhvPuofrwUuofrwxhBBUzhhvnyobwvyftUuofrwxhBBOlyq@28C41592EACE6808 DD 01H DUP (?)
_BSS	ENDS
_BSS	SEGMENT
?resourceView@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; resourceView
?samplerState@@3PAUID3D11SamplerState@@A DD 01H DUP (?)	; samplerState
?sBufferDesc@@3UD3D11_SAMPLER_DESC@@A DB 034H DUP (?)	; sBufferDesc
_sseEnabled DB	01H DUP (?)
	ALIGN	4

?g_iNullu32@@3IA DD 01H DUP (?)				; g_iNullu32
?g_pParticleVS@@3PAUID3D11VertexShader@@A DD 01H DUP (?) ; g_pParticleVS
?g_pParticleGS@@3PAUID3D11GeometryShader@@A DD 01H DUP (?) ; g_pParticleGS
?g_pParticlePS@@3PAUID3D11PixelShader@@A DD 01H DUP (?)	; g_pParticlePS
?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pBuildGridCS
?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pClearGridIndicesCS
?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pBuildGridIndicesCS
?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pRearrangeParticlesCS
?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pRepositionParticlesCS
?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pDensity_SimpleCS
?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pForce_SimpleCS
?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pDensity_SharedCS
?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pForce_SharedCS
?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pDensity_GridCS
?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pForce_GridCS
?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pIntegrateCS
?g_pSortBitonic@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pSortBitonic
?g_pSortTranspose@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; g_pSortTranspose
?g_pParticles@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pParticles
?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pParticlesSRV
?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pParticlesUAV
?g_pSortedParticles@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pSortedParticles
?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pSortedParticlesSRV
?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pSortedParticlesUAV
?g_pParticleDensity@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pParticleDensity
?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pParticleDensitySRV
?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pParticleDensityUAV
?g_pParticleForces@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pParticleForces
?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pParticleForcesSRV
?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pParticleForcesUAV
?g_pGrid@@3PAUID3D11Buffer@@A DD 01H DUP (?)		; g_pGrid
?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pGridSRV
?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pGridUAV
?g_pGridPingPong@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pGridPingPong
?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pGridPingPongSRV
?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pGridPingPongUAV
?g_pGridIndices@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; g_pGridIndices
?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; g_pGridIndicesSRV
?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; g_pGridIndicesUAV
?m_pProcessBuffer@@3PAUID3D11Buffer@@A DD 01H DUP (?)	; m_pProcessBuffer
?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A DD 01H DUP (?) ; m_pProcessSRV
?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A DD 01H DUP (?) ; m_pProcessUAV
?m_pProcessCS@@3PAUID3D11ComputeShader@@A DD 01H DUP (?) ; m_pProcessCS
?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A DD 01H DUP (?) ; g_pcbSimulationConstants
?g_pcbRenderConstants@@3PAUID3D11Buffer@@A DD 01H DUP (?) ; g_pcbRenderConstants
?g_pSortCB@@3PAUID3D11Buffer@@A DD 01H DUP (?)		; g_pSortCB
?particles@@3PAUParticle@@A DD 01H DUP (?)		; particles
_BSS	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+008
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3ababbr ; 0.729412 ; DirectX::Colors::MediumOrchid
	DD	03eaaaaabr			; 0.333333
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumBlue
	DD	000000000r			; 0
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ecccccer ; 0.4 ; DirectX::Colors::MediumAquamarine
	DD	03f4dcdcfr			; 0.803922
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Maroon
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Magenta
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?Linen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Linen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Linen
	DD	03f70f0f2r			; 0.941177
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e48c8car ; 0.196078 ; DirectX::Colors::LimeGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?Lime@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lime@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Lime
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionType
CONST	SEGMENT
_IID_ID3D11ShaderReflectionType DD 06e6ffa6aH
	DW	09baeH
	DW	04613H
	DB	0a5H
	DB	01eH
	DB	091H
	DB	065H
	DB	02dH
	DB	050H
	DB	08cH
	DB	021H
CONST	ENDS
;	COMDAT ?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightYellow
	DD	03f800000r			; 1
	DD	03f60e0e2r			; 0.878431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::LightSteelBlue
	DD	03f44c4c6r			; 0.768628
	DD	03f5edee0r			; 0.870588
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eeeeef0r ; 0.466667 ; DirectX::Colors::LightSlateGray
	DD	03f088889r			; 0.533333
	DD	03f19999ar			; 0.6
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-005
	DD	037800000r			; 1.52588e-005
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-005
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::LightSkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e008081r ; 0.12549 ; DirectX::Colors::LightSeaGreen
	DD	03f32b2b3r			; 0.698039
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightSalmon
	DD	03f20a0a1r			; 0.627451
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightPink
	DD	03f36b6b7r			; 0.713726
	DD	03f41c1c3r			; 0.756863
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f53d3d5r ; 0.827451 ; DirectX::Colors::LightGray
	DD	03f53d3d5r			; 0.827451
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f109091r ; 0.564706 ; DirectX::Colors::LightGreen
	DD	03f6eeef0r			; 0.933333
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::LightGoldenrodYellow
	DD	03f7afafcr			; 0.980392
	DD	03f52d2d4r			; 0.823529
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f60e0e2r ; 0.878431 ; DirectX::Colors::LightCyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORI32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::LightCoral
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::LightBlue
	DD	03f58d8dar			; 0.847059
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LemonChiffon
	DD	03f7afafcr			; 0.980392
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef8f8far ; 0.486275 ; DirectX::Colors::LawnGreen
	DD	03f7cfcfer			; 0.988235
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LavenderBlush
	DD	03f70f0f2r			; 0.941177
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f66e6e8r ; 0.901961 ; DirectX::Colors::Lavender
	DD	03f66e6e8r			; 0.901961
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+006 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+006
	DD	04b000000r			; 8.38861e+006
	DD	04b000000r			; 8.38861e+006
CONST	ENDS
;	COMDAT ?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Khaki
	DD	03f66e6e8r			; 0.901961
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-005 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-005
	DD	030000100r			; 4.65675e-010
	DD	030000100r			; 4.65675e-010
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Ivory
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e969697r ; 0.294118 ; DirectX::Colors::Indigo
	DD	000000000r			; 0
	DD	03f028283r			; 0.509804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::IndianRed
	DD	03eb8b8b9r			; 0.360784
	DD	03eb8b8b9r			; 0.360784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::HotPink
	DD	03ed2d2d4r			; 0.411765
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-005 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-010
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Honeydew
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::GreenYellow
	DD	03f800000r			; 1
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORI32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?Green@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Green@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Green
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?den@?$ratio@$00$00@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$00$00@std@@2_JB DQ 0000000000000001H	; std::ratio<1,1>::den
CONST	ENDS
;	COMDAT ?Gray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Gray
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Goldenrod
	DD	03f25a5a6r			; 0.647059
	DD	03e008081r			; 0.12549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?num@?$ratio@$00$00@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$00$00@std@@2_JB DQ 0000000000000001H	; std::ratio<1,1>::num
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?Gold@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gold@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Gold
	DD	03f57d7d9r			; 0.843137
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f78f8far ; 0.972549 ; DirectX::Colors::GhostWhite
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-006
	DD	031004020r			; 1.86629e-009
	DD	02faaaaabr			; 3.10441e-010
CONST	ENDS
;	COMDAT ?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Gainsboro
	DD	03f5cdcder			; 0.862745
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Fuchsia
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e088889r ; 0.133333 ; DirectX::Colors::ForestGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::FloralWhite
	DD	03f7afafcr			; 0.980392
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+008
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f32b2b3r ; 0.698039 ; DirectX::Colors::Firebrick
	DD	03e088889r			; 0.133333
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORI32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?_S_reserved@_TaskCollectionBase@details@Concurrency@@1HB
CONST	SEGMENT
?_S_reserved@_TaskCollectionBase@details@Concurrency@@1HB DD 0cH ; Concurrency::details::_TaskCollectionBase::_S_reserved
CONST	ENDS
;	COMDAT ?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03df0f0f2r ; 0.117647 ; DirectX::Colors::DodgerBlue
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORI32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed2d2d4r ; 0.411765 ; DirectX::Colors::DimGray
	DD	03ed2d2d4r			; 0.411765
	DD	03ed2d2d4r			; 0.411765
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_S_localCancel@_TaskCollectionBase@details@Concurrency@@1HB
CONST	SEGMENT
?_S_localCancel@_TaskCollectionBase@details@Concurrency@@1HB DD 02H ; Concurrency::details::_TaskCollectionBase::_S_localCancel
CONST	ENDS
;	COMDAT ?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DeepSkyBlue
	DD	03f3fbfc0r			; 0.74902
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DeepPink
	DD	03da0a0a1r			; 0.0784314
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?_S_structured@_TaskCollectionBase@details@Concurrency@@1HB
CONST	SEGMENT
?_S_structured@_TaskCollectionBase@details@Concurrency@@1HB DD 01H ; Concurrency::details::_TaskCollectionBase::_S_structured
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-008 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-005
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-010
CONST	ENDS
;	COMDAT ?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f149495r ; 0.580392 ; DirectX::Colors::DarkViolet
	DD	000000000r			; 0
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkTurquoise
	DD	03f4eced0r			; 0.807843
	DD	03f51d1d3r			; 0.819608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_S_notInlined@_TaskCollectionBase@details@Concurrency@@1HB
CONST	SEGMENT
?_S_notInlined@_TaskCollectionBase@details@Concurrency@@1HB DD 0ffffffffH ; Concurrency::details::_TaskCollectionBase::_S_notInlined
CONST	ENDS
;	COMDAT ?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e3cbcbdr ; 0.184314 ; DirectX::Colors::DarkSlateGray
	DD	03e9e9e9fr			; 0.309804
	DD	03e9e9e9fr			; 0.309804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::DarkSlateBlue
	DD	03e74f4f6r			; 0.239216
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORI32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?_S_cancelException@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelException@_TaskCollectionBase@details@Concurrency@@1IB DD 0cH ; Concurrency::details::_TaskCollectionBase::_S_cancelException
CONST	ENDS
;	COMDAT ?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0f8f90r ; 0.560784 ; DirectX::Colors::DarkSeaGreen
	DD	03f3cbcbdr			; 0.737255
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORI32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f69e9ebr ; 0.913726 ; DirectX::Colors::DarkSalmon
	DD	03f169697r			; 0.588235
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?_S_nonNull@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_nonNull@_TaskCollectionBase@details@Concurrency@@1IB DD 08H ; Concurrency::details::_TaskCollectionBase::_S_nonNull
CONST	ENDS
;	COMDAT ?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkRed
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?_Gy@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_Gy@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000989680H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_Gy
CONST	ENDS
;	COMDAT ?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f19999ar ; 0.6 ; DirectX::Colors::DarkOrchid
	DD	03e48c8car			; 0.196078
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?_S_cancelShotdownOwner@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelShotdownOwner@_TaskCollectionBase@details@Concurrency@@1IB DD 03H ; Concurrency::details::_TaskCollectionBase::_S_cancelShotdownOwner
CONST	ENDS
;	COMDAT ?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DarkOrange
	DD	03f0c8c8dr			; 0.54902
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eaaaaabr ; 0.333333 ; DirectX::Colors::DarkOliveGreen
	DD	03ed6d6d8r			; 0.419608
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?_S_cancelDeferredShootdownOwner@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelDeferredShootdownOwner@_TaskCollectionBase@details@Concurrency@@1IB DD 02H ; Concurrency::details::_TaskCollectionBase::_S_cancelDeferredShootdownOwner
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkMagenta
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3dbdber ; 0.741176 ; DirectX::Colors::DarkKhaki
	DD	03f37b7b8r			; 0.717647
	DD	03ed6d6d8r			; 0.419608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?_S_cancelStarted@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelStarted@_TaskCollectionBase@details@Concurrency@@1IB DD 01H ; Concurrency::details::_TaskCollectionBase::_S_cancelStarted
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-007 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-007
	DD	034000000r			; 1.19209e-007
	DD	034000000r			; 1.19209e-007
CONST	ENDS
;	COMDAT ?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkGreen
	DD	03ec8c8car			; 0.392157
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f29a9aar ; 0.662745 ; DirectX::Colors::DarkGray
	DD	03f29a9aar			; 0.662745
	DD	03f29a9aar			; 0.662745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_S_cancelNone@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelNone@_TaskCollectionBase@details@Concurrency@@1IB DD 00H ; Concurrency::details::_TaskCollectionBase::_S_cancelNone
CONST	ENDS
;	COMDAT ?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f38b8b9r ; 0.721569 ; DirectX::Colors::DarkGoldenrod
	DD	03f068687r			; 0.52549
	DD	03d30b0b1r			; 0.0431373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0JIJGIA@$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0JIJGIA@$0JIJGIA@@std@@2_JB DQ 0000000000989680H ; std::_Gcd<10000000,10000000>::value
CONST	ENDS
;	COMDAT ?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkCyan
	DD	03f0b8b8cr			; 0.545098
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_S_cancelBitsMask@_TaskCollectionBase@details@Concurrency@@1IB
CONST	SEGMENT
?_S_cancelBitsMask@_TaskCollectionBase@details@Concurrency@@1IB DD 03H ; Concurrency::details::_TaskCollectionBase::_S_cancelBitsMask
CONST	ENDS
;	COMDAT ?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkBlue
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Cyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Crimson
	DD	03da0a0a1r			; 0.0784314
	DD	03e70f0f2r			; 0.235294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Cornsilk
	DD	03f78f8far			; 0.972549
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ec8c8car ; 0.392157 ; DirectX::Colors::CornflowerBlue
	DD	03f159596r			; 0.584314
	DD	03f6dedefr			; 0.929412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?Coral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Coral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Coral
	DD	03efeff00r			; 0.498039
	DD	03ea0a0a1r			; 0.313726
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Chocolate
	DD	03ed2d2d4r			; 0.411765
	DD	03df0f0f2r			; 0.117647
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0JIJGIA@$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0JIJGIA@$0JIJGIA@@std@@2_JB DQ 0000000000989680H ; std::_GcdX<10000000,10000000>::value
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Chartreuse
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ebebebfr ; 0.372549 ; DirectX::Colors::CadetBlue
	DD	03f1e9e9fr			; 0.619608
	DD	03f20a0a1r			; 0.627451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5edee0r ; 0.870588 ; DirectX::Colors::BurlyWood
	DD	03f38b8b9r			; 0.721569
	DD	03f078788r			; 0.529412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?Brown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Brown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f25a5a6r ; 0.647059 ; DirectX::Colors::Brown
	DD	03e28a8a9r			; 0.164706
	DD	03e28a8a9r			; 0.164706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0a8a8br ; 0.541176 ; DirectX::Colors::BlueViolet
	DD	03e2cacadr			; 0.168627
	DD	03f62e2e4r			; 0.886275
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Blue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Blue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Blue
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::BlanchedAlmond
	DD	03f6bebedr			; 0.921569
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Black@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Black@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Black
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0JIJGIA@$0A@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0JIJGIA@$0A@@std@@2_JB DQ 0000000000989680H ; std::_GcdX<10000000,0>::value
CONST	ENDS
;	COMDAT ?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Bisque
	DD	03f64e4e6r			; 0.894118
	DD	03f44c4c6r			; 0.768628
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?Beige@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Beige@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Beige
	DD	03f75f5f7r			; 0.960784
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?Azure@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Azure@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Azure
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Aquamarine
	DD	03f800000r			; 1
	DD	03f54d4d6r			; 0.831373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Aqua
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::AntiqueWhite
	DD	03f6bebedr			; 0.921569
	DD	03f57d7d9r			; 0.843137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::AliceBlue
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?_Gx@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_Gx@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_Gx
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?_D2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_D2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_D2
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?_N2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_N2@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000989680H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_N2
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?den@?$ratio@$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$0JIJGIA@$00@std@@2_JB DQ 0000000000000001H ; std::ratio<10000000,1>::den
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORI32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORI32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?num@?$ratio@$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$0JIJGIA@$00@std@@2_JB DQ 0000000000989680H ; std::ratio<10000000,1>::num
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORI32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0A@$0A@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0A@$0A@@std@@2_JB DQ 0000000000000001H	; std::_Gcd<0,0>::value
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0JIJGIA@$00@std@@2_JB DQ 0000000000000001H ; std::_Gcd<10000000,1>::value
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?_D1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_D1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000989680H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_D1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppCbCr
CONST	SEGMENT
_GUID_WICPixelFormat16bppCbCr DD 0ff95ba6eH
	DW	011e0H
	DW	04263H
	DB	0bbH
	DB	045H
	DB	01H
	DB	072H
	DB	01fH
	DB	034H
	DB	060H
	DB	0a4H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppCr
CONST	SEGMENT
_GUID_WICPixelFormat8bppCr DD 0b8145053H
	DW	02116H
	DW	049f0H
	DB	088H
	DB	035H
	DB	0edH
	DB	084H
	DB	04bH
	DB	020H
	DB	05cH
	DB	051H
CONST	ENDS
;	COMDAT ?_N1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB
CONST	SEGMENT
?_N1@?$_Ratio_multiply@U?$ratio@$00$0JIJGIA@@std@@U?$ratio@$0JIJGIA@$00@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<1,10000000>,std::ratio<10000000,1> >::_N1
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppCb
CONST	SEGMENT
_GUID_WICPixelFormat8bppCb DD 01339f224H
	DW	06bfeH
	DW	04c3eH
	DB	093H
	DB	02H
	DB	0e4H
	DB	0f3H
	DB	0a6H
	DB	0d0H
	DB	0caH
	DB	02aH
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppY
CONST	SEGMENT
_GUID_WICPixelFormat8bppY DD 091b4db54H
	DW	02df9H
	DW	042f0H
	DB	0b4H
	DB	049H
	DB	029H
	DB	09H
	DB	0bbH
	DB	03dH
	DB	0f8H
	DB	08eH
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat144bpp8ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat144bpp8ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	039H
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bpp7ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat128bpp7ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	038H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat112bpp6ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat112bpp6ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	037H
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bpp5ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat96bpp5ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	036H
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bpp4ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bpp4ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	035H
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp3ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat64bpp3ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	034H
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-005
	DD	03824bec9r			; 3.92783e-005
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat72bpp8ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat72bpp8ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	033H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp7ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat64bpp7ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	032H
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat56bpp6ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat56bpp6ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	031H
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-007 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp5ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat48bpp5ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	030H
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-005
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bpp4ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bpp4ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02fH
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-008 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bpp3ChannelsAlpha
CONST	SEGMENT
_GUID_WICPixelFormat32bpp3ChannelsAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02eH
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-006
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat80bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bppCMYKAlpha
CONST	SEGMENT
_GUID_WICPixelFormat40bppCMYKAlpha DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bpp8Channels
CONST	SEGMENT
_GUID_WICPixelFormat128bpp8Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat112bpp7Channels
CONST	SEGMENT
_GUID_WICPixelFormat112bpp7Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bpp6Channels
CONST	SEGMENT
_GUID_WICPixelFormat96bpp6Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	029H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat80bpp5Channels
CONST	SEGMENT
_GUID_WICPixelFormat80bpp5Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	028H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp4Channels
CONST	SEGMENT
_GUID_WICPixelFormat64bpp4Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	027H
CONST	ENDS
;	COMDAT ?_D2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB
CONST	SEGMENT
?_D2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB DQ 0000000000989680H ; std::_Ratio_divide<std::ratio<1,10000000>,std::ratio<1,10000000> >::_D2
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp3Channels
CONST	SEGMENT
_GUID_WICPixelFormat48bpp3Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	026H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bpp8Channels
CONST	SEGMENT
_GUID_WICPixelFormat64bpp8Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	025H
CONST	ENDS
;	COMDAT ?_N2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB
CONST	SEGMENT
?_N2@?$_Ratio_divide@U?$ratio@$00$0JIJGIA@@std@@U12@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_divide<std::ratio<1,10000000>,std::ratio<1,10000000> >::_N2
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat56bpp7Channels
CONST	SEGMENT
_GUID_WICPixelFormat56bpp7Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	024H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bpp6Channels
CONST	SEGMENT
_GUID_WICPixelFormat48bpp6Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	023H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat40bpp5Channels
CONST	SEGMENT
_GUID_WICPixelFormat40bpp5Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	022H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bpp4Channels
CONST	SEGMENT
_GUID_WICPixelFormat32bpp4Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	021H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bpp3Channels
CONST	SEGMENT
_GUID_WICPixelFormat24bpp3Channels DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	020H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat64bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102XR
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102XR DD 0de6b9aH
	DW	0c101H
	DW	0434bH
	DB	0b5H
	DB	02H
	DB	0d0H
	DB	016H
	DB	05eH
	DB	0e1H
	DB	012H
	DB	02cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA1010102
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA1010102 DD 025238d72H
	DW	0fcf9H
	DW	04522H
	DB	0b5H
	DB	014H
	DB	055H
	DB	078H
	DB	0e5H
	DB	0adH
	DB	055H
	DB	0e0H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03fH
CONST	ENDS
;	COMDAT ?den@?$ratio@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$00$0JIJGIA@@std@@2_JB DQ 0000000000989680H ; std::ratio<1,10000000>::den
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayHalf
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBE
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBE DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03dH
CONST	ENDS
;	COMDAT ?num@?$ratio@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$00$0JIJGIA@@std@@2_JB DQ 0000000000000001H ; std::ratio<1,10000000>::num
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	042H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAHalf
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAHalf DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	041H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	040H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRAFixedPoint DD 0356de33cH
	DW	054d2H
	DW	04a23H
	DB	0bbH
	DB	04H
	DB	09bH
	DB	07bH
	DB	0f9H
	DB	0b1H
	DB	0d4H
	DB	02dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBAFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBAFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01dH
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$00$0JIJGIA@@std@@2_JB DQ 0000000000000001H ; std::_Gcd<1,10000000>::value
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppCMYK
CONST	SEGMENT
_GUID_WICPixelFormat32bppCMYK DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppPRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppPRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat128bppRGBAFloat
CONST	SEGMENT
_GUID_WICPixelFormat128bppRGBAFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	019H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat96bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat96bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	018H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGRFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGRFixedPoint DD 049ca140eH
	DW	0cab6H
	DW	0493bH
	DB	09dH
	DB	0dfH
	DB	060H
	DB	018H
	DB	07cH
	DB	037H
	DB	053H
	DB	02aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGBFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGBFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	012H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR101010
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR101010 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	014H
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$00$0JIJGIA@@std@@2_JB DQ 0000000000000001H ; std::_GcdX<1,10000000>::value
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGrayFixedPoint
CONST	SEGMENT
_GUID_WICPixelFormat16bppGrayFixedPoint DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPBGRA DD 08c518e8eH
	DW	0a4ecH
	DW	0468bH
	DB	0aeH
	DB	070H
	DB	0c9H
	DB	0a3H
	DB	05aH
	DB	09cH
	DB	055H
	DB	030H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppPRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	017H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat64bppBGRA DD 01562ff7cH
	DW	0d352H
	DW	046f9H
	DB	097H
	DB	09eH
	DB	042H
	DB	097H
	DB	06bH
	DB	079H
	DB	022H
	DB	046H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat64bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat64bppRGBA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	016H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat48bppBGR DD 0e605a384H
	DW	0b468H
	DW	046ceH
	DB	0bbH
	DB	02eH
	DB	036H
	DB	0f1H
	DB	080H
	DB	0e6H
	DB	043H
	DB	013H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat48bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat48bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	015H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPRGBA DD 03cc4a650H
	DW	0a527H
	DW	04d37H
	DB	0a9H
	DB	016H
	DB	031H
	DB	042H
	DB	0c7H
	DB	0ebH
	DB	0edH
	DB	0baH
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0JIJGIA@$00@std@@2_JB DQ 0000000000000001H ; std::_GcdX<10000000,1>::value
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppRGBA
CONST	SEGMENT
_GUID_WICPixelFormat32bppRGBA DD 0f5c7ad2dH
	DW	06a8dH
	DW	043ddH
	DB	0a7H
	DB	0a8H
	DB	0a2H
	DB	099H
	DB	035H
	DB	026H
	DB	01aH
	DB	0e9H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppGrayFloat
CONST	SEGMENT
_GUID_WICPixelFormat32bppGrayFloat DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	011H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppPBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppPBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	010H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGRA
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGRA DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0fH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat32bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat32bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0eH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppRGB
CONST	SEGMENT
_GUID_WICPixelFormat24bppRGB DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0dH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat24bppBGR
CONST	SEGMENT
_GUID_WICPixelFormat24bppBGR DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0cH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppGray
CONST	SEGMENT
_GUID_WICPixelFormat16bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0bH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGRA5551
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGRA5551 DD 05ec7c2bH
	DW	0f1e6H
	DW	04961H
	DB	0adH
	DB	046H
	DB	0e1H
	DB	0ccH
	DB	081H
	DB	0aH
	DB	087H
	DB	0d2H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR565
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR565 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	0aH
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat16bppBGR555
CONST	SEGMENT
_GUID_WICPixelFormat16bppBGR555 DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	09H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppAlpha
CONST	SEGMENT
_GUID_WICPixelFormat8bppAlpha DD 0e6cd0116H
	DW	0eebaH
	DW	04161H
	DB	0aaH
	DB	085H
	DB	027H
	DB	0ddH
	DB	09fH
	DB	0b3H
	DB	0a8H
	DB	095H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppGray
CONST	SEGMENT
_GUID_WICPixelFormat8bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	08H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppGray
CONST	SEGMENT
_GUID_WICPixelFormat4bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	07H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppGray
CONST	SEGMENT
_GUID_WICPixelFormat2bppGray DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	06H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatBlackWhite
CONST	SEGMENT
_GUID_WICPixelFormatBlackWhite DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	05H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat8bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat8bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	04H
CONST	ENDS
;	COMDAT ?value@?$_Sign_of@$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Sign_of@$0JIJGIA@@std@@2_JB DQ 0000000000000001H ; std::_Sign_of<10000000>::value
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat4bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat4bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	03H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat2bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat2bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	02H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormat1bppIndexed
CONST	SEGMENT
_GUID_WICPixelFormat1bppIndexed DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	01H
CONST	ENDS
;	COMDAT _GUID_WICPixelFormatDontCare
CONST	SEGMENT
_GUID_WICPixelFormatDontCare DD 06fddc324H
	DW	04e03H
	DW	04bfeH
	DB	0b1H
	DB	085H
	DB	03dH
	DB	077H
	DB	076H
	DB	08dH
	DB	0c9H
	DB	00H
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT _CLSID_WICPlanarFormatConverter
CONST	SEGMENT
_CLSID_WICPlanarFormatConverter DD 0184132b8H
	DW	032f8H
	DW	04784H
	DB	091H
	DB	031H
	DB	0ddH
	DB	072H
	DB	024H
	DB	0b2H
	DB	034H
	DB	038H
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterWMPhoto
CONST	SEGMENT
_CLSID_WICFormatConverterWMPhoto DD 09cb5172bH
	DW	0d600H
	DW	046baH
	DB	0abH
	DB	077H
	DB	077H
	DB	0bbH
	DB	07eH
	DB	03aH
	DB	00H
	DB	0d9H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterNChannel
CONST	SEGMENT
_CLSID_WICFormatConverterNChannel DD 0c17cabb2H
	DW	0d4a3H
	DW	047d7H
	DB	0a5H
	DB	057H
	DB	033H
	DB	09bH
	DB	02eH
	DB	0fbH
	DB	0d4H
	DB	0f1H
CONST	ENDS
;	COMDAT _CLSID_WICFormatConverterHighColor
CONST	SEGMENT
_CLSID_WICFormatConverterHighColor DD 0ac75d454H
	DW	09f37H
	DW	048f8H
	DB	0b9H
	DB	072H
	DB	04eH
	DB	019H
	DB	0bcH
	DB	085H
	DB	060H
	DB	011H
CONST	ENDS
;	COMDAT _CLSID_WICDefaultFormatConverter
CONST	SEGMENT
_CLSID_WICDefaultFormatConverter DD 01a3f11dcH
	DW	0b514H
	DW	04b17H
	DB	08cH
	DB	05fH
	DB	021H
	DB	054H
	DB	051H
	DB	038H
	DB	052H
	DB	0f1H
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT _CATID_WICMetadataWriter
CONST	SEGMENT
_CATID_WICMetadataWriter DD 0abe3b9a4H
	DW	0257dH
	DW	04b97H
	DB	0bdH
	DB	01aH
	DB	029H
	DB	04aH
	DB	0f4H
	DB	096H
	DB	022H
	DB	02eH
CONST	ENDS
;	COMDAT _CATID_WICMetadataReader
CONST	SEGMENT
_CATID_WICMetadataReader DD 05af94d8H
	DW	07174H
	DW	04cd2H
	DB	0beH
	DB	04aH
	DB	041H
	DB	024H
	DB	0b8H
	DB	0eH
	DB	0e4H
	DB	0b8H
CONST	ENDS
;	COMDAT _CATID_WICFormatConverters
CONST	SEGMENT
_CATID_WICFormatConverters DD 07835eae8H
	DW	0bf14H
	DW	049d1H
	DB	093H
	DB	0ceH
	DB	053H
	DB	03aH
	DB	040H
	DB	07bH
	DB	022H
	DB	048H
CONST	ENDS
;	COMDAT _CATID_WICPixelFormats
CONST	SEGMENT
_CATID_WICPixelFormats DD 02b46e70fH
	DW	0cda7H
	DW	0473eH
	DB	089H
	DB	0f6H
	DB	0dcH
	DB	096H
	DB	030H
	DB	0a2H
	DB	039H
	DB	0bH
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT _CATID_WICBitmapEncoders
CONST	SEGMENT
_CATID_WICBitmapEncoders DD 0ac757296H
	DW	03522H
	DW	04e11H
	DB	098H
	DB	062H
	DB	0c1H
	DB	07bH
	DB	0e5H
	DB	0a1H
	DB	076H
	DB	07eH
CONST	ENDS
;	COMDAT _CATID_WICBitmapDecoders
CONST	SEGMENT
_CATID_WICBitmapDecoders DD 07ed96837H
	DW	096f0H
	DW	04812H
	DB	0b2H
	DB	011H
	DB	0f1H
	DB	03cH
	DB	024H
	DB	011H
	DB	07eH
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_WICImagingCategories
CONST	SEGMENT
_CLSID_WICImagingCategories DD 0fae3d380H
	DW	0fea4H
	DW	04623H
	DB	08cH
	DB	075H
	DB	0c6H
	DB	0b6H
	DB	011H
	DB	010H
	DB	0b6H
	DB	081H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatDds
CONST	SEGMENT
_GUID_ContainerFormatDds DD 09967cb95H
	DW	02e85H
	DW	04ac8H
	DB	08cH
	DB	0a2H
	DB	083H
	DB	0d7H
	DB	0ccH
	DB	0d4H
	DB	025H
	DB	0c9H
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT _GUID_ContainerFormatWmp
CONST	SEGMENT
_GUID_ContainerFormatWmp DD 057a37caaH
	DW	0367aH
	DW	04540H
	DB	091H
	DB	06bH
	DB	0f1H
	DB	083H
	DB	0c5H
	DB	09H
	DB	03aH
	DB	04bH
CONST	ENDS
;	COMDAT _GUID_ContainerFormatGif
CONST	SEGMENT
_GUID_ContainerFormatGif DD 01f8a5601H
	DW	07d4dH
	DW	04cbdH
	DB	09cH
	DB	082H
	DB	01bH
	DB	0c8H
	DB	0d4H
	DB	0eeH
	DB	0b9H
	DB	0a5H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatTiff
CONST	SEGMENT
_GUID_ContainerFormatTiff DD 0163bcc30H
	DW	0e2e9H
	DW	04f0bH
	DB	096H
	DB	01dH
	DB	0a3H
	DB	0e9H
	DB	0fdH
	DB	0b7H
	DB	088H
	DB	0a3H
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT _GUID_ContainerFormatJpeg
CONST	SEGMENT
_GUID_ContainerFormatJpeg DD 019e4a5aaH
	DW	05662H
	DW	04fc5H
	DB	0a0H
	DB	0c0H
	DB	017H
	DB	058H
	DB	02H
	DB	08eH
	DB	010H
	DB	057H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatIco
CONST	SEGMENT
_GUID_ContainerFormatIco DD 0a3a860c4H
	DW	0338fH
	DW	04c17H
	DB	091H
	DB	09aH
	DB	0fbH
	DB	0a4H
	DB	0b5H
	DB	062H
	DB	08fH
	DB	021H
CONST	ENDS
;	COMDAT _GUID_ContainerFormatPng
CONST	SEGMENT
_GUID_ContainerFormatPng DD 01b7cfaf4H
	DW	0713fH
	DW	0473cH
	DB	0bbH
	DB	0cdH
	DB	061H
	DB	037H
	DB	042H
	DB	05fH
	DB	0aeH
	DB	0afH
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT _GUID_ContainerFormatBmp
CONST	SEGMENT
_GUID_ContainerFormatBmp DD 0af1d87eH
	DW	0fcfeH
	DW	04188H
	DB	0bdH
	DB	0ebH
	DB	0a7H
	DB	090H
	DB	064H
	DB	071H
	DB	0cbH
	DB	0e3H
CONST	ENDS
;	COMDAT _CLSID_WICDdsEncoder
CONST	SEGMENT
_CLSID_WICDdsEncoder DD 0a61dde94H
	DW	066ceH
	DW	04ac1H
	DB	088H
	DB	01bH
	DB	071H
	DB	068H
	DB	05H
	DB	088H
	DB	089H
	DB	05eH
CONST	ENDS
;	COMDAT _CLSID_WICWmpEncoder
CONST	SEGMENT
_CLSID_WICWmpEncoder DD 0ac4ce3cbH
	DW	0e1c1H
	DW	044cdH
	DB	082H
	DB	015H
	DB	05aH
	DB	016H
	DB	065H
	DB	050H
	DB	09eH
	DB	0c2H
CONST	ENDS
;	COMDAT _CLSID_WICTiffEncoder
CONST	SEGMENT
_CLSID_WICTiffEncoder DD 0131be10H
	DW	02001H
	DW	04c5fH
	DB	0a9H
	DB	0b0H
	DB	0ccH
	DB	088H
	DB	0faH
	DB	0b6H
	DB	04cH
	DB	0e8H
CONST	ENDS
;	COMDAT _CLSID_WICGifEncoder
CONST	SEGMENT
_CLSID_WICGifEncoder DD 0114f5598H
	DW	0b22H
	DW	040a0H
	DB	086H
	DB	0a1H
	DB	0c8H
	DB	03eH
	DB	0a4H
	DB	095H
	DB	0adH
	DB	0bdH
CONST	ENDS
;	COMDAT _CLSID_WICJpegEncoder
CONST	SEGMENT
_CLSID_WICJpegEncoder DD 01a34f5c1H
	DW	04a5aH
	DW	046dcH
	DB	0b6H
	DB	044H
	DB	01fH
	DB	045H
	DB	067H
	DB	0e7H
	DB	0a6H
	DB	076H
CONST	ENDS
;	COMDAT _CLSID_WICPngEncoder
CONST	SEGMENT
_CLSID_WICPngEncoder DD 027949969H
	DW	0876aH
	DW	041d7H
	DB	094H
	DB	047H
	DB	056H
	DB	08fH
	DB	06aH
	DB	035H
	DB	0a4H
	DB	0dcH
CONST	ENDS
;	COMDAT _CLSID_WICBmpEncoder
CONST	SEGMENT
_CLSID_WICBmpEncoder DD 069be8bb4H
	DW	0d66dH
	DW	047c8H
	DB	086H
	DB	05aH
	DB	0edH
	DB	015H
	DB	089H
	DB	043H
	DB	037H
	DB	082H
CONST	ENDS
;	COMDAT _CLSID_WICDdsDecoder
CONST	SEGMENT
_CLSID_WICDdsDecoder DD 09053699fH
	DW	0a341H
	DW	0429dH
	DB	09eH
	DB	090H
	DB	0eeH
	DB	043H
	DB	07cH
	DB	0f8H
	DB	0cH
	DB	073H
CONST	ENDS
;	COMDAT _CLSID_WICWmpDecoder
CONST	SEGMENT
_CLSID_WICWmpDecoder DD 0a26cec36H
	DW	0234cH
	DW	04950H
	DB	0aeH
	DB	016H
	DB	0e3H
	DB	04aH
	DB	0acH
	DB	0e7H
	DB	01dH
	DB	0dH
CONST	ENDS
;	COMDAT _CLSID_WICTiffDecoder
CONST	SEGMENT
_CLSID_WICTiffDecoder DD 0b54e85d9H
	DW	0fe23H
	DW	0499fH
	DB	08bH
	DB	088H
	DB	06aH
	DB	0ceH
	DB	0a7H
	DB	013H
	DB	075H
	DB	02bH
CONST	ENDS
;	COMDAT _CLSID_WICGifDecoder
CONST	SEGMENT
_CLSID_WICGifDecoder DD 0381dda3cH
	DW	09ce9H
	DW	04834H
	DB	0a2H
	DB	03eH
	DB	01fH
	DB	098H
	DB	0f8H
	DB	0fcH
	DB	052H
	DB	0beH
CONST	ENDS
;	COMDAT _CLSID_WICJpegDecoder
CONST	SEGMENT
_CLSID_WICJpegDecoder DD 09456a480H
	DW	0e88bH
	DW	043eaH
	DB	09eH
	DB	073H
	DB	0bH
	DB	02dH
	DB	09bH
	DB	071H
	DB	0b1H
	DB	0caH
CONST	ENDS
;	COMDAT _CLSID_WICIcoDecoder
CONST	SEGMENT
_CLSID_WICIcoDecoder DD 0c61bfcdfH
	DW	02e0fH
	DW	04aadH
	DB	0a8H
	DB	0d7H
	DB	0e0H
	DB	06bH
	DB	0afH
	DB	0ebH
	DB	0cdH
	DB	0feH
CONST	ENDS
;	COMDAT _CLSID_WICBmpDecoder
CONST	SEGMENT
_CLSID_WICBmpDecoder DD 06b462062H
	DW	07cbfH
	DW	0400dH
	DB	09fH
	DB	0dbH
	DB	081H
	DB	03dH
	DB	0d1H
	DB	0fH
	DB	027H
	DB	078H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder2
CONST	SEGMENT
_CLSID_WICPngDecoder2 DD 0e018945bH
	DW	0aa86H
	DW	04008H
	DB	09bH
	DB	0d4H
	DB	067H
	DB	077H
	DB	0a1H
	DB	0e4H
	DB	0cH
	DB	011H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder1
CONST	SEGMENT
_CLSID_WICPngDecoder1 DD 0389ea17bH
	DW	05078H
	DW	04cdeH
	DB	0b6H
	DB	0efH
	DB	025H
	DB	0c1H
	DB	051H
	DB	075H
	DB	0c7H
	DB	051H
CONST	ENDS
;	COMDAT _CLSID_WICPngDecoder
CONST	SEGMENT
_CLSID_WICPngDecoder DD 0389ea17bH
	DW	05078H
	DW	04cdeH
	DB	0b6H
	DB	0efH
	DB	025H
	DB	0c1H
	DB	051H
	DB	075H
	DB	0c7H
	DB	051H
CONST	ENDS
;	COMDAT _GUID_VendorMicrosoftBuiltIn
CONST	SEGMENT
_GUID_VendorMicrosoftBuiltIn DD 0257a30fdH
	DW	06b6H
	DW	0462bH
	DB	0aeH
	DB	0a4H
	DB	063H
	DB	0f7H
	DB	0bH
	DB	086H
	DB	0e5H
	DB	033H
CONST	ENDS
;	COMDAT _GUID_VendorMicrosoft
CONST	SEGMENT
_GUID_VendorMicrosoft DD 0f0e749caH
	DW	0edefH
	DW	04589H
	DB	0a7H
	DB	03aH
	DB	0eeH
	DB	0eH
	DB	062H
	DB	06aH
	DB	02aH
	DB	02bH
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory2
CONST	SEGMENT
_CLSID_WICImagingFactory2 DD 0317d06e8H
	DW	05f24H
	DW	0433dH
	DB	0bdH
	DB	0f7H
	DB	079H
	DB	0ceH
	DB	068H
	DB	0d8H
	DB	0abH
	DB	0c2H
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory1
CONST	SEGMENT
_CLSID_WICImagingFactory1 DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT _CLSID_WICImagingFactory
CONST	SEGMENT
_CLSID_WICImagingFactory DD 0cacaf262H
	DW	09370H
	DW	04615H
	DB	0a1H
	DB	03bH
	DB	09fH
	DB	055H
	DB	039H
	DB	0daH
	DB	04cH
	DB	0aH
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?timeout_infinite@event@Concurrency@@2IB
CONST	SEGMENT
?timeout_infinite@event@Concurrency@@2IB DD 0ffffffffH	; Concurrency::event::timeout_infinite
CONST	ENDS
_DATA	SEGMENT
?g_iNumParticles@@3IA DD 04000H				; g_iNumParticles
?g_eSimMode@@3W4eSimulationMode@@A DD 02H		; g_eSimMode
_DATA	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?is_steady@system_clock@chrono@std@@2_NB
CONST	SEGMENT
?is_steady@system_clock@chrono@std@@2_NB DB 00H		; std::chrono::system_clock::is_steady
CONST	ENDS
;	COMDAT ?is_monotonic@system_clock@chrono@std@@2_NB
CONST	SEGMENT
?is_monotonic@system_clock@chrono@std@@2_NB DB 00H	; std::chrono::system_clock::is_monotonic
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Safe_mult@$00$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Safe_mult@$00$0JIJGIA@@std@@2_JB DQ 0000000000989680H ; std::_Safe_mult<1,10000000>::value
CONST	ENDS
;	COMDAT ?value@?$_Safe_multX@$00$0JIJGIA@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Safe_multX@$00$0JIJGIA@$00@std@@2_JB DQ 0000000000989680H ; std::_Safe_multX<1,10000000,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?value@?$_Abs@$0JIJGIA@@std@@2_JB
CONST	SEGMENT
?value@?$_Abs@$0JIJGIA@@std@@2_JB DQ 0000000000989680H	; std::_Abs<10000000>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Safe_mult@$00$00@std@@2_JB
CONST	SEGMENT
?value@?$_Safe_mult@$00$00@std@@2_JB DQ 0000000000000001H ; std::_Safe_mult<1,1>::value
CONST	ENDS
;	COMDAT ?value@?$_Safe_multX@$00$00$00@std@@2_JB
CONST	SEGMENT
?value@?$_Safe_multX@$00$00$00@std@@2_JB DQ 0000000000000001H ; std::_Safe_multX<1,1,1>::value
CONST	ENDS
;	COMDAT ?_Gy@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_Gy@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_Gy
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$00$00@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$00$00@std@@2_JB DQ 0000000000000001H	; std::_Gcd<1,1>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$00$00@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$00$00@std@@2_JB DQ 0000000000000001H	; std::_GcdX<1,1>::value
CONST	ENDS
;	COMDAT ?_Gx@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_Gx@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000064H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_Gx
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0GE@$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0GE@$0DLJKMKAA@@std@@2_JB DQ 0000000000000064H ; std::_Gcd<100,1000000000>::value
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0GE@$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0GE@$0DLJKMKAA@@std@@2_JB DQ 0000000000000064H ; std::_GcdX<100,1000000000>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0DLJKMKAA@$0GE@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0DLJKMKAA@$0GE@@std@@2_JB DQ 0000000000000064H ; std::_GcdX<1000000000,100>::value
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0GE@$0A@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0GE@$0A@@std@@2_JB DQ 0000000000000064H	; std::_GcdX<100,0>::value
CONST	ENDS
;	COMDAT ?_D2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_D2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 000000003b9aca00H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_D2
CONST	ENDS
;	COMDAT ?_N2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_N2@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_N2
CONST	ENDS
;	COMDAT ?den@?$ratio@$00$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$00$0DLJKMKAA@@std@@2_JB DQ 000000003b9aca00H ; std::ratio<1,1000000000>::den
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?num@?$ratio@$00$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$00$0DLJKMKAA@@std@@2_JB DQ 0000000000000001H ; std::ratio<1,1000000000>::num
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$00$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$00$0DLJKMKAA@@std@@2_JB DQ 0000000000000001H ; std::_Gcd<1,1000000000>::value
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$00$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$00$0DLJKMKAA@@std@@2_JB DQ 0000000000000001H ; std::_GcdX<1,1000000000>::value
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0DLJKMKAA@$00@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0DLJKMKAA@$00@std@@2_JB DQ 0000000000000001H ; std::_GcdX<1000000000,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?value@?$_Abs@$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_Abs@$0DLJKMKAA@@std@@2_JB DQ 000000003b9aca00H ; std::_Abs<1000000000>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Sign_of@$0DLJKMKAA@@std@@2_JB
CONST	SEGMENT
?value@?$_Sign_of@$0DLJKMKAA@@std@@2_JB DQ 0000000000000001H ; std::_Sign_of<1000000000>::value
CONST	ENDS
;	COMDAT ?_D1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_D1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000001H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_D1
CONST	ENDS
;	COMDAT ?_N1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB
CONST	SEGMENT
?_N1@?$_Ratio_multiply@U?$ratio@$0GE@$00@std@@U?$ratio@$00$0DLJKMKAA@@2@@std@@2_JB DQ 0000000000000064H ; std::_Ratio_multiply<std::ratio<100,1>,std::ratio<1,1000000000> >::_N1
CONST	ENDS
;	COMDAT ?den@?$ratio@$0GE@$00@std@@2_JB
CONST	SEGMENT
?den@?$ratio@$0GE@$00@std@@2_JB DQ 0000000000000001H	; std::ratio<100,1>::den
CONST	ENDS
;	COMDAT ?num@?$ratio@$0GE@$00@std@@2_JB
CONST	SEGMENT
?num@?$ratio@$0GE@$00@std@@2_JB DQ 0000000000000064H	; std::ratio<100,1>::num
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?value@?$_Gcd@$0GE@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Gcd@$0GE@$00@std@@2_JB DQ 0000000000000001H	; std::_Gcd<100,1>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$0GE@$00@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$0GE@$00@std@@2_JB DQ 0000000000000001H	; std::_GcdX<100,1>::value
CONST	ENDS
;	COMDAT ?value@?$_GcdX@$00$0A@@std@@2_JB
CONST	SEGMENT
?value@?$_GcdX@$00$0A@@std@@2_JB DQ 0000000000000001H	; std::_GcdX<1,0>::value
CONST	ENDS
;	COMDAT ?value@?$_Abs@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Abs@$00@std@@2_JB DQ 0000000000000001H	; std::_Abs<1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Abs@$0GE@@std@@2_JB
CONST	SEGMENT
?value@?$_Abs@$0GE@@std@@2_JB DQ 0000000000000064H	; std::_Abs<100>::value
CONST	ENDS
;	COMDAT ?value@?$_Sign_of@$00@std@@2_JB
CONST	SEGMENT
?value@?$_Sign_of@$00@std@@2_JB DQ 0000000000000001H	; std::_Sign_of<1>::value
CONST	ENDS
;	COMDAT _AgentEventGuid
CONST	SEGMENT
_AgentEventGuid DD 0b9b5b78cH
	DW	0713H
	DW	04898H
	DB	0a2H
	DB	01aH
	DB	0c6H
	DB	079H
	DB	049H
	DB	0dcH
	DB	0edH
	DB	07H
CONST	ENDS
;	COMDAT _PPLParallelForeachEventGuid
CONST	SEGMENT
_PPLParallelForeachEventGuid DD 05cb7d785H
	DW	09d66H
	DW	0465dH
	DB	0baH
	DB	0e1H
	DB	046H
	DB	011H
	DB	06H
	DB	01bH
	DB	054H
	DB	034H
CONST	ENDS
;	COMDAT _PPLParallelForEventGuid
CONST	SEGMENT
_PPLParallelForEventGuid DD 031c8da6bH
	DW	06165H
	DW	04042H
	DB	08bH
	DB	092H
	DB	094H
	DB	09eH
	DB	031H
	DB	05fH
	DB	04dH
	DB	084H
CONST	ENDS
;	COMDAT ?value@?$_Sign_of@$0GE@@std@@2_JB
CONST	SEGMENT
?value@?$_Sign_of@$0GE@@std@@2_JB DQ 0000000000000001H	; std::_Sign_of<100>::value
CONST	ENDS
;	COMDAT _PPLParallelInvokeEventGuid
CONST	SEGMENT
_PPLParallelInvokeEventGuid DD 0d1b5b133H
	DW	0ec3dH
	DW	049f4H
	DB	098H
	DB	0a3H
	DB	046H
	DB	04dH
	DB	01aH
	DB	09eH
	DB	046H
	DB	082H
CONST	ENDS
;	COMDAT _ResourceManagerEventGuid
CONST	SEGMENT
_ResourceManagerEventGuid DD 02718d25bH
	DW	05bf5H
	DW	04479H
	DB	08eH
	DB	088H
	DB	0baH
	DB	0bcH
	DB	064H
	DB	0bdH
	DB	0bfH
	DB	0caH
CONST	ENDS
;	COMDAT _LockEventGuid
CONST	SEGMENT
_LockEventGuid DD 079a60dc6H
	DW	05fc8H
	DW	04952H
	DB	0a4H
	DB	01cH
	DB	011H
	DB	063H
	DB	0aeH
	DB	0ecH
	DB	05eH
	DB	0b8H
CONST	ENDS
;	COMDAT _VirtualProcessorEventGuid
CONST	SEGMENT
_VirtualProcessorEventGuid DD 02f27805fH
	DW	01676H
	DW	04eccH
	DB	096H
	DB	0faH
	DB	07eH
	DB	0b0H
	DB	09dH
	DB	044H
	DB	030H
	DB	02fH
CONST	ENDS
;	COMDAT _ChoreEventGuid
CONST	SEGMENT
_ChoreEventGuid DD 07e854ec7H
	DW	0cdc4H
	DW	0405aH
	DB	0b5H
	DB	0b2H
	DB	0aaH
	DB	0f7H
	DB	0c9H
	DB	0e7H
	DB	0d4H
	DB	0cH
CONST	ENDS
;	COMDAT _ContextEventGuid
CONST	SEGMENT
_ContextEventGuid DD 05727a00fH
	DW	050beH
	DW	04519H
	DB	082H
	DB	056H
	DB	0f7H
	DB	069H
	DB	098H
	DB	071H
	DB	0feH
	DB	0cbH
CONST	ENDS
;	COMDAT _ScheduleGroupEventGuid
CONST	SEGMENT
_ScheduleGroupEventGuid DD 0e8a3bf1fH
	DW	0a86bH
	DW	04390H
	DB	09cH
	DB	060H
	DB	053H
	DB	090H
	DB	0b9H
	DB	069H
	DB	0d2H
	DB	02cH
CONST	ENDS
;	COMDAT _SchedulerEventGuid
CONST	SEGMENT
_SchedulerEventGuid DD 0e2091f8aH
	DW	01e0aH
	DW	04731H
	DB	084H
	DB	0a2H
	DB	0dH
	DB	0d5H
	DB	07cH
	DB	08aH
	DB	052H
	DB	061H
CONST	ENDS
;	COMDAT _ConcRTEventGuid
CONST	SEGMENT
_ConcRTEventGuid DD 072b14a7dH
	DW	0704cH
	DW	0423eH
	DB	092H
	DB	0f8H
	DB	07eH
	DB	06dH
	DB	064H
	DB	0bcH
	DB	0b9H
	DB	02aH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT _ConcRT_ProviderGuid
CONST	SEGMENT
_ConcRT_ProviderGuid DD 0f7b697a3H
	DW	04db5H
	DW	04d3bH
	DB	0beH
	DB	071H
	DB	0c4H
	DB	0d2H
	DB	084H
	DB	0e6H
	DB	059H
	DB	02fH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionLinkingGraph
CONST	SEGMENT
_IID_ID3D11FunctionLinkingGraph DD 054133220H
	DW	01ce8H
	DW	043d3H
	DB	082H
	DB	036H
	DB	098H
	DB	055H
	DB	0c5H
	DB	0ceH
	DB	0ecH
	DB	0ffH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT _IID_ID3D11LinkingNode
CONST	SEGMENT
_IID_ID3D11LinkingNode DD 0d80dd70cH
	DW	08d2fH
	DW	04751H
	DB	094H
	DB	0a1H
	DB	03H
	DB	0c7H
	DB	09bH
	DB	035H
	DB	056H
	DB	0dbH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?value@?$_Maximum@$S@std@@2IB
CONST	SEGMENT
?value@?$_Maximum@$S@std@@2IB DD 00H			; std::_Maximum<>::value
CONST	ENDS
;	COMDAT _IID_ID3D11Linker
CONST	SEGMENT
_IID_ID3D11Linker DD 059a6cd0eH
	DW	0e10dH
	DW	04c1fH
	DB	088H
	DB	0c0H
	DB	063H
	DB	0abH
	DB	0a1H
	DB	0daH
	DB	0f3H
	DB	0eH
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$00@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$00@std@@2IB DD 01H		; std::integral_constant<unsigned int,1>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?value@?$_Is_ratio@U?$ratio@$00$0JIJGIA@@std@@@chrono@std@@2_NB
CONST	SEGMENT
?value@?$_Is_ratio@U?$ratio@$00$0JIJGIA@@std@@@chrono@std@@2_NB DB 01H ; std::chrono::_Is_ratio<std::ratio<1,10000000> >::value
CONST	ENDS
;	COMDAT _IID_ID3D11ModuleInstance
CONST	SEGMENT
_IID_ID3D11ModuleInstance DD 0469e07f7H
	DW	045aH
	DW	048d5H
	DB	0aaH
	DB	012H
	DB	068H
	DB	0a4H
	DB	078H
	DB	0cdH
	DB	0f7H
	DB	05dH
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$01@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$01@std@@2IB DD 02H		; std::integral_constant<unsigned int,2>::value
CONST	ENDS
;	COMDAT _IID_ID3D11Module
CONST	SEGMENT
_IID_ID3D11Module DD 0cac701eeH
	DW	080fcH
	DW	04122H
	DB	082H
	DB	042H
	DB	010H
	DB	0b3H
	DB	09cH
	DB	08cH
	DB	0ecH
	DB	034H
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionParameterReflection
CONST	SEGMENT
_IID_ID3D11FunctionParameterReflection DD 042757488H
	DW	0334fH
	DW	047feH
	DB	098H
	DB	02eH
	DB	01aH
	DB	065H
	DB	0d0H
	DB	08cH
	DB	0c4H
	DB	062H
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?value@?$integral_constant@H$0A@@std@@2HB
CONST	SEGMENT
?value@?$integral_constant@H$0A@@std@@2HB DD 00H	; std::integral_constant<int,0>::value
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT _IID_ID3D11FunctionReflection
CONST	SEGMENT
_IID_ID3D11FunctionReflection DD 0207bcecbH
	DW	0d683H
	DW	04a06H
	DB	0a8H
	DB	0a3H
	DB	09bH
	DB	014H
	DB	09bH
	DB	09fH
	DB	073H
	DB	0a4H
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT _IID_ID3D11LibraryReflection
CONST	SEGMENT
_IID_ID3D11LibraryReflection DD 054384f1bH
	DW	05b3eH
	DW	04bb7H
	DB	0aeH
	DB	01H
	DB	060H
	DB	0baH
	DB	030H
	DB	097H
	DB	0cbH
	DB	0b6H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$03@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$03@std@@2IB DD 04H		; std::integral_constant<unsigned int,4>::value
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflection
CONST	SEGMENT
_IID_ID3D11ShaderReflection DD 08d536ca1H
	DW	0ccaH
	DW	04956H
	DB	0a8H
	DB	037H
	DB	078H
	DB	069H
	DB	063H
	DB	075H
	DB	055H
	DB	084H
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$07@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$07@std@@2IB DD 08H		; std::integral_constant<unsigned int,8>::value
CONST	ENDS
;	COMDAT ?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f1a9a9br ; 0.603922 ; DirectX::Colors::YellowGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Yellow
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::WhiteSmoke
	DD	03f75f5f7r			; 0.960784
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
CONST	SEGMENT
$SG191541 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191542 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191547 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191548 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189738 DB	' : ', 00H
$SG191553 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191554 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189766 DB	0aH, 00H
	ORG $+2
$SG191568 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191569 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191574 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191575 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189785 DB	'Particles', 00H
	ORG $+2
$SG191580 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191581 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189795 DB	'Sorted', 00H
	ORG $+1
$SG189796 DB	'Sorted SRV', 00H
	ORG $+1
$SG191595 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191596 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191601 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191602 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189797 DB	'Sorted UAV', 00H
	ORG $+1
$SG191607 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191608 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189814 DB	'Forces', 00H
	ORG $+1
$SG189815 DB	'Forces SRV', 00H
	ORG $+1
$SG191622 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191623 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191628 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191629 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189816 DB	'Forces UAV', 00H
	ORG $+1
$SG191634 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191635 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189833 DB	'Density', 00H
$SG189834 DB	'Density SRV', 00H
$SG191649 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191650 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191655 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191656 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189835 DB	'Density UAV', 00H
$SG191661 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191662 DB	'FluidCS11.cpp', 00H
	ORG $+2
_g_pNullSRV DD	00H
$SG191676 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'b', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H
	DB	'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H, '('
	DB	00H, 'p', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ')'
	DB	00H, ' ', 00H, '?', 00H, ' ', 00H, '&', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'I', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG191677 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191682 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*', 00H, 'p'
	DB	00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 's', 00H, 'r', 00H, 'v'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'p', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG191683 DB	'FluidCS11.cpp', 00H
	ORG $+2
_g_pNullUAV DD	00H
$SG191688 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'U', 00H
	DB	'n', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e'
	DB	00H, 'd', 00H, 'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '(', 00H, '*'
	DB	00H, 'p', 00H, 'p', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&', 00H, 'u', 00H, 'a'
	DB	00H, 'v', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'p', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')'
	DB	00H, 00H, 00H
$SG191689 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189853 DB	'Grid SRV', 00H
	ORG $+3
$SG191698 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H, 'C', 00H, 'B', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG191699 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191708 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H, 'C', 00H, 'B', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG191709 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG191718 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '(', 00H, '&'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'p', 00H, 'p', 00H, 'C', 00H, 'B', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG191719 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189691 DB	'POS: ', 00H
	ORG $+2
$SG189783 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'N'
	DB	00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	's', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ',', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H
	DB	'e', 00H, 's', 00H, ')', 00H, 00H, 00H
$SG189784 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189786 DB	'Particles SRV', 00H
	ORG $+2
$SG189787 DB	'Particles UAV', 00H
	ORG $+2
$SG189854 DB	'Grid UAV', 00H
	ORG $+3
$SG189793 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'N'
	DB	00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S', 00H, 'o', 00H
	DB	'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'P', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S'
	DB	00H, 'o', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e'
	DB	00H, 's', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ',', 00H, ' ', 00H
	DB	'&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S', 00H, 'o', 00H, 'r'
	DB	00H, 't', 00H, 'e', 00H, 'd', 00H, 'P', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, 'U'
	DB	00H, 'A', 00H, 'V', 00H, ',', 00H, ' ', 00H, 'p', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's'
	DB	00H, ')', 00H, 00H, 00H
$SG189794 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189812 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, ' '
	DB	00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H, 'i', 00H, 'N', 00H
	DB	'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i'
	DB	00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, ',', 00H, ' ', 00H
	DB	'&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'F'
	DB	00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 's', 00H, 'S', 00H
	DB	'R', 00H, 'V', 00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_'
	DB	00H, 'p', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, 'U', 00H, 'A', 00H, 'V', 00H, ')', 00H
	DB	00H, 00H
$SG189813 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189831 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'D', 00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, ' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H, 'i', 00H
	DB	'N', 00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'D', 00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l'
	DB	00H, 'e', 00H, 'D', 00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, 'S', 00H, 'R', 00H, 'V', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'D'
	DB	00H, 'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H
	DB	'U', 00H, 'A', 00H, 'V', 00H, ')', 00H, 00H, 00H
$SG189832 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189850 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'u', 00H, '3'
	DB	00H, '2', 00H, ' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H
	DB	'i', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G'
	DB	00H, 'r', 00H, 'i', 00H, 'd', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'g', 00H, '_', 00H, 'p', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd'
	DB	00H, 'S', 00H, 'R', 00H, 'V', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'g', 00H, '_', 00H, 'p', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd'
	DB	00H, 'U', 00H, 'A', 00H, 'V', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189851 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189852 DB	'Grid', 00H
	ORG $+3
$SG189860 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'u', 00H, '3'
	DB	00H, '2', 00H, ' ', 00H, '>', 00H, '(', 00H, 'g', 00H, '_', 00H
	DB	'i', 00H, 'N', 00H, 'u', 00H, 'm', 00H, 'P', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 's', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G'
	DB	00H, 'r', 00H, 'i', 00H, 'd', 00H, 'P', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'P', 00H, 'o', 00H, 'n', 00H, 'g', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G', 00H, 'r', 00H
	DB	'i', 00H, 'd', 00H, 'P', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'P'
	DB	00H, 'o', 00H, 'n', 00H, 'g', 00H, 'S', 00H, 'R', 00H, 'V', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G'
	DB	00H, 'r', 00H, 'i', 00H, 'd', 00H, 'P', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'P', 00H, 'o', 00H, 'n', 00H, 'g', 00H, 'U', 00H, 'A'
	DB	00H, 'V', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189861 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189862 DB	'PingPong', 00H
	ORG $+3
$SG189863 DB	'PingPong SRV', 00H
	ORG $+3
$SG189864 DB	'PingPong UAV', 00H
	ORG $+3
$SG189880 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189881 DB	'Indices', 00H
$SG189882 DB	'Indices SRV', 00H
$SG189879 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'e', 00H, 'd', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, '<', 00H, ' ', 00H, 'u', 00H, '3'
	DB	00H, '2', 00H, '2', 00H, ' ', 00H, '>', 00H, '(', 00H, 'N', 00H
	DB	'U', 00H, 'M', 00H, '_', 00H, 'G', 00H, 'R', 00H, 'I', 00H, 'D'
	DB	00H, '_', 00H, 'I', 00H, 'N', 00H, 'D', 00H, 'I', 00H, 'C', 00H
	DB	'E', 00H, 'S', 00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_'
	DB	00H, 'p', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H, 'I', 00H
	DB	'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'i'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, 'S', 00H, 'R', 00H, 'V', 00H
	DB	',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'G'
	DB	00H, 'r', 00H, 'i', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, 'U', 00H, 'A', 00H, 'V'
	DB	00H, ')', 00H, 00H, 00H
$SG189883 DB	'Indices UAV', 00H
$SG189941 DB	'MAIN BUFFER', 00H
$SG189942 DB	'PROCESS COMPUTE SHADER', 00H
	ORG $+1
$SG189943 DB	'PROCESS SRV', 00H
$SG189944 DB	'PROCESS UAV', 00H
$SG189967 DB	'vs_5_0', 00H
	ORG $+1
$SG189968 DB	'ParticleVS', 00H
	ORG $+1
$SG189969 DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'l', 00H, 'e', 00H, 'V', 00H, 'S', 00H, '.', 00H, 'h', 00H, 'l'
	DB	00H, 's', 00H, 'l', 00H, 00H, 00H
$SG189973 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'V', 00H, 'S', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'V', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, '"', 00H, 'v'
	DB	00H, 's', 00H, '_', 00H, '5', 00H, '_', 00H, '0', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG189974 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189981 DB	'ParticleVS', 00H
	ORG $+1
$SG189978 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'x', 00H, 'S', 00H, 'h'
	DB	00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H, 'p', 00H
	DB	'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e'
	DB	00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H
	DB	'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' '
	DB	00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'V'
	DB	00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189979 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189982 DB	'gs_5_0', 00H
	ORG $+1
$SG189983 DB	'ParticleGS', 00H
	ORG $+1
$SG189984 DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'l', 00H, 'e', 00H, 'G', 00H, 'S', 00H, '.', 00H, 'h', 00H, 'l'
	DB	00H, 's', 00H, 'l', 00H, 00H, 00H
$SG188968 DB	'w', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e'
	DB	00H, '.', 00H, 'p', 00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG189988 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'G', 00H, 'S', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'G', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, '"', 00H, 'g'
	DB	00H, 's', 00H, '_', 00H, '5', 00H, '_', 00H, '0', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG189989 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189996 DB	'ParticleGS', 00H
	ORG $+1
$SG189993 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'G', 00H
	DB	'e', 00H, 'o', 00H, 'm', 00H, 'e', 00H, 't', 00H, 'r', 00H, 'y'
	DB	00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'(', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H
	DB	',', 00H, ' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b'
	DB	00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H
	DB	'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l'
	DB	00H, 'e', 00H, 'G', 00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG189994 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189997 DB	'ps_5_0', 00H
	ORG $+1
$SG189998 DB	'ParticlePS', 00H
	ORG $+1
$SG189999 DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H
	DB	'l', 00H, 'e', 00H, 'P', 00H, 'S', 00H, '.', 00H, 'h', 00H, 'l'
	DB	00H, 's', 00H, 'l', 00H, 00H, 00H
_XM_PI	DD	040490fdbr			; 3.14159
_XM_2PI	DD	040c90fdbr			; 6.28319
$SG190003 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't'
	DB	00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'P', 00H, 'S', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H
	DB	't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H
	DB	'P', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, '"', 00H, 'p'
	DB	00H, 's', 00H, '_', 00H, '5', 00H, '_', 00H, '0', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
_XM_1DIVPI DD	03ea2f983r			; 0.31831
$SG190004 DB	'FluidCS11.cpp', 00H
	ORG $+2
_XM_1DIV2PI DD	03e22f983r			; 0.159155
_XM_PIDIV2 DD	03fc90fdbr			; 1.5708
_XM_PIDIV4 DD	03f490fdbr			; 0.785398
$SG190011 DB	'ParticlePS', 00H
	ORG $+1
$SG190008 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'P', 00H
	DB	'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'S', 00H, 'h', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H, 'p', 00H, 'B', 00H
	DB	'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e'
	DB	00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'p', 00H
	DB	'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H
	DB	'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '('
	DB	00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H
	DB	'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H, '&'
	DB	00H, 'g', 00H, '_', 00H, 'p', 00H, 'P', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, 'i', 00H, 'c', 00H, 'l', 00H, 'e', 00H, 'P', 00H, 'S'
	DB	00H, ')', 00H, 00H, 00H
$SG190009 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190013 DB	'cs_5_0', 00H
	ORG $+1
$SG190014 DB	'cs_4_0', 00H
	ORG $+1
$SG190016 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'S', 00H, 'h', 00H, 'a'
	DB	00H, 'd', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, '.', 00H
	DB	'.', 00H, 00H, 00H
	ORG $+2
$SG190017 DB	'IntegrateCS', 00H
$SG190018 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG188997 DB	'D', 00H, 'E', 00H, 'B', 00H, 'U', 00H, 'G', 00H, 00H, 00H
$SG188998 DB	'O', 00H, 'u', 00H, 'r', 00H, ' ', 00H, 'F', 00H, 'i', 00H
	DB	'r', 00H, 's', 00H, 't', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 'm'
	DB	00H, 00H, 00H
	ORG $+2
$SG190023 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'I', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H, 'S'
	DB	00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG188999 DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '1', 00H, 00H
	DB	00H
	ORG $+2
$SG190024 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190029 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'I', 00H
	DB	'n', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190030 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189007 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, 00H, 00H
$SG190032 DB	'IntegrateCS', 00H
$SG190033 DB	'DensityCS_Simple', 00H
	ORG $+3
$SG190034 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190039 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'D', 00H, 'e', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, 'C', 00H, 'S', 00H
	DB	'_', 00H, 'S', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e'
	DB	00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H
	DB	'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H
	DB	'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N'
	DB	00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E'
	DB	00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190040 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190045 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'D', 00H
	DB	'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, '_'
	DB	00H, 'S', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG190046 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190048 DB	'DensityCS_Simple', 00H
	ORG $+3
$SG190049 DB	'ForceCS_Simple', 00H
	ORG $+1
$SG190050 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190055 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'F', 00H, 'o', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 'C', 00H, 'S', 00H, '_', 00H, 'S', 00H
	DB	'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3'
	DB	00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H
	DB	'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S'
	DB	00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG190056 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190064 DB	'ForceCS_Simple', 00H
	ORG $+1
$SG190065 DB	'DensityCS_Shared', 00H
	ORG $+3
$SG190061 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'C', 00H, 'S', 00H
	DB	')', 00H, 00H, 00H
$SG190062 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190066 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190071 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'D', 00H, 'e', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, 'C', 00H, 'S', 00H
	DB	'_', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd'
	DB	00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H
	DB	'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' '
	DB	00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H
	DB	'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N'
	DB	00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H
	DB	'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E'
	DB	00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H
	DB	' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190072 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190077 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'D', 00H
	DB	'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, '_'
	DB	00H, 'S', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H
	DB	'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG190078 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190080 DB	'DensityCS_Shared', 00H
	ORG $+3
$SG190081 DB	'ForceCS_Shared', 00H
	ORG $+1
$SG190082 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190087 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'F', 00H, 'o', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 'C', 00H, 'S', 00H, '_', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3'
	DB	00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H
	DB	'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S'
	DB	00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
$SG190088 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190096 DB	'ForceCS_Shared', 00H
	ORG $+1
_g_fInitialParticleSpacing DD 03b9374bcr	; 0.0045
$SG190093 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'S', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, 'C', 00H, 'S', 00H
	DB	')', 00H, 00H, 00H
$SG190094 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190097 DB	'DensityCS_Grid', 00H
	ORG $+1
$SG190098 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
_g_fSmoothlen DD 03c449ba6r			; 0.012
_g_fPressureStiffness DD 045800000r		; 4096
_g_fParticleMass DD 03951b717r			; 0.0002
_g_fViscosity DD 040833333r			; 4.1
$SG190103 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'D', 00H, 'e', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, 'C', 00H, 'S', 00H
	DB	'_', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H, '"', 00H, ','
	DB	00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H
	DB	'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3'
	DB	00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H
	DB	'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S'
	DB	00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H
	DB	00H
	ORG $+2
_g_fMaxAllowableTimeStep DD 03d4ccccdr		; 0.05
$SG190104 DB	'FluidCS11.cpp', 00H
	ORG $+2
_g_fParticleRenderSize DD 03ba42aedr		; 0.00501
_g_fMapHeight DD 03f99999ar			; 1.2
$SG190109 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'D', 00H
	DB	'e', 00H, 'n', 00H, 's', 00H, 'i', 00H, 't', 00H, 'y', 00H, '_'
	DB	00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H, 'C', 00H, 'S', 00H
	DB	')', 00H, 00H, 00H
$SG190110 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190112 DB	'DensityCS_Grid', 00H
	ORG $+1
$SG190113 DB	'ForceCS_Grid', 00H
	ORG $+3
$SG190114 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
_g_fWallStiffness DD 048927c00r			; 300000
$SG190129 DB	'BuildGridCS', 00H
$SG190119 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'F', 00H, 'o', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 'C', 00H, 'S', 00H, '_', 00H, 'G', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C'
	DB	00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C'
	DB	00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E'
	DB	00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H
	DB	'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' '
	DB	00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H
	DB	'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190120 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190125 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'G', 00H, 'r'
	DB	00H, 'i', 00H, 'd', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG190126 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190128 DB	'ForceCS_Grid', 00H
	ORG $+3
$SG190130 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190144 DB	'BuildGridCS', 00H
$SG190135 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'B', 00H, 'u', 00H, 'i'
	DB	00H, 'l', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H
	DB	'C', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H, 'S'
	DB	00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T', 00H
	DB	'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H, '0'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG190136 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190145 DB	'ClearGridIndicesCS', 00H
	ORG $+1
$SG190141 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'B', 00H
	DB	'u', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190142 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190146 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190160 DB	'ClearGridIndicesCS', 00H
	ORG $+1
$SG190151 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'C', 00H, 'l', 00H, 'e'
	DB	00H, 'a', 00H, 'r', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H
	DB	'I', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's'
	DB	00H, 'C', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H
	DB	'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't'
	DB	00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H
	DB	'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T'
	DB	00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H
	DB	'0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l'
	DB	00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190152 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190161 DB	'BuildGridIndicesCS', 00H
	ORG $+1
$SG190157 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'C', 00H
	DB	'l', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'G', 00H, 'r', 00H, 'i'
	DB	00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG190158 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190162 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190167 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'B', 00H, 'u', 00H, 'i'
	DB	00H, 'l', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'i', 00H, 'd', 00H
	DB	'I', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's'
	DB	00H, 'C', 00H, 'S', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C', 00H
	DB	'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't'
	DB	00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C', 00H
	DB	'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_'
	DB	00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H, 'T'
	DB	00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' ', 00H
	DB	'0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H, 'l'
	DB	00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190168 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190176 DB	'BuildGridIndicesCS', 00H
	ORG $+1
$SG190173 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'B', 00H
	DB	'u', 00H, 'i', 00H, 'l', 00H, 'd', 00H, 'G', 00H, 'r', 00H, 'i'
	DB	00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, 's', 00H, 'C', 00H, 'S', 00H, ')', 00H, 00H, 00H
$SG190174 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190177 DB	'RearrangeParticlesCS', 00H
	ORG $+3
$SG190178 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190183 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'R', 00H, 'e', 00H, 'a'
	DB	00H, 'r', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'c', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, 'C', 00H, 'S', 00H, '"', 00H, ',', 00H
	DB	' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g'
	DB	00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H
	DB	'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L'
	DB	00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I'
	DB	00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H
	DB	',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p'
	DB	00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190184 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190189 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'R', 00H
	DB	'e', 00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g'
	DB	00H, 'e', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i', 00H
	DB	'c', 00H, 'l', 00H, 'e', 00H, 's', 00H, 'C', 00H, 'S', 00H, ')'
	DB	00H, 00H, 00H
$SG190190 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190192 DB	'RearrangeParticlesCS', 00H
	ORG $+3
$SG190193 DB	'BitonicSort', 00H
$SG190194 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'e', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'S', 00H, 'o', 00H, 'r', 00H, 't', 00H, '1', 00H, '1', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190208 DB	'BitonicSort', 00H
$SG190199 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, 'e', 00H, 'S', 00H, 'h', 00H, 'a', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's', 00H
	DB	'l', 00H, '"', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l'
	DB	00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'o', 00H, 'n', 00H, 'i'
	DB	00H, 'c', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't', 00H, '"', 00H
	DB	',', 00H, ' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r'
	DB	00H, 'g', 00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H
	DB	'3', 00H, 'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H
	DB	'B', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R'
	DB	00H, 'I', 00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H
	DB	'S', 00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&'
	DB	00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H
	DB	00H, 00H
$SG190200 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190205 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S', 00H
	DB	'o', 00H, 'r', 00H, 't', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'o'
	DB	00H, 'n', 00H, 'i', 00H, 'c', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190206 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190209 DB	'MatrixTranspose', 00H
$SG190210 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'e', 00H, 'S', 00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'S', 00H, 'o', 00H, 'r', 00H, 't', 00H, '1', 00H, '1', 00H
	DB	'.', 00H, 'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190215 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, 'e', 00H, 'S', 00H, 'h', 00H, 'a', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's', 00H
	DB	'l', 00H, '"', 00H, ',', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l'
	DB	00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'"', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'x'
	DB	00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, '"', 00H, ',', 00H, ' ', 00H, 'C'
	DB	00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H, 'D', 00H, 'C'
	DB	00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L', 00H, 'E', 00H
	DB	'_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E'
	DB	00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'C', 00H
	DB	'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ',', 00H, ' '
	DB	00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p', 00H, 'B', 00H
	DB	'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG190216 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190221 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'S', 00H
	DB	'o', 00H, 'r', 00H, 't', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG190222 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190224 DB	'MatrixTranspose', 00H
$SG190225 DB	'Process', 00H
$SG190226 DB	'F', 00H, 'l', 00H, 'u', 00H, 'i', 00H, 'd', 00H, 'C', 00H
	DB	'S', 00H, '1', 00H, '1', 00H, '.', 00H, 'h', 00H, 'l', 00H, 's'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG190231 DB	'D', 00H, 'X', 00H, 'U', 00H, 'T', 00H, 'C', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 'r'
	DB	00H, 'o', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'(', 00H, 'L', 00H, '"', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 'i'
	DB	00H, 'd', 00H, 'C', 00H, 'S', 00H, '1', 00H, '1', 00H, '.', 00H
	DB	'h', 00H, 'l', 00H, 's', 00H, 'l', 00H, '"', 00H, ',', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, '"', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, '"', 00H, ',', 00H
	DB	' ', 00H, 'C', 00H, 'S', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g'
	DB	00H, 'e', 00H, 't', 00H, ',', 00H, ' ', 00H, 'D', 00H, '3', 00H
	DB	'D', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 'P', 00H, 'I', 00H, 'L'
	DB	00H, 'E', 00H, '_', 00H, 'E', 00H, 'N', 00H, 'A', 00H, 'B', 00H
	DB	'L', 00H, 'E', 00H, '_', 00H, 'S', 00H, 'T', 00H, 'R', 00H, 'I'
	DB	00H, 'C', 00H, 'T', 00H, 'N', 00H, 'E', 00H, 'S', 00H, 'S', 00H
	DB	',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H, '&', 00H, 'p'
	DB	00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, ')', 00H, 00H, 00H
$SG190232 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190240 DB	'ProcessCS', 00H
	ORG $+2
$SG190237 DB	'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, '-', 00H, '>', 00H, 'C'
	DB	00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'e', 00H, 'S'
	DB	00H, 'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '(', 00H
	DB	'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-', 00H, '>'
	DB	00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '(', 00H, ')', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'B', 00H, 'l', 00H, 'o', 00H, 'b', 00H, '-'
	DB	00H, '>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ',', 00H, ' ', 00H, 'n', 00H
	DB	'u', 00H, 'l', 00H, 'l', 00H, 'p', 00H, 't', 00H, 'r', 00H, ','
	DB	00H, ' ', 00H, '&', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'P', 00H
	DB	'r', 00H, 'o', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, 'C'
	DB	00H, 'S', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190238 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189219 DB	'FPS : ', 00H
	ORG $+1
$SG190245 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'S', 00H, 'i', 00H, 'm', 00H, 'u', 00H, 'l', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 'B', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 's', 00H, '(', 00H, 'p', 00H, 'd'
	DB	00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, ')', 00H, 00H, 00H
$SG190246 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG190257 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n'
	DB	00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, '<', 00H, ' ', 00H, 'C', 00H, 'B', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'u', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't'
	DB	00H, 'a', 00H, 'n', 00H, 't', 00H, 's', 00H, ' ', 00H, '>', 00H
	DB	'(', 00H, 'p', 00H, 'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ',', 00H, ' ', 00H
	DB	'&', 00H, 'g', 00H, '_', 00H, 'p', 00H, 'c', 00H, 'b', 00H, 'S'
	DB	00H, 'i', 00H, 'm', 00H, 'u', 00H, 'l', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'a', 00H, 'n', 00H, 't', 00H, 's', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG190258 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189266 DB	' Stats : ', 00H
	ORG $+2
$SG190269 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n'
	DB	00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, '<', 00H, ' ', 00H, 'C', 00H, 'B', 00H, 'R', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 't', 00H, 's'
	DB	00H, ' ', 00H, '>', 00H, '(', 00H, 'p', 00H, 'd', 00H, '3', 00H
	DB	'd', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e'
	DB	00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H, '_', 00H, 'p', 00H
	DB	'c', 00H, 'b', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	'a', 00H, 'n', 00H, 't', 00H, 's', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190270 DB	'FluidCS11.cpp', 00H
	ORG $+2
$SG189323 DB	' FrameStats : ', 00H
	ORG $+5
$SG190281 DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n'
	DB	00H, 't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H
	DB	'r', 00H, '<', 00H, ' ', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't'
	DB	00H, 'C', 00H, 'B', 00H, ' ', 00H, '>', 00H, '(', 00H, 'p', 00H
	DB	'd', 00H, '3', 00H, 'd', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i'
	DB	00H, 'c', 00H, 'e', 00H, ',', 00H, ' ', 00H, '&', 00H, 'g', 00H
	DB	'_', 00H, 'p', 00H, 'S', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'C'
	DB	00H, 'B', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG190282 DB	'FluidCS11.cpp', 00H
CONST	ENDS
;	COMDAT ?White@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?White@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::White
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Wheat
	DD	03f5edee0r			; 0.870588
	DD	03f33b3b4r			; 0.701961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?Violet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Violet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::Violet
	DD	03f028283r			; 0.509804
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e808081r ; 0.25098 ; DirectX::Colors::Turquoise
	DD	03f60e0e2r			; 0.878431
	DD	03f50d0d2r			; 0.815686
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Transparent
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Tomato
	DD	03ec6c6c8r			; 0.388235
	DD	03e8e8e8fr			; 0.278431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f58d8dar ; 0.847059 ; DirectX::Colors::Thistle
	DD	03f3fbfc0r			; 0.74902
	DD	03f58d8dar			; 0.847059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Teal@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Teal@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Teal
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?Tan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Tan
	DD	03f34b4b5r			; 0.705882
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e8c8c8dr ; 0.27451 ; DirectX::Colors::SteelBlue
	DD	03f028283r			; 0.509804
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::SpringGreen
	DD	03f800000r			; 1
	DD	03efeff00r			; 0.498039
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?Snow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Snow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Snow
	DD	03f7afafcr			; 0.980392
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionConstantBuffer
CONST	SEGMENT
_IID_ID3D11ShaderReflectionConstantBuffer DD 0eb62d63dH
	DW	093ddH
	DW	04318H
	DB	08aH
	DB	0e8H
	DB	0c6H
	DB	0f8H
	DB	03aH
	DB	0d3H
	DB	071H
	DB	0b8H
CONST	ENDS
;	COMDAT ?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ee0e0e2r ; 0.439216 ; DirectX::Colors::SlateGray
	DD	03f008081r			; 0.501961
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed4d4d6r ; 0.415686 ; DirectX::Colors::SlateBlue
	DD	03eb4b4b5r			; 0.352941
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::SkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f6bebedr			; 0.921569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Silver@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Silver@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f40c0c2r ; 0.752941 ; DirectX::Colors::Silver
	DD	03f40c0c2r			; 0.752941
	DD	03f40c0c2r			; 0.752941
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f20a0a1r ; 0.627451 ; DirectX::Colors::Sienna
	DD	03ea4a4a5r			; 0.321569
	DD	03e34b4b5r			; 0.176471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::SeaShell
	DD	03f75f5f7r			; 0.960784
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e38b8b9r ; 0.180392 ; DirectX::Colors::SeaGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03eaeaeafr			; 0.341176
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f74f4f6r ; 0.956863 ; DirectX::Colors::SandyBrown
	DD	03f24a4a5r			; 0.643137
	DD	03ec0c0c2r			; 0.376471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Salmon
	DD	03f008081r			; 0.501961
	DD	03ee4e4e6r			; 0.447059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::SaddleBrown
	DD	03e8a8a8br			; 0.270588
	DD	03d989899r			; 0.0745098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e828283r ; 0.254902 ; DirectX::Colors::RoyalBlue
	DD	03ed2d2d4r			; 0.411765
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3cbcbdr ; 0.737255 ; DirectX::Colors::RosyBrown
	DD	03f0f8f90r			; 0.560784
	DD	03f0f8f90r			; 0.560784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?Red@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Red@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Red
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?is_steady@steady_clock@chrono@std@@2_NB
CONST	SEGMENT
?is_steady@steady_clock@chrono@std@@2_NB DB 01H		; std::chrono::steady_clock::is_steady
CONST	ENDS
;	COMDAT ?Purple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Purple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Purple
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::PowderBlue
	DD	03f60e0e2r			; 0.878431
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?is_monotonic@steady_clock@chrono@std@@2_NB
CONST	SEGMENT
?is_monotonic@steady_clock@chrono@std@@2_NB DB 01H	; std::chrono::steady_clock::is_monotonic
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-005 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-005
	DD	0b7364261r			; -1.08635e-005
	DD	0b7364261r			; -1.08635e-005
CONST	ENDS
;	COMDAT ?Plum@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Plum@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5ddddfr ; 0.866667 ; DirectX::Colors::Plum
	DD	03f20a0a1r			; 0.627451
	DD	03f5ddddfr			; 0.866667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Pink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Pink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Pink
	DD	03f40c0c2r			; 0.752941
	DD	03f4bcbcdr			; 0.796079
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?Peru@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Peru@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::Peru
	DD	03f058586r			; 0.521569
	DD	03e7cfcfer			; 0.247059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT _IID_ID3D11ShaderReflectionVariable
CONST	SEGMENT
_IID_ID3D11ShaderReflectionVariable DD 051f23923H
	DW	0f3e5H
	DW	04bd1H
	DB	091H
	DB	0cbH
	DB	060H
	DB	061H
	DB	077H
	DB	0d8H
	DB	0dbH
	DB	04cH
CONST	ENDS
;	COMDAT ?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PeachPuff
	DD	03f5adadcr			; 0.854902
	DD	03f39b9bar			; 0.72549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PapayaWhip
	DD	03f6feff1r			; 0.937255
	DD	03f55d5d7r			; 0.835294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5bdbddr ; 0.858824 ; DirectX::Colors::PaleVioletRed
	DD	03ee0e0e2r			; 0.439216
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2fafb0r ; 0.686275 ; DirectX::Colors::PaleTurquoise
	DD	03f6eeef0r			; 0.933333
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f189899r ; 0.596078 ; DirectX::Colors::PaleGreen
	DD	03f7bfbfdr			; 0.984314
	DD	03f189899r			; 0.596078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::PaleGoldenrod
	DD	03f68e8ear			; 0.909804
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORI32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Orchid
	DD	03ee0e0e2r			; 0.439216
	DD	03f56d6d8r			; 0.839216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::OrangeRed
	DD	03e8a8a8br			; 0.270588
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORI32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?Orange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Orange
	DD	03f25a5a6r			; 0.647059
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORI32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed6d6d8r ; 0.419608 ; DirectX::Colors::OliveDrab
	DD	03f0e8e8fr			; 0.556863
	DD	03e0c8c8dr			; 0.137255
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?Olive@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Olive@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Olive
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7dfdffr ; 0.992157 ; DirectX::Colors::OldLace
	DD	03f75f5f7r			; 0.960784
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?Navy@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Navy@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Navy
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::NavajoWhite
	DD	03f5edee0r			; 0.870588
	DD	03f2dadaer			; 0.678431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Moccasin
	DD	03f64e4e6r			; 0.894118
	DD	03f35b5b6r			; 0.709804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::MistyRose
	DD	03f64e4e6r			; 0.894118
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::MintCream
	DD	03f800000r			; 1
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+009 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+009 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+009
	DD	04f7fffffr			; 4.29497e+009
	DD	04f7fffffr			; 4.29497e+009
CONST	ENDS
;	COMDAT ?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03dc8c8car ; 0.0980392 ; DirectX::Colors::MidnightBlue
	DD	03dc8c8car			; 0.0980392
	DD	03ee0e0e2r			; 0.439216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT _SID_SCommandBarState
CONST	SEGMENT
_SID_SCommandBarState DD 0b99eaa5cH
	DW	03850H
	DW	04400H
	DB	0bcH
	DB	033H
	DB	02cH
	DB	0e5H
	DB	034H
	DB	04H
	DB	08bH
	DB	0f8H
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+009 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+009
	DD	04effffffr			; 2.14748e+009
	DD	04effffffr			; 2.14748e+009
CONST	ENDS
;	COMDAT ?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f47c7c9r ; 0.780392 ; DirectX::Colors::MediumVioletRed
	DD	03da8a8a9r			; 0.0823529
	DD	03f058586r			; 0.521569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+009 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
	DD	04f000000r			; 2.14748e+009
CONST	ENDS
;	COMDAT ?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::MediumTurquoise
	DD	03f51d1d3r			; 0.819608
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumSpringGreen
	DD	03f7afafcr			; 0.980392
	DD	03f1a9a9br			; 0.603922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+006
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef6f6f8r ; 0.482353 ; DirectX::Colors::MediumSlateBlue
	DD	03ed0d0d2r			; 0.407843
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e70f0f2r ; 0.235294 ; DirectX::Colors::MediumSeaGreen
	DD	03f33b3b4r			; 0.701961
	DD	03ee2e2e4r			; 0.443137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-007
	DD	030800000r			; 9.31323e-010
CONST	ENDS
;	COMDAT ?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f139394r ; 0.576471 ; DirectX::Colors::MediumPurple
	DD	03ee0e0e2r			; 0.439216
	DD	03f5bdbddr			; 0.858824
	DD	03f800000r			; 1
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	_wWinMain@16
PUBLIC	_hypot
PUBLIC	_fabsf
PUBLIC	_sqrtf
PUBLIC	?pow@@YAMMH@Z					; pow
PUBLIC	??$_Pow_int@M@@YAMMH@Z				; _Pow_int<float>
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	_wmemcpy
PUBLIC	_wmemmove
PUBLIC	?length@?$char_traits@_W@std@@SAIPB_W@Z		; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::copy
PUBLIC	?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z	; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?eq@?$char_traits@_W@std@@SA_NAB_W0@Z		; std::char_traits<wchar_t>::eq
PUBLIC	?to_char_type@?$char_traits@_W@std@@SA_WABG@Z	; std::char_traits<wchar_t>::to_char_type
PUBLIC	?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z	; std::char_traits<wchar_t>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z	; std::char_traits<wchar_t>::eq_int_type
PUBLIC	?not_eof@?$char_traits@_W@std@@SAGABG@Z		; std::char_traits<wchar_t>::not_eof
PUBLIC	?eof@?$char_traits@_W@std@@SAGXZ		; std::char_traits<wchar_t>::eof
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Ignore@std@@QAE@XZ				; std::_Ignore::_Ignore
PUBLIC	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ	; DirectX::XMVECTORF32::operator __m128
PUBLIC	??BXMVECTORF32@DirectX@@QBEPBMXZ		; DirectX::XMVECTORF32::operator float const *
PUBLIC	??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ	; DirectX::XMVECTORI32::operator __m128
PUBLIC	??0XMMATRIX@DirectX@@QAE@XZ			; DirectX::XMMATRIX::XMMATRIX
PUBLIC	??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z		; DirectX::XMMATRIX::operator*
PUBLIC	??0XMFLOAT2@DirectX@@QAE@XZ			; DirectX::XMFLOAT2::XMFLOAT2
PUBLIC	??0XMFLOAT2@DirectX@@QAE@MM@Z			; DirectX::XMFLOAT2::XMFLOAT2
PUBLIC	??0XMFLOAT2A@DirectX@@QAE@XZ			; DirectX::XMFLOAT2A::XMFLOAT2A
PUBLIC	??0XMFLOAT2A@DirectX@@QAE@MM@Z			; DirectX::XMFLOAT2A::XMFLOAT2A
PUBLIC	??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z		; DirectX::XMFLOAT2A::operator=
PUBLIC	??0XMFLOAT3@DirectX@@QAE@XZ			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??0XMFLOAT3@DirectX@@QAE@MMM@Z			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??0XMFLOAT3A@DirectX@@QAE@XZ			; DirectX::XMFLOAT3A::XMFLOAT3A
PUBLIC	??0XMFLOAT3A@DirectX@@QAE@MMM@Z			; DirectX::XMFLOAT3A::XMFLOAT3A
PUBLIC	??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z		; DirectX::XMFLOAT3A::operator=
PUBLIC	??0XMFLOAT4@DirectX@@QAE@XZ			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	??0XMFLOAT4@DirectX@@QAE@MMMM@Z			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	??0XMFLOAT4A@DirectX@@QAE@XZ			; DirectX::XMFLOAT4A::XMFLOAT4A
PUBLIC	??0XMFLOAT4X4@DirectX@@QAE@XZ			; DirectX::XMFLOAT4X4::XMFLOAT4X4
PUBLIC	?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
PUBLIC	?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ; DirectX::XMStoreFloat4x4
PUBLIC	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z	; DirectX::XMVectorSet
PUBLIC	?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ; DirectX::XMMatrixMultiply
PUBLIC	?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ; DirectX::XMMatrixTranspose
PUBLIC	?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ; DirectX::XMMatrixTranslation
PUBLIC	?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ; DirectX::XMMatrixOrthographicLH
PUBLIC	?XMScalarNearEqual@DirectX@@YA_NMMM@Z		; DirectX::XMScalarNearEqual
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
PUBLIC	?WaitDialogProc@@YGHPAUHWND__@@IIJ@Z		; WaitDialogProc
PUBLIC	?WaitThread@@YGIPAX@Z				; WaitThread
PUBLIC	??0CWaitDlg@@QAE@XZ				; CWaitDlg::CWaitDlg
PUBLIC	??1CWaitDlg@@QAE@XZ				; CWaitDlg::~CWaitDlg
PUBLIC	?IsRunning@CWaitDlg@@QBE_NXZ			; CWaitDlg::IsRunning
PUBLIC	?UpdateProgressBar@CWaitDlg@@QAEXXZ		; CWaitDlg::UpdateProgressBar
PUBLIC	?GetDialogControls@CWaitDlg@@QAE_NXZ		; CWaitDlg::GetDialogControls
PUBLIC	?ShowDialog@CWaitDlg@@QAE_NPA_W@Z		; CWaitDlg::ShowDialog
PUBLIC	?DestroyDialog@CWaitDlg@@QAEXXZ			; CWaitDlg::DestroyDialog
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
PUBLIC	??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z ; std::_DebugHeapDelete<std::_Facet_base>
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	??$_Debug_pointer@_W@std@@YAXPB_W0I@Z		; std::_Debug_pointer<wchar_t>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QBEIXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	?Add@@YA?AT__m128@@T1@0@Z			; Add
PUBLIC	?Mult@@YA?AT__m128@@ABT1@ABM@Z			; Mult
PUBLIC	?lerpAligned@@YA?AT__m128@@ABT1@0ABM@Z		; lerpAligned
PUBLIC	?GetX@@YAMT__m128@@@Z				; GetX
PUBLIC	?GetY@@YAMT__m128@@@Z				; GetY
PUBLIC	?GetZ@@YAMABT__m128@@@Z				; GetZ
PUBLIC	?GetW@@YAMABT__m128@@@Z				; GetW
PUBLIC	?CAST@@YA?AT__m128@@MMMM@Z			; CAST
PUBLIC	?_mm_add3_ps_composite@@YA?AT__m128@@ABT1@00@Z	; _mm_add3_ps_composite
PUBLIC	?_mm_add4_ps_composite@@YA?AT__m128@@ABT1@000@Z	; _mm_add4_ps_composite
PUBLIC	?_mm_div_ps_composite@@YA?AT__m128@@ABT1@0@Z	; _mm_div_ps_composite
PUBLIC	??1FOO@@QAE@XZ					; FOO::~FOO
PUBLIC	??_GFOO@@QAEPAXI@Z				; FOO::`scalar deleting destructor'
PUBLIC	??0?$allocator@UParticle@@@std@@QAE@XZ		; std::allocator<Particle>::allocator<Particle>
PUBLIC	?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z ; std::allocator<Particle>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Particle> >::_Wrap_alloc<std::allocator<Particle> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z ; std::_Wrap_alloc<std::allocator<Particle> >::deallocate
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Particle> >::_Vector_val<std::_Simple_types<Particle> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Particle> >::~_Vector_val<std::_Simple_types<Particle> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::~_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal
PUBLIC	??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::vector<Particle,std::allocator<Particle> >::vector<Particle,std::allocator<Particle> >
PUBLIC	??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::vector<Particle,std::allocator<Particle> >::~vector<Particle,std::allocator<Particle> >
PUBLIC	?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z ; std::vector<Particle,std::allocator<Particle> >::_Destroy
PUBLIC	?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ ; std::vector<Particle,std::allocator<Particle> >::_Tidy
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$addressof@_W@std@@YAPA_WAA_W@Z		; std::addressof<wchar_t>
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Allocate@_W@std@@YAPA_WIPA_W@Z		; std::_Allocate<wchar_t>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z		; std::forward<wchar_t * &>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z ; std::_Ptr_cat<Particle,Particle>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
PUBLIC	??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
PUBLIC	??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z ; std::_Wrap_alloc<std::allocator<Particle> >::destroy<Particle>
PUBLIC	??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z ; std::allocator_traits<std::allocator<Particle> >::destroy<Particle>
PUBLIC	??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z ; std::allocator<Particle>::destroy<Particle>
PUBLIC	??0CBRenderConstants@@QAE@XZ			; CBRenderConstants::CBRenderConstants
PUBLIC	?ModifyDeviceSettings@@YG_NPAUDXUTDeviceSettings@@PAX@Z ; ModifyDeviceSettings
PUBLIC	?MsgProc@@YGJPAUHWND__@@IIJPA_NPAX@Z		; MsgProc
PUBLIC	?IsD3D11DeviceAcceptable@@YG_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z ; IsD3D11DeviceAcceptable
PUBLIC	?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z ; OnD3D11CreateDevice
PUBLIC	?OnD3D11ResizedSwapChain@@YGJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z ; OnD3D11ResizedSwapChain
PUBLIC	?OnD3D11ReleasingSwapChain@@YGXPAX@Z		; OnD3D11ReleasingSwapChain
PUBLIC	?OnD3D11DestroyDevice@@YGXPAX@Z			; OnD3D11DestroyDevice
PUBLIC	?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z ; OnD3D11FrameRender
PUBLIC	?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z ; CreateSimulationBuffers
PUBLIC	?InitApp@@YAXXZ					; InitApp
PUBLIC	?RenderText@@YAXXZ				; RenderText
PUBLIC	?LoadTexture@@YAXXZ				; LoadTexture
PUBLIC	?SWindowProc@@YGJPAUHWND__@@IIJ@Z		; SWindowProc
PUBLIC	??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
PUBLIC	??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
PUBLIC	?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
PUBLIC	?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
PUBLIC	?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z ; CreateStructuredBuffer<Particle>
PUBLIC	??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z ; CreateStructuredBuffer<ParticleForces>
PUBLIC	??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z ; CreateStructuredBuffer<ParticleDensity>
PUBLIC	??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z ; CreateStructuredBuffer<unsigned int>
PUBLIC	??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z ; CreateStructuredBuffer<u322>
PUBLIC	?lerp@@YA?BT__m128@@ABT1@0M@Z			; lerp
PUBLIC	?lerpF@@YA?AUXMFLOAT4@DirectX@@ABU12@0M@Z	; lerpF
PUBLIC	?UpdateColor@@YAXXZ				; UpdateColor
PUBLIC	??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z ; CreateStructuredBuffer<FOO>
PUBLIC	??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<CBSimulationConstants>
PUBLIC	??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<CBRenderConstants>
PUBLIC	??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<SortCB>
PUBLIC	?GPUSort@@YAXPAUID3D11DeviceContext@@PAUID3D11UnorderedAccessView@@PAUID3D11ShaderResourceView@@12@Z ; GPUSort
PUBLIC	?SimulateFluid_Simple@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Simple
PUBLIC	?SimulateFluid_Shared@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Shared
PUBLIC	?SimulateFluid_Grid@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Grid
PUBLIC	?SimulateFluid@@YAXPAUID3D11DeviceContext@@M@Z	; SimulateFluid
PUBLIC	?RenderFluid@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@M@Z ; RenderFluid
PUBLIC	?OnUpdate@@YAXXZ				; OnUpdate
PUBLIC	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?0?$AA?5?$AA0?$AA?4@ ; `string'
PUBLIC	??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?0?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAF?$AAa?$AAr?$AAZ?$AA?0?$AA?5?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?0?$AA?5@ ; `string'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	?g_vGravity@@3UXMFLOAT2A@DirectX@@A		; g_vGravity
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	?mousePosition@@3UXMFLOAT2A@DirectX@@A		; mousePosition
PUBLIC	??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	__TI1D
PUBLIC	__CTA1D
PUBLIC	??_R0D@8					; char `RTTI Type Descriptor'
PUBLIC	__CT??_R0D@81
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3727c5ac
PUBLIC	__real@3eab851f
PUBLIC	__real@3ed4f8b588e368f1
PUBLIC	__real@3ee4f8b588e368f1
PUBLIC	__real@3f800000
PUBLIC	__real@3faaaaab
PUBLIC	__real@40000000
PUBLIC	__real@42340000
PUBLIC	__real@42800000
PUBLIC	__real@439d8000
PUBLIC	__real@45800000
PUBLIC	__real@bf800000
PUBLIC	__real@c2340000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__IsWindow@4:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__CreateDialogParamW@20:PROC
EXTRN	__imp__GetDlgItem@8:PROC
EXTRN	__imp__GetActiveWindow@0:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__SetWindowTextW@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__GetCursorPos@4:PROC
EXTRN	__imp__GetWindowLongW@8:PROC
EXTRN	__imp__SetWindowLongW@12:PROC
EXTRN	__imp__rand:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp___hypot:PROC
EXTRN	__imp___CrtSetDbgFlag:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp_??0bad_cast@std@@QAE@PBD@Z:PROC
EXTRN	??0CommonStates@DirectX@@QAE@PAUID3D11Device@@@Z:PROC ; DirectX::CommonStates::CommonStates
EXTRN	??1CommonStates@DirectX@@UAE@XZ:PROC		; DirectX::CommonStates::~CommonStates
EXTRN	?NonPremultiplied@CommonStates@DirectX@@QBAPAUID3D11BlendState@@XZ:PROC ; DirectX::CommonStates::NonPremultiplied
EXTRN	?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z:PROC ; DirectX::CreateWICTextureFromFile
EXTRN	__imp___wassert:PROC
EXTRN	?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z:PROC ; DXUTSetCallbackMsgProc
EXTRN	?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z:PROC ; DXUTSetCallbackDeviceChanging
EXTRN	?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z:PROC ; DXUTSetCallbackD3D11DeviceAcceptable
EXTRN	?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z:PROC ; DXUTSetCallbackD3D11DeviceCreated
EXTRN	?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z:PROC ; DXUTSetCallbackD3D11SwapChainResized
EXTRN	?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z:PROC ; DXUTSetCallbackD3D11FrameRender
EXTRN	?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z:PROC ; DXUTSetCallbackD3D11SwapChainReleasing
EXTRN	?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z:PROC ; DXUTSetCallbackD3D11DeviceDestroyed
EXTRN	?DXUTInit@@YGJ_N0PA_W0@Z:PROC			; DXUTInit
EXTRN	?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z:PROC ; DXUTCreateWindow
EXTRN	?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z:PROC ; DXUTCreateDevice
EXTRN	?DXUTMainLoop@@YGJPAUHACCEL__@@@Z:PROC		; DXUTMainLoop
EXTRN	?DXUTSetCursorSettings@@YGX_N0@Z:PROC		; DXUTSetCursorSettings
EXTRN	?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ:PROC ; DXUTGetD3D11RenderTargetView
EXTRN	?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ:PROC ; DXUTGetD3D11DepthStencilView
EXTRN	?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ:PROC	; DXUTGetD3D11Device
EXTRN	?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ:PROC ; DXUTGetD3D11DeviceContext
EXTRN	?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ:PROC	; DXUTGetHINSTANCE
EXTRN	?DXUTGetHWND@@YGPAUHWND__@@XZ:PROC		; DXUTGetHWND
EXTRN	?DXUTIsWindowed@@YG_NXZ:PROC			; DXUTIsWindowed
EXTRN	?DXUTGetFPS@@YGMXZ:PROC				; DXUTGetFPS
EXTRN	?DXUTGetFrameStats@@YGPB_W_N@Z:PROC		; DXUTGetFrameStats
EXTRN	?DXUTGetDeviceStats@@YGPB_WXZ:PROC		; DXUTGetDeviceStats
EXTRN	?DXUTGetExitCode@@YGHXZ:PROC			; DXUTGetExitCode
EXTRN	?DXUTTrace@@YGJPBDKJPB_W_N@Z:PROC		; DXUTTrace
EXTRN	?OnDestroyDevice@CDXUTResourceCache@@QAEJXZ:PROC ; CDXUTResourceCache::OnDestroyDevice
EXTRN	?DXUTGetGlobalResourceCache@@YGAAVCDXUTResourceCache@@XZ:PROC ; DXUTGetGlobalResourceCache
EXTRN	?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z:PROC ; DXUTCompileFromFile
EXTRN	__imp___beginthreadex:PROC
EXTRN	?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__imp_??0id@locale@std@@QAE@I@Z:PROC
EXTRN	__imp_??Bid@locale@std@@QAEIXZ:PROC
EXTRN	__imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC
EXTRN	__imp_?widen@?$ctype@_W@std@@QBE_WD@Z:PROC
EXTRN	__imp_?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	__imp_?_Syserror_map@std@@YAPBDH@Z:PROC
EXTRN	__imp_?_Winerror_map@std@@YAPBDH@Z:PROC
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ:PROC
EXTRN	__imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@M@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z:PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??0bad_cast@std@@QAE@ABV01@@Z:PROC		; std::bad_cast::bad_cast
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	??1bad_cast@std@@UAE@XZ:PROC			; std::bad_cast::~bad_cast
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEPAV12@PA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsputn
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	_WKPDID_D3DDebugObjectName:BYTE
EXTRN	__imp_?id@?$ctype@_W@std@@2V0locale@2@A:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
	ALIGN	4

_allocator_arg DB 01H DUP (?)
	ALIGN	4

_ignore	DB	01H DUP (?)
	ALIGN	4

__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

_GRAVITY_DOWN DB 010H DUP (?)
?g_vGravity@@3UXMFLOAT2A@DirectX@@A DB 010H DUP (?)	; g_vGravity
_g_fMapWidth DD	01H DUP (?)
_g_vPlanes DB	040H DUP (?)
_ParticlesRW DB	010H DUP (?)
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
_BSS	ENDS
_BSS	SEGMENT
?mousePosition@@3UXMFLOAT2A@DirectX@@A DB 010H DUP (?)	; mousePosition
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c2340000
CONST	SEGMENT
__real@c2340000 DD 0c2340000r			; -45
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@45800000
CONST	SEGMENT
__real@45800000 DD 045800000r			; 4096
CONST	ENDS
;	COMDAT __real@439d8000
CONST	SEGMENT
__real@439d8000 DD 0439d8000r			; 315
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3faaaaab
CONST	SEGMENT
__real@3faaaaab DD 03faaaaabr			; 1.33333
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3ee4f8b588e368f1
CONST	SEGMENT
__real@3ee4f8b588e368f1 DQ 03ee4f8b588e368f1r	; 1e-005
CONST	ENDS
;	COMDAT __real@3ed4f8b588e368f1
CONST	SEGMENT
__real@3ed4f8b588e368f1 DQ 03ed4f8b588e368f1r	; 5e-006
CONST	ENDS
;	COMDAT __real@3eab851f
CONST	SEGMENT
__real@3eab851f DD 03eab851fr			; 0.335
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-005
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$al'
	DB	'locator@_W@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 00H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	050H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	FLAT:??_R3?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$alloca'
	DB	'tor@_W@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 00H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0D@81
xdata$x	SEGMENT
__CT??_R0D@81 DD 01H
	DD	FLAT:??_R0D@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0D@8
data$r	SEGMENT
??_R0D@8 DD	FLAT:??_7type_info@@6B@			; char `RTTI Type Descriptor'
	DD	00H
	DB	'.D', 00H
data$r	ENDS
;	COMDAT __CTA1D
xdata$x	SEGMENT
__CTA1D	DD	01H
	DD	FLAT:__CT??_R0D@81
xdata$x	ENDS
;	COMDAT __TI1D
xdata$x	SEGMENT
__TI1D	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1D
xdata$x	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	058H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@ DD 00H ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
	DD	050H
CONST	ENDS
;	COMDAT ??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD FLAT:??_R4?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DD	FLAT:??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ
	DD	FLAT:?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEGXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPA_W_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAE_JPB_W_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEPAV12@PA_W_J@Z
	DD	FLAT:?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAF?$AAa?$AAr?$AAZ?$AA?0?$AA?5?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?0?$AA?5@
CONST	SEGMENT
??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAF?$AAa?$AAr?$AAZ?$AA?0?$AA?5?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?0?$AA?5@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'F', 00H
	DB	'a', 00H, 'r', 00H, 'Z', 00H, ',', 00H, ' ', 00H, 'N', 00H, 'e'
	DB	00H, 'a', 00H, 'r', 00H, 'Z', 00H, ',', 00H, ' ', 00H, '0', 00H
	DB	'.', 00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '1', 00H, 'f'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?0?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?0?$AA?5?$AA0@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'V', 00H
	DB	'i', 00H, 'e', 00H, 'w', 00H, 'H', 00H, 'e', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, '1', 00H, 'f', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?0?$AA?5?$AA0?$AA?4@
CONST	SEGMENT
??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?0?$AA?5?$AA0?$AA?4@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'V', 00H
	DB	'i', 00H, 'e', 00H, 'w', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't'
	DB	00H, 'h', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H
	DB	'f', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '1', 00H, 'f', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'k', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '8', 00H, '.', 00H, '1', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'x', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'p'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ DB 'p', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'k', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '8', 00H, '.', 00H, '1', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, '.', 00H, 'i', 00H, 'n', 00H
	DB	'l', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16 ; DirectX::g_XMReciprocalTwoPi
_DATA	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMTwoPi
_DATA	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMReciprocalPi
_DATA	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMPi
_DATA	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16		; DirectX::g_XMHalfPi
_DATA	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMNegativePi
_DATA	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMNegativeTwoPi
_DATA	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	ORG $+16	; DirectX::g_XMPiConstants0
_DATA	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
_DATA	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	ORG $+4
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$0
__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$3
__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 01H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$4
__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$3
	DD	00H
	DD	00H
__ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?RenderText@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RenderText@@YAXXZ$0
__unwindtable$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z$0
__unwindtable$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z$0
__unwindtable$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z$0
__catchsym$?UpdateColor@@YAXXZ$3 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0fffffeccH
	DD	FLAT:__catch$?UpdateColor@@YAXXZ$0
__tryblocktable$?UpdateColor@@YAXXZ DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?UpdateColor@@YAXXZ$3
__unwindtable$?UpdateColor@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateColor@@YAXXZ$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$?UpdateColor@@YAXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?UpdateColor@@YAXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?UpdateColor@@YAXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?RenderText@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RenderText@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0
__ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMTanEstCoefficients$initializer$ DD FLAT:??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMPiConstants0$initializer$ DD FLAT:??__Eg_XMPiConstants0@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMNegativeTwoPi$initializer$ DD FLAT:??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMNegativePi$initializer$ DD FLAT:??__Eg_XMNegativePi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMHalfPi$initializer$ DD FLAT:??__Eg_XMHalfPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMPi$initializer$ DD FLAT:??__Eg_XMPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMReciprocalPi$initializer$ DD FLAT:??__Eg_XMReciprocalPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMTwoPi$initializer$ DD FLAT:??__Eg_XMTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_g_XMReciprocalTwoPi$initializer$ DD FLAT:??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
	ORG $-16
_GRAVITY_DOWN$initializer$ DD FLAT:??__EGRAVITY_DOWN@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_g_vGravity$initializer$ DD FLAT:??__Eg_vGravity@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_g_fMapWidth$initializer$ DD FLAT:??__Eg_fMapWidth@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_g_vPlanes$initializer$ DD FLAT:??__Eg_vPlanes@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_ParticlesRW$initializer$ DD FLAT:??__EParticlesRW@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
	ORG $-20
_mousePosition$initializer$ DD FLAT:??__EmousePosition@@YAXXZ
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
??_E?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv298 = -228						; size = 4
tv387 = -224						; size = 4
tv290 = -220						; size = 4
tv385 = -216						; size = 4
tv251 = -212						; size = 4
tv351 = -208						; size = 4
tv349 = -204						; size = 4
$T1 = -197						; size = 1
_pData$ = -192						; size = 160
_UAVInitialCounts$ = -16				; size = 4
_deviceContext$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?OnUpdate@@YAXXZ PROC					; OnUpdate
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 1150
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00024	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00035	33 c5		 xor	 eax, ebp
  00037	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 1151
  0003a	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  0003f	89 45 f8	 mov	 DWORD PTR _deviceContext$[ebp], eax
; Line 1152
  00042	83 7d f8 00	 cmp	 DWORD PTR _deviceContext$[ebp], 0
  00046	75 18		 jne	 SHORT $LN1@OnUpdate
; Line 1153
  00048	c6 85 3b ff ff
	ff 31		 mov	 BYTE PTR $T1[ebp], 49	; 00000031H
  0004f	68 00 00 00 00	 push	 OFFSET __TI1D
  00054	8d 85 3b ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN1@OnUpdate:
; Line 1155
  00060	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 1156
  00067	6a 30		 push	 48			; 00000030H
  00069	6a 00		 push	 0
  0006b	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _pData$[ebp]
  00071	51		 push	 ecx
  00072	e8 00 00 00 00	 call	 _memset
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _pData$[ebp+48]
  00080	e8 00 00 00 00	 call	 ??0XMFLOAT2A@DirectX@@QAE@XZ ; DirectX::XMFLOAT2A::XMFLOAT2A
  00085	8d 4d 80	 lea	 ecx, DWORD PTR _pData$[ebp+64]
  00088	e8 00 00 00 00	 call	 ??0XMFLOAT4A@DirectX@@QAE@XZ ; DirectX::XMFLOAT4A::XMFLOAT4A
  0008d	68 00 00 00 00	 push	 OFFSET ??0XMFLOAT3A@DirectX@@QAE@XZ ; DirectX::XMFLOAT3A::XMFLOAT3A
  00092	6a 04		 push	 4
  00094	6a 10		 push	 16			; 00000010H
  00096	8d 55 90	 lea	 edx, DWORD PTR _pData$[ebp+80]
  00099	52		 push	 edx
  0009a	e8 00 00 00 00	 call	 ??_H@YGXPAXIHP6EPAX0@Z@Z
  0009f	8d 4d d0	 lea	 ecx, DWORD PTR _pData$[ebp+144]
  000a2	e8 00 00 00 00	 call	 ??0XMFLOAT2A@DirectX@@QAE@XZ ; DirectX::XMFLOAT2A::XMFLOAT2A
; Line 1159
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  000ac	89 85 40 ff ff
	ff		 mov	 DWORD PTR _pData$[ebp], eax
; Line 1162
  000b2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fSmoothlen
  000ba	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+8], xmm0
; Line 1163
  000c2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fPressureStiffness
  000ca	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+12], xmm0
; Line 1164
  000d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@45800000
  000da	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+16], xmm0
; Line 1165
  000e2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fParticleMass
  000ea	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@439d8000
  000f2	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42800000
  000fa	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR _XM_PI
  00102	6a 09		 push	 9
  00104	51		 push	 ecx
  00105	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR _g_fSmoothlen
  0010d	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  00112	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR tv349[ebp], xmm0
  0011a	f3 0f 11 8d 30
	ff ff ff	 movss	 DWORD PTR tv351[ebp], xmm1
  00122	e8 00 00 00 00	 call	 ?pow@@YAMMH@Z		; pow
  00127	83 c4 08	 add	 esp, 8
  0012a	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR tv251[ebp]
  00130	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR tv351[ebp]
  00138	f3 0f 59 85 2c
	ff ff ff	 mulss	 xmm0, DWORD PTR tv251[ebp]
  00140	f3 0f 10 8d 34
	ff ff ff	 movss	 xmm1, DWORD PTR tv349[ebp]
  00148	f3 0f 5e c8	 divss	 xmm1, xmm0
  0014c	f3 0f 11 8d 54
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+20], xmm1
; Line 1166
  00154	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fParticleMass
  0015c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c2340000
  00164	6a 06		 push	 6
  00166	51		 push	 ecx
  00167	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR _g_fSmoothlen
  0016f	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00174	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR tv385[ebp], xmm0
  0017c	e8 00 00 00 00	 call	 ?pow@@YAMMH@Z		; pow
  00181	83 c4 08	 add	 esp, 8
  00184	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR tv290[ebp]
  0018a	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv290[ebp]
  00192	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _XM_PI
  0019a	f3 0f 10 8d 28
	ff ff ff	 movss	 xmm1, DWORD PTR tv385[ebp]
  001a2	f3 0f 5e c8	 divss	 xmm1, xmm0
  001a6	f3 0f 11 8d 58
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+24], xmm1
; Line 1167
  001ae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fParticleMass
  001b6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _g_fViscosity
  001be	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42340000
  001c6	6a 06		 push	 6
  001c8	51		 push	 ecx
  001c9	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR _g_fSmoothlen
  001d1	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  001d6	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR tv387[ebp], xmm0
  001de	e8 00 00 00 00	 call	 ?pow@@YAMMH@Z		; pow
  001e3	83 c4 08	 add	 esp, 8
  001e6	d9 9d 1c ff ff
	ff		 fstp	 DWORD PTR tv298[ebp]
  001ec	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR tv298[ebp]
  001f4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _XM_PI
  001fc	f3 0f 10 8d 20
	ff ff ff	 movss	 xmm1, DWORD PTR tv387[ebp]
  00204	f3 0f 5e c8	 divss	 xmm1, xmm0
  00208	f3 0f 11 8d 5c
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+28], xmm1
; Line 1169
  00210	68 00 00 00 00	 push	 OFFSET ?g_vGravity@@3UXMFLOAT2A@DirectX@@A ; g_vGravity
  00215	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _pData$[ebp+48]
  0021b	e8 00 00 00 00	 call	 ??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2A::operator=
; Line 1173
  00220	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00228	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR _g_fSmoothlen
  00230	f3 0f 11 45 80	 movss	 DWORD PTR _pData$[ebp+64], xmm0
; Line 1174
  00235	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0023d	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR _g_fSmoothlen
  00245	f3 0f 11 45 84	 movss	 DWORD PTR _pData$[ebp+68], xmm0
; Line 1175
  0024a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00252	f3 0f 11 45 88	 movss	 DWORD PTR _pData$[ebp+72], xmm0
; Line 1176
  00257	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0025f	f3 0f 11 45 8c	 movss	 DWORD PTR _pData$[ebp+76], xmm0
; Line 1179
  00264	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fWallStiffness
  0026c	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+32], xmm0
; Line 1180
  00274	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00279	6b d1 00	 imul	 edx, ecx, 0
  0027c	81 c2 00 00 00
	00		 add	 edx, OFFSET _g_vPlanes
  00282	52		 push	 edx
  00283	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00288	6b c8 00	 imul	 ecx, eax, 0
  0028b	8d 4c 0d 90	 lea	 ecx, DWORD PTR _pData$[ebp+ecx+80]
  0028f	e8 00 00 00 00	 call	 ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3A::operator=
; Line 1181
  00294	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00299	c1 e2 00	 shl	 edx, 0
  0029c	81 c2 00 00 00
	00		 add	 edx, OFFSET _g_vPlanes
  002a2	52		 push	 edx
  002a3	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  002a8	c1 e0 00	 shl	 eax, 0
  002ab	8d 4c 05 90	 lea	 ecx, DWORD PTR _pData$[ebp+eax+80]
  002af	e8 00 00 00 00	 call	 ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3A::operator=
; Line 1182
  002b4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  002b9	d1 e1		 shl	 ecx, 1
  002bb	81 c1 00 00 00
	00		 add	 ecx, OFFSET _g_vPlanes
  002c1	51		 push	 ecx
  002c2	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  002c7	d1 e2		 shl	 edx, 1
  002c9	8d 4c 15 90	 lea	 ecx, DWORD PTR _pData$[ebp+edx+80]
  002cd	e8 00 00 00 00	 call	 ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3A::operator=
; Line 1183
  002d2	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  002d7	6b c8 03	 imul	 ecx, eax, 3
  002da	81 c1 00 00 00
	00		 add	 ecx, OFFSET _g_vPlanes
  002e0	51		 push	 ecx
  002e1	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  002e6	6b c2 03	 imul	 eax, edx, 3
  002e9	8d 4c 05 90	 lea	 ecx, DWORD PTR _pData$[ebp+eax+80]
  002ed	e8 00 00 00 00	 call	 ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3A::operator=
; Line 1184
  002f2	68 00 00 00 00	 push	 OFFSET ?mousePosition@@3UXMFLOAT2A@DirectX@@A ; mousePosition
  002f7	8d 4d d0	 lea	 ecx, DWORD PTR _pData$[ebp+144]
  002fa	e8 00 00 00 00	 call	 ??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2A::operator=
; Line 1185
  002ff	8b f4		 mov	 esi, esp
  00301	6a 00		 push	 0
  00303	6a 00		 push	 0
  00305	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
  0030b	51		 push	 ecx
  0030c	8b 55 f8	 mov	 edx, DWORD PTR _deviceContext$[ebp]
  0030f	8b 02		 mov	 eax, DWORD PTR [edx]
  00311	8b 4d f8	 mov	 ecx, DWORD PTR _deviceContext$[ebp]
  00314	51		 push	 ecx
  00315	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  0031b	ff d2		 call	 edx
  0031d	3b f4		 cmp	 esi, esp
  0031f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1186
  00324	8b f4		 mov	 esi, esp
  00326	6a 00		 push	 0
  00328	6a 00		 push	 0
  0032a	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _pData$[ebp]
  00330	50		 push	 eax
  00331	6a 00		 push	 0
  00333	6a 00		 push	 0
  00335	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  0033b	51		 push	 ecx
  0033c	8b 55 f8	 mov	 edx, DWORD PTR _deviceContext$[ebp]
  0033f	8b 02		 mov	 eax, DWORD PTR [edx]
  00341	8b 4d f8	 mov	 ecx, DWORD PTR _deviceContext$[ebp]
  00344	51		 push	 ecx
  00345	8b 90 c0 00 00
	00		 mov	 edx, DWORD PTR [eax+192]
  0034b	ff d2		 call	 edx
  0034d	3b f4		 cmp	 esi, esp
  0034f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1187
  00354	8b f4		 mov	 esi, esp
  00356	68 00 00 00 00	 push	 OFFSET ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  0035b	6a 01		 push	 1
  0035d	6a 00		 push	 0
  0035f	8b 45 f8	 mov	 eax, DWORD PTR _deviceContext$[ebp]
  00362	8b 08		 mov	 ecx, DWORD PTR [eax]
  00364	8b 55 f8	 mov	 edx, DWORD PTR _deviceContext$[ebp]
  00367	52		 push	 edx
  00368	8b 81 1c 01 00
	00		 mov	 eax, DWORD PTR [ecx+284]
  0036e	ff d0		 call	 eax
  00370	3b f4		 cmp	 esi, esp
  00372	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1188
  00377	8b f4		 mov	 esi, esp
  00379	8d 4d f0	 lea	 ecx, DWORD PTR _UAVInitialCounts$[ebp]
  0037c	51		 push	 ecx
  0037d	68 00 00 00 00	 push	 OFFSET ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  00382	6a 01		 push	 1
  00384	6a 00		 push	 0
  00386	8b 55 f8	 mov	 edx, DWORD PTR _deviceContext$[ebp]
  00389	8b 02		 mov	 eax, DWORD PTR [edx]
  0038b	8b 4d f8	 mov	 ecx, DWORD PTR _deviceContext$[ebp]
  0038e	51		 push	 ecx
  0038f	8b 90 10 01 00
	00		 mov	 edx, DWORD PTR [eax+272]
  00395	ff d2		 call	 edx
  00397	3b f4		 cmp	 esi, esp
  00399	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1189
  0039e	8b f4		 mov	 esi, esp
  003a0	68 00 00 00 00	 push	 OFFSET ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  003a5	6a 01		 push	 1
  003a7	6a 00		 push	 0
  003a9	8b 45 f8	 mov	 eax, DWORD PTR _deviceContext$[ebp]
  003ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ae	8b 55 f8	 mov	 edx, DWORD PTR _deviceContext$[ebp]
  003b1	52		 push	 edx
  003b2	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  003b8	ff d0		 call	 eax
  003ba	3b f4		 cmp	 esi, esp
  003bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1190
  003c1	8b f4		 mov	 esi, esp
  003c3	6a 01		 push	 1
  003c5	6a 01		 push	 1
  003c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  003cd	c1 e9 08	 shr	 ecx, 8
  003d0	51		 push	 ecx
  003d1	8b 55 f8	 mov	 edx, DWORD PTR _deviceContext$[ebp]
  003d4	8b 02		 mov	 eax, DWORD PTR [edx]
  003d6	8b 4d f8	 mov	 ecx, DWORD PTR _deviceContext$[ebp]
  003d9	51		 push	 ecx
  003da	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  003e0	ff d2		 call	 edx
  003e2	3b f4		 cmp	 esi, esp
  003e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@OnUpdate:
; Line 1191
  003e9	52		 push	 edx
  003ea	8b cd		 mov	 ecx, ebp
  003ec	50		 push	 eax
  003ed	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@OnUpdate
  003f3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003f8	58		 pop	 eax
  003f9	5a		 pop	 edx
  003fa	5f		 pop	 edi
  003fb	5e		 pop	 esi
  003fc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003ff	33 cd		 xor	 ecx, ebp
  00401	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00406	8b e5		 mov	 esp, ebp
  00408	5d		 pop	 ebp
  00409	8b e3		 mov	 esp, ebx
  0040b	5b		 pop	 ebx
  0040c	c3		 ret	 0
  0040d	8d 49 00	 npad	 3
$LN7@OnUpdate:
  00410	02 00 00 00	 DD	 2
  00414	00 00 00 00	 DD	 $LN6@OnUpdate
$LN6@OnUpdate:
  00418	f0 ff ff ff	 DD	 -16			; fffffff0H
  0041c	04 00 00 00	 DD	 4
  00420	00 00 00 00	 DD	 $LN4@OnUpdate
  00424	40 ff ff ff	 DD	 -192			; ffffff40H
  00428	a0 00 00 00	 DD	 160			; 000000a0H
  0042c	00 00 00 00	 DD	 $LN5@OnUpdate
$LN5@OnUpdate:
  00430	70		 DB	 112			; 00000070H
  00431	44		 DB	 68			; 00000044H
  00432	61		 DB	 97			; 00000061H
  00433	74		 DB	 116			; 00000074H
  00434	61		 DB	 97			; 00000061H
  00435	00		 DB	 0
$LN4@OnUpdate:
  00436	55		 DB	 85			; 00000055H
  00437	41		 DB	 65			; 00000041H
  00438	56		 DB	 86			; 00000056H
  00439	49		 DB	 73			; 00000049H
  0043a	6e		 DB	 110			; 0000006eH
  0043b	69		 DB	 105			; 00000069H
  0043c	74		 DB	 116			; 00000074H
  0043d	69		 DB	 105			; 00000069H
  0043e	61		 DB	 97			; 00000061H
  0043f	6c		 DB	 108			; 0000006cH
  00440	43		 DB	 67			; 00000043H
  00441	6f		 DB	 111			; 0000006fH
  00442	75		 DB	 117			; 00000075H
  00443	6e		 DB	 110			; 0000006eH
  00444	74		 DB	 116			; 00000074H
  00445	73		 DB	 115			; 00000073H
  00446	00		 DB	 0
?OnUpdate@@YAXXZ ENDP					; OnUpdate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -752						; size = 64
$T2 = -688						; size = 64
$T3 = -624						; size = 64
$T4 = -560						; size = 64
_pData$ = -488						; size = 80
_mViewProjection$ = -400				; size = 64
$T5 = -320						; size = 64
_mProjection$ = -240					; size = 64
$T6 = -160						; size = 64
_mView$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_pd3dImmediateContext$ = 12				; size = 4
_fElapsedTime$ = 16					; size = 4
?RenderFluid@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@M@Z PROC ; RenderFluid
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 1094
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec f8 02 00
	00		 sub	 esp, 760		; 000002f8H
  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	8d bd 08 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-760]
  00024	b9 be 00 00 00	 mov	 ecx, 190		; 000000beH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00035	33 c5		 xor	 eax, ebp
  00037	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 1097
  0003a	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR _g_fMapHeight
  00042	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00049	f3 0f 5e 0d 00
	00 00 00	 divss	 xmm1, DWORD PTR __real@40000000
  00051	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fMapWidth
  00059	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00060	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00068	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@00000000
  00070	e8 00 00 00 00	 call	 ?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ; DirectX::XMMatrixTranslation
  00075	0f 29 9d c0 fd
	ff ff		 movaps	 XMMWORD PTR $T3[ebp+48], xmm3
  0007c	0f 29 95 b0 fd
	ff ff		 movaps	 XMMWORD PTR $T3[ebp+32], xmm2
  00083	0f 29 8d a0 fd
	ff ff		 movaps	 XMMWORD PTR $T3[ebp+16], xmm1
  0008a	0f 29 85 90 fd
	ff ff		 movaps	 XMMWORD PTR $T3[ebp], xmm0
  00091	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00096	8d b5 90 fd ff
	ff		 lea	 esi, DWORD PTR $T3[ebp]
  0009c	8d bd 60 ff ff
	ff		 lea	 edi, DWORD PTR $T6[ebp]
  000a2	f3 a5		 rep movsd
  000a4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  000a9	8d b5 60 ff ff
	ff		 lea	 esi, DWORD PTR $T6[ebp]
  000af	8d 7d b0	 lea	 edi, DWORD PTR _mView$[ebp]
  000b2	f3 a5		 rep movsd
; Line 1098
  000b4	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  000bc	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@00000000
  000c4	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR _g_fMapHeight
  000cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fMapWidth
  000d4	e8 00 00 00 00	 call	 ?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ; DirectX::XMMatrixOrthographicLH
  000d9	0f 29 9d 80 fd
	ff ff		 movaps	 XMMWORD PTR $T2[ebp+48], xmm3
  000e0	0f 29 95 70 fd
	ff ff		 movaps	 XMMWORD PTR $T2[ebp+32], xmm2
  000e7	0f 29 8d 60 fd
	ff ff		 movaps	 XMMWORD PTR $T2[ebp+16], xmm1
  000ee	0f 29 85 50 fd
	ff ff		 movaps	 XMMWORD PTR $T2[ebp], xmm0
  000f5	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  000fa	8d b5 50 fd ff
	ff		 lea	 esi, DWORD PTR $T2[ebp]
  00100	8d bd c0 fe ff
	ff		 lea	 edi, DWORD PTR $T5[ebp]
  00106	f3 a5		 rep movsd
  00108	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0010d	8d b5 c0 fe ff
	ff		 lea	 esi, DWORD PTR $T5[ebp]
  00113	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR _mProjection$[ebp]
  00119	f3 a5		 rep movsd
; Line 1099
  0011b	8d 95 70 fe ff
	ff		 lea	 edx, DWORD PTR _mViewProjection$[ebp]
  00121	8d 4d b0	 lea	 ecx, DWORD PTR _mView$[ebp]
  00124	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _mProjection$[ebp]
  0012b	0f 28 8d 20 ff
	ff ff		 movaps	 xmm1, XMMWORD PTR _mProjection$[ebp+16]
  00132	0f 28 95 30 ff
	ff ff		 movaps	 xmm2, XMMWORD PTR _mProjection$[ebp+32]
  00139	0f 28 9d 40 ff
	ff ff		 movaps	 xmm3, XMMWORD PTR _mProjection$[ebp+48]
  00140	e8 00 00 00 00	 call	 ??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z ; DirectX::XMMATRIX::operator*
; Line 1102
  00145	8d 8d 18 fe ff
	ff		 lea	 ecx, DWORD PTR _pData$[ebp]
  0014b	e8 00 00 00 00	 call	 ??0CBRenderConstants@@QAE@XZ
; Line 1104
  00150	0f 28 85 70 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR _mViewProjection$[ebp]
  00157	0f 28 8d 80 fe
	ff ff		 movaps	 xmm1, XMMWORD PTR _mViewProjection$[ebp+16]
  0015e	0f 28 95 90 fe
	ff ff		 movaps	 xmm2, XMMWORD PTR _mViewProjection$[ebp+32]
  00165	0f 28 9d a0 fe
	ff ff		 movaps	 xmm3, XMMWORD PTR _mViewProjection$[ebp+48]
  0016c	e8 00 00 00 00	 call	 ?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ; DirectX::XMMatrixTranspose
  00171	0f 29 9d 40 fd
	ff ff		 movaps	 XMMWORD PTR $T1[ebp+48], xmm3
  00178	0f 29 95 30 fd
	ff ff		 movaps	 XMMWORD PTR $T1[ebp+32], xmm2
  0017f	0f 29 8d 20 fd
	ff ff		 movaps	 XMMWORD PTR $T1[ebp+16], xmm1
  00186	0f 29 85 10 fd
	ff ff		 movaps	 XMMWORD PTR $T1[ebp], xmm0
  0018d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00192	8d b5 10 fd ff
	ff		 lea	 esi, DWORD PTR $T1[ebp]
  00198	8d bd d0 fd ff
	ff		 lea	 edi, DWORD PTR $T4[ebp]
  0019e	f3 a5		 rep movsd
  001a0	8d 8d 18 fe ff
	ff		 lea	 ecx, DWORD PTR _pData$[ebp]
  001a6	0f 28 85 d0 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T4[ebp]
  001ad	0f 28 8d e0 fd
	ff ff		 movaps	 xmm1, XMMWORD PTR $T4[ebp+16]
  001b4	0f 28 95 f0 fd
	ff ff		 movaps	 xmm2, XMMWORD PTR $T4[ebp+32]
  001bb	0f 28 9d 00 fe
	ff ff		 movaps	 xmm3, XMMWORD PTR $T4[ebp+48]
  001c2	e8 00 00 00 00	 call	 ?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ; DirectX::XMStoreFloat4x4
; Line 1105
  001c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fParticleRenderSize
  001cf	f3 0f 11 85 58
	fe ff ff	 movss	 DWORD PTR _pData$[ebp+64], xmm0
; Line 1107
  001d7	8b f4		 mov	 esi, esp
  001d9	6a 00		 push	 0
  001db	6a 00		 push	 0
  001dd	8d 85 18 fe ff
	ff		 lea	 eax, DWORD PTR _pData$[ebp]
  001e3	50		 push	 eax
  001e4	6a 00		 push	 0
  001e6	6a 00		 push	 0
  001e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
  001ee	51		 push	 ecx
  001ef	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  001f2	8b 02		 mov	 eax, DWORD PTR [edx]
  001f4	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  001f7	51		 push	 ecx
  001f8	8b 90 c0 00 00
	00		 mov	 edx, DWORD PTR [eax+192]
  001fe	ff d2		 call	 edx
  00200	3b f4		 cmp	 esi, esp
  00202	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1110
  00207	8b f4		 mov	 esi, esp
  00209	6a 00		 push	 0
  0020b	6a 00		 push	 0
  0020d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
  00212	50		 push	 eax
  00213	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  00216	8b 11		 mov	 edx, DWORD PTR [ecx]
  00218	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  0021b	50		 push	 eax
  0021c	8b 4a 2c	 mov	 ecx, DWORD PTR [edx+44]
  0021f	ff d1		 call	 ecx
  00221	3b f4		 cmp	 esi, esp
  00223	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1111
  00228	8b f4		 mov	 esi, esp
  0022a	6a 00		 push	 0
  0022c	6a 00		 push	 0
  0022e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
  00234	52		 push	 edx
  00235	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  00238	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023a	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  0023d	52		 push	 edx
  0023e	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  00241	ff d0		 call	 eax
  00243	3b f4		 cmp	 esi, esp
  00245	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1112
  0024a	8b f4		 mov	 esi, esp
  0024c	6a 00		 push	 0
  0024e	6a 00		 push	 0
  00250	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
  00256	51		 push	 ecx
  00257	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  0025a	8b 02		 mov	 eax, DWORD PTR [edx]
  0025c	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  0025f	51		 push	 ecx
  00260	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00263	ff d2		 call	 edx
  00265	3b f4		 cmp	 esi, esp
  00267	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1115
  0026c	8b f4		 mov	 esi, esp
  0026e	68 00 00 00 00	 push	 OFFSET ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
  00273	6a 01		 push	 1
  00275	6a 00		 push	 0
  00277	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  0027a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027c	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  0027f	52		 push	 edx
  00280	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00283	ff d0		 call	 eax
  00285	3b f4		 cmp	 esi, esp
  00287	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1116
  0028c	8b f4		 mov	 esi, esp
  0028e	68 00 00 00 00	 push	 OFFSET ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
  00293	6a 01		 push	 1
  00295	6a 00		 push	 0
  00297	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  0029a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0029c	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  0029f	50		 push	 eax
  002a0	8b 4a 58	 mov	 ecx, DWORD PTR [edx+88]
  002a3	ff d1		 call	 ecx
  002a5	3b f4		 cmp	 esi, esp
  002a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1117
  002ac	8b f4		 mov	 esi, esp
  002ae	68 00 00 00 00	 push	 OFFSET ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
  002b3	6a 01		 push	 1
  002b5	6a 00		 push	 0
  002b7	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  002ba	8b 02		 mov	 eax, DWORD PTR [edx]
  002bc	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  002bf	51		 push	 ecx
  002c0	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  002c3	ff d2		 call	 edx
  002c5	3b f4		 cmp	 esi, esp
  002c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1120
  002cc	8b f4		 mov	 esi, esp
  002ce	68 00 00 00 00	 push	 OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  002d3	6a 01		 push	 1
  002d5	6a 00		 push	 0
  002d7	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  002da	8b 08		 mov	 ecx, DWORD PTR [eax]
  002dc	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  002df	52		 push	 edx
  002e0	8b 41 64	 mov	 eax, DWORD PTR [ecx+100]
  002e3	ff d0		 call	 eax
  002e5	3b f4		 cmp	 esi, esp
  002e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1121
  002ec	8b f4		 mov	 esi, esp
  002ee	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  002f3	6a 01		 push	 1
  002f5	6a 01		 push	 1
  002f7	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  002fa	8b 11		 mov	 edx, DWORD PTR [ecx]
  002fc	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  002ff	50		 push	 eax
  00300	8b 4a 64	 mov	 ecx, DWORD PTR [edx+100]
  00303	ff d1		 call	 ecx
  00305	3b f4		 cmp	 esi, esp
  00307	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1124
  0030c	8b f4		 mov	 esi, esp
  0030e	68 00 00 00 00	 push	 OFFSET ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  00313	6a 01		 push	 1
  00315	6a 02		 push	 2
  00317	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  0031a	8b 02		 mov	 eax, DWORD PTR [edx]
  0031c	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  0031f	51		 push	 ecx
  00320	8b 50 64	 mov	 edx, DWORD PTR [eax+100]
  00323	ff d2		 call	 edx
  00325	3b f4		 cmp	 esi, esp
  00327	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1125
  0032c	8b f4		 mov	 esi, esp
  0032e	68 00 00 00 00	 push	 OFFSET ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  00333	6a 01		 push	 1
  00335	6a 02		 push	 2
  00337	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  0033a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033c	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  0033f	52		 push	 edx
  00340	8b 41 7c	 mov	 eax, DWORD PTR [ecx+124]
  00343	ff d0		 call	 eax
  00345	3b f4		 cmp	 esi, esp
  00347	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1127
  0034c	8b f4		 mov	 esi, esp
  0034e	6a 01		 push	 1
  00350	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  00353	8b 11		 mov	 edx, DWORD PTR [ecx]
  00355	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  00358	50		 push	 eax
  00359	8b 4a 60	 mov	 ecx, DWORD PTR [edx+96]
  0035c	ff d1		 call	 ecx
  0035e	3b f4		 cmp	 esi, esp
  00360	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1133
  00365	8b f4		 mov	 esi, esp
  00367	68 00 00 00 00	 push	 OFFSET ?resourceView@@3PAUID3D11ShaderResourceView@@A ; resourceView
  0036c	6a 01		 push	 1
  0036e	6a 03		 push	 3
  00370	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  00373	8b 02		 mov	 eax, DWORD PTR [edx]
  00375	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  00378	51		 push	 ecx
  00379	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  0037c	ff d2		 call	 edx
  0037e	3b f4		 cmp	 esi, esp
  00380	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1134
  00385	8b f4		 mov	 esi, esp
  00387	68 00 00 00 00	 push	 OFFSET ?samplerState@@3PAUID3D11SamplerState@@A ; samplerState
  0038c	6a 01		 push	 1
  0038e	6a 00		 push	 0
  00390	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  00393	8b 08		 mov	 ecx, DWORD PTR [eax]
  00395	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  00398	52		 push	 edx
  00399	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0039c	ff d0		 call	 eax
  0039e	3b f4		 cmp	 esi, esp
  003a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1138
  003a5	8b f4		 mov	 esi, esp
  003a7	6a 00		 push	 0
  003a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  003af	51		 push	 ecx
  003b0	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  003b3	8b 02		 mov	 eax, DWORD PTR [edx]
  003b5	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  003b8	51		 push	 ecx
  003b9	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  003bc	ff d2		 call	 edx
  003be	3b f4		 cmp	 esi, esp
  003c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1142
  003c5	8b f4		 mov	 esi, esp
  003c7	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  003cc	6a 01		 push	 1
  003ce	6a 00		 push	 0
  003d0	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  003d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d5	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  003d8	52		 push	 edx
  003d9	8b 41 64	 mov	 eax, DWORD PTR [ecx+100]
  003dc	ff d0		 call	 eax
  003de	3b f4		 cmp	 esi, esp
  003e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1143
  003e5	8b f4		 mov	 esi, esp
  003e7	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  003ec	6a 01		 push	 1
  003ee	6a 01		 push	 1
  003f0	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  003f3	8b 11		 mov	 edx, DWORD PTR [ecx]
  003f5	8b 43 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  003f8	50		 push	 eax
  003f9	8b 4a 64	 mov	 ecx, DWORD PTR [edx+100]
  003fc	ff d1		 call	 ecx
  003fe	3b f4		 cmp	 esi, esp
  00400	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1144
  00405	8b f4		 mov	 esi, esp
  00407	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  0040c	6a 01		 push	 1
  0040e	6a 02		 push	 2
  00410	8b 53 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  00413	8b 02		 mov	 eax, DWORD PTR [edx]
  00415	8b 4b 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  00418	51		 push	 ecx
  00419	8b 50 64	 mov	 edx, DWORD PTR [eax+100]
  0041c	ff d2		 call	 edx
  0041e	3b f4		 cmp	 esi, esp
  00420	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1147
  00425	52		 push	 edx
  00426	8b cd		 mov	 ecx, ebp
  00428	50		 push	 eax
  00429	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@RenderFlui
  0042f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00434	58		 pop	 eax
  00435	5a		 pop	 edx
  00436	5f		 pop	 edi
  00437	5e		 pop	 esi
  00438	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0043b	33 cd		 xor	 ecx, ebp
  0043d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00442	8b e5		 mov	 esp, ebp
  00444	5d		 pop	 ebp
  00445	8b e3		 mov	 esp, ebx
  00447	5b		 pop	 ebx
  00448	c3		 ret	 0
  00449	8d 49 00	 npad	 3
$LN8@RenderFlui:
  0044c	04 00 00 00	 DD	 4
  00450	00 00 00 00	 DD	 $LN7@RenderFlui
$LN7@RenderFlui:
  00454	b0 ff ff ff	 DD	 -80			; ffffffb0H
  00458	40 00 00 00	 DD	 64			; 00000040H
  0045c	00 00 00 00	 DD	 $LN3@RenderFlui
  00460	10 ff ff ff	 DD	 -240			; ffffff10H
  00464	40 00 00 00	 DD	 64			; 00000040H
  00468	00 00 00 00	 DD	 $LN4@RenderFlui
  0046c	70 fe ff ff	 DD	 -400			; fffffe70H
  00470	40 00 00 00	 DD	 64			; 00000040H
  00474	00 00 00 00	 DD	 $LN5@RenderFlui
  00478	18 fe ff ff	 DD	 -488			; fffffe18H
  0047c	50 00 00 00	 DD	 80			; 00000050H
  00480	00 00 00 00	 DD	 $LN6@RenderFlui
$LN6@RenderFlui:
  00484	70		 DB	 112			; 00000070H
  00485	44		 DB	 68			; 00000044H
  00486	61		 DB	 97			; 00000061H
  00487	74		 DB	 116			; 00000074H
  00488	61		 DB	 97			; 00000061H
  00489	00		 DB	 0
$LN5@RenderFlui:
  0048a	6d		 DB	 109			; 0000006dH
  0048b	56		 DB	 86			; 00000056H
  0048c	69		 DB	 105			; 00000069H
  0048d	65		 DB	 101			; 00000065H
  0048e	77		 DB	 119			; 00000077H
  0048f	50		 DB	 80			; 00000050H
  00490	72		 DB	 114			; 00000072H
  00491	6f		 DB	 111			; 0000006fH
  00492	6a		 DB	 106			; 0000006aH
  00493	65		 DB	 101			; 00000065H
  00494	63		 DB	 99			; 00000063H
  00495	74		 DB	 116			; 00000074H
  00496	69		 DB	 105			; 00000069H
  00497	6f		 DB	 111			; 0000006fH
  00498	6e		 DB	 110			; 0000006eH
  00499	00		 DB	 0
$LN4@RenderFlui:
  0049a	6d		 DB	 109			; 0000006dH
  0049b	50		 DB	 80			; 00000050H
  0049c	72		 DB	 114			; 00000072H
  0049d	6f		 DB	 111			; 0000006fH
  0049e	6a		 DB	 106			; 0000006aH
  0049f	65		 DB	 101			; 00000065H
  004a0	63		 DB	 99			; 00000063H
  004a1	74		 DB	 116			; 00000074H
  004a2	69		 DB	 105			; 00000069H
  004a3	6f		 DB	 111			; 0000006fH
  004a4	6e		 DB	 110			; 0000006eH
  004a5	00		 DB	 0
$LN3@RenderFlui:
  004a6	6d		 DB	 109			; 0000006dH
  004a7	56		 DB	 86			; 00000056H
  004a8	69		 DB	 105			; 00000069H
  004a9	65		 DB	 101			; 00000065H
  004aa	77		 DB	 119			; 00000077H
  004ab	00		 DB	 0
?RenderFluid@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@M@Z ENDP ; RenderFluid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv211 = -232						; size = 4
tv328 = -228						; size = 4
tv404 = -224						; size = 4
tv320 = -220						; size = 4
tv402 = -216						; size = 4
tv281 = -212						; size = 4
tv400 = -208						; size = 4
tv398 = -204						; size = 4
tv75 = -200						; size = 4
_pData$ = -192						; size = 160
_UAVInitialCounts$ = -12				; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
_fElapsedTime$ = 12					; size = 4
?SimulateFluid@@YAXPAUID3D11DeviceContext@@M@Z PROC	; SimulateFluid
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 1006
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00024	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00035	33 c5		 xor	 eax, ebp
  00037	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 1007
  0003a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 1010
  00041	6a 30		 push	 48			; 00000030H
  00043	6a 00		 push	 0
  00045	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _pData$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _memset
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _pData$[ebp+48]
  0005a	e8 00 00 00 00	 call	 ??0XMFLOAT2A@DirectX@@QAE@XZ ; DirectX::XMFLOAT2A::XMFLOAT2A
  0005f	8d 4d 80	 lea	 ecx, DWORD PTR _pData$[ebp+64]
  00062	e8 00 00 00 00	 call	 ??0XMFLOAT4A@DirectX@@QAE@XZ ; DirectX::XMFLOAT4A::XMFLOAT4A
  00067	68 00 00 00 00	 push	 OFFSET ??0XMFLOAT3A@DirectX@@QAE@XZ ; DirectX::XMFLOAT3A::XMFLOAT3A
  0006c	6a 04		 push	 4
  0006e	6a 10		 push	 16			; 00000010H
  00070	8d 4d 90	 lea	 ecx, DWORD PTR _pData$[ebp+80]
  00073	51		 push	 ecx
  00074	e8 00 00 00 00	 call	 ??_H@YGXPAXIHP6EPAX0@Z@Z
  00079	8d 4d d0	 lea	 ecx, DWORD PTR _pData$[ebp+144]
  0007c	e8 00 00 00 00	 call	 ??0XMFLOAT2A@DirectX@@QAE@XZ ; DirectX::XMFLOAT2A::XMFLOAT2A
; Line 1013
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00087	89 95 40 ff ff
	ff		 mov	 DWORD PTR _pData$[ebp], edx
; Line 1015
  0008d	f3 0f 10 43 0c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebx]
  00092	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR _g_fMaxAllowableTimeStep
  00099	76 12		 jbe	 SHORT $LN14@SimulateFl
  0009b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fMaxAllowableTimeStep
  000a3	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv75[ebp], xmm0
  000ab	eb 0d		 jmp	 SHORT $LN15@SimulateFl
$LN14@SimulateFl:
  000ad	f3 0f 10 43 0c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebx]
  000b2	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv75[ebp], xmm0
$LN15@SimulateFl:
  000ba	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR tv75[ebp]
  000c2	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+4], xmm0
; Line 1016
  000ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fSmoothlen
  000d2	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+8], xmm0
; Line 1017
  000da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fPressureStiffness
  000e2	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+12], xmm0
; Line 1018
  000ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@45800000
  000f2	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+16], xmm0
; Line 1019
  000fa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fParticleMass
  00102	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@439d8000
  0010a	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42800000
  00112	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR _XM_PI
  0011a	6a 09		 push	 9
  0011c	51		 push	 ecx
  0011d	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR _g_fSmoothlen
  00125	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  0012a	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR tv398[ebp], xmm0
  00132	f3 0f 11 8d 30
	ff ff ff	 movss	 DWORD PTR tv400[ebp], xmm1
  0013a	e8 00 00 00 00	 call	 ?pow@@YAMMH@Z		; pow
  0013f	83 c4 08	 add	 esp, 8
  00142	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR tv281[ebp]
  00148	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR tv400[ebp]
  00150	f3 0f 59 85 2c
	ff ff ff	 mulss	 xmm0, DWORD PTR tv281[ebp]
  00158	f3 0f 10 8d 34
	ff ff ff	 movss	 xmm1, DWORD PTR tv398[ebp]
  00160	f3 0f 5e c8	 divss	 xmm1, xmm0
  00164	f3 0f 11 8d 54
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+20], xmm1
; Line 1020
  0016c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fParticleMass
  00174	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c2340000
  0017c	6a 06		 push	 6
  0017e	51		 push	 ecx
  0017f	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR _g_fSmoothlen
  00187	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0018c	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR tv402[ebp], xmm0
  00194	e8 00 00 00 00	 call	 ?pow@@YAMMH@Z		; pow
  00199	83 c4 08	 add	 esp, 8
  0019c	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR tv320[ebp]
  001a2	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv320[ebp]
  001aa	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _XM_PI
  001b2	f3 0f 10 8d 28
	ff ff ff	 movss	 xmm1, DWORD PTR tv402[ebp]
  001ba	f3 0f 5e c8	 divss	 xmm1, xmm0
  001be	f3 0f 11 8d 58
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+24], xmm1
; Line 1021
  001c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fParticleMass
  001ce	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _g_fViscosity
  001d6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42340000
  001de	6a 06		 push	 6
  001e0	51		 push	 ecx
  001e1	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR _g_fSmoothlen
  001e9	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  001ee	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR tv404[ebp], xmm0
  001f6	e8 00 00 00 00	 call	 ?pow@@YAMMH@Z		; pow
  001fb	83 c4 08	 add	 esp, 8
  001fe	d9 9d 1c ff ff
	ff		 fstp	 DWORD PTR tv328[ebp]
  00204	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR tv328[ebp]
  0020c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _XM_PI
  00214	f3 0f 10 8d 20
	ff ff ff	 movss	 xmm1, DWORD PTR tv404[ebp]
  0021c	f3 0f 5e c8	 divss	 xmm1, xmm0
  00220	f3 0f 11 8d 5c
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+28], xmm1
; Line 1023
  00228	68 00 00 00 00	 push	 OFFSET ?g_vGravity@@3UXMFLOAT2A@DirectX@@A ; g_vGravity
  0022d	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _pData$[ebp+48]
  00233	e8 00 00 00 00	 call	 ??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2A::operator=
; Line 1027
  00238	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00240	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR _g_fSmoothlen
  00248	f3 0f 11 45 80	 movss	 DWORD PTR _pData$[ebp+64], xmm0
; Line 1028
  0024d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00255	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR _g_fSmoothlen
  0025d	f3 0f 11 45 84	 movss	 DWORD PTR _pData$[ebp+68], xmm0
; Line 1029
  00262	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0026a	f3 0f 11 45 88	 movss	 DWORD PTR _pData$[ebp+72], xmm0
; Line 1030
  0026f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00277	f3 0f 11 45 8c	 movss	 DWORD PTR _pData$[ebp+76], xmm0
; Line 1033
  0027c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fWallStiffness
  00284	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _pData$[ebp+32], xmm0
; Line 1034
  0028c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00291	6b c8 00	 imul	 ecx, eax, 0
  00294	81 c1 00 00 00
	00		 add	 ecx, OFFSET _g_vPlanes
  0029a	51		 push	 ecx
  0029b	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  002a0	6b c2 00	 imul	 eax, edx, 0
  002a3	8d 4c 05 90	 lea	 ecx, DWORD PTR _pData$[ebp+eax+80]
  002a7	e8 00 00 00 00	 call	 ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3A::operator=
; Line 1035
  002ac	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  002b1	c1 e1 00	 shl	 ecx, 0
  002b4	81 c1 00 00 00
	00		 add	 ecx, OFFSET _g_vPlanes
  002ba	51		 push	 ecx
  002bb	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  002c0	c1 e2 00	 shl	 edx, 0
  002c3	8d 4c 15 90	 lea	 ecx, DWORD PTR _pData$[ebp+edx+80]
  002c7	e8 00 00 00 00	 call	 ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3A::operator=
; Line 1036
  002cc	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  002d1	d1 e0		 shl	 eax, 1
  002d3	05 00 00 00 00	 add	 eax, OFFSET _g_vPlanes
  002d8	50		 push	 eax
  002d9	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  002de	d1 e1		 shl	 ecx, 1
  002e0	8d 4c 0d 90	 lea	 ecx, DWORD PTR _pData$[ebp+ecx+80]
  002e4	e8 00 00 00 00	 call	 ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3A::operator=
; Line 1037
  002e9	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  002ee	6b c2 03	 imul	 eax, edx, 3
  002f1	05 00 00 00 00	 add	 eax, OFFSET _g_vPlanes
  002f6	50		 push	 eax
  002f7	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  002fc	6b d1 03	 imul	 edx, ecx, 3
  002ff	8d 4c 15 90	 lea	 ecx, DWORD PTR _pData$[ebp+edx+80]
  00303	e8 00 00 00 00	 call	 ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT3A::operator=
; Line 1038
  00308	68 00 00 00 00	 push	 OFFSET ?mousePosition@@3UXMFLOAT2A@DirectX@@A ; mousePosition
  0030d	8d 4d d0	 lea	 ecx, DWORD PTR _pData$[ebp+144]
  00310	e8 00 00 00 00	 call	 ??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z ; DirectX::XMFLOAT2A::operator=
; Line 1040
  00315	8b f4		 mov	 esi, esp
  00317	6a 00		 push	 0
  00319	6a 00		 push	 0
  0031b	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _pData$[ebp]
  00321	50		 push	 eax
  00322	6a 00		 push	 0
  00324	6a 00		 push	 0
  00326	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  0032c	51		 push	 ecx
  0032d	8b 53 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  00330	8b 02		 mov	 eax, DWORD PTR [edx]
  00332	8b 4b 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  00335	51		 push	 ecx
  00336	8b 90 c0 00 00
	00		 mov	 edx, DWORD PTR [eax+192]
  0033c	ff d2		 call	 edx
  0033e	3b f4		 cmp	 esi, esp
  00340	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1043
  00345	8b f4		 mov	 esi, esp
  00347	6a 31		 push	 49			; 00000031H
  00349	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetAsyncKeyState@4
  0034f	3b f4		 cmp	 esi, esp
  00351	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00356	98		 cwde
  00357	85 c0		 test	 eax, eax
  00359	74 0c		 je	 SHORT $LN11@SimulateFl
; Line 1045
  0035b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_eSimMode@@3W4eSimulationMode@@A, 0 ; g_eSimMode
; Line 1047
  00365	eb 46		 jmp	 SHORT $LN7@SimulateFl
$LN11@SimulateFl:
; Line 1048
  00367	8b f4		 mov	 esi, esp
  00369	6a 32		 push	 50			; 00000032H
  0036b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetAsyncKeyState@4
  00371	3b f4		 cmp	 esi, esp
  00373	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00378	0f bf c8	 movsx	 ecx, ax
  0037b	85 c9		 test	 ecx, ecx
  0037d	74 0c		 je	 SHORT $LN9@SimulateFl
; Line 1050
  0037f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?g_eSimMode@@3W4eSimulationMode@@A, 1 ; g_eSimMode
; Line 1052
  00389	eb 22		 jmp	 SHORT $LN7@SimulateFl
$LN9@SimulateFl:
; Line 1053
  0038b	8b f4		 mov	 esi, esp
  0038d	6a 33		 push	 51			; 00000033H
  0038f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetAsyncKeyState@4
  00395	3b f4		 cmp	 esi, esp
  00397	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0039c	0f bf d0	 movsx	 edx, ax
  0039f	85 d2		 test	 edx, edx
  003a1	74 0a		 je	 SHORT $LN7@SimulateFl
; Line 1055
  003a3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_eSimMode@@3W4eSimulationMode@@A, 0 ; g_eSimMode
$LN7@SimulateFl:
; Line 1058
  003ad	8b f4		 mov	 esi, esp
  003af	6a 0d		 push	 13			; 0000000dH
  003b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetAsyncKeyState@4
  003b7	3b f4		 cmp	 esi, esp
  003b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1063
  003be	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_eSimMode@@3W4eSimulationMode@@A ; g_eSimMode
  003c4	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv211[ebp], ecx
  003ca	83 bd 18 ff ff
	ff 00		 cmp	 DWORD PTR tv211[ebp], 0
  003d1	74 14		 je	 SHORT $LN3@SimulateFl
  003d3	83 bd 18 ff ff
	ff 01		 cmp	 DWORD PTR tv211[ebp], 1
  003da	74 19		 je	 SHORT $LN2@SimulateFl
  003dc	83 bd 18 ff ff
	ff 02		 cmp	 DWORD PTR tv211[ebp], 2
  003e3	74 1e		 je	 SHORT $LN1@SimulateFl
  003e5	eb 28		 jmp	 SHORT $LN4@SimulateFl
$LN3@SimulateFl:
; Line 1066
  003e7	8b 53 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  003ea	52		 push	 edx
  003eb	e8 00 00 00 00	 call	 ?SimulateFluid_Simple@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Simple
  003f0	83 c4 04	 add	 esp, 4
; Line 1067
  003f3	eb 1a		 jmp	 SHORT $LN4@SimulateFl
$LN2@SimulateFl:
; Line 1071
  003f5	8b 43 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  003f8	50		 push	 eax
  003f9	e8 00 00 00 00	 call	 ?SimulateFluid_Shared@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Shared
  003fe	83 c4 04	 add	 esp, 4
; Line 1072
  00401	eb 0c		 jmp	 SHORT $LN4@SimulateFl
$LN1@SimulateFl:
; Line 1076
  00403	8b 4b 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  00406	51		 push	 ecx
  00407	e8 00 00 00 00	 call	 ?SimulateFluid_Grid@@YAXPAUID3D11DeviceContext@@@Z ; SimulateFluid_Grid
  0040c	83 c4 04	 add	 esp, 4
$LN4@SimulateFl:
; Line 1081
  0040f	8b f4		 mov	 esi, esp
  00411	8d 55 f4	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  00414	52		 push	 edx
  00415	68 00 00 00 00	 push	 OFFSET _g_pNullUAV
  0041a	6a 01		 push	 1
  0041c	6a 00		 push	 0
  0041e	8b 43 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  00421	8b 08		 mov	 ecx, DWORD PTR [eax]
  00423	8b 53 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  00426	52		 push	 edx
  00427	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  0042d	ff d0		 call	 eax
  0042f	3b f4		 cmp	 esi, esp
  00431	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1082
  00436	8b f4		 mov	 esi, esp
  00438	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  0043d	6a 01		 push	 1
  0043f	6a 00		 push	 0
  00441	8b 4b 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  00444	8b 11		 mov	 edx, DWORD PTR [ecx]
  00446	8b 43 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  00449	50		 push	 eax
  0044a	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  00450	ff d1		 call	 ecx
  00452	3b f4		 cmp	 esi, esp
  00454	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1083
  00459	8b f4		 mov	 esi, esp
  0045b	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  00460	6a 01		 push	 1
  00462	6a 01		 push	 1
  00464	8b 53 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  00467	8b 02		 mov	 eax, DWORD PTR [edx]
  00469	8b 4b 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  0046c	51		 push	 ecx
  0046d	8b 90 0c 01 00
	00		 mov	 edx, DWORD PTR [eax+268]
  00473	ff d2		 call	 edx
  00475	3b f4		 cmp	 esi, esp
  00477	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1084
  0047c	8b f4		 mov	 esi, esp
  0047e	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  00483	6a 01		 push	 1
  00485	6a 02		 push	 2
  00487	8b 43 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  0048a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0048c	8b 53 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  0048f	52		 push	 edx
  00490	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  00496	ff d0		 call	 eax
  00498	3b f4		 cmp	 esi, esp
  0049a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1085
  0049f	8b f4		 mov	 esi, esp
  004a1	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  004a6	6a 01		 push	 1
  004a8	6a 03		 push	 3
  004aa	8b 4b 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  004ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  004af	8b 43 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebx]
  004b2	50		 push	 eax
  004b3	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  004b9	ff d1		 call	 ecx
  004bb	3b f4		 cmp	 esi, esp
  004bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1086
  004c2	8b f4		 mov	 esi, esp
  004c4	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  004c9	6a 01		 push	 1
  004cb	6a 04		 push	 4
  004cd	8b 53 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebx]
  004d0	8b 02		 mov	 eax, DWORD PTR [edx]
  004d2	8b 4b 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebx]
  004d5	51		 push	 ecx
  004d6	8b 90 0c 01 00
	00		 mov	 edx, DWORD PTR [eax+268]
  004dc	ff d2		 call	 edx
  004de	3b f4		 cmp	 esi, esp
  004e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1087
  004e5	52		 push	 edx
  004e6	8b cd		 mov	 ecx, ebp
  004e8	50		 push	 eax
  004e9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN19@SimulateFl
  004ef	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004f4	58		 pop	 eax
  004f5	5a		 pop	 edx
  004f6	5f		 pop	 edi
  004f7	5e		 pop	 esi
  004f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004fb	33 cd		 xor	 ecx, ebp
  004fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00502	8b e5		 mov	 esp, ebp
  00504	5d		 pop	 ebp
  00505	8b e3		 mov	 esp, ebx
  00507	5b		 pop	 ebx
  00508	c3		 ret	 0
  00509	8d 49 00	 npad	 3
$LN19@SimulateFl:
  0050c	02 00 00 00	 DD	 2
  00510	00 00 00 00	 DD	 $LN18@SimulateFl
$LN18@SimulateFl:
  00514	f4 ff ff ff	 DD	 -12			; fffffff4H
  00518	04 00 00 00	 DD	 4
  0051c	00 00 00 00	 DD	 $LN16@SimulateFl
  00520	40 ff ff ff	 DD	 -192			; ffffff40H
  00524	a0 00 00 00	 DD	 160			; 000000a0H
  00528	00 00 00 00	 DD	 $LN17@SimulateFl
$LN17@SimulateFl:
  0052c	70		 DB	 112			; 00000070H
  0052d	44		 DB	 68			; 00000044H
  0052e	61		 DB	 97			; 00000061H
  0052f	74		 DB	 116			; 00000074H
  00530	61		 DB	 97			; 00000061H
  00531	00		 DB	 0
$LN16@SimulateFl:
  00532	55		 DB	 85			; 00000055H
  00533	41		 DB	 65			; 00000041H
  00534	56		 DB	 86			; 00000056H
  00535	49		 DB	 73			; 00000049H
  00536	6e		 DB	 110			; 0000006eH
  00537	69		 DB	 105			; 00000069H
  00538	74		 DB	 116			; 00000074H
  00539	69		 DB	 105			; 00000069H
  0053a	61		 DB	 97			; 00000061H
  0053b	6c		 DB	 108			; 0000006cH
  0053c	43		 DB	 67			; 00000043H
  0053d	6f		 DB	 111			; 0000006fH
  0053e	75		 DB	 117			; 00000075H
  0053f	6e		 DB	 110			; 0000006eH
  00540	74		 DB	 116			; 00000074H
  00541	73		 DB	 115			; 00000073H
  00542	00		 DB	 0
?SimulateFluid@@YAXPAUID3D11DeviceContext@@M@Z ENDP	; SimulateFluid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_UAVInitialCounts$ = -8					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?SimulateFluid_Grid@@YAXPAUID3D11DeviceContext@@@Z PROC	; SimulateFluid_Grid
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 942
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 943
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 946
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  0002a	6a 01		 push	 1
  0002c	6a 00		 push	 0
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00036	52		 push	 edx
  00037	8b 81 1c 01 00
	00		 mov	 eax, DWORD PTR [ecx+284]
  0003d	ff d0		 call	 eax
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 947
  00046	8b f4		 mov	 esi, esp
  00048	8d 4d f8	 lea	 ecx, DWORD PTR _UAVInitialCounts$[ebp]
  0004b	51		 push	 ecx
  0004c	68 00 00 00 00	 push	 OFFSET ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
  00051	6a 01		 push	 1
  00053	6a 00		 push	 0
  00055	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00058	8b 02		 mov	 eax, DWORD PTR [edx]
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 90 10 01 00
	00		 mov	 edx, DWORD PTR [eax+272]
  00064	ff d2		 call	 edx
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 948
  0006d	8b f4		 mov	 esi, esp
  0006f	68 00 00 00 00	 push	 OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  00074	6a 01		 push	 1
  00076	6a 00		 push	 0
  00078	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0007b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00080	52		 push	 edx
  00081	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  00087	ff d0		 call	 eax
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 950
  00090	8b f4		 mov	 esi, esp
  00092	6a 00		 push	 0
  00094	6a 00		 push	 0
  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
  0009c	51		 push	 ecx
  0009d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000a0	8b 02		 mov	 eax, DWORD PTR [edx]
  000a2	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000a5	51		 push	 ecx
  000a6	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  000ac	ff d2		 call	 edx
  000ae	3b f4		 cmp	 esi, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 951
  000b5	8b f4		 mov	 esi, esp
  000b7	6a 01		 push	 1
  000b9	6a 01		 push	 1
  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  000c0	c1 e8 08	 shr	 eax, 8
  000c3	50		 push	 eax
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c9	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000cc	50		 push	 eax
  000cd	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  000d3	ff d1		 call	 ecx
  000d5	3b f4		 cmp	 esi, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 954
  000dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
  000e2	52		 push	 edx
  000e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
  000e8	50		 push	 eax
  000e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  000ef	51		 push	 ecx
  000f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
  000f6	52		 push	 edx
  000f7	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000fa	50		 push	 eax
  000fb	e8 00 00 00 00	 call	 ?GPUSort@@YAXPAUID3D11DeviceContext@@PAUID3D11UnorderedAccessView@@PAUID3D11ShaderResourceView@@12@Z ; GPUSort
  00100	83 c4 14	 add	 esp, 20			; 00000014H
; Line 957
  00103	8b f4		 mov	 esi, esp
  00105	68 00 00 00 00	 push	 OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  0010a	6a 01		 push	 1
  0010c	6a 00		 push	 0
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00116	50		 push	 eax
  00117	8b 8a 1c 01 00
	00		 mov	 ecx, DWORD PTR [edx+284]
  0011d	ff d1		 call	 ecx
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 958
  00126	8b f4		 mov	 esi, esp
  00128	8d 55 f8	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  0012b	52		 push	 edx
  0012c	68 00 00 00 00	 push	 OFFSET ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
  00131	6a 01		 push	 1
  00133	6a 00		 push	 0
  00135	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00138	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013a	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0013d	52		 push	 edx
  0013e	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  00144	ff d0		 call	 eax
  00146	3b f4		 cmp	 esi, esp
  00148	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 959
  0014d	8b f4		 mov	 esi, esp
  0014f	68 00 00 00 00	 push	 OFFSET ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  00154	6a 01		 push	 1
  00156	6a 03		 push	 3
  00158	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0015b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015d	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00160	50		 push	 eax
  00161	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  00167	ff d1		 call	 ecx
  00169	3b f4		 cmp	 esi, esp
  0016b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 962
  00170	8b f4		 mov	 esi, esp
  00172	6a 00		 push	 0
  00174	6a 00		 push	 0
  00176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
  0017c	52		 push	 edx
  0017d	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00180	8b 08		 mov	 ecx, DWORD PTR [eax]
  00182	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00185	52		 push	 edx
  00186	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  0018c	ff d0		 call	 eax
  0018e	3b f4		 cmp	 esi, esp
  00190	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 963
  00195	8b f4		 mov	 esi, esp
  00197	6a 01		 push	 1
  00199	6a 01		 push	 1
  0019b	68 00 01 00 00	 push	 256			; 00000100H
  001a0	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  001a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a5	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  001a8	50		 push	 eax
  001a9	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  001af	ff d1		 call	 ecx
  001b1	3b f4		 cmp	 esi, esp
  001b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 964
  001b8	8b f4		 mov	 esi, esp
  001ba	6a 00		 push	 0
  001bc	6a 00		 push	 0
  001be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
  001c4	52		 push	 edx
  001c5	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  001c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ca	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001cd	52		 push	 edx
  001ce	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  001d4	ff d0		 call	 eax
  001d6	3b f4		 cmp	 esi, esp
  001d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 965
  001dd	8b f4		 mov	 esi, esp
  001df	6a 01		 push	 1
  001e1	6a 01		 push	 1
  001e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  001e9	c1 e9 08	 shr	 ecx, 8
  001ec	51		 push	 ecx
  001ed	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001f0	8b 02		 mov	 eax, DWORD PTR [edx]
  001f2	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  001f5	51		 push	 ecx
  001f6	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  001fc	ff d2		 call	 edx
  001fe	3b f4		 cmp	 esi, esp
  00200	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 968
  00205	8b f4		 mov	 esi, esp
  00207	8d 45 f8	 lea	 eax, DWORD PTR _UAVInitialCounts$[ebp]
  0020a	50		 push	 eax
  0020b	68 00 00 00 00	 push	 OFFSET ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
  00210	6a 01		 push	 1
  00212	6a 00		 push	 0
  00214	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00217	8b 11		 mov	 edx, DWORD PTR [ecx]
  00219	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0021c	50		 push	 eax
  0021d	8b 8a 10 01 00
	00		 mov	 ecx, DWORD PTR [edx+272]
  00223	ff d1		 call	 ecx
  00225	3b f4		 cmp	 esi, esp
  00227	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 969
  0022c	8b f4		 mov	 esi, esp
  0022e	68 00 00 00 00	 push	 OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  00233	6a 01		 push	 1
  00235	6a 00		 push	 0
  00237	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0023a	8b 02		 mov	 eax, DWORD PTR [edx]
  0023c	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0023f	51		 push	 ecx
  00240	8b 90 0c 01 00
	00		 mov	 edx, DWORD PTR [eax+268]
  00246	ff d2		 call	 edx
  00248	3b f4		 cmp	 esi, esp
  0024a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 970
  0024f	8b f4		 mov	 esi, esp
  00251	68 00 00 00 00	 push	 OFFSET ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  00256	6a 01		 push	 1
  00258	6a 03		 push	 3
  0025a	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0025d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025f	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00262	52		 push	 edx
  00263	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  00269	ff d0		 call	 eax
  0026b	3b f4		 cmp	 esi, esp
  0026d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 973
  00272	8b f4		 mov	 esi, esp
  00274	6a 00		 push	 0
  00276	6a 00		 push	 0
  00278	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
  0027e	51		 push	 ecx
  0027f	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00282	8b 02		 mov	 eax, DWORD PTR [edx]
  00284	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00287	51		 push	 ecx
  00288	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  0028e	ff d2		 call	 edx
  00290	3b f4		 cmp	 esi, esp
  00292	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 974
  00297	8b f4		 mov	 esi, esp
  00299	6a 01		 push	 1
  0029b	6a 01		 push	 1
  0029d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  002a2	c1 e8 08	 shr	 eax, 8
  002a5	50		 push	 eax
  002a6	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  002a9	8b 11		 mov	 edx, DWORD PTR [ecx]
  002ab	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  002ae	50		 push	 eax
  002af	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  002b5	ff d1		 call	 ecx
  002b7	3b f4		 cmp	 esi, esp
  002b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 977
  002be	8b f4		 mov	 esi, esp
  002c0	8d 55 f8	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  002c3	52		 push	 edx
  002c4	68 00 00 00 00	 push	 OFFSET _g_pNullUAV
  002c9	6a 01		 push	 1
  002cb	6a 00		 push	 0
  002cd	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  002d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d2	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  002d5	52		 push	 edx
  002d6	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  002dc	ff d0		 call	 eax
  002de	3b f4		 cmp	 esi, esp
  002e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 978
  002e5	8b f4		 mov	 esi, esp
  002e7	68 00 00 00 00	 push	 OFFSET _g_pNullSRV
  002ec	6a 01		 push	 1
  002ee	6a 00		 push	 0
  002f0	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  002f3	8b 11		 mov	 edx, DWORD PTR [ecx]
  002f5	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  002f8	50		 push	 eax
  002f9	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  002ff	ff d1		 call	 ecx
  00301	3b f4		 cmp	 esi, esp
  00303	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 979
  00308	8b f4		 mov	 esi, esp
  0030a	68 00 00 00 00	 push	 OFFSET ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  0030f	6a 01		 push	 1
  00311	6a 00		 push	 0
  00313	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00316	8b 02		 mov	 eax, DWORD PTR [edx]
  00318	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0031b	51		 push	 ecx
  0031c	8b 90 0c 01 00
	00		 mov	 edx, DWORD PTR [eax+268]
  00322	ff d2		 call	 edx
  00324	3b f4		 cmp	 esi, esp
  00326	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 980
  0032b	8b f4		 mov	 esi, esp
  0032d	68 00 00 00 00	 push	 OFFSET ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  00332	6a 01		 push	 1
  00334	6a 03		 push	 3
  00336	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00339	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033b	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0033e	52		 push	 edx
  0033f	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  00345	ff d0		 call	 eax
  00347	3b f4		 cmp	 esi, esp
  00349	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 981
  0034e	8b f4		 mov	 esi, esp
  00350	68 00 00 00 00	 push	 OFFSET ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
  00355	6a 01		 push	 1
  00357	6a 04		 push	 4
  00359	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0035c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0035e	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00361	50		 push	 eax
  00362	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  00368	ff d1		 call	 ecx
  0036a	3b f4		 cmp	 esi, esp
  0036c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 984
  00371	8b f4		 mov	 esi, esp
  00373	8d 55 f8	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  00376	52		 push	 edx
  00377	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  0037c	6a 01		 push	 1
  0037e	6a 00		 push	 0
  00380	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00383	8b 08		 mov	 ecx, DWORD PTR [eax]
  00385	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00388	52		 push	 edx
  00389	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  0038f	ff d0		 call	 eax
  00391	3b f4		 cmp	 esi, esp
  00393	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 985
  00398	8b f4		 mov	 esi, esp
  0039a	6a 00		 push	 0
  0039c	6a 00		 push	 0
  0039e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
  003a4	51		 push	 ecx
  003a5	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  003a8	8b 02		 mov	 eax, DWORD PTR [edx]
  003aa	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  003ad	51		 push	 ecx
  003ae	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  003b4	ff d2		 call	 edx
  003b6	3b f4		 cmp	 esi, esp
  003b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 986
  003bd	8b f4		 mov	 esi, esp
  003bf	6a 01		 push	 1
  003c1	6a 01		 push	 1
  003c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  003c8	c1 e8 08	 shr	 eax, 8
  003cb	50		 push	 eax
  003cc	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  003cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  003d1	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  003d4	50		 push	 eax
  003d5	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  003db	ff d1		 call	 ecx
  003dd	3b f4		 cmp	 esi, esp
  003df	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 989
  003e4	8b f4		 mov	 esi, esp
  003e6	8d 55 f8	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  003e9	52		 push	 edx
  003ea	68 00 00 00 00	 push	 OFFSET ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  003ef	6a 01		 push	 1
  003f1	6a 00		 push	 0
  003f3	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  003f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f8	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  003fb	52		 push	 edx
  003fc	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  00402	ff d0		 call	 eax
  00404	3b f4		 cmp	 esi, esp
  00406	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 990
  0040b	8b f4		 mov	 esi, esp
  0040d	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  00412	6a 01		 push	 1
  00414	6a 01		 push	 1
  00416	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00419	8b 11		 mov	 edx, DWORD PTR [ecx]
  0041b	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0041e	50		 push	 eax
  0041f	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  00425	ff d1		 call	 ecx
  00427	3b f4		 cmp	 esi, esp
  00429	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 991
  0042e	8b f4		 mov	 esi, esp
  00430	6a 00		 push	 0
  00432	6a 00		 push	 0
  00434	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
  0043a	52		 push	 edx
  0043b	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0043e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00440	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00443	52		 push	 edx
  00444	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  0044a	ff d0		 call	 eax
  0044c	3b f4		 cmp	 esi, esp
  0044e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 992
  00453	8b f4		 mov	 esi, esp
  00455	6a 01		 push	 1
  00457	6a 01		 push	 1
  00459	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  0045f	c1 e9 08	 shr	 ecx, 8
  00462	51		 push	 ecx
  00463	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00466	8b 02		 mov	 eax, DWORD PTR [edx]
  00468	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0046b	51		 push	 ecx
  0046c	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  00472	ff d2		 call	 edx
  00474	3b f4		 cmp	 esi, esp
  00476	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 995
  0047b	8b f4		 mov	 esi, esp
  0047d	8d 45 f8	 lea	 eax, DWORD PTR _UAVInitialCounts$[ebp]
  00480	50		 push	 eax
  00481	68 00 00 00 00	 push	 OFFSET ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  00486	6a 01		 push	 1
  00488	6a 00		 push	 0
  0048a	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0048d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0048f	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00492	50		 push	 eax
  00493	8b 8a 10 01 00
	00		 mov	 ecx, DWORD PTR [edx+272]
  00499	ff d1		 call	 ecx
  0049b	3b f4		 cmp	 esi, esp
  0049d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 996
  004a2	8b f4		 mov	 esi, esp
  004a4	68 00 00 00 00	 push	 OFFSET ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  004a9	6a 01		 push	 1
  004ab	6a 02		 push	 2
  004ad	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  004b0	8b 02		 mov	 eax, DWORD PTR [edx]
  004b2	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  004b5	51		 push	 ecx
  004b6	8b 90 0c 01 00
	00		 mov	 edx, DWORD PTR [eax+268]
  004bc	ff d2		 call	 edx
  004be	3b f4		 cmp	 esi, esp
  004c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 997
  004c5	8b f4		 mov	 esi, esp
  004c7	6a 00		 push	 0
  004c9	6a 00		 push	 0
  004cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
  004d0	50		 push	 eax
  004d1	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  004d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  004d6	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  004d9	50		 push	 eax
  004da	8b 8a 14 01 00
	00		 mov	 ecx, DWORD PTR [edx+276]
  004e0	ff d1		 call	 ecx
  004e2	3b f4		 cmp	 esi, esp
  004e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 998
  004e9	8b f4		 mov	 esi, esp
  004eb	6a 01		 push	 1
  004ed	6a 01		 push	 1
  004ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  004f5	c1 ea 08	 shr	 edx, 8
  004f8	52		 push	 edx
  004f9	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  004fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  004fe	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00501	52		 push	 edx
  00502	8b 81 a4 00 00
	00		 mov	 eax, DWORD PTR [ecx+164]
  00508	ff d0		 call	 eax
  0050a	3b f4		 cmp	 esi, esp
  0050c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 999
  00511	52		 push	 edx
  00512	8b cd		 mov	 ecx, ebp
  00514	50		 push	 eax
  00515	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SimulateFl
  0051b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00520	58		 pop	 eax
  00521	5a		 pop	 edx
  00522	5e		 pop	 esi
  00523	83 c4 0c	 add	 esp, 12			; 0000000cH
  00526	3b ec		 cmp	 ebp, esp
  00528	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0052d	8b e5		 mov	 esp, ebp
  0052f	5d		 pop	 ebp
  00530	c3		 ret	 0
  00531	8d 49 00	 npad	 3
$LN5@SimulateFl:
  00534	01 00 00 00	 DD	 1
  00538	00 00 00 00	 DD	 $LN4@SimulateFl
$LN4@SimulateFl:
  0053c	f8 ff ff ff	 DD	 -8			; fffffff8H
  00540	04 00 00 00	 DD	 4
  00544	00 00 00 00	 DD	 $LN3@SimulateFl
$LN3@SimulateFl:
  00548	55		 DB	 85			; 00000055H
  00549	41		 DB	 65			; 00000041H
  0054a	56		 DB	 86			; 00000056H
  0054b	49		 DB	 73			; 00000049H
  0054c	6e		 DB	 110			; 0000006eH
  0054d	69		 DB	 105			; 00000069H
  0054e	74		 DB	 116			; 00000074H
  0054f	69		 DB	 105			; 00000069H
  00550	61		 DB	 97			; 00000061H
  00551	6c		 DB	 108			; 0000006cH
  00552	43		 DB	 67			; 00000043H
  00553	6f		 DB	 111			; 0000006fH
  00554	75		 DB	 117			; 00000075H
  00555	6e		 DB	 110			; 0000006eH
  00556	74		 DB	 116			; 00000074H
  00557	73		 DB	 115			; 00000073H
  00558	00		 DB	 0
?SimulateFluid_Grid@@YAXPAUID3D11DeviceContext@@@Z ENDP	; SimulateFluid_Grid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_UAVInitialCounts$ = -8					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?SimulateFluid_Shared@@YAXPAUID3D11DeviceContext@@@Z PROC ; SimulateFluid_Shared
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 902
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 903
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 906
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  0002a	6a 01		 push	 1
  0002c	6a 00		 push	 0
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00036	52		 push	 edx
  00037	8b 81 1c 01 00
	00		 mov	 eax, DWORD PTR [ecx+284]
  0003d	ff d0		 call	 eax
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 907
  00046	8b f4		 mov	 esi, esp
  00048	68 00 00 00 00	 push	 OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  0004d	6a 01		 push	 1
  0004f	6a 00		 push	 0
  00051	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00054	8b 11		 mov	 edx, DWORD PTR [ecx]
  00056	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00059	50		 push	 eax
  0005a	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  00060	ff d1		 call	 ecx
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 910
  00069	8b f4		 mov	 esi, esp
  0006b	8d 55 f8	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  00074	6a 01		 push	 1
  00076	6a 00		 push	 0
  00078	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0007b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00080	52		 push	 edx
  00081	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  00087	ff d0		 call	 eax
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 911
  00090	8b f4		 mov	 esi, esp
  00092	6a 00		 push	 0
  00094	6a 00		 push	 0
  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
  0009c	51		 push	 ecx
  0009d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000a0	8b 02		 mov	 eax, DWORD PTR [edx]
  000a2	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000a5	51		 push	 ecx
  000a6	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  000ac	ff d2		 call	 edx
  000ae	3b f4		 cmp	 esi, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 912
  000b5	8b f4		 mov	 esi, esp
  000b7	6a 01		 push	 1
  000b9	6a 01		 push	 1
  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  000c0	c1 e8 08	 shr	 eax, 8
  000c3	50		 push	 eax
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c9	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000cc	50		 push	 eax
  000cd	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  000d3	ff d1		 call	 ecx
  000d5	3b f4		 cmp	 esi, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 915
  000dc	8b f4		 mov	 esi, esp
  000de	8d 55 f8	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  000e1	52		 push	 edx
  000e2	68 00 00 00 00	 push	 OFFSET ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  000e7	6a 01		 push	 1
  000e9	6a 00		 push	 0
  000eb	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f0	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000f3	52		 push	 edx
  000f4	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  000fa	ff d0		 call	 eax
  000fc	3b f4		 cmp	 esi, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 916
  00103	8b f4		 mov	 esi, esp
  00105	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  0010a	6a 01		 push	 1
  0010c	6a 01		 push	 1
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00116	50		 push	 eax
  00117	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  0011d	ff d1		 call	 ecx
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 917
  00126	8b f4		 mov	 esi, esp
  00128	6a 00		 push	 0
  0012a	6a 00		 push	 0
  0012c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
  00132	52		 push	 edx
  00133	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0013b	52		 push	 edx
  0013c	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  00142	ff d0		 call	 eax
  00144	3b f4		 cmp	 esi, esp
  00146	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 918
  0014b	8b f4		 mov	 esi, esp
  0014d	6a 01		 push	 1
  0014f	6a 01		 push	 1
  00151	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00157	c1 e9 08	 shr	 ecx, 8
  0015a	51		 push	 ecx
  0015b	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0015e	8b 02		 mov	 eax, DWORD PTR [edx]
  00160	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00163	51		 push	 ecx
  00164	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  0016a	ff d2		 call	 edx
  0016c	3b f4		 cmp	 esi, esp
  0016e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 921
  00173	8b f4		 mov	 esi, esp
  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
  0017a	50		 push	 eax
  0017b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
  00181	51		 push	 ecx
  00182	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00185	8b 02		 mov	 eax, DWORD PTR [edx]
  00187	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0018a	51		 push	 ecx
  0018b	8b 90 bc 00 00
	00		 mov	 edx, DWORD PTR [eax+188]
  00191	ff d2		 call	 edx
  00193	3b f4		 cmp	 esi, esp
  00195	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 922
  0019a	8b f4		 mov	 esi, esp
  0019c	68 00 00 00 00	 push	 OFFSET ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  001a1	6a 01		 push	 1
  001a3	6a 00		 push	 0
  001a5	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  001a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001aa	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001ad	52		 push	 edx
  001ae	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  001b4	ff d0		 call	 eax
  001b6	3b f4		 cmp	 esi, esp
  001b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 923
  001bd	8b f4		 mov	 esi, esp
  001bf	8d 4d f8	 lea	 ecx, DWORD PTR _UAVInitialCounts$[ebp]
  001c2	51		 push	 ecx
  001c3	68 00 00 00 00	 push	 OFFSET ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  001c8	6a 01		 push	 1
  001ca	6a 00		 push	 0
  001cc	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001cf	8b 02		 mov	 eax, DWORD PTR [edx]
  001d1	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  001d4	51		 push	 ecx
  001d5	8b 90 10 01 00
	00		 mov	 edx, DWORD PTR [eax+272]
  001db	ff d2		 call	 edx
  001dd	3b f4		 cmp	 esi, esp
  001df	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 924
  001e4	8b f4		 mov	 esi, esp
  001e6	68 00 00 00 00	 push	 OFFSET ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  001eb	6a 01		 push	 1
  001ed	6a 02		 push	 2
  001ef	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  001f2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f4	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001f7	52		 push	 edx
  001f8	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  001fe	ff d0		 call	 eax
  00200	3b f4		 cmp	 esi, esp
  00202	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 925
  00207	8b f4		 mov	 esi, esp
  00209	6a 00		 push	 0
  0020b	6a 00		 push	 0
  0020d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
  00213	51		 push	 ecx
  00214	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00217	8b 02		 mov	 eax, DWORD PTR [edx]
  00219	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0021c	51		 push	 ecx
  0021d	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  00223	ff d2		 call	 edx
  00225	3b f4		 cmp	 esi, esp
  00227	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 926
  0022c	8b f4		 mov	 esi, esp
  0022e	6a 01		 push	 1
  00230	6a 01		 push	 1
  00232	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00237	c1 e8 08	 shr	 eax, 8
  0023a	50		 push	 eax
  0023b	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0023e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00240	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00243	50		 push	 eax
  00244	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  0024a	ff d1		 call	 ecx
  0024c	3b f4		 cmp	 esi, esp
  0024e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 927
  00253	52		 push	 edx
  00254	8b cd		 mov	 ecx, ebp
  00256	50		 push	 eax
  00257	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SimulateFl
  0025d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00262	58		 pop	 eax
  00263	5a		 pop	 edx
  00264	5e		 pop	 esi
  00265	83 c4 0c	 add	 esp, 12			; 0000000cH
  00268	3b ec		 cmp	 ebp, esp
  0026a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0026f	8b e5		 mov	 esp, ebp
  00271	5d		 pop	 ebp
  00272	c3		 ret	 0
  00273	90		 npad	 1
$LN5@SimulateFl:
  00274	01 00 00 00	 DD	 1
  00278	00 00 00 00	 DD	 $LN4@SimulateFl
$LN4@SimulateFl:
  0027c	f8 ff ff ff	 DD	 -8			; fffffff8H
  00280	04 00 00 00	 DD	 4
  00284	00 00 00 00	 DD	 $LN3@SimulateFl
$LN3@SimulateFl:
  00288	55		 DB	 85			; 00000055H
  00289	41		 DB	 65			; 00000041H
  0028a	56		 DB	 86			; 00000056H
  0028b	49		 DB	 73			; 00000049H
  0028c	6e		 DB	 110			; 0000006eH
  0028d	69		 DB	 105			; 00000069H
  0028e	74		 DB	 116			; 00000074H
  0028f	69		 DB	 105			; 00000069H
  00290	61		 DB	 97			; 00000061H
  00291	6c		 DB	 108			; 0000006cH
  00292	43		 DB	 67			; 00000043H
  00293	6f		 DB	 111			; 0000006fH
  00294	75		 DB	 117			; 00000075H
  00295	6e		 DB	 110			; 0000006eH
  00296	74		 DB	 116			; 00000074H
  00297	73		 DB	 115			; 00000073H
  00298	00		 DB	 0
?SimulateFluid_Shared@@YAXPAUID3D11DeviceContext@@@Z ENDP ; SimulateFluid_Shared
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_UAVInitialCounts$ = -8					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
?SimulateFluid_Simple@@YAXPAUID3D11DeviceContext@@@Z PROC ; SimulateFluid_Simple
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 870
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 871
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _UAVInitialCounts$[ebp], 0
; Line 874
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  0002a	6a 01		 push	 1
  0002c	6a 00		 push	 0
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00036	52		 push	 edx
  00037	8b 81 1c 01 00
	00		 mov	 eax, DWORD PTR [ecx+284]
  0003d	ff d0		 call	 eax
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 875
  00046	8b f4		 mov	 esi, esp
  00048	68 00 00 00 00	 push	 OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  0004d	6a 01		 push	 1
  0004f	6a 00		 push	 0
  00051	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00054	8b 11		 mov	 edx, DWORD PTR [ecx]
  00056	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00059	50		 push	 eax
  0005a	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  00060	ff d1		 call	 ecx
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 878
  00069	8b f4		 mov	 esi, esp
  0006b	8d 55 f8	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  00074	6a 01		 push	 1
  00076	6a 00		 push	 0
  00078	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0007b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00080	52		 push	 edx
  00081	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  00087	ff d0		 call	 eax
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 879
  00090	8b f4		 mov	 esi, esp
  00092	6a 00		 push	 0
  00094	6a 00		 push	 0
  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
  0009c	51		 push	 ecx
  0009d	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000a0	8b 02		 mov	 eax, DWORD PTR [edx]
  000a2	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000a5	51		 push	 ecx
  000a6	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  000ac	ff d2		 call	 edx
  000ae	3b f4		 cmp	 esi, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 880
  000b5	8b f4		 mov	 esi, esp
  000b7	6a 01		 push	 1
  000b9	6a 01		 push	 1
  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  000c0	c1 e8 08	 shr	 eax, 8
  000c3	50		 push	 eax
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c9	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000cc	50		 push	 eax
  000cd	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  000d3	ff d1		 call	 ecx
  000d5	3b f4		 cmp	 esi, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 883
  000dc	8b f4		 mov	 esi, esp
  000de	8d 55 f8	 lea	 edx, DWORD PTR _UAVInitialCounts$[ebp]
  000e1	52		 push	 edx
  000e2	68 00 00 00 00	 push	 OFFSET ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  000e7	6a 01		 push	 1
  000e9	6a 00		 push	 0
  000eb	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f0	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000f3	52		 push	 edx
  000f4	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  000fa	ff d0		 call	 eax
  000fc	3b f4		 cmp	 esi, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 884
  00103	8b f4		 mov	 esi, esp
  00105	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  0010a	6a 01		 push	 1
  0010c	6a 01		 push	 1
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00116	50		 push	 eax
  00117	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  0011d	ff d1		 call	 ecx
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 885
  00126	8b f4		 mov	 esi, esp
  00128	6a 00		 push	 0
  0012a	6a 00		 push	 0
  0012c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
  00132	52		 push	 edx
  00133	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00136	8b 08		 mov	 ecx, DWORD PTR [eax]
  00138	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0013b	52		 push	 edx
  0013c	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  00142	ff d0		 call	 eax
  00144	3b f4		 cmp	 esi, esp
  00146	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 886
  0014b	8b f4		 mov	 esi, esp
  0014d	6a 01		 push	 1
  0014f	6a 01		 push	 1
  00151	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00157	c1 e9 08	 shr	 ecx, 8
  0015a	51		 push	 ecx
  0015b	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0015e	8b 02		 mov	 eax, DWORD PTR [edx]
  00160	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00163	51		 push	 ecx
  00164	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  0016a	ff d2		 call	 edx
  0016c	3b f4		 cmp	 esi, esp
  0016e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 889
  00173	8b f4		 mov	 esi, esp
  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
  0017a	50		 push	 eax
  0017b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
  00181	51		 push	 ecx
  00182	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00185	8b 02		 mov	 eax, DWORD PTR [edx]
  00187	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0018a	51		 push	 ecx
  0018b	8b 90 bc 00 00
	00		 mov	 edx, DWORD PTR [eax+188]
  00191	ff d2		 call	 edx
  00193	3b f4		 cmp	 esi, esp
  00195	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 890
  0019a	8b f4		 mov	 esi, esp
  0019c	68 00 00 00 00	 push	 OFFSET ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  001a1	6a 01		 push	 1
  001a3	6a 00		 push	 0
  001a5	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  001a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001aa	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001ad	52		 push	 edx
  001ae	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  001b4	ff d0		 call	 eax
  001b6	3b f4		 cmp	 esi, esp
  001b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 891
  001bd	8b f4		 mov	 esi, esp
  001bf	8d 4d f8	 lea	 ecx, DWORD PTR _UAVInitialCounts$[ebp]
  001c2	51		 push	 ecx
  001c3	68 00 00 00 00	 push	 OFFSET ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  001c8	6a 01		 push	 1
  001ca	6a 00		 push	 0
  001cc	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001cf	8b 02		 mov	 eax, DWORD PTR [edx]
  001d1	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  001d4	51		 push	 ecx
  001d5	8b 90 10 01 00
	00		 mov	 edx, DWORD PTR [eax+272]
  001db	ff d2		 call	 edx
  001dd	3b f4		 cmp	 esi, esp
  001df	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 892
  001e4	8b f4		 mov	 esi, esp
  001e6	68 00 00 00 00	 push	 OFFSET ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  001eb	6a 01		 push	 1
  001ed	6a 02		 push	 2
  001ef	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  001f2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f4	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001f7	52		 push	 edx
  001f8	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  001fe	ff d0		 call	 eax
  00200	3b f4		 cmp	 esi, esp
  00202	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 893
  00207	8b f4		 mov	 esi, esp
  00209	6a 00		 push	 0
  0020b	6a 00		 push	 0
  0020d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
  00213	51		 push	 ecx
  00214	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00217	8b 02		 mov	 eax, DWORD PTR [edx]
  00219	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0021c	51		 push	 ecx
  0021d	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  00223	ff d2		 call	 edx
  00225	3b f4		 cmp	 esi, esp
  00227	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 894
  0022c	8b f4		 mov	 esi, esp
  0022e	6a 01		 push	 1
  00230	6a 01		 push	 1
  00232	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00237	c1 e8 08	 shr	 eax, 8
  0023a	50		 push	 eax
  0023b	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0023e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00240	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00243	50		 push	 eax
  00244	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  0024a	ff d1		 call	 ecx
  0024c	3b f4		 cmp	 esi, esp
  0024e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 895
  00253	52		 push	 edx
  00254	8b cd		 mov	 ecx, ebp
  00256	50		 push	 eax
  00257	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SimulateFl
  0025d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00262	58		 pop	 eax
  00263	5a		 pop	 edx
  00264	5e		 pop	 esi
  00265	83 c4 0c	 add	 esp, 12			; 0000000cH
  00268	3b ec		 cmp	 ebp, esp
  0026a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0026f	8b e5		 mov	 esp, ebp
  00271	5d		 pop	 ebp
  00272	c3		 ret	 0
  00273	90		 npad	 1
$LN5@SimulateFl:
  00274	01 00 00 00	 DD	 1
  00278	00 00 00 00	 DD	 $LN4@SimulateFl
$LN4@SimulateFl:
  0027c	f8 ff ff ff	 DD	 -8			; fffffff8H
  00280	04 00 00 00	 DD	 4
  00284	00 00 00 00	 DD	 $LN3@SimulateFl
$LN3@SimulateFl:
  00288	55		 DB	 85			; 00000055H
  00289	41		 DB	 65			; 00000041H
  0028a	56		 DB	 86			; 00000056H
  0028b	49		 DB	 73			; 00000049H
  0028c	6e		 DB	 110			; 0000006eH
  0028d	69		 DB	 105			; 00000069H
  0028e	74		 DB	 116			; 00000074H
  0028f	69		 DB	 105			; 00000069H
  00290	61		 DB	 97			; 00000061H
  00291	6c		 DB	 108			; 0000006cH
  00292	43		 DB	 67			; 00000043H
  00293	6f		 DB	 111			; 0000006fH
  00294	75		 DB	 117			; 00000075H
  00295	6e		 DB	 110			; 0000006eH
  00296	74		 DB	 116			; 00000074H
  00297	73		 DB	 115			; 00000073H
  00298	00		 DB	 0
?SimulateFluid_Simple@@YAXPAUID3D11DeviceContext@@@Z ENDP ; SimulateFluid_Simple
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_constants2$1 = -128					; size = 16
_UAVInitialCounts$2 = -104				; size = 4
_pViewNULL$3 = -92					; size = 4
_constants1$4 = -80					; size = 16
_level$5 = -60						; size = 4
_UAVInitialCounts$6 = -52				; size = 4
_constants$7 = -40					; size = 16
_level$8 = -20						; size = 4
_MATRIX_HEIGHT$ = -16					; size = 4
_MATRIX_WIDTH$ = -12					; size = 4
_NUM_ELEMENTS$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dImmediateContext$ = 8				; size = 4
_inUAV$ = 12						; size = 4
_inSRV$ = 16						; size = 4
_tempUAV$ = 20						; size = 4
_tempSRV$ = 24						; size = 4
?GPUSort@@YAXPAUID3D11DeviceContext@@PAUID3D11UnorderedAccessView@@PAUID3D11ShaderResourceView@@12@Z PROC ; GPUSort
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 807
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd 7c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-132]
  00011	b9 21 00 00 00	 mov	 ecx, 33			; 00000021H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 808
  00027	8b f4		 mov	 esi, esp
  00029	68 00 00 00 00	 push	 OFFSET ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
  0002e	6a 01		 push	 1
  00030	6a 00		 push	 0
  00032	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0003a	52		 push	 edx
  0003b	8b 81 1c 01 00
	00		 mov	 eax, DWORD PTR [ecx+284]
  00041	ff d0		 call	 eax
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 810
  0004a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00050	89 4d f8	 mov	 DWORD PTR _NUM_ELEMENTS$[ebp], ecx
; Line 811
  00053	c7 45 f4 00 01
	00 00		 mov	 DWORD PTR _MATRIX_WIDTH$[ebp], 256 ; 00000100H
; Line 812
  0005a	8b 55 f8	 mov	 edx, DWORD PTR _NUM_ELEMENTS$[ebp]
  0005d	c1 ea 08	 shr	 edx, 8
  00060	89 55 f0	 mov	 DWORD PTR _MATRIX_HEIGHT$[ebp], edx
; Line 816
  00063	c7 45 ec 02 00
	00 00		 mov	 DWORD PTR _level$8[ebp], 2
  0006a	eb 08		 jmp	 SHORT $LN6@GPUSort
$LN5@GPUSort:
  0006c	8b 45 ec	 mov	 eax, DWORD PTR _level$8[ebp]
  0006f	d1 e0		 shl	 eax, 1
  00071	89 45 ec	 mov	 DWORD PTR _level$8[ebp], eax
$LN6@GPUSort:
  00074	81 7d ec 00 01
	00 00		 cmp	 DWORD PTR _level$8[ebp], 256 ; 00000100H
  0007b	0f 87 c2 00 00
	00		 ja	 $LN4@GPUSort
; Line 818
  00081	8b 4d ec	 mov	 ecx, DWORD PTR _level$8[ebp]
  00084	89 4d d8	 mov	 DWORD PTR _constants$7[ebp], ecx
  00087	8b 55 ec	 mov	 edx, DWORD PTR _level$8[ebp]
  0008a	89 55 dc	 mov	 DWORD PTR _constants$7[ebp+4], edx
  0008d	8b 45 f0	 mov	 eax, DWORD PTR _MATRIX_HEIGHT$[ebp]
  00090	89 45 e0	 mov	 DWORD PTR _constants$7[ebp+8], eax
  00093	c7 45 e4 00 01
	00 00		 mov	 DWORD PTR _constants$7[ebp+12], 256 ; 00000100H
; Line 819
  0009a	8b f4		 mov	 esi, esp
  0009c	6a 00		 push	 0
  0009e	6a 00		 push	 0
  000a0	8d 4d d8	 lea	 ecx, DWORD PTR _constants$7[ebp]
  000a3	51		 push	 ecx
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
  000ae	52		 push	 edx
  000af	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b4	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000b7	52		 push	 edx
  000b8	8b 81 c0 00 00
	00		 mov	 eax, DWORD PTR [ecx+192]
  000be	ff d0		 call	 eax
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 822
  000c7	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _UAVInitialCounts$6[ebp], 0
; Line 823
  000ce	8b f4		 mov	 esi, esp
  000d0	8d 4d cc	 lea	 ecx, DWORD PTR _UAVInitialCounts$6[ebp]
  000d3	51		 push	 ecx
  000d4	8d 55 0c	 lea	 edx, DWORD PTR _inUAV$[ebp]
  000d7	52		 push	 edx
  000d8	6a 01		 push	 1
  000da	6a 00		 push	 0
  000dc	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000df	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e1	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000e4	52		 push	 edx
  000e5	8b 81 10 01 00
	00		 mov	 eax, DWORD PTR [ecx+272]
  000eb	ff d0		 call	 eax
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 824
  000f4	8b f4		 mov	 esi, esp
  000f6	6a 00		 push	 0
  000f8	6a 00		 push	 0
  000fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
  00100	51		 push	 ecx
  00101	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  00104	8b 02		 mov	 eax, DWORD PTR [edx]
  00106	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00109	51		 push	 ecx
  0010a	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  00110	ff d2		 call	 edx
  00112	3b f4		 cmp	 esi, esp
  00114	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 825
  00119	8b f4		 mov	 esi, esp
  0011b	6a 01		 push	 1
  0011d	6a 01		 push	 1
  0011f	8b 45 f8	 mov	 eax, DWORD PTR _NUM_ELEMENTS$[ebp]
  00122	c1 e8 08	 shr	 eax, 8
  00125	50		 push	 eax
  00126	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00129	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012b	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0012e	50		 push	 eax
  0012f	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  00135	ff d1		 call	 ecx
  00137	3b f4		 cmp	 esi, esp
  00139	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 827
  0013e	e9 29 ff ff ff	 jmp	 $LN5@GPUSort
$LN4@GPUSort:
; Line 831
  00143	c7 45 c4 00 02
	00 00		 mov	 DWORD PTR _level$5[ebp], 512 ; 00000200H
  0014a	eb 08		 jmp	 SHORT $LN3@GPUSort
$LN2@GPUSort:
  0014c	8b 55 c4	 mov	 edx, DWORD PTR _level$5[ebp]
  0014f	d1 e2		 shl	 edx, 1
  00151	89 55 c4	 mov	 DWORD PTR _level$5[ebp], edx
$LN3@GPUSort:
  00154	8b 45 c4	 mov	 eax, DWORD PTR _level$5[ebp]
  00157	3b 45 f8	 cmp	 eax, DWORD PTR _NUM_ELEMENTS$[ebp]
  0015a	0f 87 a6 02 00
	00		 ja	 $LN7@GPUSort
; Line 833
  00160	8b 4d c4	 mov	 ecx, DWORD PTR _level$5[ebp]
  00163	c1 e9 08	 shr	 ecx, 8
  00166	89 4d b0	 mov	 DWORD PTR _constants1$4[ebp], ecx
  00169	8b 55 f8	 mov	 edx, DWORD PTR _NUM_ELEMENTS$[ebp]
  0016c	f7 d2		 not	 edx
  0016e	23 55 c4	 and	 edx, DWORD PTR _level$5[ebp]
  00171	c1 ea 08	 shr	 edx, 8
  00174	89 55 b4	 mov	 DWORD PTR _constants1$4[ebp+4], edx
  00177	c7 45 b8 00 01
	00 00		 mov	 DWORD PTR _constants1$4[ebp+8], 256 ; 00000100H
  0017e	8b 45 f0	 mov	 eax, DWORD PTR _MATRIX_HEIGHT$[ebp]
  00181	89 45 bc	 mov	 DWORD PTR _constants1$4[ebp+12], eax
; Line 834
  00184	8b f4		 mov	 esi, esp
  00186	6a 00		 push	 0
  00188	6a 00		 push	 0
  0018a	8d 4d b0	 lea	 ecx, DWORD PTR _constants1$4[ebp]
  0018d	51		 push	 ecx
  0018e	6a 00		 push	 0
  00190	6a 00		 push	 0
  00192	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
  00198	52		 push	 edx
  00199	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0019c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019e	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001a1	52		 push	 edx
  001a2	8b 81 c0 00 00
	00		 mov	 eax, DWORD PTR [ecx+192]
  001a8	ff d0		 call	 eax
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 837
  001b1	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _pViewNULL$3[ebp], 0
; Line 838
  001b8	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _UAVInitialCounts$2[ebp], 0
; Line 839
  001bf	8b f4		 mov	 esi, esp
  001c1	8d 4d a4	 lea	 ecx, DWORD PTR _pViewNULL$3[ebp]
  001c4	51		 push	 ecx
  001c5	6a 01		 push	 1
  001c7	6a 00		 push	 0
  001c9	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001cc	8b 02		 mov	 eax, DWORD PTR [edx]
  001ce	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  001d1	51		 push	 ecx
  001d2	8b 90 0c 01 00
	00		 mov	 edx, DWORD PTR [eax+268]
  001d8	ff d2		 call	 edx
  001da	3b f4		 cmp	 esi, esp
  001dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 840
  001e1	8b f4		 mov	 esi, esp
  001e3	8d 45 98	 lea	 eax, DWORD PTR _UAVInitialCounts$2[ebp]
  001e6	50		 push	 eax
  001e7	8d 4d 14	 lea	 ecx, DWORD PTR _tempUAV$[ebp]
  001ea	51		 push	 ecx
  001eb	6a 01		 push	 1
  001ed	6a 00		 push	 0
  001ef	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  001f2	8b 02		 mov	 eax, DWORD PTR [edx]
  001f4	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  001f7	51		 push	 ecx
  001f8	8b 90 10 01 00
	00		 mov	 edx, DWORD PTR [eax+272]
  001fe	ff d2		 call	 edx
  00200	3b f4		 cmp	 esi, esp
  00202	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 841
  00207	8b f4		 mov	 esi, esp
  00209	8d 45 10	 lea	 eax, DWORD PTR _inSRV$[ebp]
  0020c	50		 push	 eax
  0020d	6a 01		 push	 1
  0020f	6a 00		 push	 0
  00211	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00214	8b 11		 mov	 edx, DWORD PTR [ecx]
  00216	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00219	50		 push	 eax
  0021a	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  00220	ff d1		 call	 ecx
  00222	3b f4		 cmp	 esi, esp
  00224	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 842
  00229	8b f4		 mov	 esi, esp
  0022b	6a 00		 push	 0
  0022d	6a 00		 push	 0
  0022f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
  00235	52		 push	 edx
  00236	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00239	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023b	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0023e	52		 push	 edx
  0023f	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  00245	ff d0		 call	 eax
  00247	3b f4		 cmp	 esi, esp
  00249	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 843
  0024e	8b f4		 mov	 esi, esp
  00250	6a 01		 push	 1
  00252	8b 4d f0	 mov	 ecx, DWORD PTR _MATRIX_HEIGHT$[ebp]
  00255	c1 e9 04	 shr	 ecx, 4
  00258	51		 push	 ecx
  00259	6a 10		 push	 16			; 00000010H
  0025b	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0025e	8b 02		 mov	 eax, DWORD PTR [edx]
  00260	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00263	51		 push	 ecx
  00264	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  0026a	ff d2		 call	 edx
  0026c	3b f4		 cmp	 esi, esp
  0026e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 846
  00273	8b f4		 mov	 esi, esp
  00275	6a 00		 push	 0
  00277	6a 00		 push	 0
  00279	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
  0027e	50		 push	 eax
  0027f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00282	8b 11		 mov	 edx, DWORD PTR [ecx]
  00284	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00287	50		 push	 eax
  00288	8b 8a 14 01 00
	00		 mov	 ecx, DWORD PTR [edx+276]
  0028e	ff d1		 call	 ecx
  00290	3b f4		 cmp	 esi, esp
  00292	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 847
  00297	8b f4		 mov	 esi, esp
  00299	6a 01		 push	 1
  0029b	6a 01		 push	 1
  0029d	8b 55 f8	 mov	 edx, DWORD PTR _NUM_ELEMENTS$[ebp]
  002a0	c1 ea 08	 shr	 edx, 8
  002a3	52		 push	 edx
  002a4	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  002a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a9	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  002ac	52		 push	 edx
  002ad	8b 81 a4 00 00
	00		 mov	 eax, DWORD PTR [ecx+164]
  002b3	ff d0		 call	 eax
  002b5	3b f4		 cmp	 esi, esp
  002b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 849
  002bc	c7 45 80 00 01
	00 00		 mov	 DWORD PTR _constants2$1[ebp], 256 ; 00000100H
  002c3	8b 4d c4	 mov	 ecx, DWORD PTR _level$5[ebp]
  002c6	89 4d 84	 mov	 DWORD PTR _constants2$1[ebp+4], ecx
  002c9	8b 55 f0	 mov	 edx, DWORD PTR _MATRIX_HEIGHT$[ebp]
  002cc	89 55 88	 mov	 DWORD PTR _constants2$1[ebp+8], edx
  002cf	c7 45 8c 00 01
	00 00		 mov	 DWORD PTR _constants2$1[ebp+12], 256 ; 00000100H
; Line 850
  002d6	8b f4		 mov	 esi, esp
  002d8	6a 00		 push	 0
  002da	6a 00		 push	 0
  002dc	8d 45 80	 lea	 eax, DWORD PTR _constants2$1[ebp]
  002df	50		 push	 eax
  002e0	6a 00		 push	 0
  002e2	6a 00		 push	 0
  002e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
  002ea	51		 push	 ecx
  002eb	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  002ee	8b 02		 mov	 eax, DWORD PTR [edx]
  002f0	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  002f3	51		 push	 ecx
  002f4	8b 90 c0 00 00
	00		 mov	 edx, DWORD PTR [eax+192]
  002fa	ff d2		 call	 edx
  002fc	3b f4		 cmp	 esi, esp
  002fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 853
  00303	8b f4		 mov	 esi, esp
  00305	8d 45 a4	 lea	 eax, DWORD PTR _pViewNULL$3[ebp]
  00308	50		 push	 eax
  00309	6a 01		 push	 1
  0030b	6a 00		 push	 0
  0030d	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00310	8b 11		 mov	 edx, DWORD PTR [ecx]
  00312	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00315	50		 push	 eax
  00316	8b 8a 0c 01 00
	00		 mov	 ecx, DWORD PTR [edx+268]
  0031c	ff d1		 call	 ecx
  0031e	3b f4		 cmp	 esi, esp
  00320	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 854
  00325	8b f4		 mov	 esi, esp
  00327	8d 55 98	 lea	 edx, DWORD PTR _UAVInitialCounts$2[ebp]
  0032a	52		 push	 edx
  0032b	8d 45 0c	 lea	 eax, DWORD PTR _inUAV$[ebp]
  0032e	50		 push	 eax
  0032f	6a 01		 push	 1
  00331	6a 00		 push	 0
  00333	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00336	8b 11		 mov	 edx, DWORD PTR [ecx]
  00338	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  0033b	50		 push	 eax
  0033c	8b 8a 10 01 00
	00		 mov	 ecx, DWORD PTR [edx+272]
  00342	ff d1		 call	 ecx
  00344	3b f4		 cmp	 esi, esp
  00346	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 855
  0034b	8b f4		 mov	 esi, esp
  0034d	8d 55 18	 lea	 edx, DWORD PTR _tempSRV$[ebp]
  00350	52		 push	 edx
  00351	6a 01		 push	 1
  00353	6a 00		 push	 0
  00355	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00358	8b 08		 mov	 ecx, DWORD PTR [eax]
  0035a	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0035d	52		 push	 edx
  0035e	8b 81 0c 01 00
	00		 mov	 eax, DWORD PTR [ecx+268]
  00364	ff d0		 call	 eax
  00366	3b f4		 cmp	 esi, esp
  00368	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 856
  0036d	8b f4		 mov	 esi, esp
  0036f	6a 00		 push	 0
  00371	6a 00		 push	 0
  00373	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
  00379	51		 push	 ecx
  0037a	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  0037d	8b 02		 mov	 eax, DWORD PTR [edx]
  0037f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  00382	51		 push	 ecx
  00383	8b 90 14 01 00
	00		 mov	 edx, DWORD PTR [eax+276]
  00389	ff d2		 call	 edx
  0038b	3b f4		 cmp	 esi, esp
  0038d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 857
  00392	8b f4		 mov	 esi, esp
  00394	6a 01		 push	 1
  00396	6a 10		 push	 16			; 00000010H
  00398	8b 45 f0	 mov	 eax, DWORD PTR _MATRIX_HEIGHT$[ebp]
  0039b	c1 e8 04	 shr	 eax, 4
  0039e	50		 push	 eax
  0039f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  003a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  003a4	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  003a7	50		 push	 eax
  003a8	8b 8a a4 00 00
	00		 mov	 ecx, DWORD PTR [edx+164]
  003ae	ff d1		 call	 ecx
  003b0	3b f4		 cmp	 esi, esp
  003b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 860
  003b7	8b f4		 mov	 esi, esp
  003b9	6a 00		 push	 0
  003bb	6a 00		 push	 0
  003bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
  003c3	52		 push	 edx
  003c4	8b 45 08	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  003c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c9	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  003cc	52		 push	 edx
  003cd	8b 81 14 01 00
	00		 mov	 eax, DWORD PTR [ecx+276]
  003d3	ff d0		 call	 eax
  003d5	3b f4		 cmp	 esi, esp
  003d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 861
  003dc	8b f4		 mov	 esi, esp
  003de	6a 01		 push	 1
  003e0	6a 01		 push	 1
  003e2	8b 4d f8	 mov	 ecx, DWORD PTR _NUM_ELEMENTS$[ebp]
  003e5	c1 e9 08	 shr	 ecx, 8
  003e8	51		 push	 ecx
  003e9	8b 55 08	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  003ec	8b 02		 mov	 eax, DWORD PTR [edx]
  003ee	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  003f1	51		 push	 ecx
  003f2	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  003f8	ff d2		 call	 edx
  003fa	3b f4		 cmp	 esi, esp
  003fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 862
  00401	e9 46 fd ff ff	 jmp	 $LN2@GPUSort
$LN7@GPUSort:
; Line 863
  00406	52		 push	 edx
  00407	8b cd		 mov	 ecx, ebp
  00409	50		 push	 eax
  0040a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@GPUSort
  00410	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00415	58		 pop	 eax
  00416	5a		 pop	 edx
  00417	5f		 pop	 edi
  00418	5e		 pop	 esi
  00419	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0041c	33 cd		 xor	 ecx, ebp
  0041e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00423	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  00429	3b ec		 cmp	 ebp, esp
  0042b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00430	8b e5		 mov	 esp, ebp
  00432	5d		 pop	 ebp
  00433	c3		 ret	 0
$LN16@GPUSort:
  00434	06 00 00 00	 DD	 6
  00438	00 00 00 00	 DD	 $LN15@GPUSort
$LN15@GPUSort:
  0043c	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00440	10 00 00 00	 DD	 16			; 00000010H
  00444	00 00 00 00	 DD	 $LN9@GPUSort
  00448	cc ff ff ff	 DD	 -52			; ffffffccH
  0044c	04 00 00 00	 DD	 4
  00450	00 00 00 00	 DD	 $LN10@GPUSort
  00454	b0 ff ff ff	 DD	 -80			; ffffffb0H
  00458	10 00 00 00	 DD	 16			; 00000010H
  0045c	00 00 00 00	 DD	 $LN11@GPUSort
  00460	a4 ff ff ff	 DD	 -92			; ffffffa4H
  00464	04 00 00 00	 DD	 4
  00468	00 00 00 00	 DD	 $LN12@GPUSort
  0046c	98 ff ff ff	 DD	 -104			; ffffff98H
  00470	04 00 00 00	 DD	 4
  00474	00 00 00 00	 DD	 $LN13@GPUSort
  00478	80 ff ff ff	 DD	 -128			; ffffff80H
  0047c	10 00 00 00	 DD	 16			; 00000010H
  00480	00 00 00 00	 DD	 $LN14@GPUSort
$LN14@GPUSort:
  00484	63		 DB	 99			; 00000063H
  00485	6f		 DB	 111			; 0000006fH
  00486	6e		 DB	 110			; 0000006eH
  00487	73		 DB	 115			; 00000073H
  00488	74		 DB	 116			; 00000074H
  00489	61		 DB	 97			; 00000061H
  0048a	6e		 DB	 110			; 0000006eH
  0048b	74		 DB	 116			; 00000074H
  0048c	73		 DB	 115			; 00000073H
  0048d	32		 DB	 50			; 00000032H
  0048e	00		 DB	 0
$LN13@GPUSort:
  0048f	55		 DB	 85			; 00000055H
  00490	41		 DB	 65			; 00000041H
  00491	56		 DB	 86			; 00000056H
  00492	49		 DB	 73			; 00000049H
  00493	6e		 DB	 110			; 0000006eH
  00494	69		 DB	 105			; 00000069H
  00495	74		 DB	 116			; 00000074H
  00496	69		 DB	 105			; 00000069H
  00497	61		 DB	 97			; 00000061H
  00498	6c		 DB	 108			; 0000006cH
  00499	43		 DB	 67			; 00000043H
  0049a	6f		 DB	 111			; 0000006fH
  0049b	75		 DB	 117			; 00000075H
  0049c	6e		 DB	 110			; 0000006eH
  0049d	74		 DB	 116			; 00000074H
  0049e	73		 DB	 115			; 00000073H
  0049f	00		 DB	 0
$LN12@GPUSort:
  004a0	70		 DB	 112			; 00000070H
  004a1	56		 DB	 86			; 00000056H
  004a2	69		 DB	 105			; 00000069H
  004a3	65		 DB	 101			; 00000065H
  004a4	77		 DB	 119			; 00000077H
  004a5	4e		 DB	 78			; 0000004eH
  004a6	55		 DB	 85			; 00000055H
  004a7	4c		 DB	 76			; 0000004cH
  004a8	4c		 DB	 76			; 0000004cH
  004a9	00		 DB	 0
$LN11@GPUSort:
  004aa	63		 DB	 99			; 00000063H
  004ab	6f		 DB	 111			; 0000006fH
  004ac	6e		 DB	 110			; 0000006eH
  004ad	73		 DB	 115			; 00000073H
  004ae	74		 DB	 116			; 00000074H
  004af	61		 DB	 97			; 00000061H
  004b0	6e		 DB	 110			; 0000006eH
  004b1	74		 DB	 116			; 00000074H
  004b2	73		 DB	 115			; 00000073H
  004b3	31		 DB	 49			; 00000031H
  004b4	00		 DB	 0
$LN10@GPUSort:
  004b5	55		 DB	 85			; 00000055H
  004b6	41		 DB	 65			; 00000041H
  004b7	56		 DB	 86			; 00000056H
  004b8	49		 DB	 73			; 00000049H
  004b9	6e		 DB	 110			; 0000006eH
  004ba	69		 DB	 105			; 00000069H
  004bb	74		 DB	 116			; 00000074H
  004bc	69		 DB	 105			; 00000069H
  004bd	61		 DB	 97			; 00000061H
  004be	6c		 DB	 108			; 0000006cH
  004bf	43		 DB	 67			; 00000043H
  004c0	6f		 DB	 111			; 0000006fH
  004c1	75		 DB	 117			; 00000075H
  004c2	6e		 DB	 110			; 0000006eH
  004c3	74		 DB	 116			; 00000074H
  004c4	73		 DB	 115			; 00000073H
  004c5	00		 DB	 0
$LN9@GPUSort:
  004c6	63		 DB	 99			; 00000063H
  004c7	6f		 DB	 111			; 0000006fH
  004c8	6e		 DB	 110			; 0000006eH
  004c9	73		 DB	 115			; 00000073H
  004ca	74		 DB	 116			; 00000074H
  004cb	61		 DB	 97			; 00000061H
  004cc	6e		 DB	 110			; 0000006eH
  004cd	74		 DB	 116			; 00000074H
  004ce	73		 DB	 115			; 00000073H
  004cf	00		 DB	 0
?GPUSort@@YAXPAUID3D11DeviceContext@@PAUID3D11UnorderedAccessView@@PAUID3D11ShaderResourceView@@12@Z ENDP ; GPUSort
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z
_TEXT	SEGMENT
_Desc$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_ppCB$ = 12						; size = 4
??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z PROC ; CreateConstantBuffer<SortCB>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 410
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 411
  00021	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 414
  00028	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+4], 0
; Line 415
  0002f	c7 45 e4 04 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+8], 4
; Line 416
  00036	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+12], 0
; Line 417
  0003d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+16], 0
; Line 418
  00044	c7 45 dc 10 00
	00 00		 mov	 DWORD PTR _Desc$[ebp], 16 ; 00000010H
; Line 419
  0004b	8b f4		 mov	 esi, esp
  0004d	8b 45 0c	 mov	 eax, DWORD PTR _ppCB$[ebp]
  00050	50		 push	 eax
  00051	6a 00		 push	 0
  00053	8d 4d dc	 lea	 ecx, DWORD PTR _Desc$[ebp]
  00056	51		 push	 ecx
  00057	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  0005a	8b 02		 mov	 eax, DWORD PTR [edx]
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0005f	51		 push	 ecx
  00060	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00063	ff d2		 call	 edx
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  0006f	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00073	7d 1c		 jge	 SHORT $LN1@CreateCons
  00075	6a 01		 push	 1
  00077	68 00 00 00 00	 push	 OFFSET $SG191718
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0007f	50		 push	 eax
  00080	68 a3 01 00 00	 push	 419			; 000001a3H
  00085	68 00 00 00 00	 push	 OFFSET $SG191719
  0008a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0008f	eb 03		 jmp	 SHORT $LN2@CreateCons
$LN1@CreateCons:
; Line 421
  00091	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN2@CreateCons:
; Line 422
  00094	52		 push	 edx
  00095	8b cd		 mov	 ecx, ebp
  00097	50		 push	 eax
  00098	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@CreateCons
  0009e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a3	58		 pop	 eax
  000a4	5a		 pop	 edx
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000aa	33 cd		 xor	 ecx, ebp
  000ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b1	83 c4 28	 add	 esp, 40			; 00000028H
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
  000bf	90		 npad	 1
$LN6@CreateCons:
  000c0	01 00 00 00	 DD	 1
  000c4	00 00 00 00	 DD	 $LN5@CreateCons
$LN5@CreateCons:
  000c8	dc ff ff ff	 DD	 -36			; ffffffdcH
  000cc	18 00 00 00	 DD	 24			; 00000018H
  000d0	00 00 00 00	 DD	 $LN4@CreateCons
$LN4@CreateCons:
  000d4	44		 DB	 68			; 00000044H
  000d5	65		 DB	 101			; 00000065H
  000d6	73		 DB	 115			; 00000073H
  000d7	63		 DB	 99			; 00000063H
  000d8	00		 DB	 0
??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ENDP ; CreateConstantBuffer<SortCB>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z
_TEXT	SEGMENT
_Desc$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_ppCB$ = 12						; size = 4
??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z PROC ; CreateConstantBuffer<CBRenderConstants>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 410
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 411
  00021	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 414
  00028	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+4], 0
; Line 415
  0002f	c7 45 e4 04 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+8], 4
; Line 416
  00036	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+12], 0
; Line 417
  0003d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+16], 0
; Line 418
  00044	c7 45 dc 50 00
	00 00		 mov	 DWORD PTR _Desc$[ebp], 80 ; 00000050H
; Line 419
  0004b	8b f4		 mov	 esi, esp
  0004d	8b 45 0c	 mov	 eax, DWORD PTR _ppCB$[ebp]
  00050	50		 push	 eax
  00051	6a 00		 push	 0
  00053	8d 4d dc	 lea	 ecx, DWORD PTR _Desc$[ebp]
  00056	51		 push	 ecx
  00057	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  0005a	8b 02		 mov	 eax, DWORD PTR [edx]
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0005f	51		 push	 ecx
  00060	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00063	ff d2		 call	 edx
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  0006f	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00073	7d 1c		 jge	 SHORT $LN1@CreateCons
  00075	6a 01		 push	 1
  00077	68 00 00 00 00	 push	 OFFSET $SG191708
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0007f	50		 push	 eax
  00080	68 a3 01 00 00	 push	 419			; 000001a3H
  00085	68 00 00 00 00	 push	 OFFSET $SG191709
  0008a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0008f	eb 03		 jmp	 SHORT $LN2@CreateCons
$LN1@CreateCons:
; Line 421
  00091	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN2@CreateCons:
; Line 422
  00094	52		 push	 edx
  00095	8b cd		 mov	 ecx, ebp
  00097	50		 push	 eax
  00098	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@CreateCons
  0009e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a3	58		 pop	 eax
  000a4	5a		 pop	 edx
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000aa	33 cd		 xor	 ecx, ebp
  000ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b1	83 c4 28	 add	 esp, 40			; 00000028H
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
  000bf	90		 npad	 1
$LN6@CreateCons:
  000c0	01 00 00 00	 DD	 1
  000c4	00 00 00 00	 DD	 $LN5@CreateCons
$LN5@CreateCons:
  000c8	dc ff ff ff	 DD	 -36			; ffffffdcH
  000cc	18 00 00 00	 DD	 24			; 00000018H
  000d0	00 00 00 00	 DD	 $LN4@CreateCons
$LN4@CreateCons:
  000d4	44		 DB	 68			; 00000044H
  000d5	65		 DB	 101			; 00000065H
  000d6	73		 DB	 115			; 00000073H
  000d7	63		 DB	 99			; 00000063H
  000d8	00		 DB	 0
??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ENDP ; CreateConstantBuffer<CBRenderConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z
_TEXT	SEGMENT
_Desc$ = -36						; size = 24
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pd3dDevice$ = 8					; size = 4
_ppCB$ = 12						; size = 4
??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z PROC ; CreateConstantBuffer<CBSimulationConstants>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 410
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 411
  00021	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 414
  00028	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+4], 0
; Line 415
  0002f	c7 45 e4 04 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+8], 4
; Line 416
  00036	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+12], 0
; Line 417
  0003d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _Desc$[ebp+16], 0
; Line 418
  00044	c7 45 dc a0 00
	00 00		 mov	 DWORD PTR _Desc$[ebp], 160 ; 000000a0H
; Line 419
  0004b	8b f4		 mov	 esi, esp
  0004d	8b 45 0c	 mov	 eax, DWORD PTR _ppCB$[ebp]
  00050	50		 push	 eax
  00051	6a 00		 push	 0
  00053	8d 4d dc	 lea	 ecx, DWORD PTR _Desc$[ebp]
  00056	51		 push	 ecx
  00057	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  0005a	8b 02		 mov	 eax, DWORD PTR [edx]
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0005f	51		 push	 ecx
  00060	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00063	ff d2		 call	 edx
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	89 45 f8	 mov	 DWORD PTR _hr$[ebp], eax
  0006f	83 7d f8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00073	7d 1c		 jge	 SHORT $LN1@CreateCons
  00075	6a 01		 push	 1
  00077	68 00 00 00 00	 push	 OFFSET $SG191698
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
  0007f	50		 push	 eax
  00080	68 a3 01 00 00	 push	 419			; 000001a3H
  00085	68 00 00 00 00	 push	 OFFSET $SG191699
  0008a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0008f	eb 03		 jmp	 SHORT $LN2@CreateCons
$LN1@CreateCons:
; Line 421
  00091	8b 45 f8	 mov	 eax, DWORD PTR _hr$[ebp]
$LN2@CreateCons:
; Line 422
  00094	52		 push	 edx
  00095	8b cd		 mov	 ecx, ebp
  00097	50		 push	 eax
  00098	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@CreateCons
  0009e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a3	58		 pop	 eax
  000a4	5a		 pop	 edx
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000aa	33 cd		 xor	 ecx, ebp
  000ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b1	83 c4 28	 add	 esp, 40			; 00000028H
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
  000bf	90		 npad	 1
$LN6@CreateCons:
  000c0	01 00 00 00	 DD	 1
  000c4	00 00 00 00	 DD	 $LN5@CreateCons
$LN5@CreateCons:
  000c8	dc ff ff ff	 DD	 -36			; ffffffdcH
  000cc	18 00 00 00	 DD	 24			; 00000018H
  000d0	00 00 00 00	 DD	 $LN4@CreateCons
$LN4@CreateCons:
  000d4	44		 DB	 68			; 00000044H
  000d5	65		 DB	 101			; 00000065H
  000d6	73		 DB	 115			; 00000073H
  000d7	63		 DB	 99			; 00000063H
  000d8	00		 DB	 0
??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ENDP ; CreateConstantBuffer<CBSimulationConstants>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z PROC ; CreateStructuredBuffer<FOO>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 430
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0000e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 431
  00024	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00029	89 45 f8	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 432
  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 436
  00033	33 c0		 xor	 eax, eax
  00035	89 45 d8	 mov	 DWORD PTR _bufferDesc$[ebp], eax
  00038	89 45 dc	 mov	 DWORD PTR _bufferDesc$[ebp+4], eax
  0003b	89 45 e0	 mov	 DWORD PTR _bufferDesc$[ebp+8], eax
  0003e	89 45 e4	 mov	 DWORD PTR _bufferDesc$[ebp+12], eax
  00041	89 45 e8	 mov	 DWORD PTR _bufferDesc$[ebp+16], eax
  00044	89 45 ec	 mov	 DWORD PTR _bufferDesc$[ebp+20], eax
; Line 437
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _iNumElements$[ebp]
  0004a	c1 e1 04	 shl	 ecx, 4
  0004d	89 4d d8	 mov	 DWORD PTR _bufferDesc$[ebp], ecx
; Line 438
  00050	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+4], 0
; Line 440
  00057	0f b6 55 1c	 movzx	 edx, BYTE PTR _read$[ebp]
  0005b	85 d2		 test	 edx, edx
  0005d	74 09		 je	 SHORT $LN5@CreateStru
; Line 441
  0005f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 0
; Line 442
  00066	eb 07		 jmp	 SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 443
  00068	c7 45 e4 00 00
	03 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 196608 ; 00030000H
$LN4@CreateStru:
; Line 445
  0006f	c7 45 e0 88 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+8], 136 ; 00000088H
; Line 446
  00076	c7 45 e8 40 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+16], 64 ; 00000040H
; Line 447
  0007d	c7 45 ec 10 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+20], 16 ; 00000010H
; Line 450
  00084	33 c0		 xor	 eax, eax
  00086	89 45 c4	 mov	 DWORD PTR _bufferInitData$[ebp], eax
  00089	89 45 c8	 mov	 DWORD PTR _bufferInitData$[ebp+4], eax
  0008c	89 45 cc	 mov	 DWORD PTR _bufferInitData$[ebp+8], eax
; Line 451
  0008f	8b 4d 18	 mov	 ecx, DWORD PTR _pInitialData$[ebp]
  00092	89 4d c4	 mov	 DWORD PTR _bufferInitData$[ebp], ecx
; Line 452
  00095	83 7d 18 00	 cmp	 DWORD PTR _pInitialData$[ebp], 0
  00099	74 08		 je	 SHORT $LN8@CreateStru
  0009b	8d 55 c4	 lea	 edx, DWORD PTR _bufferInitData$[ebp]
  0009e	89 55 80	 mov	 DWORD PTR tv80[ebp], edx
  000a1	eb 07		 jmp	 SHORT $LN9@CreateStru
$LN8@CreateStru:
  000a3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d 80	 mov	 ecx, DWORD PTR tv80[ebp]
  000b3	51		 push	 ecx
  000b4	8d 55 d8	 lea	 edx, DWORD PTR _bufferDesc$[ebp]
  000b7	52		 push	 edx
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  000c0	52		 push	 edx
  000c1	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000c4	ff d0		 call	 eax
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000d0	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d4	7d 1f		 jge	 SHORT $LN3@CreateStru
  000d6	6a 01		 push	 1
  000d8	68 00 00 00 00	 push	 OFFSET $SG191676
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  000e0	51		 push	 ecx
  000e1	68 c4 01 00 00	 push	 452			; 000001c4H
  000e6	68 00 00 00 00	 push	 OFFSET $SG191677
  000eb	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000f0	e9 e4 00 00 00	 jmp	 $LN6@CreateStru
$LN3@CreateStru:
; Line 456
  000f5	33 d2		 xor	 edx, edx
  000f7	89 55 a4	 mov	 DWORD PTR _srvDesc$[ebp], edx
  000fa	89 55 a8	 mov	 DWORD PTR _srvDesc$[ebp+4], edx
  000fd	89 55 ac	 mov	 DWORD PTR _srvDesc$[ebp+8], edx
  00100	89 55 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], edx
  00103	89 55 b4	 mov	 DWORD PTR _srvDesc$[ebp+16], edx
  00106	89 55 b8	 mov	 DWORD PTR _srvDesc$[ebp+20], edx
; Line 457
  00109	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp], 0
; Line 458
  00110	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp+4], 1
; Line 459
  00117	8b 45 08	 mov	 eax, DWORD PTR _iNumElements$[ebp]
  0011a	89 45 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], eax
; Line 460
  0011d	8b f4		 mov	 esi, esp
  0011f	8b 4d 10	 mov	 ecx, DWORD PTR _ppSRV$[ebp]
  00122	51		 push	 ecx
  00123	8d 55 a4	 lea	 edx, DWORD PTR _srvDesc$[ebp]
  00126	52		 push	 edx
  00127	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	51		 push	 ecx
  0012d	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00130	8b 02		 mov	 eax, DWORD PTR [edx]
  00132	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00135	51		 push	 ecx
  00136	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00139	ff d2		 call	 edx
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00145	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00149	7d 1c		 jge	 SHORT $LN2@CreateStru
  0014b	6a 01		 push	 1
  0014d	68 00 00 00 00	 push	 OFFSET $SG191682
  00152	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00155	50		 push	 eax
  00156	68 cc 01 00 00	 push	 460			; 000001ccH
  0015b	68 00 00 00 00	 push	 OFFSET $SG191683
  00160	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00165	eb 72		 jmp	 SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 464
  00167	33 c9		 xor	 ecx, ecx
  00169	89 4d 88	 mov	 DWORD PTR _uavDesc$[ebp], ecx
  0016c	89 4d 8c	 mov	 DWORD PTR _uavDesc$[ebp+4], ecx
  0016f	89 4d 90	 mov	 DWORD PTR _uavDesc$[ebp+8], ecx
  00172	89 4d 94	 mov	 DWORD PTR _uavDesc$[ebp+12], ecx
  00175	89 4d 98	 mov	 DWORD PTR _uavDesc$[ebp+16], ecx
; Line 465
  00178	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp], 0
; Line 466
  0017f	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp+4], 1
; Line 467
  00186	8b 55 08	 mov	 edx, DWORD PTR _iNumElements$[ebp]
  00189	89 55 94	 mov	 DWORD PTR _uavDesc$[ebp+12], edx
; Line 468
  0018c	8b f4		 mov	 esi, esp
  0018e	8b 45 14	 mov	 eax, DWORD PTR _ppUAV$[ebp]
  00191	50		 push	 eax
  00192	8d 4d 88	 lea	 ecx, DWORD PTR _uavDesc$[ebp]
  00195	51		 push	 ecx
  00196	8b 55 0c	 mov	 edx, DWORD PTR _ppBuffer$[ebp]
  00199	8b 02		 mov	 eax, DWORD PTR [edx]
  0019b	50		 push	 eax
  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  001a4	50		 push	 eax
  001a5	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  001a8	ff d1		 call	 ecx
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  001b4	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b8	7d 1c		 jge	 SHORT $LN1@CreateStru
  001ba	6a 01		 push	 1
  001bc	68 00 00 00 00	 push	 OFFSET $SG191688
  001c1	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  001c4	52		 push	 edx
  001c5	68 d4 01 00 00	 push	 468			; 000001d4H
  001ca	68 00 00 00 00	 push	 OFFSET $SG191689
  001cf	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001d4	eb 03		 jmp	 SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 470
  001d6	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 471
  001d9	52		 push	 edx
  001da	8b cd		 mov	 ecx, ebp
  001dc	50		 push	 eax
  001dd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@CreateStru
  001e3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001e8	58		 pop	 eax
  001e9	5a		 pop	 edx
  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ef	33 cd		 xor	 ecx, ebp
  001f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f6	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  001fc	3b ec		 cmp	 ebp, esp
  001fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c3		 ret	 0
  00207	90		 npad	 1
$LN15@CreateStru:
  00208	04 00 00 00	 DD	 4
  0020c	00 00 00 00	 DD	 $LN14@CreateStru
$LN14@CreateStru:
  00210	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00214	18 00 00 00	 DD	 24			; 00000018H
  00218	00 00 00 00	 DD	 $LN10@CreateStru
  0021c	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00220	0c 00 00 00	 DD	 12			; 0000000cH
  00224	00 00 00 00	 DD	 $LN11@CreateStru
  00228	a4 ff ff ff	 DD	 -92			; ffffffa4H
  0022c	18 00 00 00	 DD	 24			; 00000018H
  00230	00 00 00 00	 DD	 $LN12@CreateStru
  00234	88 ff ff ff	 DD	 -120			; ffffff88H
  00238	14 00 00 00	 DD	 20			; 00000014H
  0023c	00 00 00 00	 DD	 $LN13@CreateStru
$LN13@CreateStru:
  00240	75		 DB	 117			; 00000075H
  00241	61		 DB	 97			; 00000061H
  00242	76		 DB	 118			; 00000076H
  00243	44		 DB	 68			; 00000044H
  00244	65		 DB	 101			; 00000065H
  00245	73		 DB	 115			; 00000073H
  00246	63		 DB	 99			; 00000063H
  00247	00		 DB	 0
$LN12@CreateStru:
  00248	73		 DB	 115			; 00000073H
  00249	72		 DB	 114			; 00000072H
  0024a	76		 DB	 118			; 00000076H
  0024b	44		 DB	 68			; 00000044H
  0024c	65		 DB	 101			; 00000065H
  0024d	73		 DB	 115			; 00000073H
  0024e	63		 DB	 99			; 00000063H
  0024f	00		 DB	 0
$LN11@CreateStru:
  00250	62		 DB	 98			; 00000062H
  00251	75		 DB	 117			; 00000075H
  00252	66		 DB	 102			; 00000066H
  00253	66		 DB	 102			; 00000066H
  00254	65		 DB	 101			; 00000065H
  00255	72		 DB	 114			; 00000072H
  00256	49		 DB	 73			; 00000049H
  00257	6e		 DB	 110			; 0000006eH
  00258	69		 DB	 105			; 00000069H
  00259	74		 DB	 116			; 00000074H
  0025a	44		 DB	 68			; 00000044H
  0025b	61		 DB	 97			; 00000061H
  0025c	74		 DB	 116			; 00000074H
  0025d	61		 DB	 97			; 00000061H
  0025e	00		 DB	 0
$LN10@CreateStru:
  0025f	62		 DB	 98			; 00000062H
  00260	75		 DB	 117			; 00000075H
  00261	66		 DB	 102			; 00000066H
  00262	66		 DB	 102			; 00000066H
  00263	65		 DB	 101			; 00000065H
  00264	72		 DB	 114			; 00000072H
  00265	44		 DB	 68			; 00000044H
  00266	65		 DB	 101			; 00000065H
  00267	73		 DB	 115			; 00000073H
  00268	63		 DB	 99			; 00000063H
  00269	00		 DB	 0
??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z ENDP ; CreateStructuredBuffer<FOO>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv239 = -344						; size = 4
tv242 = -340						; size = 4
tv69 = -336						; size = 4
tv282 = -332						; size = 4
tv266 = -328						; size = 4
$T2 = -324						; size = 4
$T3 = -320						; size = 4
$T4 = -313						; size = 1
_deviceContext$5 = -300					; size = 4
_hr2$6 = -296						; size = 4
_device$7 = -292					; size = 4
$T8 = -288						; size = 16
$T9 = -272						; size = 16
$T10 = -256						; size = 16
_u32rand$11 = -228					; size = 4
_i$12 = -224						; size = 4
_ss$13 = -216						; size = 176
_f$ = -36						; size = 4
__$EHRec$ = -16						; size = 16
?UpdateColor@@YAXXZ PROC				; UpdateColor
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 591
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?UpdateColor@@YAXXZ
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	51		 push	 ecx
  00025	53		 push	 ebx
  00026	81 c4 b0 fe ff
	ff		 add	 esp, -336		; fffffeb0H
  0002c	56		 push	 esi
  0002d	57		 push	 edi
  0002e	8d bd 9c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-356]
  00034	b9 51 00 00 00	 mov	 ecx, 81			; 00000051H
  00039	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0003e	f3 ab		 rep stosd
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00045	33 c5		 xor	 eax, ebp
  00047	50		 push	 eax
  00048	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0004b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00051	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 592
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00059	c1 e0 04	 shl	 eax, 4
  0005c	8b f4		 mov	 esi, esp
  0005e	50		 push	 eax
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00065	83 c4 04	 add	 esp, 4
  00068	3b f4		 cmp	 esi, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	89 45 dc	 mov	 DWORD PTR _f$[ebp], eax
; Line 593
  00072	83 7d dc 00	 cmp	 DWORD PTR _f$[ebp], 0
  00076	0f 84 3d 04 00
	00		 je	 $LN16@UpdateColo
; Line 595
  0007c	6a 01		 push	 1
  0007e	6a 03		 push	 3
  00080	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$13[ebp]
  00086	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  0008b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 596
  00092	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$12[ebp], 0
; Line 597
  0009c	0f b6 0d 00 00
	00 00		 movzx	 ecx, BYTE PTR _sseEnabled
  000a3	85 c9		 test	 ecx, ecx
  000a5	0f 85 19 02 00
	00		 jne	 $LN15@UpdateColo
; Line 599
  000ab	eb 0f		 jmp	 SHORT $LN14@UpdateColo
$LN13@UpdateColo:
  000ad	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _i$12[ebp]
  000b3	83 c2 01	 add	 edx, 1
  000b6	89 95 20 ff ff
	ff		 mov	 DWORD PTR _i$12[ebp], edx
$LN14@UpdateColo:
  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  000c1	83 e8 02	 sub	 eax, 2
  000c4	39 85 20 ff ff
	ff		 cmp	 DWORD PTR _i$12[ebp], eax
  000ca	0f 83 f4 01 00
	00		 jae	 $LN12@UpdateColo
; Line 601
  000d0	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR _i$12[ebp], 0
  000d7	74 2f		 je	 SHORT $LN10@UpdateColo
  000d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  000df	83 e9 01	 sub	 ecx, 1
  000e2	39 8d 20 ff ff
	ff		 cmp	 DWORD PTR _i$12[ebp], ecx
  000e8	74 1e		 je	 SHORT $LN10@UpdateColo
  000ea	83 bd 20 ff ff
	ff 01		 cmp	 DWORD PTR _i$12[ebp], 1
  000f1	74 15		 je	 SHORT $LN10@UpdateColo
  000f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  000f9	83 ea 02	 sub	 edx, 2
  000fc	39 95 20 ff ff
	ff		 cmp	 DWORD PTR _i$12[ebp], edx
  00102	0f 85 4b 01 00
	00		 jne	 $LN11@UpdateColo
$LN10@UpdateColo:
; Line 603
  00108	8b f4		 mov	 esi, esp
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__rand
  00110	3b f4		 cmp	 esi, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00117	89 85 1c ff ff
	ff		 mov	 DWORD PTR _u32rand$11[ebp], eax
; Line 604
  0011d	33 c0		 xor	 eax, eax
  0011f	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _i$12[ebp]
  00125	c1 e1 04	 shl	 ecx, 4
  00128	03 4d dc	 add	 ecx, DWORD PTR _f$[ebp]
  0012b	89 01		 mov	 DWORD PTR [ecx], eax
  0012d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00130	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00133	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 606
  00136	51		 push	 ecx
  00137	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0013f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00144	51		 push	 ecx
  00145	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0014d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00152	51		 push	 ecx
  00153	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0015b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00160	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR _u32rand$11[ebp]
  00166	89 95 b8 fe ff
	ff		 mov	 DWORD PTR tv266[ebp], edx
  0016c	f2 0f 2a 85 b8
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv266[ebp]
  00174	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv266[ebp]
  0017a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0017d	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00186	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ee4f8b588e368f1
  0018e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00192	51		 push	 ecx
  00193	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00198	e8 00 00 00 00	 call	 ?CAST@@YA?AT__m128@@MMMM@Z ; CAST
  0019d	83 c4 10	 add	 esp, 16			; 00000010H
  001a0	0f 29 85 00 ff
	ff ff		 movaps	 XMMWORD PTR $T10[ebp], xmm0
  001a7	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _i$12[ebp]
  001ad	c1 e1 04	 shl	 ecx, 4
  001b0	03 4d dc	 add	 ecx, DWORD PTR _f$[ebp]
  001b3	0f 10 85 00 ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T10[ebp]
  001ba	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; Line 612
  001bd	83 bd 20 ff ff
	ff 01		 cmp	 DWORD PTR _i$12[ebp], 1
  001c4	0f 85 87 00 00
	00		 jne	 $LN9@UpdateColo
; Line 615
  001ca	51		 push	 ecx
  001cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d8	51		 push	 ecx
  001d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e6	51		 push	 ecx
  001e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f4	8b 95 1c ff ff
	ff		 mov	 edx, DWORD PTR _u32rand$11[ebp]
  001fa	89 95 b4 fe ff
	ff		 mov	 DWORD PTR tv282[ebp], edx
  00200	f2 0f 2a 85 b4
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv282[ebp]
  00208	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR tv282[ebp]
  0020e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00211	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0021a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ed4f8b588e368f1
  00222	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00226	51		 push	 ecx
  00227	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022c	e8 00 00 00 00	 call	 ?CAST@@YA?AT__m128@@MMMM@Z ; CAST
  00231	83 c4 10	 add	 esp, 16			; 00000010H
  00234	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR $T9[ebp], xmm0
  0023b	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _i$12[ebp]
  00241	c1 e1 04	 shl	 ecx, 4
  00244	03 4d dc	 add	 ecx, DWORD PTR _f$[ebp]
  00247	0f 10 85 f0 fe
	ff ff		 movups	 xmm0, XMMWORD PTR $T9[ebp]
  0024e	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
$LN9@UpdateColo:
; Line 622
  00251	eb 6c		 jmp	 SHORT $LN8@UpdateColo
$LN11@UpdateColo:
; Line 624
  00253	33 d2		 xor	 edx, edx
  00255	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _i$12[ebp]
  0025b	c1 e0 04	 shl	 eax, 4
  0025e	03 45 dc	 add	 eax, DWORD PTR _f$[ebp]
  00261	89 10		 mov	 DWORD PTR [eax], edx
  00263	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00266	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00269	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 626
  0026c	51		 push	 ecx
  0026d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eab851f
  00275	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027a	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _i$12[ebp]
  00280	83 e9 02	 sub	 ecx, 2
  00283	c1 e1 04	 shl	 ecx, 4
  00286	03 4d dc	 add	 ecx, DWORD PTR _f$[ebp]
  00289	51		 push	 ecx
  0028a	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _i$12[ebp]
  00290	83 ea 01	 sub	 edx, 1
  00293	c1 e2 04	 shl	 edx, 4
  00296	03 55 dc	 add	 edx, DWORD PTR _f$[ebp]
  00299	52		 push	 edx
  0029a	e8 00 00 00 00	 call	 ?lerp@@YA?BT__m128@@ABT1@0M@Z ; lerp
  0029f	83 c4 0c	 add	 esp, 12			; 0000000cH
  002a2	0f 29 85 e0 fe
	ff ff		 movaps	 XMMWORD PTR $T8[ebp], xmm0
  002a9	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _i$12[ebp]
  002af	c1 e0 04	 shl	 eax, 4
  002b2	03 45 dc	 add	 eax, DWORD PTR _f$[ebp]
  002b5	0f 10 85 e0 fe
	ff ff		 movups	 xmm0, XMMWORD PTR $T8[ebp]
  002bc	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
$LN8@UpdateColo:
; Line 633
  002bf	e9 e9 fd ff ff	 jmp	 $LN13@UpdateColo
$LN12@UpdateColo:
$LN15@UpdateColo:
; Line 644
  002c4	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  002c9	89 85 dc fe ff
	ff		 mov	 DWORD PTR _device$7[ebp], eax
; Line 645
  002cf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
  002d6	74 27		 je	 SHORT $LN6@UpdateColo
  002d8	8b f4		 mov	 esi, esp
  002da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  002e0	51		 push	 ecx
  002e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  002e7	8b 02		 mov	 eax, DWORD PTR [edx]
  002e9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  002ec	ff d1		 call	 ecx
  002ee	3b f4		 cmp	 esi, esp
  002f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
$LN6@UpdateColo:
; Line 646
  002ff	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
  00306	74 26		 je	 SHORT $LN5@UpdateColo
  00308	8b f4		 mov	 esi, esp
  0030a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  00310	52		 push	 edx
  00311	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  00316	8b 08		 mov	 ecx, DWORD PTR [eax]
  00318	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0031b	ff d2		 call	 edx
  0031d	3b f4		 cmp	 esi, esp
  0031f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00324	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
$LN5@UpdateColo:
; Line 647
  0032e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
  00335	74 26		 je	 SHORT $LN4@UpdateColo
  00337	8b f4		 mov	 esi, esp
  00339	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  0033e	50		 push	 eax
  0033f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  00345	8b 11		 mov	 edx, DWORD PTR [ecx]
  00347	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0034a	ff d0		 call	 eax
  0034c	3b f4		 cmp	 esi, esp
  0034e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00353	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
$LN4@UpdateColo:
; Line 648
  0035d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
  00364	74 27		 je	 SHORT $LN3@UpdateColo
  00366	8b f4		 mov	 esi, esp
  00368	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  0036e	51		 push	 ecx
  0036f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  00375	8b 02		 mov	 eax, DWORD PTR [edx]
  00377	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0037a	ff d1		 call	 ecx
  0037c	3b f4		 cmp	 esi, esp
  0037e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00383	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
$LN3@UpdateColo:
; Line 650
  0038d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
; Line 651
  00391	6a 00		 push	 0
  00393	8b 55 dc	 mov	 edx, DWORD PTR _f$[ebp]
  00396	52		 push	 edx
  00397	68 00 00 00 00	 push	 OFFSET ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  0039c	68 00 00 00 00	 push	 OFFSET ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  003a1	68 00 00 00 00	 push	 OFFSET ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  003a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  003ab	50		 push	 eax
  003ac	e8 00 00 00 00	 call	 ??$CreateStructuredBuffer@UFOO@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUFOO@@_N@Z ; CreateStructuredBuffer<FOO>
  003b1	83 c4 18	 add	 esp, 24			; 00000018H
  003b4	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  003ba	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv69[ebp]
  003c0	89 8d d8 fe ff
	ff		 mov	 DWORD PTR _hr2$6[ebp], ecx
; Line 652
  003c6	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  003cb	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv242[ebp], eax
  003d1	8b 95 ac fe ff
	ff		 mov	 edx, DWORD PTR tv242[ebp]
  003d7	89 95 d4 fe ff
	ff		 mov	 DWORD PTR _deviceContext$5[ebp], edx
; Line 653
  003dd	68 00 00 00 00	 push	 OFFSET $SG189941
  003e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  003e7	50		 push	 eax
  003e8	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  003ed	83 c4 08	 add	 esp, 8
; Line 654
  003f0	68 00 00 00 00	 push	 OFFSET $SG189942
  003f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
  003fb	51		 push	 ecx
  003fc	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00401	83 c4 08	 add	 esp, 8
; Line 655
  00404	68 00 00 00 00	 push	 OFFSET $SG189943
  00409	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  0040f	52		 push	 edx
  00410	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00415	83 c4 08	 add	 esp, 8
; Line 656
  00418	68 00 00 00 00	 push	 OFFSET $SG189944
  0041d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  00422	50		 push	 eax
  00423	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00428	83 c4 08	 add	 esp, 8
; Line 657
  0042b	83 bd d8 fe ff
	ff 00		 cmp	 DWORD PTR _hr2$6[ebp], 0
  00432	7d 18		 jge	 SHORT $LN1@UpdateColo
; Line 658
  00434	c6 85 c7 fe ff
	ff 31		 mov	 BYTE PTR $T4[ebp], 49	; 00000031H
  0043b	68 00 00 00 00	 push	 OFFSET __TI1D
  00440	8d 8d c7 fe ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00446	51		 push	 ecx
  00447	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN1@UpdateColo:
; Line 660
  0044c	eb 09		 jmp	 SHORT $LN21@UpdateColo
__catch$?UpdateColor@@YAXXZ$0:
  0044e	8b 5d ec	 mov	 ebx, DWORD PTR [ebp-20]
; Line 663
  00451	b8 00 00 00 00	 mov	 eax, $LN31@UpdateColo
  00456	c3		 ret	 0
$LN21@UpdateColo:
  00457	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0045e	eb 0a		 jmp	 SHORT $LN24@UpdateColo
$LN31@UpdateColo:
  00460	8b 5d ec	 mov	 ebx, DWORD PTR [ebp-20]
  00463	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN24@UpdateColo:
; Line 665
  0046a	8b 55 dc	 mov	 edx, DWORD PTR _f$[ebp]
  0046d	89 95 bc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  00473	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00479	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0047f	83 bd c0 fe ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00486	74 15		 je	 SHORT $LN19@UpdateColo
  00488	6a 01		 push	 1
  0048a	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00490	e8 00 00 00 00	 call	 ??_GFOO@@QAEPAXI@Z
  00495	89 85 a8 fe ff
	ff		 mov	 DWORD PTR tv239[ebp], eax
  0049b	eb 0a		 jmp	 SHORT $LN20@UpdateColo
$LN19@UpdateColo:
  0049d	c7 85 a8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv239[ebp], 0
$LN20@UpdateColo:
; Line 667
  004a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  004ae	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$13[ebp]
  004b4	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN16@UpdateColo:
$LN17@UpdateColo:
; Line 668
  004b9	52		 push	 edx
  004ba	8b cd		 mov	 ecx, ebp
  004bc	50		 push	 eax
  004bd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN30@UpdateColo
  004c3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004c8	58		 pop	 eax
  004c9	5a		 pop	 edx
  004ca	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  004cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004d4	59		 pop	 ecx
  004d5	5f		 pop	 edi
  004d6	5e		 pop	 esi
  004d7	8b e5		 mov	 esp, ebp
  004d9	5d		 pop	 ebp
  004da	8b e3		 mov	 esp, ebx
  004dc	5b		 pop	 ebx
  004dd	c3		 ret	 0
  004de	8b ff		 npad	 2
$LN30@UpdateColo:
  004e0	02 00 00 00	 DD	 2
  004e4	00 00 00 00	 DD	 $LN29@UpdateColo
$LN29@UpdateColo:
  004e8	28 ff ff ff	 DD	 -216			; ffffff28H
  004ec	b0 00 00 00	 DD	 176			; 000000b0H
  004f0	00 00 00 00	 DD	 $LN26@UpdateColo
  004f4	cc fe ff ff	 DD	 -308			; fffffeccH
  004f8	04 00 00 00	 DD	 4
  004fc	00 00 00 00	 DD	 $LN27@UpdateColo
$LN27@UpdateColo:
  00500	65		 DB	 101			; 00000065H
  00501	00		 DB	 0
$LN26@UpdateColo:
  00502	73		 DB	 115			; 00000073H
  00503	73		 DB	 115			; 00000073H
  00504	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdateColor@@YAXXZ$2:
  00000	8d 8d 28 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$13[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__ehhandler$?UpdateColor@@YAXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 9c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-356]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?UpdateColor@@YAXXZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?UpdateColor@@YAXXZ ENDP				; UpdateColor
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_lerpVal$ = 20						; size = 4
?lerpF@@YA?AUXMFLOAT4@DirectX@@ABU12@0M@Z PROC		; lerpF
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 586
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 587
  00003	8b 45 0c	 mov	 eax, DWORD PTR _a$[ebp]
  00006	8b 4d 10	 mov	 ecx, DWORD PTR _b$[ebp]
  00009	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0000e	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  00013	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _lerpVal$[ebp]
  00018	8b 55 0c	 mov	 edx, DWORD PTR _a$[ebp]
  0001b	f3 0f 58 42 0c	 addss	 xmm0, DWORD PTR [edx+12]
  00020	51		 push	 ecx
  00021	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00026	8b 45 0c	 mov	 eax, DWORD PTR _a$[ebp]
  00029	8b 4d 10	 mov	 ecx, DWORD PTR _b$[ebp]
  0002c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00031	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00036	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _lerpVal$[ebp]
  0003b	8b 55 0c	 mov	 edx, DWORD PTR _a$[ebp]
  0003e	f3 0f 58 42 08	 addss	 xmm0, DWORD PTR [edx+8]
  00043	51		 push	 ecx
  00044	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00049	8b 45 0c	 mov	 eax, DWORD PTR _a$[ebp]
  0004c	8b 4d 10	 mov	 ecx, DWORD PTR _b$[ebp]
  0004f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00054	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00059	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _lerpVal$[ebp]
  0005e	8b 55 0c	 mov	 edx, DWORD PTR _a$[ebp]
  00061	f3 0f 58 42 04	 addss	 xmm0, DWORD PTR [edx+4]
  00066	51		 push	 ecx
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	8b 45 10	 mov	 eax, DWORD PTR _b$[ebp]
  0006f	8b 4d 0c	 mov	 ecx, DWORD PTR _a$[ebp]
  00072	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00076	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0007a	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _lerpVal$[ebp]
  0007f	8b 55 0c	 mov	 edx, DWORD PTR _a$[ebp]
  00082	f3 0f 58 02	 addss	 xmm0, DWORD PTR [edx]
  00086	51		 push	 ecx
  00087	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0008f	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@MMMM@Z ; DirectX::XMFLOAT4::XMFLOAT4
  00094	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 588
  00097	3b ec		 cmp	 ebp, esp
  00099	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?lerpF@@YA?AUXMFLOAT4@DirectX@@ABU12@0M@Z ENDP		; lerpF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -16						; size = 16
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_lerpVal$ = 16						; size = 4
?lerp@@YA?BT__m128@@ABT1@0M@Z PROC			; lerp
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 581
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 10	 sub	 esp, 16			; 00000010H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00021	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00024	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00027	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 582
  0002a	8d 43 10	 lea	 eax, DWORD PTR _lerpVal$[ebx]
  0002d	50		 push	 eax
  0002e	8b 4b 0c	 mov	 ecx, DWORD PTR _b$[ebx]
  00031	51		 push	 ecx
  00032	8b 53 08	 mov	 edx, DWORD PTR _a$[ebx]
  00035	52		 push	 edx
  00036	e8 00 00 00 00	 call	 ?lerpAligned@@YA?AT__m128@@ABT1@0ABM@Z ; lerpAligned
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	0f 29 45 f0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00042	0f 28 45 f0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 583
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	8b e3		 mov	 esp, ebx
  0004b	5b		 pop	 ebx
  0004c	c3		 ret	 0
?lerp@@YA?BT__m128@@ABT1@0M@Z ENDP			; lerp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z PROC ; CreateStructuredBuffer<u322>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 430
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0000e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 431
  00024	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00029	89 45 f8	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 432
  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 436
  00033	33 c0		 xor	 eax, eax
  00035	89 45 d8	 mov	 DWORD PTR _bufferDesc$[ebp], eax
  00038	89 45 dc	 mov	 DWORD PTR _bufferDesc$[ebp+4], eax
  0003b	89 45 e0	 mov	 DWORD PTR _bufferDesc$[ebp+8], eax
  0003e	89 45 e4	 mov	 DWORD PTR _bufferDesc$[ebp+12], eax
  00041	89 45 e8	 mov	 DWORD PTR _bufferDesc$[ebp+16], eax
  00044	89 45 ec	 mov	 DWORD PTR _bufferDesc$[ebp+20], eax
; Line 437
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _iNumElements$[ebp]
  0004a	c1 e1 03	 shl	 ecx, 3
  0004d	89 4d d8	 mov	 DWORD PTR _bufferDesc$[ebp], ecx
; Line 438
  00050	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+4], 0
; Line 440
  00057	0f b6 55 1c	 movzx	 edx, BYTE PTR _read$[ebp]
  0005b	85 d2		 test	 edx, edx
  0005d	74 09		 je	 SHORT $LN5@CreateStru
; Line 441
  0005f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 0
; Line 442
  00066	eb 07		 jmp	 SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 443
  00068	c7 45 e4 00 00
	03 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 196608 ; 00030000H
$LN4@CreateStru:
; Line 445
  0006f	c7 45 e0 88 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+8], 136 ; 00000088H
; Line 446
  00076	c7 45 e8 40 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+16], 64 ; 00000040H
; Line 447
  0007d	c7 45 ec 08 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+20], 8
; Line 450
  00084	33 c0		 xor	 eax, eax
  00086	89 45 c4	 mov	 DWORD PTR _bufferInitData$[ebp], eax
  00089	89 45 c8	 mov	 DWORD PTR _bufferInitData$[ebp+4], eax
  0008c	89 45 cc	 mov	 DWORD PTR _bufferInitData$[ebp+8], eax
; Line 451
  0008f	8b 4d 18	 mov	 ecx, DWORD PTR _pInitialData$[ebp]
  00092	89 4d c4	 mov	 DWORD PTR _bufferInitData$[ebp], ecx
; Line 452
  00095	83 7d 18 00	 cmp	 DWORD PTR _pInitialData$[ebp], 0
  00099	74 08		 je	 SHORT $LN8@CreateStru
  0009b	8d 55 c4	 lea	 edx, DWORD PTR _bufferInitData$[ebp]
  0009e	89 55 80	 mov	 DWORD PTR tv80[ebp], edx
  000a1	eb 07		 jmp	 SHORT $LN9@CreateStru
$LN8@CreateStru:
  000a3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d 80	 mov	 ecx, DWORD PTR tv80[ebp]
  000b3	51		 push	 ecx
  000b4	8d 55 d8	 lea	 edx, DWORD PTR _bufferDesc$[ebp]
  000b7	52		 push	 edx
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  000c0	52		 push	 edx
  000c1	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000c4	ff d0		 call	 eax
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000d0	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d4	7d 1f		 jge	 SHORT $LN3@CreateStru
  000d6	6a 01		 push	 1
  000d8	68 00 00 00 00	 push	 OFFSET $SG191649
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  000e0	51		 push	 ecx
  000e1	68 c4 01 00 00	 push	 452			; 000001c4H
  000e6	68 00 00 00 00	 push	 OFFSET $SG191650
  000eb	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000f0	e9 e4 00 00 00	 jmp	 $LN6@CreateStru
$LN3@CreateStru:
; Line 456
  000f5	33 d2		 xor	 edx, edx
  000f7	89 55 a4	 mov	 DWORD PTR _srvDesc$[ebp], edx
  000fa	89 55 a8	 mov	 DWORD PTR _srvDesc$[ebp+4], edx
  000fd	89 55 ac	 mov	 DWORD PTR _srvDesc$[ebp+8], edx
  00100	89 55 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], edx
  00103	89 55 b4	 mov	 DWORD PTR _srvDesc$[ebp+16], edx
  00106	89 55 b8	 mov	 DWORD PTR _srvDesc$[ebp+20], edx
; Line 457
  00109	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp], 0
; Line 458
  00110	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp+4], 1
; Line 459
  00117	8b 45 08	 mov	 eax, DWORD PTR _iNumElements$[ebp]
  0011a	89 45 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], eax
; Line 460
  0011d	8b f4		 mov	 esi, esp
  0011f	8b 4d 10	 mov	 ecx, DWORD PTR _ppSRV$[ebp]
  00122	51		 push	 ecx
  00123	8d 55 a4	 lea	 edx, DWORD PTR _srvDesc$[ebp]
  00126	52		 push	 edx
  00127	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	51		 push	 ecx
  0012d	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00130	8b 02		 mov	 eax, DWORD PTR [edx]
  00132	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00135	51		 push	 ecx
  00136	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00139	ff d2		 call	 edx
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00145	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00149	7d 1c		 jge	 SHORT $LN2@CreateStru
  0014b	6a 01		 push	 1
  0014d	68 00 00 00 00	 push	 OFFSET $SG191655
  00152	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00155	50		 push	 eax
  00156	68 cc 01 00 00	 push	 460			; 000001ccH
  0015b	68 00 00 00 00	 push	 OFFSET $SG191656
  00160	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00165	eb 72		 jmp	 SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 464
  00167	33 c9		 xor	 ecx, ecx
  00169	89 4d 88	 mov	 DWORD PTR _uavDesc$[ebp], ecx
  0016c	89 4d 8c	 mov	 DWORD PTR _uavDesc$[ebp+4], ecx
  0016f	89 4d 90	 mov	 DWORD PTR _uavDesc$[ebp+8], ecx
  00172	89 4d 94	 mov	 DWORD PTR _uavDesc$[ebp+12], ecx
  00175	89 4d 98	 mov	 DWORD PTR _uavDesc$[ebp+16], ecx
; Line 465
  00178	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp], 0
; Line 466
  0017f	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp+4], 1
; Line 467
  00186	8b 55 08	 mov	 edx, DWORD PTR _iNumElements$[ebp]
  00189	89 55 94	 mov	 DWORD PTR _uavDesc$[ebp+12], edx
; Line 468
  0018c	8b f4		 mov	 esi, esp
  0018e	8b 45 14	 mov	 eax, DWORD PTR _ppUAV$[ebp]
  00191	50		 push	 eax
  00192	8d 4d 88	 lea	 ecx, DWORD PTR _uavDesc$[ebp]
  00195	51		 push	 ecx
  00196	8b 55 0c	 mov	 edx, DWORD PTR _ppBuffer$[ebp]
  00199	8b 02		 mov	 eax, DWORD PTR [edx]
  0019b	50		 push	 eax
  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  001a4	50		 push	 eax
  001a5	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  001a8	ff d1		 call	 ecx
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  001b4	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b8	7d 1c		 jge	 SHORT $LN1@CreateStru
  001ba	6a 01		 push	 1
  001bc	68 00 00 00 00	 push	 OFFSET $SG191661
  001c1	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  001c4	52		 push	 edx
  001c5	68 d4 01 00 00	 push	 468			; 000001d4H
  001ca	68 00 00 00 00	 push	 OFFSET $SG191662
  001cf	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001d4	eb 03		 jmp	 SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 470
  001d6	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 471
  001d9	52		 push	 edx
  001da	8b cd		 mov	 ecx, ebp
  001dc	50		 push	 eax
  001dd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@CreateStru
  001e3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001e8	58		 pop	 eax
  001e9	5a		 pop	 edx
  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ef	33 cd		 xor	 ecx, ebp
  001f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f6	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  001fc	3b ec		 cmp	 ebp, esp
  001fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c3		 ret	 0
  00207	90		 npad	 1
$LN15@CreateStru:
  00208	04 00 00 00	 DD	 4
  0020c	00 00 00 00	 DD	 $LN14@CreateStru
$LN14@CreateStru:
  00210	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00214	18 00 00 00	 DD	 24			; 00000018H
  00218	00 00 00 00	 DD	 $LN10@CreateStru
  0021c	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00220	0c 00 00 00	 DD	 12			; 0000000cH
  00224	00 00 00 00	 DD	 $LN11@CreateStru
  00228	a4 ff ff ff	 DD	 -92			; ffffffa4H
  0022c	18 00 00 00	 DD	 24			; 00000018H
  00230	00 00 00 00	 DD	 $LN12@CreateStru
  00234	88 ff ff ff	 DD	 -120			; ffffff88H
  00238	14 00 00 00	 DD	 20			; 00000014H
  0023c	00 00 00 00	 DD	 $LN13@CreateStru
$LN13@CreateStru:
  00240	75		 DB	 117			; 00000075H
  00241	61		 DB	 97			; 00000061H
  00242	76		 DB	 118			; 00000076H
  00243	44		 DB	 68			; 00000044H
  00244	65		 DB	 101			; 00000065H
  00245	73		 DB	 115			; 00000073H
  00246	63		 DB	 99			; 00000063H
  00247	00		 DB	 0
$LN12@CreateStru:
  00248	73		 DB	 115			; 00000073H
  00249	72		 DB	 114			; 00000072H
  0024a	76		 DB	 118			; 00000076H
  0024b	44		 DB	 68			; 00000044H
  0024c	65		 DB	 101			; 00000065H
  0024d	73		 DB	 115			; 00000073H
  0024e	63		 DB	 99			; 00000063H
  0024f	00		 DB	 0
$LN11@CreateStru:
  00250	62		 DB	 98			; 00000062H
  00251	75		 DB	 117			; 00000075H
  00252	66		 DB	 102			; 00000066H
  00253	66		 DB	 102			; 00000066H
  00254	65		 DB	 101			; 00000065H
  00255	72		 DB	 114			; 00000072H
  00256	49		 DB	 73			; 00000049H
  00257	6e		 DB	 110			; 0000006eH
  00258	69		 DB	 105			; 00000069H
  00259	74		 DB	 116			; 00000074H
  0025a	44		 DB	 68			; 00000044H
  0025b	61		 DB	 97			; 00000061H
  0025c	74		 DB	 116			; 00000074H
  0025d	61		 DB	 97			; 00000061H
  0025e	00		 DB	 0
$LN10@CreateStru:
  0025f	62		 DB	 98			; 00000062H
  00260	75		 DB	 117			; 00000075H
  00261	66		 DB	 102			; 00000066H
  00262	66		 DB	 102			; 00000066H
  00263	65		 DB	 101			; 00000065H
  00264	72		 DB	 114			; 00000072H
  00265	44		 DB	 68			; 00000044H
  00266	65		 DB	 101			; 00000065H
  00267	73		 DB	 115			; 00000073H
  00268	63		 DB	 99			; 00000063H
  00269	00		 DB	 0
??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z ENDP ; CreateStructuredBuffer<u322>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z PROC ; CreateStructuredBuffer<unsigned int>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 430
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0000e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 431
  00024	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00029	89 45 f8	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 432
  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 436
  00033	33 c0		 xor	 eax, eax
  00035	89 45 d8	 mov	 DWORD PTR _bufferDesc$[ebp], eax
  00038	89 45 dc	 mov	 DWORD PTR _bufferDesc$[ebp+4], eax
  0003b	89 45 e0	 mov	 DWORD PTR _bufferDesc$[ebp+8], eax
  0003e	89 45 e4	 mov	 DWORD PTR _bufferDesc$[ebp+12], eax
  00041	89 45 e8	 mov	 DWORD PTR _bufferDesc$[ebp+16], eax
  00044	89 45 ec	 mov	 DWORD PTR _bufferDesc$[ebp+20], eax
; Line 437
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _iNumElements$[ebp]
  0004a	c1 e1 02	 shl	 ecx, 2
  0004d	89 4d d8	 mov	 DWORD PTR _bufferDesc$[ebp], ecx
; Line 438
  00050	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+4], 0
; Line 440
  00057	0f b6 55 1c	 movzx	 edx, BYTE PTR _read$[ebp]
  0005b	85 d2		 test	 edx, edx
  0005d	74 09		 je	 SHORT $LN5@CreateStru
; Line 441
  0005f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 0
; Line 442
  00066	eb 07		 jmp	 SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 443
  00068	c7 45 e4 00 00
	03 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 196608 ; 00030000H
$LN4@CreateStru:
; Line 445
  0006f	c7 45 e0 88 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+8], 136 ; 00000088H
; Line 446
  00076	c7 45 e8 40 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+16], 64 ; 00000040H
; Line 447
  0007d	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+20], 4
; Line 450
  00084	33 c0		 xor	 eax, eax
  00086	89 45 c4	 mov	 DWORD PTR _bufferInitData$[ebp], eax
  00089	89 45 c8	 mov	 DWORD PTR _bufferInitData$[ebp+4], eax
  0008c	89 45 cc	 mov	 DWORD PTR _bufferInitData$[ebp+8], eax
; Line 451
  0008f	8b 4d 18	 mov	 ecx, DWORD PTR _pInitialData$[ebp]
  00092	89 4d c4	 mov	 DWORD PTR _bufferInitData$[ebp], ecx
; Line 452
  00095	83 7d 18 00	 cmp	 DWORD PTR _pInitialData$[ebp], 0
  00099	74 08		 je	 SHORT $LN8@CreateStru
  0009b	8d 55 c4	 lea	 edx, DWORD PTR _bufferInitData$[ebp]
  0009e	89 55 80	 mov	 DWORD PTR tv80[ebp], edx
  000a1	eb 07		 jmp	 SHORT $LN9@CreateStru
$LN8@CreateStru:
  000a3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d 80	 mov	 ecx, DWORD PTR tv80[ebp]
  000b3	51		 push	 ecx
  000b4	8d 55 d8	 lea	 edx, DWORD PTR _bufferDesc$[ebp]
  000b7	52		 push	 edx
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  000c0	52		 push	 edx
  000c1	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000c4	ff d0		 call	 eax
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000d0	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d4	7d 1f		 jge	 SHORT $LN3@CreateStru
  000d6	6a 01		 push	 1
  000d8	68 00 00 00 00	 push	 OFFSET $SG191622
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  000e0	51		 push	 ecx
  000e1	68 c4 01 00 00	 push	 452			; 000001c4H
  000e6	68 00 00 00 00	 push	 OFFSET $SG191623
  000eb	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000f0	e9 e4 00 00 00	 jmp	 $LN6@CreateStru
$LN3@CreateStru:
; Line 456
  000f5	33 d2		 xor	 edx, edx
  000f7	89 55 a4	 mov	 DWORD PTR _srvDesc$[ebp], edx
  000fa	89 55 a8	 mov	 DWORD PTR _srvDesc$[ebp+4], edx
  000fd	89 55 ac	 mov	 DWORD PTR _srvDesc$[ebp+8], edx
  00100	89 55 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], edx
  00103	89 55 b4	 mov	 DWORD PTR _srvDesc$[ebp+16], edx
  00106	89 55 b8	 mov	 DWORD PTR _srvDesc$[ebp+20], edx
; Line 457
  00109	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp], 0
; Line 458
  00110	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp+4], 1
; Line 459
  00117	8b 45 08	 mov	 eax, DWORD PTR _iNumElements$[ebp]
  0011a	89 45 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], eax
; Line 460
  0011d	8b f4		 mov	 esi, esp
  0011f	8b 4d 10	 mov	 ecx, DWORD PTR _ppSRV$[ebp]
  00122	51		 push	 ecx
  00123	8d 55 a4	 lea	 edx, DWORD PTR _srvDesc$[ebp]
  00126	52		 push	 edx
  00127	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	51		 push	 ecx
  0012d	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00130	8b 02		 mov	 eax, DWORD PTR [edx]
  00132	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00135	51		 push	 ecx
  00136	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00139	ff d2		 call	 edx
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00145	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00149	7d 1c		 jge	 SHORT $LN2@CreateStru
  0014b	6a 01		 push	 1
  0014d	68 00 00 00 00	 push	 OFFSET $SG191628
  00152	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00155	50		 push	 eax
  00156	68 cc 01 00 00	 push	 460			; 000001ccH
  0015b	68 00 00 00 00	 push	 OFFSET $SG191629
  00160	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00165	eb 72		 jmp	 SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 464
  00167	33 c9		 xor	 ecx, ecx
  00169	89 4d 88	 mov	 DWORD PTR _uavDesc$[ebp], ecx
  0016c	89 4d 8c	 mov	 DWORD PTR _uavDesc$[ebp+4], ecx
  0016f	89 4d 90	 mov	 DWORD PTR _uavDesc$[ebp+8], ecx
  00172	89 4d 94	 mov	 DWORD PTR _uavDesc$[ebp+12], ecx
  00175	89 4d 98	 mov	 DWORD PTR _uavDesc$[ebp+16], ecx
; Line 465
  00178	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp], 0
; Line 466
  0017f	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp+4], 1
; Line 467
  00186	8b 55 08	 mov	 edx, DWORD PTR _iNumElements$[ebp]
  00189	89 55 94	 mov	 DWORD PTR _uavDesc$[ebp+12], edx
; Line 468
  0018c	8b f4		 mov	 esi, esp
  0018e	8b 45 14	 mov	 eax, DWORD PTR _ppUAV$[ebp]
  00191	50		 push	 eax
  00192	8d 4d 88	 lea	 ecx, DWORD PTR _uavDesc$[ebp]
  00195	51		 push	 ecx
  00196	8b 55 0c	 mov	 edx, DWORD PTR _ppBuffer$[ebp]
  00199	8b 02		 mov	 eax, DWORD PTR [edx]
  0019b	50		 push	 eax
  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  001a4	50		 push	 eax
  001a5	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  001a8	ff d1		 call	 ecx
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  001b4	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b8	7d 1c		 jge	 SHORT $LN1@CreateStru
  001ba	6a 01		 push	 1
  001bc	68 00 00 00 00	 push	 OFFSET $SG191634
  001c1	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  001c4	52		 push	 edx
  001c5	68 d4 01 00 00	 push	 468			; 000001d4H
  001ca	68 00 00 00 00	 push	 OFFSET $SG191635
  001cf	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001d4	eb 03		 jmp	 SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 470
  001d6	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 471
  001d9	52		 push	 edx
  001da	8b cd		 mov	 ecx, ebp
  001dc	50		 push	 eax
  001dd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@CreateStru
  001e3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001e8	58		 pop	 eax
  001e9	5a		 pop	 edx
  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ef	33 cd		 xor	 ecx, ebp
  001f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f6	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  001fc	3b ec		 cmp	 ebp, esp
  001fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c3		 ret	 0
  00207	90		 npad	 1
$LN15@CreateStru:
  00208	04 00 00 00	 DD	 4
  0020c	00 00 00 00	 DD	 $LN14@CreateStru
$LN14@CreateStru:
  00210	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00214	18 00 00 00	 DD	 24			; 00000018H
  00218	00 00 00 00	 DD	 $LN10@CreateStru
  0021c	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00220	0c 00 00 00	 DD	 12			; 0000000cH
  00224	00 00 00 00	 DD	 $LN11@CreateStru
  00228	a4 ff ff ff	 DD	 -92			; ffffffa4H
  0022c	18 00 00 00	 DD	 24			; 00000018H
  00230	00 00 00 00	 DD	 $LN12@CreateStru
  00234	88 ff ff ff	 DD	 -120			; ffffff88H
  00238	14 00 00 00	 DD	 20			; 00000014H
  0023c	00 00 00 00	 DD	 $LN13@CreateStru
$LN13@CreateStru:
  00240	75		 DB	 117			; 00000075H
  00241	61		 DB	 97			; 00000061H
  00242	76		 DB	 118			; 00000076H
  00243	44		 DB	 68			; 00000044H
  00244	65		 DB	 101			; 00000065H
  00245	73		 DB	 115			; 00000073H
  00246	63		 DB	 99			; 00000063H
  00247	00		 DB	 0
$LN12@CreateStru:
  00248	73		 DB	 115			; 00000073H
  00249	72		 DB	 114			; 00000072H
  0024a	76		 DB	 118			; 00000076H
  0024b	44		 DB	 68			; 00000044H
  0024c	65		 DB	 101			; 00000065H
  0024d	73		 DB	 115			; 00000073H
  0024e	63		 DB	 99			; 00000063H
  0024f	00		 DB	 0
$LN11@CreateStru:
  00250	62		 DB	 98			; 00000062H
  00251	75		 DB	 117			; 00000075H
  00252	66		 DB	 102			; 00000066H
  00253	66		 DB	 102			; 00000066H
  00254	65		 DB	 101			; 00000065H
  00255	72		 DB	 114			; 00000072H
  00256	49		 DB	 73			; 00000049H
  00257	6e		 DB	 110			; 0000006eH
  00258	69		 DB	 105			; 00000069H
  00259	74		 DB	 116			; 00000074H
  0025a	44		 DB	 68			; 00000044H
  0025b	61		 DB	 97			; 00000061H
  0025c	74		 DB	 116			; 00000074H
  0025d	61		 DB	 97			; 00000061H
  0025e	00		 DB	 0
$LN10@CreateStru:
  0025f	62		 DB	 98			; 00000062H
  00260	75		 DB	 117			; 00000075H
  00261	66		 DB	 102			; 00000066H
  00262	66		 DB	 102			; 00000066H
  00263	65		 DB	 101			; 00000065H
  00264	72		 DB	 114			; 00000072H
  00265	44		 DB	 68			; 00000044H
  00266	65		 DB	 101			; 00000065H
  00267	73		 DB	 115			; 00000073H
  00268	63		 DB	 99			; 00000063H
  00269	00		 DB	 0
??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z ENDP ; CreateStructuredBuffer<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z PROC ; CreateStructuredBuffer<ParticleDensity>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 430
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0000e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 431
  00024	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00029	89 45 f8	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 432
  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 436
  00033	33 c0		 xor	 eax, eax
  00035	89 45 d8	 mov	 DWORD PTR _bufferDesc$[ebp], eax
  00038	89 45 dc	 mov	 DWORD PTR _bufferDesc$[ebp+4], eax
  0003b	89 45 e0	 mov	 DWORD PTR _bufferDesc$[ebp+8], eax
  0003e	89 45 e4	 mov	 DWORD PTR _bufferDesc$[ebp+12], eax
  00041	89 45 e8	 mov	 DWORD PTR _bufferDesc$[ebp+16], eax
  00044	89 45 ec	 mov	 DWORD PTR _bufferDesc$[ebp+20], eax
; Line 437
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _iNumElements$[ebp]
  0004a	c1 e1 02	 shl	 ecx, 2
  0004d	89 4d d8	 mov	 DWORD PTR _bufferDesc$[ebp], ecx
; Line 438
  00050	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+4], 0
; Line 440
  00057	0f b6 55 1c	 movzx	 edx, BYTE PTR _read$[ebp]
  0005b	85 d2		 test	 edx, edx
  0005d	74 09		 je	 SHORT $LN5@CreateStru
; Line 441
  0005f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 0
; Line 442
  00066	eb 07		 jmp	 SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 443
  00068	c7 45 e4 00 00
	03 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 196608 ; 00030000H
$LN4@CreateStru:
; Line 445
  0006f	c7 45 e0 88 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+8], 136 ; 00000088H
; Line 446
  00076	c7 45 e8 40 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+16], 64 ; 00000040H
; Line 447
  0007d	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+20], 4
; Line 450
  00084	33 c0		 xor	 eax, eax
  00086	89 45 c4	 mov	 DWORD PTR _bufferInitData$[ebp], eax
  00089	89 45 c8	 mov	 DWORD PTR _bufferInitData$[ebp+4], eax
  0008c	89 45 cc	 mov	 DWORD PTR _bufferInitData$[ebp+8], eax
; Line 451
  0008f	8b 4d 18	 mov	 ecx, DWORD PTR _pInitialData$[ebp]
  00092	89 4d c4	 mov	 DWORD PTR _bufferInitData$[ebp], ecx
; Line 452
  00095	83 7d 18 00	 cmp	 DWORD PTR _pInitialData$[ebp], 0
  00099	74 08		 je	 SHORT $LN8@CreateStru
  0009b	8d 55 c4	 lea	 edx, DWORD PTR _bufferInitData$[ebp]
  0009e	89 55 80	 mov	 DWORD PTR tv80[ebp], edx
  000a1	eb 07		 jmp	 SHORT $LN9@CreateStru
$LN8@CreateStru:
  000a3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d 80	 mov	 ecx, DWORD PTR tv80[ebp]
  000b3	51		 push	 ecx
  000b4	8d 55 d8	 lea	 edx, DWORD PTR _bufferDesc$[ebp]
  000b7	52		 push	 edx
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  000c0	52		 push	 edx
  000c1	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000c4	ff d0		 call	 eax
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000d0	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d4	7d 1f		 jge	 SHORT $LN3@CreateStru
  000d6	6a 01		 push	 1
  000d8	68 00 00 00 00	 push	 OFFSET $SG191595
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  000e0	51		 push	 ecx
  000e1	68 c4 01 00 00	 push	 452			; 000001c4H
  000e6	68 00 00 00 00	 push	 OFFSET $SG191596
  000eb	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000f0	e9 e4 00 00 00	 jmp	 $LN6@CreateStru
$LN3@CreateStru:
; Line 456
  000f5	33 d2		 xor	 edx, edx
  000f7	89 55 a4	 mov	 DWORD PTR _srvDesc$[ebp], edx
  000fa	89 55 a8	 mov	 DWORD PTR _srvDesc$[ebp+4], edx
  000fd	89 55 ac	 mov	 DWORD PTR _srvDesc$[ebp+8], edx
  00100	89 55 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], edx
  00103	89 55 b4	 mov	 DWORD PTR _srvDesc$[ebp+16], edx
  00106	89 55 b8	 mov	 DWORD PTR _srvDesc$[ebp+20], edx
; Line 457
  00109	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp], 0
; Line 458
  00110	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp+4], 1
; Line 459
  00117	8b 45 08	 mov	 eax, DWORD PTR _iNumElements$[ebp]
  0011a	89 45 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], eax
; Line 460
  0011d	8b f4		 mov	 esi, esp
  0011f	8b 4d 10	 mov	 ecx, DWORD PTR _ppSRV$[ebp]
  00122	51		 push	 ecx
  00123	8d 55 a4	 lea	 edx, DWORD PTR _srvDesc$[ebp]
  00126	52		 push	 edx
  00127	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	51		 push	 ecx
  0012d	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00130	8b 02		 mov	 eax, DWORD PTR [edx]
  00132	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00135	51		 push	 ecx
  00136	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00139	ff d2		 call	 edx
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00145	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00149	7d 1c		 jge	 SHORT $LN2@CreateStru
  0014b	6a 01		 push	 1
  0014d	68 00 00 00 00	 push	 OFFSET $SG191601
  00152	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00155	50		 push	 eax
  00156	68 cc 01 00 00	 push	 460			; 000001ccH
  0015b	68 00 00 00 00	 push	 OFFSET $SG191602
  00160	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00165	eb 72		 jmp	 SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 464
  00167	33 c9		 xor	 ecx, ecx
  00169	89 4d 88	 mov	 DWORD PTR _uavDesc$[ebp], ecx
  0016c	89 4d 8c	 mov	 DWORD PTR _uavDesc$[ebp+4], ecx
  0016f	89 4d 90	 mov	 DWORD PTR _uavDesc$[ebp+8], ecx
  00172	89 4d 94	 mov	 DWORD PTR _uavDesc$[ebp+12], ecx
  00175	89 4d 98	 mov	 DWORD PTR _uavDesc$[ebp+16], ecx
; Line 465
  00178	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp], 0
; Line 466
  0017f	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp+4], 1
; Line 467
  00186	8b 55 08	 mov	 edx, DWORD PTR _iNumElements$[ebp]
  00189	89 55 94	 mov	 DWORD PTR _uavDesc$[ebp+12], edx
; Line 468
  0018c	8b f4		 mov	 esi, esp
  0018e	8b 45 14	 mov	 eax, DWORD PTR _ppUAV$[ebp]
  00191	50		 push	 eax
  00192	8d 4d 88	 lea	 ecx, DWORD PTR _uavDesc$[ebp]
  00195	51		 push	 ecx
  00196	8b 55 0c	 mov	 edx, DWORD PTR _ppBuffer$[ebp]
  00199	8b 02		 mov	 eax, DWORD PTR [edx]
  0019b	50		 push	 eax
  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  001a4	50		 push	 eax
  001a5	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  001a8	ff d1		 call	 ecx
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  001b4	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b8	7d 1c		 jge	 SHORT $LN1@CreateStru
  001ba	6a 01		 push	 1
  001bc	68 00 00 00 00	 push	 OFFSET $SG191607
  001c1	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  001c4	52		 push	 edx
  001c5	68 d4 01 00 00	 push	 468			; 000001d4H
  001ca	68 00 00 00 00	 push	 OFFSET $SG191608
  001cf	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001d4	eb 03		 jmp	 SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 470
  001d6	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 471
  001d9	52		 push	 edx
  001da	8b cd		 mov	 ecx, ebp
  001dc	50		 push	 eax
  001dd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@CreateStru
  001e3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001e8	58		 pop	 eax
  001e9	5a		 pop	 edx
  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ef	33 cd		 xor	 ecx, ebp
  001f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f6	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  001fc	3b ec		 cmp	 ebp, esp
  001fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c3		 ret	 0
  00207	90		 npad	 1
$LN15@CreateStru:
  00208	04 00 00 00	 DD	 4
  0020c	00 00 00 00	 DD	 $LN14@CreateStru
$LN14@CreateStru:
  00210	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00214	18 00 00 00	 DD	 24			; 00000018H
  00218	00 00 00 00	 DD	 $LN10@CreateStru
  0021c	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00220	0c 00 00 00	 DD	 12			; 0000000cH
  00224	00 00 00 00	 DD	 $LN11@CreateStru
  00228	a4 ff ff ff	 DD	 -92			; ffffffa4H
  0022c	18 00 00 00	 DD	 24			; 00000018H
  00230	00 00 00 00	 DD	 $LN12@CreateStru
  00234	88 ff ff ff	 DD	 -120			; ffffff88H
  00238	14 00 00 00	 DD	 20			; 00000014H
  0023c	00 00 00 00	 DD	 $LN13@CreateStru
$LN13@CreateStru:
  00240	75		 DB	 117			; 00000075H
  00241	61		 DB	 97			; 00000061H
  00242	76		 DB	 118			; 00000076H
  00243	44		 DB	 68			; 00000044H
  00244	65		 DB	 101			; 00000065H
  00245	73		 DB	 115			; 00000073H
  00246	63		 DB	 99			; 00000063H
  00247	00		 DB	 0
$LN12@CreateStru:
  00248	73		 DB	 115			; 00000073H
  00249	72		 DB	 114			; 00000072H
  0024a	76		 DB	 118			; 00000076H
  0024b	44		 DB	 68			; 00000044H
  0024c	65		 DB	 101			; 00000065H
  0024d	73		 DB	 115			; 00000073H
  0024e	63		 DB	 99			; 00000063H
  0024f	00		 DB	 0
$LN11@CreateStru:
  00250	62		 DB	 98			; 00000062H
  00251	75		 DB	 117			; 00000075H
  00252	66		 DB	 102			; 00000066H
  00253	66		 DB	 102			; 00000066H
  00254	65		 DB	 101			; 00000065H
  00255	72		 DB	 114			; 00000072H
  00256	49		 DB	 73			; 00000049H
  00257	6e		 DB	 110			; 0000006eH
  00258	69		 DB	 105			; 00000069H
  00259	74		 DB	 116			; 00000074H
  0025a	44		 DB	 68			; 00000044H
  0025b	61		 DB	 97			; 00000061H
  0025c	74		 DB	 116			; 00000074H
  0025d	61		 DB	 97			; 00000061H
  0025e	00		 DB	 0
$LN10@CreateStru:
  0025f	62		 DB	 98			; 00000062H
  00260	75		 DB	 117			; 00000075H
  00261	66		 DB	 102			; 00000066H
  00262	66		 DB	 102			; 00000066H
  00263	65		 DB	 101			; 00000065H
  00264	72		 DB	 114			; 00000072H
  00265	44		 DB	 68			; 00000044H
  00266	65		 DB	 101			; 00000065H
  00267	73		 DB	 115			; 00000073H
  00268	63		 DB	 99			; 00000063H
  00269	00		 DB	 0
??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z ENDP ; CreateStructuredBuffer<ParticleDensity>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z PROC ; CreateStructuredBuffer<ParticleForces>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 430
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0000e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 431
  00024	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00029	89 45 f8	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 432
  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 436
  00033	33 c0		 xor	 eax, eax
  00035	89 45 d8	 mov	 DWORD PTR _bufferDesc$[ebp], eax
  00038	89 45 dc	 mov	 DWORD PTR _bufferDesc$[ebp+4], eax
  0003b	89 45 e0	 mov	 DWORD PTR _bufferDesc$[ebp+8], eax
  0003e	89 45 e4	 mov	 DWORD PTR _bufferDesc$[ebp+12], eax
  00041	89 45 e8	 mov	 DWORD PTR _bufferDesc$[ebp+16], eax
  00044	89 45 ec	 mov	 DWORD PTR _bufferDesc$[ebp+20], eax
; Line 437
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _iNumElements$[ebp]
  0004a	c1 e1 03	 shl	 ecx, 3
  0004d	89 4d d8	 mov	 DWORD PTR _bufferDesc$[ebp], ecx
; Line 438
  00050	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+4], 0
; Line 440
  00057	0f b6 55 1c	 movzx	 edx, BYTE PTR _read$[ebp]
  0005b	85 d2		 test	 edx, edx
  0005d	74 09		 je	 SHORT $LN5@CreateStru
; Line 441
  0005f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 0
; Line 442
  00066	eb 07		 jmp	 SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 443
  00068	c7 45 e4 00 00
	03 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 196608 ; 00030000H
$LN4@CreateStru:
; Line 445
  0006f	c7 45 e0 88 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+8], 136 ; 00000088H
; Line 446
  00076	c7 45 e8 40 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+16], 64 ; 00000040H
; Line 447
  0007d	c7 45 ec 08 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+20], 8
; Line 450
  00084	33 c0		 xor	 eax, eax
  00086	89 45 c4	 mov	 DWORD PTR _bufferInitData$[ebp], eax
  00089	89 45 c8	 mov	 DWORD PTR _bufferInitData$[ebp+4], eax
  0008c	89 45 cc	 mov	 DWORD PTR _bufferInitData$[ebp+8], eax
; Line 451
  0008f	8b 4d 18	 mov	 ecx, DWORD PTR _pInitialData$[ebp]
  00092	89 4d c4	 mov	 DWORD PTR _bufferInitData$[ebp], ecx
; Line 452
  00095	83 7d 18 00	 cmp	 DWORD PTR _pInitialData$[ebp], 0
  00099	74 08		 je	 SHORT $LN8@CreateStru
  0009b	8d 55 c4	 lea	 edx, DWORD PTR _bufferInitData$[ebp]
  0009e	89 55 80	 mov	 DWORD PTR tv80[ebp], edx
  000a1	eb 07		 jmp	 SHORT $LN9@CreateStru
$LN8@CreateStru:
  000a3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d 80	 mov	 ecx, DWORD PTR tv80[ebp]
  000b3	51		 push	 ecx
  000b4	8d 55 d8	 lea	 edx, DWORD PTR _bufferDesc$[ebp]
  000b7	52		 push	 edx
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  000c0	52		 push	 edx
  000c1	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000c4	ff d0		 call	 eax
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000d0	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d4	7d 1f		 jge	 SHORT $LN3@CreateStru
  000d6	6a 01		 push	 1
  000d8	68 00 00 00 00	 push	 OFFSET $SG191568
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  000e0	51		 push	 ecx
  000e1	68 c4 01 00 00	 push	 452			; 000001c4H
  000e6	68 00 00 00 00	 push	 OFFSET $SG191569
  000eb	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000f0	e9 e4 00 00 00	 jmp	 $LN6@CreateStru
$LN3@CreateStru:
; Line 456
  000f5	33 d2		 xor	 edx, edx
  000f7	89 55 a4	 mov	 DWORD PTR _srvDesc$[ebp], edx
  000fa	89 55 a8	 mov	 DWORD PTR _srvDesc$[ebp+4], edx
  000fd	89 55 ac	 mov	 DWORD PTR _srvDesc$[ebp+8], edx
  00100	89 55 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], edx
  00103	89 55 b4	 mov	 DWORD PTR _srvDesc$[ebp+16], edx
  00106	89 55 b8	 mov	 DWORD PTR _srvDesc$[ebp+20], edx
; Line 457
  00109	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp], 0
; Line 458
  00110	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp+4], 1
; Line 459
  00117	8b 45 08	 mov	 eax, DWORD PTR _iNumElements$[ebp]
  0011a	89 45 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], eax
; Line 460
  0011d	8b f4		 mov	 esi, esp
  0011f	8b 4d 10	 mov	 ecx, DWORD PTR _ppSRV$[ebp]
  00122	51		 push	 ecx
  00123	8d 55 a4	 lea	 edx, DWORD PTR _srvDesc$[ebp]
  00126	52		 push	 edx
  00127	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	51		 push	 ecx
  0012d	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00130	8b 02		 mov	 eax, DWORD PTR [edx]
  00132	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00135	51		 push	 ecx
  00136	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00139	ff d2		 call	 edx
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00145	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00149	7d 1c		 jge	 SHORT $LN2@CreateStru
  0014b	6a 01		 push	 1
  0014d	68 00 00 00 00	 push	 OFFSET $SG191574
  00152	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00155	50		 push	 eax
  00156	68 cc 01 00 00	 push	 460			; 000001ccH
  0015b	68 00 00 00 00	 push	 OFFSET $SG191575
  00160	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00165	eb 72		 jmp	 SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 464
  00167	33 c9		 xor	 ecx, ecx
  00169	89 4d 88	 mov	 DWORD PTR _uavDesc$[ebp], ecx
  0016c	89 4d 8c	 mov	 DWORD PTR _uavDesc$[ebp+4], ecx
  0016f	89 4d 90	 mov	 DWORD PTR _uavDesc$[ebp+8], ecx
  00172	89 4d 94	 mov	 DWORD PTR _uavDesc$[ebp+12], ecx
  00175	89 4d 98	 mov	 DWORD PTR _uavDesc$[ebp+16], ecx
; Line 465
  00178	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp], 0
; Line 466
  0017f	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp+4], 1
; Line 467
  00186	8b 55 08	 mov	 edx, DWORD PTR _iNumElements$[ebp]
  00189	89 55 94	 mov	 DWORD PTR _uavDesc$[ebp+12], edx
; Line 468
  0018c	8b f4		 mov	 esi, esp
  0018e	8b 45 14	 mov	 eax, DWORD PTR _ppUAV$[ebp]
  00191	50		 push	 eax
  00192	8d 4d 88	 lea	 ecx, DWORD PTR _uavDesc$[ebp]
  00195	51		 push	 ecx
  00196	8b 55 0c	 mov	 edx, DWORD PTR _ppBuffer$[ebp]
  00199	8b 02		 mov	 eax, DWORD PTR [edx]
  0019b	50		 push	 eax
  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  001a4	50		 push	 eax
  001a5	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  001a8	ff d1		 call	 ecx
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  001b4	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b8	7d 1c		 jge	 SHORT $LN1@CreateStru
  001ba	6a 01		 push	 1
  001bc	68 00 00 00 00	 push	 OFFSET $SG191580
  001c1	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  001c4	52		 push	 edx
  001c5	68 d4 01 00 00	 push	 468			; 000001d4H
  001ca	68 00 00 00 00	 push	 OFFSET $SG191581
  001cf	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001d4	eb 03		 jmp	 SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 470
  001d6	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 471
  001d9	52		 push	 edx
  001da	8b cd		 mov	 ecx, ebp
  001dc	50		 push	 eax
  001dd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@CreateStru
  001e3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001e8	58		 pop	 eax
  001e9	5a		 pop	 edx
  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ef	33 cd		 xor	 ecx, ebp
  001f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f6	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  001fc	3b ec		 cmp	 ebp, esp
  001fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c3		 ret	 0
  00207	90		 npad	 1
$LN15@CreateStru:
  00208	04 00 00 00	 DD	 4
  0020c	00 00 00 00	 DD	 $LN14@CreateStru
$LN14@CreateStru:
  00210	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00214	18 00 00 00	 DD	 24			; 00000018H
  00218	00 00 00 00	 DD	 $LN10@CreateStru
  0021c	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00220	0c 00 00 00	 DD	 12			; 0000000cH
  00224	00 00 00 00	 DD	 $LN11@CreateStru
  00228	a4 ff ff ff	 DD	 -92			; ffffffa4H
  0022c	18 00 00 00	 DD	 24			; 00000018H
  00230	00 00 00 00	 DD	 $LN12@CreateStru
  00234	88 ff ff ff	 DD	 -120			; ffffff88H
  00238	14 00 00 00	 DD	 20			; 00000014H
  0023c	00 00 00 00	 DD	 $LN13@CreateStru
$LN13@CreateStru:
  00240	75		 DB	 117			; 00000075H
  00241	61		 DB	 97			; 00000061H
  00242	76		 DB	 118			; 00000076H
  00243	44		 DB	 68			; 00000044H
  00244	65		 DB	 101			; 00000065H
  00245	73		 DB	 115			; 00000073H
  00246	63		 DB	 99			; 00000063H
  00247	00		 DB	 0
$LN12@CreateStru:
  00248	73		 DB	 115			; 00000073H
  00249	72		 DB	 114			; 00000072H
  0024a	76		 DB	 118			; 00000076H
  0024b	44		 DB	 68			; 00000044H
  0024c	65		 DB	 101			; 00000065H
  0024d	73		 DB	 115			; 00000073H
  0024e	63		 DB	 99			; 00000063H
  0024f	00		 DB	 0
$LN11@CreateStru:
  00250	62		 DB	 98			; 00000062H
  00251	75		 DB	 117			; 00000075H
  00252	66		 DB	 102			; 00000066H
  00253	66		 DB	 102			; 00000066H
  00254	65		 DB	 101			; 00000065H
  00255	72		 DB	 114			; 00000072H
  00256	49		 DB	 73			; 00000049H
  00257	6e		 DB	 110			; 0000006eH
  00258	69		 DB	 105			; 00000069H
  00259	74		 DB	 116			; 00000074H
  0025a	44		 DB	 68			; 00000044H
  0025b	61		 DB	 97			; 00000061H
  0025c	74		 DB	 116			; 00000074H
  0025d	61		 DB	 97			; 00000061H
  0025e	00		 DB	 0
$LN10@CreateStru:
  0025f	62		 DB	 98			; 00000062H
  00260	75		 DB	 117			; 00000075H
  00261	66		 DB	 102			; 00000066H
  00262	66		 DB	 102			; 00000066H
  00263	65		 DB	 101			; 00000065H
  00264	72		 DB	 114			; 00000072H
  00265	44		 DB	 68			; 00000044H
  00266	65		 DB	 101			; 00000065H
  00267	73		 DB	 115			; 00000073H
  00268	63		 DB	 99			; 00000063H
  00269	00		 DB	 0
??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z ENDP ; CreateStructuredBuffer<ParticleForces>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z
_TEXT	SEGMENT
tv80 = -128						; size = 4
_uavDesc$ = -120					; size = 20
_srvDesc$ = -92						; size = 24
_bufferInitData$ = -60					; size = 12
_bufferDesc$ = -40					; size = 24
_hr$ = -12						; size = 4
_pd3dDevice$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
_iNumElements$ = 8					; size = 4
_ppBuffer$ = 12						; size = 4
_ppSRV$ = 16						; size = 4
_ppUAV$ = 20						; size = 4
_pInitialData$ = 24					; size = 4
_read$ = 28						; size = 1
??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z PROC ; CreateStructuredBuffer<Particle>, COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 430
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0000e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 431
  00024	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00029	89 45 f8	 mov	 DWORD PTR _pd3dDevice$[ebp], eax
; Line 432
  0002c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 436
  00033	33 c0		 xor	 eax, eax
  00035	89 45 d8	 mov	 DWORD PTR _bufferDesc$[ebp], eax
  00038	89 45 dc	 mov	 DWORD PTR _bufferDesc$[ebp+4], eax
  0003b	89 45 e0	 mov	 DWORD PTR _bufferDesc$[ebp+8], eax
  0003e	89 45 e4	 mov	 DWORD PTR _bufferDesc$[ebp+12], eax
  00041	89 45 e8	 mov	 DWORD PTR _bufferDesc$[ebp+16], eax
  00044	89 45 ec	 mov	 DWORD PTR _bufferDesc$[ebp+20], eax
; Line 437
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _iNumElements$[ebp]
  0004a	c1 e1 04	 shl	 ecx, 4
  0004d	89 4d d8	 mov	 DWORD PTR _bufferDesc$[ebp], ecx
; Line 438
  00050	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+4], 0
; Line 440
  00057	0f b6 55 1c	 movzx	 edx, BYTE PTR _read$[ebp]
  0005b	85 d2		 test	 edx, edx
  0005d	74 09		 je	 SHORT $LN5@CreateStru
; Line 441
  0005f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 0
; Line 442
  00066	eb 07		 jmp	 SHORT $LN4@CreateStru
$LN5@CreateStru:
; Line 443
  00068	c7 45 e4 00 00
	03 00		 mov	 DWORD PTR _bufferDesc$[ebp+12], 196608 ; 00030000H
$LN4@CreateStru:
; Line 445
  0006f	c7 45 e0 88 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+8], 136 ; 00000088H
; Line 446
  00076	c7 45 e8 40 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+16], 64 ; 00000040H
; Line 447
  0007d	c7 45 ec 10 00
	00 00		 mov	 DWORD PTR _bufferDesc$[ebp+20], 16 ; 00000010H
; Line 450
  00084	33 c0		 xor	 eax, eax
  00086	89 45 c4	 mov	 DWORD PTR _bufferInitData$[ebp], eax
  00089	89 45 c8	 mov	 DWORD PTR _bufferInitData$[ebp+4], eax
  0008c	89 45 cc	 mov	 DWORD PTR _bufferInitData$[ebp+8], eax
; Line 451
  0008f	8b 4d 18	 mov	 ecx, DWORD PTR _pInitialData$[ebp]
  00092	89 4d c4	 mov	 DWORD PTR _bufferInitData$[ebp], ecx
; Line 452
  00095	83 7d 18 00	 cmp	 DWORD PTR _pInitialData$[ebp], 0
  00099	74 08		 je	 SHORT $LN8@CreateStru
  0009b	8d 55 c4	 lea	 edx, DWORD PTR _bufferInitData$[ebp]
  0009e	89 55 80	 mov	 DWORD PTR tv80[ebp], edx
  000a1	eb 07		 jmp	 SHORT $LN9@CreateStru
$LN8@CreateStru:
  000a3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN9@CreateStru:
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d 80	 mov	 ecx, DWORD PTR tv80[ebp]
  000b3	51		 push	 ecx
  000b4	8d 55 d8	 lea	 edx, DWORD PTR _bufferDesc$[ebp]
  000b7	52		 push	 edx
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  000c0	52		 push	 edx
  000c1	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000c4	ff d0		 call	 eax
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  000d0	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000d4	7d 1f		 jge	 SHORT $LN3@CreateStru
  000d6	6a 01		 push	 1
  000d8	68 00 00 00 00	 push	 OFFSET $SG191541
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _hr$[ebp]
  000e0	51		 push	 ecx
  000e1	68 c4 01 00 00	 push	 452			; 000001c4H
  000e6	68 00 00 00 00	 push	 OFFSET $SG191542
  000eb	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  000f0	e9 e4 00 00 00	 jmp	 $LN6@CreateStru
$LN3@CreateStru:
; Line 456
  000f5	33 d2		 xor	 edx, edx
  000f7	89 55 a4	 mov	 DWORD PTR _srvDesc$[ebp], edx
  000fa	89 55 a8	 mov	 DWORD PTR _srvDesc$[ebp+4], edx
  000fd	89 55 ac	 mov	 DWORD PTR _srvDesc$[ebp+8], edx
  00100	89 55 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], edx
  00103	89 55 b4	 mov	 DWORD PTR _srvDesc$[ebp+16], edx
  00106	89 55 b8	 mov	 DWORD PTR _srvDesc$[ebp+20], edx
; Line 457
  00109	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp], 0
; Line 458
  00110	c7 45 a8 01 00
	00 00		 mov	 DWORD PTR _srvDesc$[ebp+4], 1
; Line 459
  00117	8b 45 08	 mov	 eax, DWORD PTR _iNumElements$[ebp]
  0011a	89 45 b0	 mov	 DWORD PTR _srvDesc$[ebp+12], eax
; Line 460
  0011d	8b f4		 mov	 esi, esp
  0011f	8b 4d 10	 mov	 ecx, DWORD PTR _ppSRV$[ebp]
  00122	51		 push	 ecx
  00123	8d 55 a4	 lea	 edx, DWORD PTR _srvDesc$[ebp]
  00126	52		 push	 edx
  00127	8b 45 0c	 mov	 eax, DWORD PTR _ppBuffer$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	51		 push	 ecx
  0012d	8b 55 f8	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00130	8b 02		 mov	 eax, DWORD PTR [edx]
  00132	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00135	51		 push	 ecx
  00136	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00139	ff d2		 call	 edx
  0013b	3b f4		 cmp	 esi, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  00145	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00149	7d 1c		 jge	 SHORT $LN2@CreateStru
  0014b	6a 01		 push	 1
  0014d	68 00 00 00 00	 push	 OFFSET $SG191547
  00152	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
  00155	50		 push	 eax
  00156	68 cc 01 00 00	 push	 460			; 000001ccH
  0015b	68 00 00 00 00	 push	 OFFSET $SG191548
  00160	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00165	eb 72		 jmp	 SHORT $LN6@CreateStru
$LN2@CreateStru:
; Line 464
  00167	33 c9		 xor	 ecx, ecx
  00169	89 4d 88	 mov	 DWORD PTR _uavDesc$[ebp], ecx
  0016c	89 4d 8c	 mov	 DWORD PTR _uavDesc$[ebp+4], ecx
  0016f	89 4d 90	 mov	 DWORD PTR _uavDesc$[ebp+8], ecx
  00172	89 4d 94	 mov	 DWORD PTR _uavDesc$[ebp+12], ecx
  00175	89 4d 98	 mov	 DWORD PTR _uavDesc$[ebp+16], ecx
; Line 465
  00178	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp], 0
; Line 466
  0017f	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR _uavDesc$[ebp+4], 1
; Line 467
  00186	8b 55 08	 mov	 edx, DWORD PTR _iNumElements$[ebp]
  00189	89 55 94	 mov	 DWORD PTR _uavDesc$[ebp+12], edx
; Line 468
  0018c	8b f4		 mov	 esi, esp
  0018e	8b 45 14	 mov	 eax, DWORD PTR _ppUAV$[ebp]
  00191	50		 push	 eax
  00192	8d 4d 88	 lea	 ecx, DWORD PTR _uavDesc$[ebp]
  00195	51		 push	 ecx
  00196	8b 55 0c	 mov	 edx, DWORD PTR _ppBuffer$[ebp]
  00199	8b 02		 mov	 eax, DWORD PTR [edx]
  0019b	50		 push	 eax
  0019c	8b 4d f8	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0019f	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a1	8b 45 f8	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  001a4	50		 push	 eax
  001a5	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  001a8	ff d1		 call	 ecx
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	89 45 f4	 mov	 DWORD PTR _hr$[ebp], eax
  001b4	83 7d f4 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001b8	7d 1c		 jge	 SHORT $LN1@CreateStru
  001ba	6a 01		 push	 1
  001bc	68 00 00 00 00	 push	 OFFSET $SG191553
  001c1	8b 55 f4	 mov	 edx, DWORD PTR _hr$[ebp]
  001c4	52		 push	 edx
  001c5	68 d4 01 00 00	 push	 468			; 000001d4H
  001ca	68 00 00 00 00	 push	 OFFSET $SG191554
  001cf	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001d4	eb 03		 jmp	 SHORT $LN6@CreateStru
$LN1@CreateStru:
; Line 470
  001d6	8b 45 f4	 mov	 eax, DWORD PTR _hr$[ebp]
$LN6@CreateStru:
; Line 471
  001d9	52		 push	 edx
  001da	8b cd		 mov	 ecx, ebp
  001dc	50		 push	 eax
  001dd	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN15@CreateStru
  001e3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001e8	58		 pop	 eax
  001e9	5a		 pop	 edx
  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ef	33 cd		 xor	 ecx, ebp
  001f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f6	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  001fc	3b ec		 cmp	 ebp, esp
  001fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00203	8b e5		 mov	 esp, ebp
  00205	5d		 pop	 ebp
  00206	c3		 ret	 0
  00207	90		 npad	 1
$LN15@CreateStru:
  00208	04 00 00 00	 DD	 4
  0020c	00 00 00 00	 DD	 $LN14@CreateStru
$LN14@CreateStru:
  00210	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00214	18 00 00 00	 DD	 24			; 00000018H
  00218	00 00 00 00	 DD	 $LN10@CreateStru
  0021c	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00220	0c 00 00 00	 DD	 12			; 0000000cH
  00224	00 00 00 00	 DD	 $LN11@CreateStru
  00228	a4 ff ff ff	 DD	 -92			; ffffffa4H
  0022c	18 00 00 00	 DD	 24			; 00000018H
  00230	00 00 00 00	 DD	 $LN12@CreateStru
  00234	88 ff ff ff	 DD	 -120			; ffffff88H
  00238	14 00 00 00	 DD	 20			; 00000014H
  0023c	00 00 00 00	 DD	 $LN13@CreateStru
$LN13@CreateStru:
  00240	75		 DB	 117			; 00000075H
  00241	61		 DB	 97			; 00000061H
  00242	76		 DB	 118			; 00000076H
  00243	44		 DB	 68			; 00000044H
  00244	65		 DB	 101			; 00000065H
  00245	73		 DB	 115			; 00000073H
  00246	63		 DB	 99			; 00000063H
  00247	00		 DB	 0
$LN12@CreateStru:
  00248	73		 DB	 115			; 00000073H
  00249	72		 DB	 114			; 00000072H
  0024a	76		 DB	 118			; 00000076H
  0024b	44		 DB	 68			; 00000044H
  0024c	65		 DB	 101			; 00000065H
  0024d	73		 DB	 115			; 00000073H
  0024e	63		 DB	 99			; 00000063H
  0024f	00		 DB	 0
$LN11@CreateStru:
  00250	62		 DB	 98			; 00000062H
  00251	75		 DB	 117			; 00000075H
  00252	66		 DB	 102			; 00000066H
  00253	66		 DB	 102			; 00000066H
  00254	65		 DB	 101			; 00000065H
  00255	72		 DB	 114			; 00000072H
  00256	49		 DB	 73			; 00000049H
  00257	6e		 DB	 110			; 0000006eH
  00258	69		 DB	 105			; 00000069H
  00259	74		 DB	 116			; 00000074H
  0025a	44		 DB	 68			; 00000044H
  0025b	61		 DB	 97			; 00000061H
  0025c	74		 DB	 116			; 00000074H
  0025d	61		 DB	 97			; 00000061H
  0025e	00		 DB	 0
$LN10@CreateStru:
  0025f	62		 DB	 98			; 00000062H
  00260	75		 DB	 117			; 00000075H
  00261	66		 DB	 102			; 00000066H
  00262	66		 DB	 102			; 00000066H
  00263	65		 DB	 101			; 00000065H
  00264	72		 DB	 114			; 00000072H
  00265	44		 DB	 68			; 00000044H
  00266	65		 DB	 101			; 00000065H
  00267	73		 DB	 115			; 00000073H
  00268	63		 DB	 99			; 00000063H
  00269	00		 DB	 0
??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z ENDP ; CreateStructuredBuffer<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv290 = -136						; size = 4
tv289 = -132						; size = 4
tv288 = -125						; size = 1
tv287 = -124						; size = 8
tv286 = -116						; size = 4
tv285 = -112						; size = 4
tv284 = -108						; size = 4
tv283 = -101						; size = 1
tv137 = -100						; size = 4
tv135 = -96						; size = 8
tv342 = -88						; size = 8
tv328 = -80						; size = 8
$T2 = -72						; size = 4
$T3 = -68						; size = 4
$T4 = -64						; size = 4
$T5 = -60						; size = 4
$T6 = -56						; size = 4
__Ok$ = -48						; size = 8
__Pad$ = -36						; size = 8
__Count$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 787
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 78	 sub	 esp, 120		; 00000078H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8d bd 78 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-136]
  0001e	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002f	33 c5		 xor	 eax, ebp
  00031	50		 push	 eax
  00032	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00035	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 790
  0003e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0
; Line 791
  00045	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  0004e	83 c4 04	 add	 esp, 4
  00051	33 c9		 xor	 ecx, ecx
  00053	89 45 e4	 mov	 DWORD PTR __Count$[ebp], eax
  00056	89 4d e8	 mov	 DWORD PTR __Count$[ebp+4], ecx
; Line 793
  00059	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0005c	8b 02		 mov	 eax, DWORD PTR [edx]
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00061	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00064	8b f4		 mov	 esi, esp
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	89 45 b0	 mov	 DWORD PTR tv328[ebp], eax
  00076	89 55 b4	 mov	 DWORD PTR tv328[ebp+4], edx
  00079	83 7d b4 00	 cmp	 DWORD PTR tv328[ebp+4], 0
  0007d	7c 62		 jl	 SHORT $LN17@operator
  0007f	7f 06		 jg	 SHORT $LN24@operator
  00081	83 7d b0 00	 cmp	 DWORD PTR tv328[ebp], 0
  00085	76 5a		 jbe	 SHORT $LN17@operator
$LN24@operator:
  00087	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0008a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008c	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0008f	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00092	8b f4		 mov	 esi, esp
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	89 45 a8	 mov	 DWORD PTR tv342[ebp], eax
  000a4	89 55 ac	 mov	 DWORD PTR tv342[ebp+4], edx
  000a7	8b 45 ac	 mov	 eax, DWORD PTR tv342[ebp+4]
  000aa	3b 45 e8	 cmp	 eax, DWORD PTR __Count$[ebp+4]
  000ad	7c 32		 jl	 SHORT $LN17@operator
  000af	7f 08		 jg	 SHORT $LN25@operator
  000b1	8b 4d a8	 mov	 ecx, DWORD PTR tv342[ebp]
  000b4	3b 4d e4	 cmp	 ecx, DWORD PTR __Count$[ebp]
  000b7	76 28		 jbe	 SHORT $LN17@operator
$LN25@operator:
  000b9	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000bc	8b 02		 mov	 eax, DWORD PTR [edx]
  000be	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  000c1	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  000c4	8b f4		 mov	 esi, esp
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000cc	3b f4		 cmp	 esi, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	2b 45 e4	 sub	 eax, DWORD PTR __Count$[ebp]
  000d6	1b 55 e8	 sbb	 edx, DWORD PTR __Count$[ebp+4]
  000d9	89 45 a0	 mov	 DWORD PTR tv135[ebp], eax
  000dc	89 55 a4	 mov	 DWORD PTR tv135[ebp+4], edx
  000df	eb 09		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000e1	66 0f 57 c0	 xorpd	 xmm0, xmm0
  000e5	66 0f 13 45 a0	 movlpd	 QWORD PTR tv135[ebp], xmm0
$LN18@operator:
  000ea	8b 4d a0	 mov	 ecx, DWORD PTR tv135[ebp]
  000ed	89 4d dc	 mov	 DWORD PTR __Pad$[ebp], ecx
  000f0	8b 55 a4	 mov	 edx, DWORD PTR tv135[ebp+4]
  000f3	89 55 e0	 mov	 DWORD PTR __Pad$[ebp+4], edx
; Line 794
  000f6	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000f9	50		 push	 eax
  000fa	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  000fd	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  00102	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 796
  00109	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  0010c	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00111	0f b6 c8	 movzx	 ecx, al
  00114	85 c9		 test	 ecx, ecx
  00116	75 0e		 jne	 SHORT $LN14@operator
; Line 797
  00118	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  0011b	83 ca 04	 or	 edx, 4
  0011e	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 798
  00121	e9 6e 02 00 00	 jmp	 $LN13@operator
$LN14@operator:
; Line 800
  00126	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
; Line 801
  0012a	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0012d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012f	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00132	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00135	8b f4		 mov	 esi, esp
  00137	8b ca		 mov	 ecx, edx
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  0013f	3b f4		 cmp	 esi, esp
  00141	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00146	89 45 9c	 mov	 DWORD PTR tv137[ebp], eax
  00149	8b 45 9c	 mov	 eax, DWORD PTR tv137[ebp]
  0014c	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00151	83 f8 40	 cmp	 eax, 64			; 00000040H
  00154	0f 84 b7 00 00
	00		 je	 $LN11@operator
; Line 802
  0015a	eb 12		 jmp	 SHORT $LN10@operator
$LN9@operator:
  0015c	8b 4d dc	 mov	 ecx, DWORD PTR __Pad$[ebp]
  0015f	83 e9 01	 sub	 ecx, 1
  00162	8b 55 e0	 mov	 edx, DWORD PTR __Pad$[ebp+4]
  00165	83 da 00	 sbb	 edx, 0
  00168	89 4d dc	 mov	 DWORD PTR __Pad$[ebp], ecx
  0016b	89 55 e0	 mov	 DWORD PTR __Pad$[ebp+4], edx
$LN10@operator:
  0016e	83 7d e0 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  00172	0f 8c 99 00 00
	00		 jl	 $LN11@operator
  00178	7f 0a		 jg	 SHORT $LN26@operator
  0017a	83 7d dc 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  0017e	0f 86 8d 00 00
	00		 jbe	 $LN11@operator
$LN26@operator:
; Line 804
  00184	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00187	8b 08		 mov	 ecx, DWORD PTR [eax]
  00189	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0018c	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0018f	8b f4		 mov	 esi, esp
  00191	8b ca		 mov	 ecx, edx
  00193	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
  00199	3b f4		 cmp	 esi, esp
  0019b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a0	88 45 9b	 mov	 BYTE PTR tv283[ebp], al
  001a3	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  001a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a8	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  001ab	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  001ae	8b f4		 mov	 esi, esp
  001b0	8b ca		 mov	 ecx, edx
  001b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001b8	3b f4		 cmp	 esi, esp
  001ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001bf	89 45 94	 mov	 DWORD PTR tv284[ebp], eax
  001c2	8b f4		 mov	 esi, esp
  001c4	0f b6 45 9b	 movzx	 eax, BYTE PTR tv283[ebp]
  001c8	50		 push	 eax
  001c9	8b 4d 94	 mov	 ecx, DWORD PTR tv284[ebp]
  001cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
  001d2	3b f4		 cmp	 esi, esp
  001d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d9	89 45 90	 mov	 DWORD PTR tv285[ebp], eax
  001dc	8b 4d 90	 mov	 ecx, DWORD PTR tv285[ebp]
  001df	89 4d c8	 mov	 DWORD PTR $T6[ebp], ecx
  001e2	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  001e7	89 45 c4	 mov	 DWORD PTR $T5[ebp], eax
  001ea	8d 55 c8	 lea	 edx, DWORD PTR $T6[ebp]
  001ed	52		 push	 edx
  001ee	8d 45 c4	 lea	 eax, DWORD PTR $T5[ebp]
  001f1	50		 push	 eax
  001f2	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  001f7	83 c4 08	 add	 esp, 8
  001fa	0f b6 c8	 movzx	 ecx, al
  001fd	85 c9		 test	 ecx, ecx
  001ff	74 0b		 je	 SHORT $LN7@operator
; Line 806
  00201	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  00204	83 ca 04	 or	 edx, 4
  00207	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 807
  0020a	eb 05		 jmp	 SHORT $LN11@operator
$LN7@operator:
; Line 810
  0020c	e9 4b ff ff ff	 jmp	 $LN9@operator
$LN11@operator:
; Line 811
  00211	83 7d ec 00	 cmp	 DWORD PTR __State$[ebp], 0
  00215	75 5c		 jne	 SHORT $LN6@operator
  00217	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0021a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021c	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0021f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00222	8b f4		 mov	 esi, esp
  00224	8b ca		 mov	 ecx, edx
  00226	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0022c	3b f4		 cmp	 esi, esp
  0022e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00233	89 45 8c	 mov	 DWORD PTR tv286[ebp], eax
  00236	8b f4		 mov	 esi, esp
  00238	8b 45 e8	 mov	 eax, DWORD PTR __Count$[ebp+4]
  0023b	50		 push	 eax
  0023c	8b 4d e4	 mov	 ecx, DWORD PTR __Count$[ebp]
  0023f	51		 push	 ecx
  00240	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  00243	52		 push	 edx
  00244	8b 4d 8c	 mov	 ecx, DWORD PTR tv286[ebp]
  00247	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
  0024d	3b f4		 cmp	 esi, esp
  0024f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00254	89 45 84	 mov	 DWORD PTR tv287[ebp], eax
  00257	89 55 88	 mov	 DWORD PTR tv287[ebp+4], edx
  0025a	8b 45 84	 mov	 eax, DWORD PTR tv287[ebp]
  0025d	3b 45 e4	 cmp	 eax, DWORD PTR __Count$[ebp]
  00260	75 08		 jne	 SHORT $LN27@operator
  00262	8b 4d 88	 mov	 ecx, DWORD PTR tv287[ebp+4]
  00265	3b 4d e8	 cmp	 ecx, DWORD PTR __Count$[ebp+4]
  00268	74 09		 je	 SHORT $LN6@operator
$LN27@operator:
; Line 812
  0026a	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  0026d	83 ca 04	 or	 edx, 4
  00270	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
$LN6@operator:
; Line 814
  00273	83 7d ec 00	 cmp	 DWORD PTR __State$[ebp], 0
  00277	0f 85 bf 00 00
	00		 jne	 $LN5@operator
; Line 815
  0027d	eb 12		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0027f	8b 45 dc	 mov	 eax, DWORD PTR __Pad$[ebp]
  00282	83 e8 01	 sub	 eax, 1
  00285	8b 4d e0	 mov	 ecx, DWORD PTR __Pad$[ebp+4]
  00288	83 d9 00	 sbb	 ecx, 0
  0028b	89 45 dc	 mov	 DWORD PTR __Pad$[ebp], eax
  0028e	89 4d e0	 mov	 DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
  00291	83 7d e0 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  00295	0f 8c a1 00 00
	00		 jl	 $LN5@operator
  0029b	7f 0a		 jg	 SHORT $LN28@operator
  0029d	83 7d dc 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  002a1	0f 86 95 00 00
	00		 jbe	 $LN5@operator
$LN28@operator:
; Line 817
  002a7	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  002aa	8b 02		 mov	 eax, DWORD PTR [edx]
  002ac	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  002af	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  002b2	8b f4		 mov	 esi, esp
  002b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
  002ba	3b f4		 cmp	 esi, esp
  002bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c1	88 45 83	 mov	 BYTE PTR tv288[ebp], al
  002c4	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  002c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  002c9	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  002cc	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  002cf	8b f4		 mov	 esi, esp
  002d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  002d7	3b f4		 cmp	 esi, esp
  002d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002de	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv289[ebp], eax
  002e4	8b f4		 mov	 esi, esp
  002e6	0f b6 45 83	 movzx	 eax, BYTE PTR tv288[ebp]
  002ea	50		 push	 eax
  002eb	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv289[ebp]
  002f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
  002f7	3b f4		 cmp	 esi, esp
  002f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002fe	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv290[ebp], eax
  00304	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv290[ebp]
  0030a	89 4d c0	 mov	 DWORD PTR $T4[ebp], ecx
  0030d	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00312	89 45 bc	 mov	 DWORD PTR $T3[ebp], eax
  00315	8d 55 c0	 lea	 edx, DWORD PTR $T4[ebp]
  00318	52		 push	 edx
  00319	8d 45 bc	 lea	 eax, DWORD PTR $T3[ebp]
  0031c	50		 push	 eax
  0031d	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00322	83 c4 08	 add	 esp, 8
  00325	0f b6 c8	 movzx	 ecx, al
  00328	85 c9		 test	 ecx, ecx
  0032a	74 0b		 je	 SHORT $LN1@operator
; Line 819
  0032c	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  0032f	83 ca 04	 or	 edx, 4
  00332	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 820
  00335	eb 05		 jmp	 SHORT $LN5@operator
$LN1@operator:
; Line 821
  00337	e9 43 ff ff ff	 jmp	 $LN3@operator
$LN5@operator:
; Line 822
  0033c	8b f4		 mov	 esi, esp
  0033e	6a 00		 push	 0
  00340	6a 00		 push	 0
  00342	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00345	8b 08		 mov	 ecx, DWORD PTR [eax]
  00347	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0034a	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0034d	8b ca		 mov	 ecx, edx
  0034f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  00355	3b f4		 cmp	 esi, esp
  00357	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0035c	eb 26		 jmp	 SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 823
  0035e	8b f4		 mov	 esi, esp
  00360	6a 01		 push	 1
  00362	6a 04		 push	 4
  00364	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00367	8b 08		 mov	 ecx, DWORD PTR [eax]
  00369	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0036c	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0036f	8b ca		 mov	 ecx, edx
  00371	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  00377	3b f4		 cmp	 esi, esp
  00379	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0037e	b8 00 00 00 00	 mov	 eax, $LN23@operator
  00383	c3		 ret	 0
$LN19@operator:
  00384	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0038b	eb 07		 jmp	 SHORT $LN13@operator
$LN23@operator:
  0038d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator:
; Line 826
  00394	8b f4		 mov	 esi, esp
  00396	6a 00		 push	 0
  00398	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
  0039b	50		 push	 eax
  0039c	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0039f	8b 11		 mov	 edx, DWORD PTR [ecx]
  003a1	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  003a4	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  003a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  003ad	3b f4		 cmp	 esi, esp
  003af	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 827
  003b4	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003b7	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  003ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  003c1	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  003c4	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  003c9	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp]
; Line 828
  003cc	52		 push	 edx
  003cd	8b cd		 mov	 ecx, ebp
  003cf	50		 push	 eax
  003d0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN32@operator
  003d6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003db	58		 pop	 eax
  003dc	5a		 pop	 edx
  003dd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  003e0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003e7	59		 pop	 ecx
  003e8	5f		 pop	 edi
  003e9	5e		 pop	 esi
  003ea	5b		 pop	 ebx
  003eb	81 c4 88 00 00
	00		 add	 esp, 136		; 00000088H
  003f1	3b ec		 cmp	 ebp, esp
  003f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f8	8b e5		 mov	 esp, ebp
  003fa	5d		 pop	 ebp
  003fb	c3		 ret	 0
$LN32@operator:
  003fc	01 00 00 00	 DD	 1
  00400	00 00 00 00	 DD	 $LN31@operator
$LN31@operator:
  00404	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00408	08 00 00 00	 DD	 8
  0040c	00 00 00 00	 DD	 $LN29@operator
$LN29@operator:
  00410	5f		 DB	 95			; 0000005fH
  00411	4f		 DB	 79			; 0000004fH
  00412	6b		 DB	 107			; 0000006bH
  00413	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 74 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-140]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 68	 add	 ecx, 104		; 00000068H
  00015	e8 00 00 00 00	 call	 ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 68	 add	 ecx, 104		; 00000068H
  00020	8b f4		 mov	 esi, esp
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	5e		 pop	 esi
  00030	83 c4 04	 add	 esp, 4
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 e9 68	 sub	 ecx, 104		; 00000068H
  00014	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00019	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001c	83 e0 01	 and	 eax, 1
  0001f	74 0f		 je	 SHORT $LN1@scalar
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 e9 68	 sub	 ecx, 104		; 00000068H
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 e8 68	 sub	 eax, 104		; 00000068H
  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__State$ = -8						; size = 4
_this$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 354
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 355
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0
; Line 356
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  00021	83 e0 01	 and	 eax, 1
  00024	75 09		 jne	 SHORT $LN4@Getstate
; Line 357
  00026	8b 4d f8	 mov	 ecx, DWORD PTR __State$[ebp]
  00029	83 c9 04	 or	 ecx, 4
  0002c	89 4d f8	 mov	 DWORD PTR __State$[ebp], ecx
$LN4@Getstate:
; Line 358
  0002f	8b 55 08	 mov	 edx, DWORD PTR __Mode$[ebp]
  00032	83 e2 02	 and	 edx, 2
  00035	75 09		 jne	 SHORT $LN3@Getstate
; Line 359
  00037	8b 45 f8	 mov	 eax, DWORD PTR __State$[ebp]
  0003a	83 c8 02	 or	 eax, 2
  0003d	89 45 f8	 mov	 DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 360
  00040	8b 4d 08	 mov	 ecx, DWORD PTR __Mode$[ebp]
  00043	83 e1 08	 and	 ecx, 8
  00046	74 09		 je	 SHORT $LN2@Getstate
; Line 361
  00048	8b 55 f8	 mov	 edx, DWORD PTR __State$[ebp]
  0004b	83 ca 08	 or	 edx, 8
  0004e	89 55 f8	 mov	 DWORD PTR __State$[ebp], edx
$LN2@Getstate:
; Line 362
  00051	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  00054	83 e0 04	 and	 eax, 4
  00057	74 09		 je	 SHORT $LN1@Getstate
; Line 363
  00059	8b 4d f8	 mov	 ecx, DWORD PTR __State$[ebp]
  0005c	83 c9 10	 or	 ecx, 16			; 00000010H
  0005f	89 4d f8	 mov	 DWORD PTR __State$[ebp], ecx
$LN1@Getstate:
; Line 364
  00062	8b 45 f8	 mov	 eax, DWORD PTR __State$[ebp]
; Line 365
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 338
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0001e	83 e1 01	 and	 ecx, 1
  00021	74 78		 je	 SHORT $LN1@Tidy
; Line 341
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	85 c0		 test	 eax, eax
  00037	74 17		 je	 SHORT $LN4@Tidy
  00039	8b f4		 mov	 esi, esp
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	89 45 f8	 mov	 DWORD PTR tv88[ebp], eax
  0004e	eb 15		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00050	8b f4		 mov	 esi, esp
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	89 45 f8	 mov	 DWORD PTR tv88[ebp], eax
$LN5@Tidy:
  00065	8b f4		 mov	 esi, esp
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b 55 f8	 mov	 edx, DWORD PTR tv88[ebp]
  0007a	2b d0		 sub	 edx, eax
  0007c	52		 push	 edx
  0007d	8b f4		 mov	 esi, esp
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	50		 push	 eax
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	83 c1 40	 add	 ecx, 64			; 00000040H
  00096	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@Tidy:
; Line 342
  0009b	8b f4		 mov	 esi, esp
  0009d	6a 00		 push	 0
  0009f	6a 00		 push	 0
  000a1	6a 00		 push	 0
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000ac	3b f4		 cmp	 esi, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 343
  000b3	8b f4		 mov	 esi, esp
  000b5	6a 00		 push	 0
  000b7	6a 00		 push	 0
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
  000c2	3b f4		 cmp	 esi, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 344
  000c9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 345
  000d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000d9	83 e2 fe	 and	 edx, -2			; fffffffeH
  000dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000df	89 50 3c	 mov	 DWORD PTR [eax+60], edx
; Line 346
  000e2	5e		 pop	 esi
  000e3	83 c4 08	 add	 esp, 8
  000e6	3b ec		 cmp	 ebp, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv137 = -12						; size = 4
__Pnew$1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 310
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 311
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 312
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 55 10	 mov	 edx, DWORD PTR __State$[ebp]
  0002f	89 51 3c	 mov	 DWORD PTR [ecx+60], edx
; Line 315
  00032	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00036	0f 84 f9 00 00
	00		 je	 $LN5@Init
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00042	83 e1 06	 and	 ecx, 6
  00045	83 f9 06	 cmp	 ecx, 6
  00048	0f 84 e7 00 00
	00		 je	 $LN5@Init
; Line 317
  0004e	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00051	52		 push	 edx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 40	 add	 ecx, 64			; 00000040H
  00058	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  0005d	89 45 f8	 mov	 DWORD PTR __Pnew$1[ebp], eax
; Line 318
  00060	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00063	50		 push	 eax
  00064	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00067	51		 push	 ecx
  00068	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 319
  00074	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  00077	03 45 0c	 add	 eax, DWORD PTR __Count$[ebp]
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; Line 321
  00080	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00086	83 e0 04	 and	 eax, 4
  00089	75 21		 jne	 SHORT $LN3@Init
; Line 323
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  0008e	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  00091	8b f4		 mov	 esi, esp
  00093	51		 push	 ecx
  00094	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  00097	52		 push	 edx
  00098	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  0009b	50		 push	 eax
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000a5	3b f4		 cmp	 esi, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Init:
; Line 324
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000b2	83 e2 02	 and	 edx, 2
  000b5	75 6f		 jne	 SHORT $LN2@Init
; Line 328
  000b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000bd	83 e1 18	 and	 ecx, 24			; 00000018H
  000c0	74 0b		 je	 SHORT $LN7@Init
  000c2	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  000c5	03 55 0c	 add	 edx, DWORD PTR __Count$[ebp]
  000c8	89 55 f4	 mov	 DWORD PTR tv137[ebp], edx
  000cb	eb 06		 jmp	 SHORT $LN8@Init
$LN7@Init:
  000cd	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  000d0	89 45 f4	 mov	 DWORD PTR tv137[ebp], eax
$LN8@Init:
  000d3	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  000d6	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  000d9	8b f4		 mov	 esi, esp
  000db	51		 push	 ecx
  000dc	8b 55 f4	 mov	 edx, DWORD PTR tv137[ebp]
  000df	52		 push	 edx
  000e0	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  000e3	50		 push	 eax
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 329
  000f4	8b f4		 mov	 esi, esp
  000f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000ff	3b f4		 cmp	 esi, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00106	85 c0		 test	 eax, eax
  00108	75 1c		 jne	 SHORT $LN2@Init
; Line 330
  0010a	8b f4		 mov	 esi, esp
  0010c	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  0010f	51		 push	 ecx
  00110	6a 00		 push	 0
  00112	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  00115	52		 push	 edx
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Init:
; Line 332
  00126	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00129	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0012c	83 c9 01	 or	 ecx, 1
  0012f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00132	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
$LN5@Init:
; Line 334
  00135	5e		 pop	 esi
  00136	83 c4 0c	 add	 esp, 12			; 0000000cH
  00139	3b ec		 cmp	 ebp, esp
  0013b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 0c 00	 ret	 12			; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv342 = -32						; size = 8
tv282 = -24						; size = 8
tv259 = -16						; size = 4
__Off$ = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 276
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00010	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00013	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00016	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00019	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001c	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001f	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00022	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00025	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 277
  00028	8d 4d 0c	 lea	 ecx, DWORD PTR __Ptr$[ebp]
  0002b	e8 00 00 00 00	 call	 ??B?$fpos@H@std@@QBE_JXZ ; std::fpos<int>::operator __int64
  00030	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  00033	89 55 f8	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 278
  00036	8b f4		 mov	 esi, esp
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	85 c0		 test	 eax, eax
  0004a	74 32		 je	 SHORT $LN12@seekpos
  0004c	8b f4		 mov	 esi, esp
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00064	73 18		 jae	 SHORT $LN12@seekpos
; Line 279
  00066	8b f4		 mov	 esi, esp
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN12@seekpos:
; Line 281
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00083	89 45 f0	 mov	 DWORD PTR tv259[ebp], eax
  00086	8b 4d f0	 mov	 ecx, DWORD PTR tv259[ebp]
  00089	8b 55 f4	 mov	 edx, DWORD PTR __Off$[ebp]
  0008c	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0008e	75 10		 jne	 SHORT $LN11@seekpos
  00090	8b 45 f0	 mov	 eax, DWORD PTR tv259[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR __Off$[ebp+4]
  00096	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00099	75 05		 jne	 SHORT $LN11@seekpos
  0009b	e9 14 02 00 00	 jmp	 $LN10@seekpos
$LN11@seekpos:
; Line 283
  000a0	8b 55 24	 mov	 edx, DWORD PTR __Mode$[ebp]
  000a3	83 e2 01	 and	 edx, 1
  000a6	0f 84 31 01 00
	00		 je	 $LN9@seekpos
  000ac	8b f4		 mov	 esi, esp
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b7	3b f4		 cmp	 esi, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	85 c0		 test	 eax, eax
  000c0	0f 84 17 01 00
	00		 je	 $LN9@seekpos
; Line 285
  000c6	83 7d f8 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  000ca	0f 8c f8 00 00
	00		 jl	 $LN8@seekpos
  000d0	7f 0a		 jg	 SHORT $LN15@seekpos
  000d2	83 7d f4 00	 cmp	 DWORD PTR __Off$[ebp], 0
  000d6	0f 82 ec 00 00
	00		 jb	 $LN8@seekpos
$LN15@seekpos:
  000dc	8b f4		 mov	 esi, esp
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000e7	3b f4		 cmp	 esi, esp
  000e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000f4	2b d0		 sub	 edx, eax
  000f6	8b c2		 mov	 eax, edx
  000f8	99		 cdq
  000f9	89 45 e8	 mov	 DWORD PTR tv282[ebp], eax
  000fc	89 55 ec	 mov	 DWORD PTR tv282[ebp+4], edx
  000ff	8b 45 f8	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00102	3b 45 ec	 cmp	 eax, DWORD PTR tv282[ebp+4]
  00105	0f 8f bd 00 00
	00		 jg	 $LN8@seekpos
  0010b	7c 0c		 jl	 SHORT $LN16@seekpos
  0010d	8b 4d f4	 mov	 ecx, DWORD PTR __Off$[ebp]
  00110	3b 4d e8	 cmp	 ecx, DWORD PTR tv282[ebp]
  00113	0f 87 af 00 00
	00		 ja	 $LN8@seekpos
$LN16@seekpos:
; Line 287
  00119	8b f4		 mov	 esi, esp
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	8b f0		 mov	 esi, eax
  0012d	8b fc		 mov	 edi, esp
  0012f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00138	3b fc		 cmp	 edi, esp
  0013a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013f	2b f0		 sub	 esi, eax
  00141	8b c6		 mov	 eax, esi
  00143	99		 cdq
  00144	03 45 f4	 add	 eax, DWORD PTR __Off$[ebp]
  00147	13 55 f8	 adc	 edx, DWORD PTR __Off$[ebp+4]
  0014a	8b f4		 mov	 esi, esp
  0014c	50		 push	 eax
  0014d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 288
  0015d	8b 55 24	 mov	 edx, DWORD PTR __Mode$[ebp]
  00160	83 e2 02	 and	 edx, 2
  00163	74 61		 je	 SHORT $LN7@seekpos
  00165	8b f4		 mov	 esi, esp
  00167	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00170	3b f4		 cmp	 esi, esp
  00172	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00177	85 c0		 test	 eax, eax
  00179	74 4b		 je	 SHORT $LN7@seekpos
; Line 290
  0017b	8b f4		 mov	 esi, esp
  0017d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	8b f4		 mov	 esi, esp
  0018f	50		 push	 eax
  00190	8b fc		 mov	 edi, esp
  00192	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0019b	3b fc		 cmp	 edi, esp
  0019d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a2	50		 push	 eax
  001a3	8b fc		 mov	 edi, esp
  001a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001ae	3b fc		 cmp	 edi, esp
  001b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b5	50		 push	 eax
  001b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  001bf	3b f4		 cmp	 esi, esp
  001c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@seekpos:
; Line 292
  001c6	eb 10		 jmp	 SHORT $LN6@seekpos
$LN8@seekpos:
; Line 293
  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  001cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cf	89 4d f4	 mov	 DWORD PTR __Off$[ebp], ecx
  001d2	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001d5	89 55 f8	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
  001d8	e9 d7 00 00 00	 jmp	 $LN10@seekpos
$LN9@seekpos:
; Line 295
  001dd	8b 45 24	 mov	 eax, DWORD PTR __Mode$[ebp]
  001e0	83 e0 02	 and	 eax, 2
  001e3	0f 84 ba 00 00
	00		 je	 $LN4@seekpos
  001e9	8b f4		 mov	 esi, esp
  001eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001f4	3b f4		 cmp	 esi, esp
  001f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001fb	85 c0		 test	 eax, eax
  001fd	0f 84 a0 00 00
	00		 je	 $LN4@seekpos
; Line 297
  00203	83 7d f8 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  00207	0f 8c 83 00 00
	00		 jl	 $LN3@seekpos
  0020d	7f 06		 jg	 SHORT $LN17@seekpos
  0020f	83 7d f4 00	 cmp	 DWORD PTR __Off$[ebp], 0
  00213	72 7b		 jb	 SHORT $LN3@seekpos
$LN17@seekpos:
  00215	8b f4		 mov	 esi, esp
  00217	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00220	3b f4		 cmp	 esi, esp
  00222	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00227	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022a	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0022d	2b d0		 sub	 edx, eax
  0022f	8b c2		 mov	 eax, edx
  00231	99		 cdq
  00232	89 45 e0	 mov	 DWORD PTR tv342[ebp], eax
  00235	89 55 e4	 mov	 DWORD PTR tv342[ebp+4], edx
  00238	8b 45 f8	 mov	 eax, DWORD PTR __Off$[ebp+4]
  0023b	3b 45 e4	 cmp	 eax, DWORD PTR tv342[ebp+4]
  0023e	7f 50		 jg	 SHORT $LN3@seekpos
  00240	7c 08		 jl	 SHORT $LN18@seekpos
  00242	8b 4d f4	 mov	 ecx, DWORD PTR __Off$[ebp]
  00245	3b 4d e0	 cmp	 ecx, DWORD PTR tv342[ebp]
  00248	77 46		 ja	 SHORT $LN3@seekpos
$LN18@seekpos:
; Line 299
  0024a	8b f4		 mov	 esi, esp
  0024c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00255	3b f4		 cmp	 esi, esp
  00257	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025c	8b f0		 mov	 esi, eax
  0025e	8b fc		 mov	 edi, esp
  00260	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00263	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00269	3b fc		 cmp	 edi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	2b f0		 sub	 esi, eax
  00272	8b c6		 mov	 eax, esi
  00274	99		 cdq
  00275	03 45 f4	 add	 eax, DWORD PTR __Off$[ebp]
  00278	13 55 f8	 adc	 edx, DWORD PTR __Off$[ebp+4]
  0027b	8b f4		 mov	 esi, esp
  0027d	50		 push	 eax
  0027e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00281	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  00287	3b f4		 cmp	 esi, esp
  00289	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 300
  0028e	eb 11		 jmp	 SHORT $LN2@seekpos
$LN3@seekpos:
; Line 301
  00290	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00296	8b 02		 mov	 eax, DWORD PTR [edx]
  00298	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  0029b	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0029e	89 4d f8	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN2@seekpos:
; Line 303
  002a1	eb 11		 jmp	 SHORT $LN10@seekpos
$LN4@seekpos:
; Line 304
  002a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002a9	8b 02		 mov	 eax, DWORD PTR [edx]
  002ab	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  002ae	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  002b1	89 4d f8	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN10@seekpos:
; Line 305
  002b4	8b 55 f8	 mov	 edx, DWORD PTR __Off$[ebp+4]
  002b7	52		 push	 edx
  002b8	8b 45 f4	 mov	 eax, DWORD PTR __Off$[ebp]
  002bb	50		 push	 eax
  002bc	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  002bf	e8 00 00 00 00	 call	 ??0?$fpos@H@std@@QAE@_J@Z ; std::fpos<int>::fpos<int>
  002c4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 306
  002c7	5f		 pop	 edi
  002c8	5e		 pop	 esi
  002c9	83 c4 20	 add	 esp, 32			; 00000020H
  002cc	3b ec		 cmp	 ebp, esp
  002ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d3	8b e5		 mov	 esp, ebp
  002d5	5d		 pop	 ebp
  002d6	c2 20 00	 ret	 32			; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv453 = -20						; size = 8
tv360 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 227
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000d	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00010	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00013	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00016	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00019	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 228
  0001f	8b f4		 mov	 esi, esp
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002a	3b f4		 cmp	 esi, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	85 c0		 test	 eax, eax
  00033	74 32		 je	 SHORT $LN21@seekoff
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  0004d	73 18		 jae	 SHORT $LN21@seekoff
; Line 229
  0004f	8b f4		 mov	 esi, esp
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00064	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN21@seekoff:
; Line 231
  00067	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  0006a	83 e0 01	 and	 eax, 1
  0006d	0f 84 c0 01 00
	00		 je	 $LN20@seekoff
  00073	8b f4		 mov	 esi, esp
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	85 c0		 test	 eax, eax
  00087	0f 84 a6 01 00
	00		 je	 $LN20@seekoff
; Line 233
  0008d	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  00091	75 2b		 jne	 SHORT $LN19@seekoff
; Line 234
  00093	8b f4		 mov	 esi, esp
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009e	3b f4		 cmp	 esi, esp
  000a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000ab	2b d0		 sub	 edx, eax
  000ad	8b c2		 mov	 eax, edx
  000af	99		 cdq
  000b0	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  000b3	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  000b6	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  000b9	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 235
  000bc	eb 5e		 jmp	 SHORT $LN18@seekoff
$LN19@seekoff:
; Line 236
  000be	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  000c2	75 41		 jne	 SHORT $LN17@seekoff
  000c4	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  000c7	83 e0 02	 and	 eax, 2
  000ca	75 39		 jne	 SHORT $LN17@seekoff
; Line 237
  000cc	8b f4		 mov	 esi, esp
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000d7	3b f4		 cmp	 esi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	8b f0		 mov	 esi, eax
  000e0	8b fc		 mov	 edi, esp
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000eb	3b fc		 cmp	 edi, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	2b f0		 sub	 esi, eax
  000f4	8b c6		 mov	 eax, esi
  000f6	99		 cdq
  000f7	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  000fa	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  000fd	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00100	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 238
  00103	eb 17		 jmp	 SHORT $LN18@seekoff
$LN17@seekoff:
  00105	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  00109	74 11		 je	 SHORT $LN18@seekoff
; Line 239
  0010b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	89 55 0c	 mov	 DWORD PTR __Off$[ebp], edx
  00116	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00119	89 45 10	 mov	 DWORD PTR __Off$[ebp+4], eax
$LN18@seekoff:
; Line 241
  0011c	83 7d 10 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  00120	0f 8c f8 00 00
	00		 jl	 $LN14@seekoff
  00126	7f 0a		 jg	 SHORT $LN24@seekoff
  00128	83 7d 0c 00	 cmp	 DWORD PTR __Off$[ebp], 0
  0012c	0f 82 ec 00 00
	00		 jb	 $LN14@seekoff
$LN24@seekoff:
  00132	8b f4		 mov	 esi, esp
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0014a	2b d0		 sub	 edx, eax
  0014c	8b c2		 mov	 eax, edx
  0014e	99		 cdq
  0014f	89 45 f4	 mov	 DWORD PTR tv360[ebp], eax
  00152	89 55 f8	 mov	 DWORD PTR tv360[ebp+4], edx
  00155	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00158	3b 45 f8	 cmp	 eax, DWORD PTR tv360[ebp+4]
  0015b	0f 8f bd 00 00
	00		 jg	 $LN14@seekoff
  00161	7c 0c		 jl	 SHORT $LN25@seekoff
  00163	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  00166	3b 4d f4	 cmp	 ecx, DWORD PTR tv360[ebp]
  00169	0f 87 af 00 00
	00		 ja	 $LN14@seekoff
$LN25@seekoff:
; Line 243
  0016f	8b f4		 mov	 esi, esp
  00171	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0017a	3b f4		 cmp	 esi, esp
  0017c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00181	8b f0		 mov	 esi, eax
  00183	8b fc		 mov	 edi, esp
  00185	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0018e	3b fc		 cmp	 edi, esp
  00190	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00195	2b f0		 sub	 esi, eax
  00197	8b c6		 mov	 eax, esi
  00199	99		 cdq
  0019a	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  0019d	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  001a0	8b f4		 mov	 esi, esp
  001a2	50		 push	 eax
  001a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  001ac	3b f4		 cmp	 esi, esp
  001ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 244
  001b3	8b 55 18	 mov	 edx, DWORD PTR __Which$[ebp]
  001b6	83 e2 02	 and	 edx, 2
  001b9	74 61		 je	 SHORT $LN13@seekoff
  001bb	8b f4		 mov	 esi, esp
  001bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001c6	3b f4		 cmp	 esi, esp
  001c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cd	85 c0		 test	 eax, eax
  001cf	74 4b		 je	 SHORT $LN13@seekoff
; Line 246
  001d1	8b f4		 mov	 esi, esp
  001d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001dc	3b f4		 cmp	 esi, esp
  001de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e3	8b f4		 mov	 esi, esp
  001e5	50		 push	 eax
  001e6	8b fc		 mov	 edi, esp
  001e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001f1	3b fc		 cmp	 edi, esp
  001f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f8	50		 push	 eax
  001f9	8b fc		 mov	 edi, esp
  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00204	3b fc		 cmp	 edi, esp
  00206	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020b	50		 push	 eax
  0020c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00215	3b f4		 cmp	 esi, esp
  00217	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@seekoff:
; Line 248
  0021c	eb 10		 jmp	 SHORT $LN12@seekoff
$LN14@seekoff:
; Line 249
  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00223	8b 08		 mov	 ecx, DWORD PTR [eax]
  00225	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  00228	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0022b	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
  0022e	e9 64 01 00 00	 jmp	 $LN11@seekoff
$LN20@seekoff:
; Line 251
  00233	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  00236	83 e0 02	 and	 eax, 2
  00239	0f 84 40 01 00
	00		 je	 $LN10@seekoff
  0023f	8b f4		 mov	 esi, esp
  00241	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00244	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0024a	3b f4		 cmp	 esi, esp
  0024c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00251	85 c0		 test	 eax, eax
  00253	0f 84 26 01 00
	00		 je	 $LN10@seekoff
; Line 253
  00259	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  0025d	75 2b		 jne	 SHORT $LN9@seekoff
; Line 254
  0025f	8b f4		 mov	 esi, esp
  00261	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00264	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0026a	3b f4		 cmp	 esi, esp
  0026c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00271	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00274	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00277	2b d0		 sub	 edx, eax
  00279	8b c2		 mov	 eax, edx
  0027b	99		 cdq
  0027c	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  0027f	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00282	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00285	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 255
  00288	eb 55		 jmp	 SHORT $LN8@seekoff
$LN9@seekoff:
  0028a	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  0028e	75 39		 jne	 SHORT $LN7@seekoff
; Line 256
  00290	8b f4		 mov	 esi, esp
  00292	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00295	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	8b f0		 mov	 esi, eax
  002a4	8b fc		 mov	 edi, esp
  002a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002af	3b fc		 cmp	 edi, esp
  002b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b6	2b f0		 sub	 esi, eax
  002b8	8b c6		 mov	 eax, esi
  002ba	99		 cdq
  002bb	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  002be	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  002c1	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  002c4	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 257
  002c7	eb 16		 jmp	 SHORT $LN8@seekoff
$LN7@seekoff:
  002c9	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  002cd	74 10		 je	 SHORT $LN8@seekoff
; Line 258
  002cf	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d6	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  002d9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002dc	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 260
  002df	83 7d 10 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  002e3	0f 8c 83 00 00
	00		 jl	 $LN4@seekoff
  002e9	7f 06		 jg	 SHORT $LN26@seekoff
  002eb	83 7d 0c 00	 cmp	 DWORD PTR __Off$[ebp], 0
  002ef	72 7b		 jb	 SHORT $LN4@seekoff
$LN26@seekoff:
  002f1	8b f4		 mov	 esi, esp
  002f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002fc	3b f4		 cmp	 esi, esp
  002fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00303	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00306	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00309	2b d0		 sub	 edx, eax
  0030b	8b c2		 mov	 eax, edx
  0030d	99		 cdq
  0030e	89 45 ec	 mov	 DWORD PTR tv453[ebp], eax
  00311	89 55 f0	 mov	 DWORD PTR tv453[ebp+4], edx
  00314	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00317	3b 45 f0	 cmp	 eax, DWORD PTR tv453[ebp+4]
  0031a	7f 50		 jg	 SHORT $LN4@seekoff
  0031c	7c 08		 jl	 SHORT $LN27@seekoff
  0031e	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  00321	3b 4d ec	 cmp	 ecx, DWORD PTR tv453[ebp]
  00324	77 46		 ja	 SHORT $LN4@seekoff
$LN27@seekoff:
; Line 262
  00326	8b f4		 mov	 esi, esp
  00328	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0032b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	8b f0		 mov	 esi, eax
  0033a	8b fc		 mov	 edi, esp
  0033c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0033f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00345	3b fc		 cmp	 edi, esp
  00347	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034c	2b f0		 sub	 esi, eax
  0034e	8b c6		 mov	 eax, esi
  00350	99		 cdq
  00351	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  00354	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00357	8b f4		 mov	 esi, esp
  00359	50		 push	 eax
  0035a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  00363	3b f4		 cmp	 esi, esp
  00365	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 263
  0036a	eb 11		 jmp	 SHORT $LN3@seekoff
$LN4@seekoff:
; Line 264
  0036c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00372	8b 02		 mov	 eax, DWORD PTR [edx]
  00374	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00377	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0037a	89 4d 10	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN3@seekoff:
  0037d	eb 18		 jmp	 SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
  0037f	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp]
  00382	0b 55 10	 or	 edx, DWORD PTR __Off$[ebp+4]
  00385	74 10		 je	 SHORT $LN11@seekoff
; Line 270
  00387	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  0038c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038e	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  00391	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00394	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 271
  00397	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  0039a	50		 push	 eax
  0039b	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0039e	51		 push	 ecx
  0039f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  003a2	e8 00 00 00 00	 call	 ??0?$fpos@H@std@@QAE@_J@Z ; std::fpos<int>::fpos<int>
  003a7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 272
  003aa	5f		 pop	 edi
  003ab	5e		 pop	 esi
  003ac	83 c4 14	 add	 esp, 20			; 00000014H
  003af	3b ec		 cmp	 ebp, esp
  003b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b6	8b e5		 mov	 esp, ebp
  003b8	5d		 pop	 ebp
  003b9	c2 14 00	 ret	 20			; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 207
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 208
  00010	8b f4		 mov	 esi, esp
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	85 c0		 test	 eax, eax
  00024	75 0f		 jne	 SHORT $LN8@underflow
; Line 209
  00026	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0002b	e9 54 01 00 00	 jmp	 $LN9@underflow
  00030	e9 4f 01 00 00	 jmp	 $LN9@underflow
$LN8@underflow:
; Line 210
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b f0		 mov	 esi, eax
  00049	8b fc		 mov	 edi, esp
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00054	3b fc		 cmp	 edi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	3b f0		 cmp	 esi, eax
  0005d	73 25		 jae	 SHORT $LN6@underflow
; Line 211
  0005f	8b f4		 mov	 esi, esp
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  00077	83 c4 04	 add	 esp, 4
  0007a	e9 05 01 00 00	 jmp	 $LN9@underflow
; Line 212
  0007f	e9 00 01 00 00	 jmp	 $LN9@underflow
$LN6@underflow:
; Line 213
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0008a	83 e1 04	 and	 ecx, 4
  0008d	75 5a		 jne	 SHORT $LN3@underflow
  0008f	8b f4		 mov	 esi, esp
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	85 c0		 test	 eax, eax
  000a3	74 44		 je	 SHORT $LN3@underflow
  000a5	8b f4		 mov	 esi, esp
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b0	3b f4		 cmp	 esi, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	8b f0		 mov	 esi, eax
  000b9	8b fc		 mov	 edi, esp
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000c4	3b fc		 cmp	 edi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	3b f0		 cmp	 esi, eax
  000cd	77 29		 ja	 SHORT $LN4@underflow
  000cf	8b f4		 mov	 esi, esp
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e4	39 42 38	 cmp	 DWORD PTR [edx+56], eax
  000e7	77 0f		 ja	 SHORT $LN4@underflow
$LN3@underflow:
; Line 214
  000e9	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000ee	e9 91 00 00 00	 jmp	 $LN9@underflow
; Line 215
  000f3	e9 8c 00 00 00	 jmp	 $LN9@underflow
$LN4@underflow:
; Line 217
  000f8	8b f4		 mov	 esi, esp
  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00110	73 18		 jae	 SHORT $LN1@underflow
; Line 218
  00112	8b f4		 mov	 esi, esp
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0011d	3b f4		 cmp	 esi, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00127	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN1@underflow:
; Line 219
  0012a	8b f4		 mov	 esi, esp
  0012c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012f	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00132	51		 push	 ecx
  00133	8b fc		 mov	 edi, esp
  00135	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0013e	3b fc		 cmp	 edi, esp
  00140	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00145	50		 push	 eax
  00146	8b fc		 mov	 edi, esp
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00151	3b fc		 cmp	 edi, esp
  00153	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00158	50		 push	 eax
  00159	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00162	3b f4		 cmp	 esi, esp
  00164	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 220
  00169	8b f4		 mov	 esi, esp
  0016b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00174	3b f4		 cmp	 esi, esp
  00176	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  00181	83 c4 04	 add	 esp, 4
$LN9@underflow:
; Line 222
  00184	5f		 pop	 edi
  00185	5e		 pop	 esi
  00186	83 c4 04	 add	 esp, 4
  00189	3b ec		 cmp	 ebp, esp
  0018b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c3		 ret	 0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -9						; size = 1
$T3 = -8						; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 190
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 195
  0001d	8b f4		 mov	 esi, esp
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	85 c0		 test	 eax, eax
  00031	0f 84 93 00 00
	00		 je	 $LN3@pbackfail
  00037	8b f4		 mov	 esi, esp
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b f0		 mov	 esi, eax
  0004b	8b fc		 mov	 edi, esp
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00056	3b fc		 cmp	 edi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	3b f0		 cmp	 esi, eax
  0005f	76 69		 jbe	 SHORT $LN3@pbackfail
  00061	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00066	89 45 f8	 mov	 DWORD PTR $T3[ebp], eax
  00069	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  0006c	50		 push	 eax
  0006d	8d 4d f8	 lea	 ecx, DWORD PTR $T3[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00076	83 c4 08	 add	 esp, 8
  00079	0f b6 d0	 movzx	 edx, al
  0007c	85 d2		 test	 edx, edx
  0007e	75 53		 jne	 SHORT $LN4@pbackfail
  00080	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00089	83 c4 04	 add	 esp, 4
  0008c	88 45 f7	 mov	 BYTE PTR $T2[ebp], al
  0008f	8b f4		 mov	 esi, esp
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	b9 01 00 00 00	 mov	 ecx, 1
  000a6	6b d1 ff	 imul	 edx, ecx, -1
  000a9	03 c2		 add	 eax, edx
  000ab	50		 push	 eax
  000ac	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?eq@?$char_traits@D@std@@SA_NABD0@Z ; std::char_traits<char>::eq
  000b5	83 c4 08	 add	 esp, 8
  000b8	0f b6 c8	 movzx	 ecx, al
  000bb	85 c9		 test	 ecx, ecx
  000bd	75 14		 jne	 SHORT $LN4@pbackfail
  000bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000c5	83 e0 02	 and	 eax, 2
  000c8	74 09		 je	 SHORT $LN4@pbackfail
$LN3@pbackfail:
; Line 196
  000ca	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000cf	eb 63		 jmp	 SHORT $LN5@pbackfail
; Line 197
  000d1	eb 61		 jmp	 SHORT $LN5@pbackfail
$LN4@pbackfail:
; Line 199
  000d3	8b f4		 mov	 esi, esp
  000d5	6a ff		 push	 -1
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  000e0	3b f4		 cmp	 esi, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 200
  000e7	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000ec	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
  000ef	8d 4d 08	 lea	 ecx, DWORD PTR __Meta$[ebp]
  000f2	51		 push	 ecx
  000f3	8d 55 f0	 lea	 edx, DWORD PTR $T1[ebp]
  000f6	52		 push	 edx
  000f7	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  000fc	83 c4 08	 add	 esp, 8
  000ff	0f b6 c0	 movzx	 eax, al
  00102	85 c0		 test	 eax, eax
  00104	75 22		 jne	 SHORT $LN1@pbackfail
; Line 201
  00106	8d 4d 08	 lea	 ecx, DWORD PTR __Meta$[ebp]
  00109	51		 push	 ecx
  0010a	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  0010f	83 c4 04	 add	 esp, 4
  00112	8a d8		 mov	 bl, al
  00114	8b f4		 mov	 esi, esp
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	88 18		 mov	 BYTE PTR [eax], bl
$LN1@pbackfail:
; Line 202
  00128	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  0012b	52		 push	 edx
  0012c	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@D@std@@SAHABH@Z ; std::char_traits<char>::not_eof
  00131	83 c4 04	 add	 esp, 4
$LN5@pbackfail:
; Line 204
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	83 c4 10	 add	 esp, 16			; 00000010H
  0013a	3b ec		 cmp	 ebp, esp
  0013c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 04 00	 ret	 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv199 = -36						; size = 4
tv195 = -32						; size = 4
$T1 = -28						; size = 4
__Oldptr$2 = -24					; size = 4
__Newptr$3 = -20					; size = 4
__Inc$4 = -16						; size = 4
__Newsize$5 = -12					; size = 4
__Oldsize$6 = -8					; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000e	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00011	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00014	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00017	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00020	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00023	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00026	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 121
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00032	83 e1 02	 and	 ecx, 2
  00035	74 0c		 je	 SHORT $LN17@overflow
; Line 122
  00037	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0003c	e9 a1 03 00 00	 jmp	 $LN18@overflow
  00041	eb 30		 jmp	 SHORT $LN16@overflow
$LN17@overflow:
; Line 123
  00043	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00048	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax
  0004b	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  0004e	52		 push	 edx
  0004f	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00058	83 c4 08	 add	 esp, 8
  0005b	0f b6 c8	 movzx	 ecx, al
  0005e	85 c9		 test	 ecx, ecx
  00060	74 11		 je	 SHORT $LN16@overflow
; Line 124
  00062	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  00065	52		 push	 edx
  00066	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@D@std@@SAHABH@Z ; std::char_traits<char>::not_eof
  0006b	83 c4 04	 add	 esp, 4
  0006e	e9 6f 03 00 00	 jmp	 $LN18@overflow
$LN16@overflow:
; Line 127
  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00079	83 e1 08	 and	 ecx, 8
  0007c	74 6f		 je	 SHORT $LN14@overflow
  0007e	8b f4		 mov	 esi, esp
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	85 c0		 test	 eax, eax
  00092	74 59		 je	 SHORT $LN14@overflow
  00094	8b f4		 mov	 esi, esp
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a9	3b 42 38	 cmp	 eax, DWORD PTR [edx+56]
  000ac	73 3f		 jae	 SHORT $LN14@overflow
; Line 128
  000ae	8b f4		 mov	 esi, esp
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b f4		 mov	 esi, esp
  000c2	50		 push	 eax
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000c9	51		 push	 ecx
  000ca	8b fc		 mov	 edi, esp
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000d5	3b fc		 cmp	 edi, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dc	50		 push	 eax
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000e6	3b f4		 cmp	 esi, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN14@overflow:
; Line 131
  000ed	8b f4		 mov	 esi, esp
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000f8	3b f4		 cmp	 esi, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	85 c0		 test	 eax, eax
  00101	74 59		 je	 SHORT $LN13@overflow
  00103	8b f4		 mov	 esi, esp
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0010e	3b f4		 cmp	 esi, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00115	8b f0		 mov	 esi, eax
  00117	8b fc		 mov	 edi, esp
  00119	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00122	3b fc		 cmp	 edi, esp
  00124	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00129	3b f0		 cmp	 esi, eax
  0012b	73 2f		 jae	 SHORT $LN13@overflow
; Line 133
  0012d	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  00130	52		 push	 edx
  00131	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00136	83 c4 04	 add	 esp, 4
  00139	8a d8		 mov	 bl, al
  0013b	8b f4		 mov	 esi, esp
  0013d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  00146	3b f4		 cmp	 esi, esp
  00148	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014d	88 18		 mov	 BYTE PTR [eax], bl
; Line 134
  0014f	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00152	e9 8b 02 00 00	 jmp	 $LN18@overflow
; Line 136
  00157	e9 86 02 00 00	 jmp	 $LN18@overflow
$LN13@overflow:
; Line 139
  0015c	8b f4		 mov	 esi, esp
  0015e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00167	3b f4		 cmp	 esi, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016e	85 c0		 test	 eax, eax
  00170	75 09		 jne	 SHORT $LN20@overflow
  00172	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv195[ebp], 0
  00179	eb 2b		 jmp	 SHORT $LN21@overflow
$LN20@overflow:
  0017b	8b f4		 mov	 esi, esp
  0017d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	8b f0		 mov	 esi, eax
  0018f	8b fc		 mov	 edi, esp
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0019a	3b fc		 cmp	 edi, esp
  0019c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a1	2b f0		 sub	 esi, eax
  001a3	89 75 e0	 mov	 DWORD PTR tv195[ebp], esi
$LN21@overflow:
  001a6	8b 45 e0	 mov	 eax, DWORD PTR tv195[ebp]
  001a9	89 45 f8	 mov	 DWORD PTR __Oldsize$6[ebp], eax
; Line 140
  001ac	8b 4d f8	 mov	 ecx, DWORD PTR __Oldsize$6[ebp]
  001af	89 4d f4	 mov	 DWORD PTR __Newsize$5[ebp], ecx
; Line 142
  001b2	8b 55 f4	 mov	 edx, DWORD PTR __Newsize$5[ebp]
  001b5	d1 ea		 shr	 edx, 1
  001b7	83 fa 20	 cmp	 edx, 32			; 00000020H
  001ba	73 09		 jae	 SHORT $LN22@overflow
  001bc	c7 45 dc 20 00
	00 00		 mov	 DWORD PTR tv199[ebp], 32 ; 00000020H
  001c3	eb 08		 jmp	 SHORT $LN23@overflow
$LN22@overflow:
  001c5	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$5[ebp]
  001c8	d1 e8		 shr	 eax, 1
  001ca	89 45 dc	 mov	 DWORD PTR tv199[ebp], eax
$LN23@overflow:
  001cd	8b 4d dc	 mov	 ecx, DWORD PTR tv199[ebp]
  001d0	89 4d f0	 mov	 DWORD PTR __Inc$4[ebp], ecx
$LN11@overflow:
; Line 144
  001d3	83 7d f0 00	 cmp	 DWORD PTR __Inc$4[ebp], 0
  001d7	76 17		 jbe	 SHORT $LN10@overflow
  001d9	ba ff ff ff 7f	 mov	 edx, 2147483647		; 7fffffffH
  001de	2b 55 f0	 sub	 edx, DWORD PTR __Inc$4[ebp]
  001e1	3b 55 f4	 cmp	 edx, DWORD PTR __Newsize$5[ebp]
  001e4	73 0a		 jae	 SHORT $LN10@overflow
; Line 145
  001e6	8b 45 f0	 mov	 eax, DWORD PTR __Inc$4[ebp]
  001e9	d1 e8		 shr	 eax, 1
  001eb	89 45 f0	 mov	 DWORD PTR __Inc$4[ebp], eax
  001ee	eb e3		 jmp	 SHORT $LN11@overflow
$LN10@overflow:
; Line 146
  001f0	83 7d f0 00	 cmp	 DWORD PTR __Inc$4[ebp], 0
  001f4	75 0a		 jne	 SHORT $LN9@overflow
; Line 147
  001f6	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  001fb	e9 e2 01 00 00	 jmp	 $LN18@overflow
$LN9@overflow:
; Line 149
  00200	8b 4d f4	 mov	 ecx, DWORD PTR __Newsize$5[ebp]
  00203	03 4d f0	 add	 ecx, DWORD PTR __Inc$4[ebp]
  00206	89 4d f4	 mov	 DWORD PTR __Newsize$5[ebp], ecx
; Line 151
  00209	8b 55 f4	 mov	 edx, DWORD PTR __Newsize$5[ebp]
  0020c	52		 push	 edx
  0020d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00210	83 c1 40	 add	 ecx, 64			; 00000040H
  00213	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  00218	89 45 ec	 mov	 DWORD PTR __Newptr$3[ebp], eax
; Line 152
  0021b	8b f4		 mov	 esi, esp
  0021d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00226	3b f4		 cmp	 esi, esp
  00228	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022d	89 45 e8	 mov	 DWORD PTR __Oldptr$2[ebp], eax
; Line 154
  00230	83 7d f8 00	 cmp	 DWORD PTR __Oldsize$6[ebp], 0
  00234	76 14		 jbe	 SHORT $LN8@overflow
; Line 155
  00236	8b 45 f8	 mov	 eax, DWORD PTR __Oldsize$6[ebp]
  00239	50		 push	 eax
  0023a	8b 4d e8	 mov	 ecx, DWORD PTR __Oldptr$2[ebp]
  0023d	51		 push	 ecx
  0023e	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00247	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@overflow:
; Line 157
  0024a	83 7d f8 00	 cmp	 DWORD PTR __Oldsize$6[ebp], 0
  0024e	75 75		 jne	 SHORT $LN7@overflow
; Line 159
  00250	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00253	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  00256	89 48 38	 mov	 DWORD PTR [eax+56], ecx
; Line 160
  00259	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  0025c	03 55 f4	 add	 edx, DWORD PTR __Newsize$5[ebp]
  0025f	8b f4		 mov	 esi, esp
  00261	52		 push	 edx
  00262	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00265	50		 push	 eax
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00269	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
  0026f	3b f4		 cmp	 esi, esp
  00271	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 161
  00276	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00279	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0027c	83 e2 04	 and	 edx, 4
  0027f	74 1e		 je	 SHORT $LN6@overflow
; Line 162
  00281	8b f4		 mov	 esi, esp
  00283	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00286	50		 push	 eax
  00287	6a 00		 push	 0
  00289	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  0028c	51		 push	 ecx
  0028d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00290	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00296	3b f4		 cmp	 esi, esp
  00298	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 163
  0029d	eb 21		 jmp	 SHORT $LN5@overflow
$LN6@overflow:
; Line 164
  0029f	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  002a2	83 c2 01	 add	 edx, 1
  002a5	8b f4		 mov	 esi, esp
  002a7	52		 push	 edx
  002a8	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  002ab	50		 push	 eax
  002ac	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  002af	51		 push	 ecx
  002b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  002b9	3b f4		 cmp	 esi, esp
  002bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@overflow:
; Line 166
  002c0	e9 cb 00 00 00	 jmp	 $LN4@overflow
$LN7@overflow:
; Line 168
  002c5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002c8	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  002cb	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  002ce	03 45 ec	 add	 eax, DWORD PTR __Newptr$3[ebp]
  002d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d4	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; Line 171
  002d7	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  002da	03 55 f4	 add	 edx, DWORD PTR __Newsize$5[ebp]
  002dd	8b f4		 mov	 esi, esp
  002df	52		 push	 edx
  002e0	8b fc		 mov	 edi, esp
  002e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002eb	3b fc		 cmp	 edi, esp
  002ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f2	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  002f5	03 45 ec	 add	 eax, DWORD PTR __Newptr$3[ebp]
  002f8	50		 push	 eax
  002f9	8b fc		 mov	 edi, esp
  002fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00304	3b fc		 cmp	 edi, esp
  00306	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0030b	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  0030e	03 45 ec	 add	 eax, DWORD PTR __Newptr$3[ebp]
  00311	50		 push	 eax
  00312	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00315	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  0031b	3b f4		 cmp	 esi, esp
  0031d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 172
  00322	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00325	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00328	83 e1 04	 and	 ecx, 4
  0032b	74 1e		 je	 SHORT $LN3@overflow
; Line 173
  0032d	8b f4		 mov	 esi, esp
  0032f	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  00332	52		 push	 edx
  00333	6a 00		 push	 0
  00335	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00338	50		 push	 eax
  00339	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0033c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00342	3b f4		 cmp	 esi, esp
  00344	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 174
  00349	eb 45		 jmp	 SHORT $LN4@overflow
$LN3@overflow:
; Line 177
  0034b	8b f4		 mov	 esi, esp
  0034d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00350	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00356	3b f4		 cmp	 esi, esp
  00358	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0035d	83 c0 01	 add	 eax, 1
  00360	8b f4		 mov	 esi, esp
  00362	50		 push	 eax
  00363	8b fc		 mov	 edi, esp
  00365	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00368	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0036e	3b fc		 cmp	 edi, esp
  00370	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00375	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  00378	03 45 ec	 add	 eax, DWORD PTR __Newptr$3[ebp]
  0037b	50		 push	 eax
  0037c	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  0037f	51		 push	 ecx
  00380	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00383	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00389	3b f4		 cmp	 esi, esp
  0038b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@overflow:
; Line 180
  00390	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00393	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00396	83 e0 01	 and	 eax, 1
  00399	74 13		 je	 SHORT $LN1@overflow
; Line 181
  0039b	8b 4d f8	 mov	 ecx, DWORD PTR __Oldsize$6[ebp]
  0039e	51		 push	 ecx
  0039f	8b 55 e8	 mov	 edx, DWORD PTR __Oldptr$2[ebp]
  003a2	52		 push	 edx
  003a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a6	83 c1 40	 add	 ecx, 64			; 00000040H
  003a9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@overflow:
; Line 182
  003ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003b1	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  003b4	83 c9 01	 or	 ecx, 1
  003b7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003ba	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 184
  003bd	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  003c0	50		 push	 eax
  003c1	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  003c6	83 c4 04	 add	 esp, 4
  003c9	8a d8		 mov	 bl, al
  003cb	8b f4		 mov	 esi, esp
  003cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  003d6	3b f4		 cmp	 esi, esp
  003d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003dd	88 18		 mov	 BYTE PTR [eax], bl
; Line 185
  003df	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
$LN18@overflow:
; Line 187
  003e2	5f		 pop	 edi
  003e3	5e		 pop	 esi
  003e4	5b		 pop	 ebx
  003e5	83 c4 24	 add	 esp, 36			; 00000024H
  003e8	3b ec		 cmp	 ebp, esp
  003ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ef	8b e5		 mov	 esp, ebp
  003f1	5d		 pop	 ebp
  003f2	c2 04 00	 ret	 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv91 = -124						; size = 4
$T1 = -120						; size = 4
__Nul$2 = -112						; size = 28
__Str$3 = -76						; size = 28
__Str$4 = -40						; size = 28
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 93
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 84	 lea	 edi, DWORD PTR [ebp-124]
  0000c	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 45 88 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
; Line 94
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00033	83 e1 02	 and	 ecx, 2
  00036	0f 85 b1 00 00
	00		 jne	 $LN4@str
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00047	3b f4		 cmp	 esi, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	85 c0		 test	 eax, eax
  00050	0f 84 97 00 00
	00		 je	 $LN4@str
; Line 97
  00056	8b f4		 mov	 esi, esp
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	39 42 38	 cmp	 DWORD PTR [edx+56], eax
  0006e	73 17		 jae	 SHORT $LN7@str
  00070	8b f4		 mov	 esi, esp
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0007b	3b f4		 cmp	 esi, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	89 45 84	 mov	 DWORD PTR tv91[ebp], eax
  00085	eb 09		 jmp	 SHORT $LN8@str
$LN7@str:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0008d	89 4d 84	 mov	 DWORD PTR tv91[ebp], ecx
$LN8@str:
  00090	8b f4		 mov	 esi, esp
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	8b 55 84	 mov	 edx, DWORD PTR tv91[ebp]
  000a5	2b d0		 sub	 edx, eax
  000a7	52		 push	 edx
  000a8	8b f4		 mov	 esi, esp
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b3	3b f4		 cmp	 esi, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	50		 push	 eax
  000bb	8d 4d d8	 lea	 ecx, DWORD PTR __Str$4[ebp]
  000be	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 98
  000c3	8d 45 d8	 lea	 eax, DWORD PTR __Str$4[ebp]
  000c6	50		 push	 eax
  000c7	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000ca	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000cf	8b 4d 88	 mov	 ecx, DWORD PTR $T1[ebp]
  000d2	83 c9 01	 or	 ecx, 1
  000d5	89 4d 88	 mov	 DWORD PTR $T1[ebp], ecx
  000d8	8d 4d d8	 lea	 ecx, DWORD PTR __Str$4[ebp]
  000db	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000e0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000e3	e9 b6 00 00 00	 jmp	 $LN5@str
  000e8	e9 b1 00 00 00	 jmp	 $LN5@str
$LN4@str:
; Line 100
  000ed	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f0	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000f3	83 e0 04	 and	 eax, 4
  000f6	75 7e		 jne	 SHORT $LN2@str
  000f8	8b f4		 mov	 esi, esp
  000fa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010a	85 c0		 test	 eax, eax
  0010c	74 68		 je	 SHORT $LN2@str
; Line 102
  0010e	8b f4		 mov	 esi, esp
  00110	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00119	3b f4		 cmp	 esi, esp
  0011b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00120	8b f0		 mov	 esi, eax
  00122	8b fc		 mov	 edi, esp
  00124	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00127	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0012d	3b fc		 cmp	 edi, esp
  0012f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00134	2b f0		 sub	 esi, eax
  00136	56		 push	 esi
  00137	8b f4		 mov	 esi, esp
  00139	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00142	3b f4		 cmp	 esi, esp
  00144	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00149	50		 push	 eax
  0014a	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  0014d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 103
  00152	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  00155	51		 push	 ecx
  00156	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00159	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0015e	8b 55 88	 mov	 edx, DWORD PTR $T1[ebp]
  00161	83 ca 01	 or	 edx, 1
  00164	89 55 88	 mov	 DWORD PTR $T1[ebp], edx
  00167	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  0016a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00172	eb 2a		 jmp	 SHORT $LN5@str
; Line 105
  00174	eb 28		 jmp	 SHORT $LN5@str
$LN2@str:
; Line 107
  00176	8d 4d 90	 lea	 ecx, DWORD PTR __Nul$2[ebp]
  00179	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 108
  0017e	8d 45 90	 lea	 eax, DWORD PTR __Nul$2[ebp]
  00181	50		 push	 eax
  00182	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00185	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0018a	8b 4d 88	 mov	 ecx, DWORD PTR $T1[ebp]
  0018d	83 c9 01	 or	 ecx, 1
  00190	89 4d 88	 mov	 DWORD PTR $T1[ebp], ecx
  00193	8d 4d 90	 lea	 ecx, DWORD PTR __Nul$2[ebp]
  00196	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0019b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
  0019e	52		 push	 edx
  0019f	8b cd		 mov	 ecx, ebp
  001a1	50		 push	 eax
  001a2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@str
  001a8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001ad	58		 pop	 eax
  001ae	5a		 pop	 edx
  001af	5f		 pop	 edi
  001b0	5e		 pop	 esi
  001b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b4	33 cd		 xor	 ecx, ebp
  001b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001bb	83 c4 7c	 add	 esp, 124		; 0000007cH
  001be	3b ec		 cmp	 ebp, esp
  001c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c5	8b e5		 mov	 esp, ebp
  001c7	5d		 pop	 ebp
  001c8	c2 04 00	 ret	 4
  001cb	90		 npad	 1
$LN18@str:
  001cc	03 00 00 00	 DD	 3
  001d0	00 00 00 00	 DD	 $LN17@str
$LN17@str:
  001d4	d8 ff ff ff	 DD	 -40			; ffffffd8H
  001d8	1c 00 00 00	 DD	 28			; 0000001cH
  001dc	00 00 00 00	 DD	 $LN14@str
  001e0	b4 ff ff ff	 DD	 -76			; ffffffb4H
  001e4	1c 00 00 00	 DD	 28			; 0000001cH
  001e8	00 00 00 00	 DD	 $LN15@str
  001ec	90 ff ff ff	 DD	 -112			; ffffff90H
  001f0	1c 00 00 00	 DD	 28			; 0000001cH
  001f4	00 00 00 00	 DD	 $LN16@str
$LN16@str:
  001f8	5f		 DB	 95			; 0000005fH
  001f9	4e		 DB	 78			; 0000004eH
  001fa	75		 DB	 117			; 00000075H
  001fb	6c		 DB	 108			; 0000006cH
  001fc	00		 DB	 0
$LN15@str:
  001fd	5f		 DB	 95			; 0000005fH
  001fe	53		 DB	 83			; 00000053H
  001ff	74		 DB	 116			; 00000074H
  00200	72		 DB	 114			; 00000072H
  00201	00		 DB	 0
$LN14@str:
  00202	5f		 DB	 95			; 0000005fH
  00203	53		 DB	 83			; 00000053H
  00204	74		 DB	 116			; 00000074H
  00205	72		 DB	 114			; 00000072H
  00206	00		 DB	 0
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 75
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
; Line 76
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 77
  00020	8b f4		 mov	 esi, esp
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 28
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b f4		 mov	 esi, esp
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00050	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	83 c1 40	 add	 ecx, 64			; 00000040H
  00056	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
; Line 31
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR __Mode$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
  00067	50		 push	 eax
  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 32
  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5e		 pop	 esi
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	3b ec		 cmp	 ebp, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
; Line 645
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	83 c1 18	 add	 ecx, 24			; 00000018H
  00028	e8 00 00 00 00	 call	 ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00030	83 c9 01	 or	 ecx, 1
  00033	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 646
  00039	83 c4 08	 add	 esp, 8
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 635
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 98	 mov	 ecx, DWORD PTR [eax-104]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 44 10 98 00
	00 00 00	 mov	 DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 51 98	 mov	 edx, DWORD PTR [ecx-104]
  00029	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002c	83 e8 68	 sub	 eax, 104		; 00000068H
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 51 98	 mov	 edx, DWORD PTR [ecx-104]
  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	89 44 0a 94	 mov	 DWORD PTR [edx+ecx-108], eax
; Line 636
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 e9 50	 sub	 ecx, 80			; 00000050H
  00045	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	83 e9 48	 sub	 ecx, 72			; 00000048H
  00050	8b f4		 mov	 esi, esp
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	5e		 pop	 esi
  00060	83 c4 04	 add	 esp, 4
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 591
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001c	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00028	33 c5		 xor	 eax, ebp
  0002a	50		 push	 eax
  0002b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00034	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00037	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0003e	83 7d 0c 00	 cmp	 DWORD PTR _$initVBases$[ebp], 0
  00042	74 38		 je	 SHORT $LN1@basic_stri
  00044	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
  0004d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	83 c1 68	 add	 ecx, 104		; 00000068H
  0005d	8b f4		 mov	 esi, esp
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00073	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp]
  00076	83 ca 01	 or	 edx, 1
  00079	89 55 ec	 mov	 DWORD PTR $T2[ebp], edx
$LN1@basic_stri:
  0007c	8b f4		 mov	 esi, esp
  0007e	6a 00		 push	 0
  00080	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00083	83 c0 18	 add	 eax, 24			; 00000018H
  00086	50		 push	 eax
  00087	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
  00090	3b f4		 cmp	 esi, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0009e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	c7 04 01 00 00
	00 00		 mov	 DWORD PTR [ecx+eax], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  000b0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000b3	8b 02		 mov	 eax, DWORD PTR [edx]
  000b5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b8	83 e9 68	 sub	 ecx, 104		; 00000068H
  000bb	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000be	8b 02		 mov	 eax, DWORD PTR [edx]
  000c0	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000c3	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	89 4c 10 fc	 mov	 DWORD PTR [eax+edx-4], ecx
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR __Mode$[ebp]
  000cd	51		 push	 ecx
  000ce	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	83 c1 18	 add	 ecx, 24			; 00000018H
  000d4	e8 00 00 00 00	 call	 ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Line 592
  000d9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e0	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ed	59		 pop	 ecx
  000ee	5e		 pop	 esi
  000ef	83 c4 14	 add	 esp, 20			; 00000014H
  000f2	3b ec		 cmp	 ebp, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 19 00 00
	00		 je	 $LN5@basic_stri
  0000c	83 65 ec fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 68	 add	 ecx, 104		; 00000068H
  00016	8b f4		 mov	 esi, esp
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  0001e	3b f4		 cmp	 esi, esp
  00020	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$LN5@basic_stri:
  00025	c3		 ret	 0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 20	 add	 ecx, 32			; 00000020H
  0002c	8b f4		 mov	 esi, esp
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  00034	3b f4		 cmp	 esi, esp
  00036	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
  0003b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00042	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  00051	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
_TEXT	SEGMENT
tv290 = -126						; size = 2
tv289 = -124						; size = 4
tv288 = -118						; size = 2
tv287 = -116						; size = 8
tv286 = -108						; size = 4
tv285 = -102						; size = 2
tv284 = -100						; size = 4
tv283 = -94						; size = 2
tv137 = -92						; size = 4
tv135 = -88						; size = 8
tv342 = -80						; size = 8
tv328 = -72						; size = 8
$T2 = -64						; size = 4
$T3 = -60						; size = 2
$T4 = -58						; size = 2
$T5 = -56						; size = 2
$T6 = -54						; size = 2
__Ok$ = -48						; size = 8
__Pad$ = -36						; size = 8
__Count$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 873
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 70	 sub	 esp, 112		; 00000070H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  0001b	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 876
  0003b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0
; Line 877
  00042	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?length@?$char_traits@_W@std@@SAIPB_W@Z ; std::char_traits<wchar_t>::length
  0004b	83 c4 04	 add	 esp, 4
  0004e	33 c9		 xor	 ecx, ecx
  00050	89 45 e4	 mov	 DWORD PTR __Count$[ebp], eax
  00053	89 4d e8	 mov	 DWORD PTR __Count$[ebp+4], ecx
; Line 879
  00056	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00059	8b 02		 mov	 eax, DWORD PTR [edx]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0005e	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00061	8b f4		 mov	 esi, esp
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	89 45 b8	 mov	 DWORD PTR tv328[ebp], eax
  00073	89 55 bc	 mov	 DWORD PTR tv328[ebp+4], edx
  00076	83 7d bc 00	 cmp	 DWORD PTR tv328[ebp+4], 0
  0007a	7c 62		 jl	 SHORT $LN17@operator
  0007c	7f 06		 jg	 SHORT $LN24@operator
  0007e	83 7d b8 00	 cmp	 DWORD PTR tv328[ebp], 0
  00082	76 5a		 jbe	 SHORT $LN17@operator
$LN24@operator:
  00084	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0008c	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  0008f	8b f4		 mov	 esi, esp
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00097	3b f4		 cmp	 esi, esp
  00099	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009e	89 45 b0	 mov	 DWORD PTR tv342[ebp], eax
  000a1	89 55 b4	 mov	 DWORD PTR tv342[ebp+4], edx
  000a4	8b 45 b4	 mov	 eax, DWORD PTR tv342[ebp+4]
  000a7	3b 45 e8	 cmp	 eax, DWORD PTR __Count$[ebp+4]
  000aa	7c 32		 jl	 SHORT $LN17@operator
  000ac	7f 08		 jg	 SHORT $LN25@operator
  000ae	8b 4d b0	 mov	 ecx, DWORD PTR tv342[ebp]
  000b1	3b 4d e4	 cmp	 ecx, DWORD PTR __Count$[ebp]
  000b4	76 28		 jbe	 SHORT $LN17@operator
$LN25@operator:
  000b6	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000b9	8b 02		 mov	 eax, DWORD PTR [edx]
  000bb	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  000be	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  000c1	8b f4		 mov	 esi, esp
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	2b 45 e4	 sub	 eax, DWORD PTR __Count$[ebp]
  000d3	1b 55 e8	 sbb	 edx, DWORD PTR __Count$[ebp+4]
  000d6	89 45 a8	 mov	 DWORD PTR tv135[ebp], eax
  000d9	89 55 ac	 mov	 DWORD PTR tv135[ebp+4], edx
  000dc	eb 09		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000de	66 0f 57 c0	 xorpd	 xmm0, xmm0
  000e2	66 0f 13 45 a8	 movlpd	 QWORD PTR tv135[ebp], xmm0
$LN18@operator:
  000e7	8b 4d a8	 mov	 ecx, DWORD PTR tv135[ebp]
  000ea	89 4d dc	 mov	 DWORD PTR __Pad$[ebp], ecx
  000ed	8b 55 ac	 mov	 edx, DWORD PTR tv135[ebp+4]
  000f0	89 55 e0	 mov	 DWORD PTR __Pad$[ebp+4], edx
; Line 880
  000f3	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000f6	50		 push	 eax
  000f7	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  000fa	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
  000ff	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 882
  00106	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00109	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
  0010e	0f b6 c8	 movzx	 ecx, al
  00111	85 c9		 test	 ecx, ecx
  00113	75 0e		 jne	 SHORT $LN14@operator
; Line 883
  00115	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  00118	83 ca 04	 or	 edx, 4
  0011b	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 884
  0011e	e9 6c 02 00 00	 jmp	 $LN13@operator
$LN14@operator:
; Line 886
  00123	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
; Line 887
  00127	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0012f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00132	8b f4		 mov	 esi, esp
  00134	8b ca		 mov	 ecx, edx
  00136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  0013c	3b f4		 cmp	 esi, esp
  0013e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00143	89 45 a4	 mov	 DWORD PTR tv137[ebp], eax
  00146	8b 45 a4	 mov	 eax, DWORD PTR tv137[ebp]
  00149	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  0014e	83 f8 40	 cmp	 eax, 64			; 00000040H
  00151	0f 84 bc 00 00
	00		 je	 $LN11@operator
; Line 888
  00157	eb 12		 jmp	 SHORT $LN10@operator
$LN9@operator:
  00159	8b 4d dc	 mov	 ecx, DWORD PTR __Pad$[ebp]
  0015c	83 e9 01	 sub	 ecx, 1
  0015f	8b 55 e0	 mov	 edx, DWORD PTR __Pad$[ebp+4]
  00162	83 da 00	 sbb	 edx, 0
  00165	89 4d dc	 mov	 DWORD PTR __Pad$[ebp], ecx
  00168	89 55 e0	 mov	 DWORD PTR __Pad$[ebp+4], edx
$LN10@operator:
  0016b	83 7d e0 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  0016f	0f 8c 9e 00 00
	00		 jl	 $LN11@operator
  00175	7f 0a		 jg	 SHORT $LN26@operator
  00177	83 7d dc 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  0017b	0f 86 92 00 00
	00		 jbe	 $LN11@operator
$LN26@operator:
; Line 890
  00181	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00184	8b 08		 mov	 ecx, DWORD PTR [eax]
  00186	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00189	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0018c	8b f4		 mov	 esi, esp
  0018e	8b ca		 mov	 ecx, edx
  00190	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
  00196	3b f4		 cmp	 esi, esp
  00198	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019d	66 89 45 a2	 mov	 WORD PTR tv283[ebp], ax
  001a1	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  001a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a6	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  001a9	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  001ac	8b f4		 mov	 esi, esp
  001ae	8b ca		 mov	 ecx, edx
  001b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  001b6	3b f4		 cmp	 esi, esp
  001b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001bd	89 45 9c	 mov	 DWORD PTR tv284[ebp], eax
  001c0	8b f4		 mov	 esi, esp
  001c2	0f b7 45 a2	 movzx	 eax, WORD PTR tv283[ebp]
  001c6	50		 push	 eax
  001c7	8b 4d 9c	 mov	 ecx, DWORD PTR tv284[ebp]
  001ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  001d0	3b f4		 cmp	 esi, esp
  001d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d7	66 89 45 9a	 mov	 WORD PTR tv285[ebp], ax
  001db	66 8b 4d 9a	 mov	 cx, WORD PTR tv285[ebp]
  001df	66 89 4d ca	 mov	 WORD PTR $T6[ebp], cx
  001e3	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  001e8	66 89 45 c8	 mov	 WORD PTR $T5[ebp], ax
  001ec	8d 55 ca	 lea	 edx, DWORD PTR $T6[ebp]
  001ef	52		 push	 edx
  001f0	8d 45 c8	 lea	 eax, DWORD PTR $T5[ebp]
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
  001f9	83 c4 08	 add	 esp, 8
  001fc	0f b6 c8	 movzx	 ecx, al
  001ff	85 c9		 test	 ecx, ecx
  00201	74 0b		 je	 SHORT $LN7@operator
; Line 892
  00203	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  00206	83 ca 04	 or	 edx, 4
  00209	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 893
  0020c	eb 05		 jmp	 SHORT $LN11@operator
$LN7@operator:
; Line 896
  0020e	e9 46 ff ff ff	 jmp	 $LN9@operator
$LN11@operator:
; Line 897
  00213	83 7d ec 00	 cmp	 DWORD PTR __State$[ebp], 0
  00217	75 5c		 jne	 SHORT $LN6@operator
  00219	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0021c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021e	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00221	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00224	8b f4		 mov	 esi, esp
  00226	8b ca		 mov	 ecx, edx
  00228	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  0022e	3b f4		 cmp	 esi, esp
  00230	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00235	89 45 94	 mov	 DWORD PTR tv286[ebp], eax
  00238	8b f4		 mov	 esi, esp
  0023a	8b 45 e8	 mov	 eax, DWORD PTR __Count$[ebp+4]
  0023d	50		 push	 eax
  0023e	8b 4d e4	 mov	 ecx, DWORD PTR __Count$[ebp]
  00241	51		 push	 ecx
  00242	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  00245	52		 push	 edx
  00246	8b 4d 94	 mov	 ecx, DWORD PTR tv286[ebp]
  00249	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z
  0024f	3b f4		 cmp	 esi, esp
  00251	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00256	89 45 8c	 mov	 DWORD PTR tv287[ebp], eax
  00259	89 55 90	 mov	 DWORD PTR tv287[ebp+4], edx
  0025c	8b 45 8c	 mov	 eax, DWORD PTR tv287[ebp]
  0025f	3b 45 e4	 cmp	 eax, DWORD PTR __Count$[ebp]
  00262	75 08		 jne	 SHORT $LN27@operator
  00264	8b 4d 90	 mov	 ecx, DWORD PTR tv287[ebp+4]
  00267	3b 4d e8	 cmp	 ecx, DWORD PTR __Count$[ebp+4]
  0026a	74 09		 je	 SHORT $LN6@operator
$LN27@operator:
; Line 898
  0026c	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  0026f	83 ca 04	 or	 edx, 4
  00272	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
$LN6@operator:
; Line 900
  00275	83 7d ec 00	 cmp	 DWORD PTR __State$[ebp], 0
  00279	0f 85 b8 00 00
	00		 jne	 $LN5@operator
; Line 901
  0027f	eb 12		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00281	8b 45 dc	 mov	 eax, DWORD PTR __Pad$[ebp]
  00284	83 e8 01	 sub	 eax, 1
  00287	8b 4d e0	 mov	 ecx, DWORD PTR __Pad$[ebp+4]
  0028a	83 d9 00	 sbb	 ecx, 0
  0028d	89 45 dc	 mov	 DWORD PTR __Pad$[ebp], eax
  00290	89 4d e0	 mov	 DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
  00293	83 7d e0 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  00297	0f 8c 9a 00 00
	00		 jl	 $LN5@operator
  0029d	7f 0a		 jg	 SHORT $LN28@operator
  0029f	83 7d dc 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  002a3	0f 86 8e 00 00
	00		 jbe	 $LN5@operator
$LN28@operator:
; Line 903
  002a9	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  002ac	8b 02		 mov	 eax, DWORD PTR [edx]
  002ae	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  002b1	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  002b4	8b f4		 mov	 esi, esp
  002b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
  002bc	3b f4		 cmp	 esi, esp
  002be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c3	66 89 45 8a	 mov	 WORD PTR tv288[ebp], ax
  002c7	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  002ca	8b 11		 mov	 edx, DWORD PTR [ecx]
  002cc	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  002cf	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  002d2	8b f4		 mov	 esi, esp
  002d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  002da	3b f4		 cmp	 esi, esp
  002dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e1	89 45 84	 mov	 DWORD PTR tv289[ebp], eax
  002e4	8b f4		 mov	 esi, esp
  002e6	0f b7 45 8a	 movzx	 eax, WORD PTR tv288[ebp]
  002ea	50		 push	 eax
  002eb	8b 4d 84	 mov	 ecx, DWORD PTR tv289[ebp]
  002ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  002f4	3b f4		 cmp	 esi, esp
  002f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002fb	66 89 45 82	 mov	 WORD PTR tv290[ebp], ax
  002ff	66 8b 4d 82	 mov	 cx, WORD PTR tv290[ebp]
  00303	66 89 4d c6	 mov	 WORD PTR $T4[ebp], cx
  00307	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  0030c	66 89 45 c4	 mov	 WORD PTR $T3[ebp], ax
  00310	8d 55 c6	 lea	 edx, DWORD PTR $T4[ebp]
  00313	52		 push	 edx
  00314	8d 45 c4	 lea	 eax, DWORD PTR $T3[ebp]
  00317	50		 push	 eax
  00318	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
  0031d	83 c4 08	 add	 esp, 8
  00320	0f b6 c8	 movzx	 ecx, al
  00323	85 c9		 test	 ecx, ecx
  00325	74 0b		 je	 SHORT $LN1@operator
; Line 905
  00327	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  0032a	83 ca 04	 or	 edx, 4
  0032d	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 906
  00330	eb 05		 jmp	 SHORT $LN5@operator
$LN1@operator:
; Line 907
  00332	e9 4a ff ff ff	 jmp	 $LN3@operator
$LN5@operator:
; Line 908
  00337	8b f4		 mov	 esi, esp
  00339	6a 00		 push	 0
  0033b	6a 00		 push	 0
  0033d	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00340	8b 08		 mov	 ecx, DWORD PTR [eax]
  00342	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00345	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00348	8b ca		 mov	 ecx, edx
  0034a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  00350	3b f4		 cmp	 esi, esp
  00352	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00357	eb 26		 jmp	 SHORT $LN19@operator
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$0:
; Line 909
  00359	8b f4		 mov	 esi, esp
  0035b	6a 01		 push	 1
  0035d	6a 04		 push	 4
  0035f	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00362	8b 08		 mov	 ecx, DWORD PTR [eax]
  00364	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00367	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0036a	8b ca		 mov	 ecx, edx
  0036c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
  00372	3b f4		 cmp	 esi, esp
  00374	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00379	b8 00 00 00 00	 mov	 eax, $LN23@operator
  0037e	c3		 ret	 0
$LN19@operator:
  0037f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00386	eb 07		 jmp	 SHORT $LN13@operator
$LN23@operator:
  00388	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator:
; Line 912
  0038f	8b f4		 mov	 esi, esp
  00391	6a 00		 push	 0
  00393	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
  00396	50		 push	 eax
  00397	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0039a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0039c	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0039f	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  003a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
  003a8	3b f4		 cmp	 esi, esp
  003aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 913
  003af	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003b2	89 45 c0	 mov	 DWORD PTR $T2[ebp], eax
  003b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  003bc	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  003bf	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
  003c4	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
; Line 914
  003c7	52		 push	 edx
  003c8	8b cd		 mov	 ecx, ebp
  003ca	50		 push	 eax
  003cb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN32@operator
  003d1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003d6	58		 pop	 eax
  003d7	5a		 pop	 edx
  003d8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  003db	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003e2	59		 pop	 ecx
  003e3	5f		 pop	 edi
  003e4	5e		 pop	 esi
  003e5	5b		 pop	 ebx
  003e6	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  003ec	3b ec		 cmp	 ebp, esp
  003ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003f3	8b e5		 mov	 esp, ebp
  003f5	5d		 pop	 ebp
  003f6	c3		 ret	 0
  003f7	90		 npad	 1
$LN32@operator:
  003f8	01 00 00 00	 DD	 1
  003fc	00 00 00 00	 DD	 $LN31@operator
$LN31@operator:
  00400	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00404	08 00 00 00	 DD	 8
  00408	00 00 00 00	 DD	 $LN29@operator
$LN29@operator:
  0040c	5f		 DB	 95			; 0000005fH
  0040d	4f		 DB	 79			; 0000004fH
  0040e	6b		 DB	 107			; 0000006bH
  0040f	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z$2:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 7c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-132]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv322 = -158						; size = 2
tv321 = -156						; size = 4
tv320 = -152						; size = 2
tv319 = -150						; size = 2
tv318 = -148						; size = 4
tv317 = -144						; size = 2
tv316 = -142						; size = 2
tv315 = -140						; size = 4
tv314 = -134						; size = 2
tv313 = -132						; size = 4
tv312 = -128						; size = 4
tv309 = -124						; size = 4
tv138 = -120						; size = 4
tv136 = -116						; size = 8
tv385 = -108						; size = 8
tv371 = -100						; size = 8
tv66 = -92						; size = 4
tv356 = -85						; size = 1
tv353 = -84						; size = 4
tv350 = -80						; size = 4
$T2 = -76						; size = 4
$T3 = -72						; size = 2
$T4 = -70						; size = 2
$T5 = -68						; size = 2
$T6 = -66						; size = 2
$T7 = -64						; size = 2
$T8 = -62						; size = 2
$T9 = -60						; size = 4
__Ctype_fac$10 = -56					; size = 4
__Ok$ = -48						; size = 8
__Pad$ = -36						; size = 8
__Count$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<wchar_t,std::char_traits<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 701
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 60 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-160]
  00021	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 702
  00041	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0
; Line 703
  00048	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0004b	89 45 b0	 mov	 DWORD PTR tv350[ebp], eax
  0004e	8b 4d b0	 mov	 ecx, DWORD PTR tv350[ebp]
  00051	83 c1 01	 add	 ecx, 1
  00054	89 4d ac	 mov	 DWORD PTR tv353[ebp], ecx
$LL28@operator:
  00057	8b 55 b0	 mov	 edx, DWORD PTR tv350[ebp]
  0005a	8a 02		 mov	 al, BYTE PTR [edx]
  0005c	88 45 ab	 mov	 BYTE PTR tv356[ebp], al
  0005f	83 45 b0 01	 add	 DWORD PTR tv350[ebp], 1
  00063	80 7d ab 00	 cmp	 BYTE PTR tv356[ebp], 0
  00067	75 ee		 jne	 SHORT $LL28@operator
  00069	8b 4d b0	 mov	 ecx, DWORD PTR tv350[ebp]
  0006c	2b 4d ac	 sub	 ecx, DWORD PTR tv353[ebp]
  0006f	89 4d a4	 mov	 DWORD PTR tv66[ebp], ecx
  00072	8b 55 a4	 mov	 edx, DWORD PTR tv66[ebp]
  00075	33 c0		 xor	 eax, eax
  00077	89 55 e4	 mov	 DWORD PTR __Count$[ebp], edx
  0007a	89 45 e8	 mov	 DWORD PTR __Count$[ebp+4], eax
; Line 705
  0007d	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00080	8b 11		 mov	 edx, DWORD PTR [ecx]
  00082	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00085	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00088	8b f4		 mov	 esi, esp
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00090	3b f4		 cmp	 esi, esp
  00092	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00097	89 45 9c	 mov	 DWORD PTR tv371[ebp], eax
  0009a	89 55 a0	 mov	 DWORD PTR tv371[ebp+4], edx
  0009d	83 7d a0 00	 cmp	 DWORD PTR tv371[ebp+4], 0
  000a1	7c 64		 jl	 SHORT $LN20@operator
  000a3	7f 06		 jg	 SHORT $LN29@operator
  000a5	83 7d 9c 00	 cmp	 DWORD PTR tv371[ebp], 0
  000a9	76 5c		 jbe	 SHORT $LN20@operator
$LN29@operator:
  000ab	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b0	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000b3	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000b6	8b f4		 mov	 esi, esp
  000b8	8b ca		 mov	 ecx, edx
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	89 45 94	 mov	 DWORD PTR tv385[ebp], eax
  000ca	89 55 98	 mov	 DWORD PTR tv385[ebp+4], edx
  000cd	8b 45 98	 mov	 eax, DWORD PTR tv385[ebp+4]
  000d0	3b 45 e8	 cmp	 eax, DWORD PTR __Count$[ebp+4]
  000d3	7c 32		 jl	 SHORT $LN20@operator
  000d5	7f 08		 jg	 SHORT $LN30@operator
  000d7	8b 4d 94	 mov	 ecx, DWORD PTR tv385[ebp]
  000da	3b 4d e4	 cmp	 ecx, DWORD PTR __Count$[ebp]
  000dd	76 28		 jbe	 SHORT $LN20@operator
$LN30@operator:
  000df	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000e2	8b 02		 mov	 eax, DWORD PTR [edx]
  000e4	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  000e7	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  000ea	8b f4		 mov	 esi, esp
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	2b 45 e4	 sub	 eax, DWORD PTR __Count$[ebp]
  000fc	1b 55 e8	 sbb	 edx, DWORD PTR __Count$[ebp+4]
  000ff	89 45 8c	 mov	 DWORD PTR tv136[ebp], eax
  00102	89 55 90	 mov	 DWORD PTR tv136[ebp+4], edx
  00105	eb 09		 jmp	 SHORT $LN21@operator
$LN20@operator:
  00107	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0010b	66 0f 13 45 8c	 movlpd	 QWORD PTR tv136[ebp], xmm0
$LN21@operator:
  00110	8b 4d 8c	 mov	 ecx, DWORD PTR tv136[ebp]
  00113	89 4d dc	 mov	 DWORD PTR __Pad$[ebp], ecx
  00116	8b 55 90	 mov	 edx, DWORD PTR tv136[ebp+4]
  00119	89 55 e0	 mov	 DWORD PTR __Pad$[ebp+4], edx
; Line 706
  0011c	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0011f	50		 push	 eax
  00120	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00123	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
  00128	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 708
  0012f	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00132	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
  00137	0f b6 c8	 movzx	 ecx, al
  0013a	85 c9		 test	 ecx, ecx
  0013c	75 0e		 jne	 SHORT $LN17@operator
; Line 709
  0013e	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  00141	83 ca 04	 or	 edx, 4
  00144	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 710
  00147	e9 5e 03 00 00	 jmp	 $LN16@operator
$LN17@operator:
; Line 712
  0014c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
; Line 713
  00150	8b f4		 mov	 esi, esp
  00152	8d 45 c4	 lea	 eax, DWORD PTR $T9[ebp]
  00155	50		 push	 eax
  00156	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00159	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015b	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0015e	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ
  00167	3b f4		 cmp	 esi, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016e	89 45 88	 mov	 DWORD PTR tv138[ebp], eax
  00171	8b 45 88	 mov	 eax, DWORD PTR tv138[ebp]
  00174	89 45 84	 mov	 DWORD PTR tv309[ebp], eax
  00177	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  0017b	8b 4d 84	 mov	 ecx, DWORD PTR tv309[ebp]
  0017e	51		 push	 ecx
  0017f	e8 00 00 00 00	 call	 ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<wchar_t> >
  00184	83 c4 04	 add	 esp, 4
  00187	89 45 80	 mov	 DWORD PTR tv312[ebp], eax
  0018a	8b 55 80	 mov	 edx, DWORD PTR tv312[ebp]
  0018d	89 55 c8	 mov	 DWORD PTR __Ctype_fac$10[ebp], edx
  00190	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00194	8d 4d c4	 lea	 ecx, DWORD PTR $T9[ebp]
  00197	e8 00 00 00 00	 call	 ??1locale@std@@QAE@XZ	; std::locale::~locale
; Line 714
  0019c	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0019f	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a1	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  001a4	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  001a7	8b f4		 mov	 esi, esp
  001a9	8b ca		 mov	 ecx, edx
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  001b1	3b f4		 cmp	 esi, esp
  001b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b8	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv313[ebp], eax
  001be	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv313[ebp]
  001c4	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  001c9	83 f8 40	 cmp	 eax, 64			; 00000040H
  001cc	0f 84 ce 00 00
	00		 je	 $LN14@operator
; Line 715
  001d2	eb 12		 jmp	 SHORT $LN13@operator
$LN12@operator:
  001d4	8b 4d dc	 mov	 ecx, DWORD PTR __Pad$[ebp]
  001d7	83 e9 01	 sub	 ecx, 1
  001da	8b 55 e0	 mov	 edx, DWORD PTR __Pad$[ebp+4]
  001dd	83 da 00	 sbb	 edx, 0
  001e0	89 4d dc	 mov	 DWORD PTR __Pad$[ebp], ecx
  001e3	89 55 e0	 mov	 DWORD PTR __Pad$[ebp+4], edx
$LN13@operator:
  001e6	83 7d e0 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  001ea	0f 8c b0 00 00
	00		 jl	 $LN14@operator
  001f0	7f 0a		 jg	 SHORT $LN31@operator
  001f2	83 7d dc 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  001f6	0f 86 a4 00 00
	00		 jbe	 $LN14@operator
$LN31@operator:
; Line 717
  001fc	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  001ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00201	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00204	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00207	8b f4		 mov	 esi, esp
  00209	8b ca		 mov	 ecx, edx
  0020b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
  00211	3b f4		 cmp	 esi, esp
  00213	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00218	66 89 85 7a ff
	ff ff		 mov	 WORD PTR tv314[ebp], ax
  0021f	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00222	8b 08		 mov	 ecx, DWORD PTR [eax]
  00224	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00227	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0022a	8b f4		 mov	 esi, esp
  0022c	8b ca		 mov	 ecx, edx
  0022e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00234	3b f4		 cmp	 esi, esp
  00236	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023b	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv315[ebp], eax
  00241	8b f4		 mov	 esi, esp
  00243	0f b7 85 7a ff
	ff ff		 movzx	 eax, WORD PTR tv314[ebp]
  0024a	50		 push	 eax
  0024b	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv315[ebp]
  00251	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  00257	3b f4		 cmp	 esi, esp
  00259	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025e	66 89 85 72 ff
	ff ff		 mov	 WORD PTR tv316[ebp], ax
  00265	66 8b 8d 72 ff
	ff ff		 mov	 cx, WORD PTR tv316[ebp]
  0026c	66 89 4d c2	 mov	 WORD PTR $T8[ebp], cx
  00270	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  00275	66 89 45 c0	 mov	 WORD PTR $T7[ebp], ax
  00279	8d 55 c2	 lea	 edx, DWORD PTR $T8[ebp]
  0027c	52		 push	 edx
  0027d	8d 45 c0	 lea	 eax, DWORD PTR $T7[ebp]
  00280	50		 push	 eax
  00281	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
  00286	83 c4 08	 add	 esp, 8
  00289	0f b6 c8	 movzx	 ecx, al
  0028c	85 c9		 test	 ecx, ecx
  0028e	74 0b		 je	 SHORT $LN10@operator
; Line 719
  00290	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  00293	83 ca 04	 or	 edx, 4
  00296	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 720
  00299	eb 05		 jmp	 SHORT $LN14@operator
$LN10@operator:
; Line 723
  0029b	e9 34 ff ff ff	 jmp	 $LN12@operator
$LN14@operator:
  002a0	eb 1b		 jmp	 SHORT $LN9@operator
$LN8@operator:
  002a2	8b 45 e4	 mov	 eax, DWORD PTR __Count$[ebp]
  002a5	83 e8 01	 sub	 eax, 1
  002a8	8b 4d e8	 mov	 ecx, DWORD PTR __Count$[ebp+4]
  002ab	83 d9 00	 sbb	 ecx, 0
  002ae	89 45 e4	 mov	 DWORD PTR __Count$[ebp], eax
  002b1	89 4d e8	 mov	 DWORD PTR __Count$[ebp+4], ecx
  002b4	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  002b7	83 c2 01	 add	 edx, 1
  002ba	89 55 0c	 mov	 DWORD PTR __Val$[ebp], edx
$LN9@operator:
  002bd	83 7d ec 00	 cmp	 DWORD PTR __State$[ebp], 0
  002c1	0f 85 b3 00 00
	00		 jne	 $LN7@operator
  002c7	83 7d e8 00	 cmp	 DWORD PTR __Count$[ebp+4], 0
  002cb	0f 8c a9 00 00
	00		 jl	 $LN7@operator
  002d1	7f 0a		 jg	 SHORT $LN32@operator
  002d3	83 7d e4 00	 cmp	 DWORD PTR __Count$[ebp], 0
  002d7	0f 86 9d 00 00
	00		 jbe	 $LN7@operator
$LN32@operator:
; Line 725
  002dd	8b f4		 mov	 esi, esp
  002df	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  002e2	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  002e5	51		 push	 ecx
  002e6	8b 4d c8	 mov	 ecx, DWORD PTR __Ctype_fac$10[ebp]
  002e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?widen@?$ctype@_W@std@@QBE_WD@Z
  002ef	3b f4		 cmp	 esi, esp
  002f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f6	66 89 85 70 ff
	ff ff		 mov	 WORD PTR tv317[ebp], ax
  002fd	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00300	8b 02		 mov	 eax, DWORD PTR [edx]
  00302	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00305	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00308	8b f4		 mov	 esi, esp
  0030a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00310	3b f4		 cmp	 esi, esp
  00312	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00317	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv318[ebp], eax
  0031d	8b f4		 mov	 esi, esp
  0031f	0f b7 8d 70 ff
	ff ff		 movzx	 ecx, WORD PTR tv317[ebp]
  00326	51		 push	 ecx
  00327	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv318[ebp]
  0032d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  00333	3b f4		 cmp	 esi, esp
  00335	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0033a	66 89 85 6a ff
	ff ff		 mov	 WORD PTR tv319[ebp], ax
  00341	66 8b 95 6a ff
	ff ff		 mov	 dx, WORD PTR tv319[ebp]
  00348	66 89 55 be	 mov	 WORD PTR $T6[ebp], dx
  0034c	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  00351	66 89 45 bc	 mov	 WORD PTR $T5[ebp], ax
  00355	8d 45 be	 lea	 eax, DWORD PTR $T6[ebp]
  00358	50		 push	 eax
  00359	8d 4d bc	 lea	 ecx, DWORD PTR $T5[ebp]
  0035c	51		 push	 ecx
  0035d	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
  00362	83 c4 08	 add	 esp, 8
  00365	0f b6 d0	 movzx	 edx, al
  00368	85 d2		 test	 edx, edx
  0036a	74 09		 je	 SHORT $LN6@operator
; Line 726
  0036c	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
  0036f	83 c8 04	 or	 eax, 4
  00372	89 45 ec	 mov	 DWORD PTR __State$[ebp], eax
$LN6@operator:
; Line 728
  00375	e9 28 ff ff ff	 jmp	 $LN8@operator
$LN7@operator:
  0037a	83 7d ec 00	 cmp	 DWORD PTR __State$[ebp], 0
  0037e	0f 85 ce 00 00
	00		 jne	 $LN5@operator
; Line 729
  00384	eb 12		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00386	8b 4d dc	 mov	 ecx, DWORD PTR __Pad$[ebp]
  00389	83 e9 01	 sub	 ecx, 1
  0038c	8b 55 e0	 mov	 edx, DWORD PTR __Pad$[ebp+4]
  0038f	83 da 00	 sbb	 edx, 0
  00392	89 4d dc	 mov	 DWORD PTR __Pad$[ebp], ecx
  00395	89 55 e0	 mov	 DWORD PTR __Pad$[ebp+4], edx
$LN4@operator:
  00398	83 7d e0 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  0039c	0f 8c b0 00 00
	00		 jl	 $LN5@operator
  003a2	7f 0a		 jg	 SHORT $LN33@operator
  003a4	83 7d dc 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  003a8	0f 86 a4 00 00
	00		 jbe	 $LN5@operator
$LN33@operator:
; Line 731
  003ae	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b3	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  003b6	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  003b9	8b f4		 mov	 esi, esp
  003bb	8b ca		 mov	 ecx, edx
  003bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ
  003c3	3b f4		 cmp	 esi, esp
  003c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ca	66 89 85 68 ff
	ff ff		 mov	 WORD PTR tv320[ebp], ax
  003d1	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d6	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  003d9	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  003dc	8b f4		 mov	 esi, esp
  003de	8b ca		 mov	 ecx, edx
  003e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  003e6	3b f4		 cmp	 esi, esp
  003e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ed	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv321[ebp], eax
  003f3	8b f4		 mov	 esi, esp
  003f5	0f b7 85 68 ff
	ff ff		 movzx	 eax, WORD PTR tv320[ebp]
  003fc	50		 push	 eax
  003fd	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv321[ebp]
  00403	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z
  00409	3b f4		 cmp	 esi, esp
  0040b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00410	66 89 85 62 ff
	ff ff		 mov	 WORD PTR tv322[ebp], ax
  00417	66 8b 8d 62 ff
	ff ff		 mov	 cx, WORD PTR tv322[ebp]
  0041e	66 89 4d ba	 mov	 WORD PTR $T4[ebp], cx
  00422	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  00427	66 89 45 b8	 mov	 WORD PTR $T3[ebp], ax
  0042b	8d 55 ba	 lea	 edx, DWORD PTR $T4[ebp]
  0042e	52		 push	 edx
  0042f	8d 45 b8	 lea	 eax, DWORD PTR $T3[ebp]
  00432	50		 push	 eax
  00433	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
  00438	83 c4 08	 add	 esp, 8
  0043b	0f b6 c8	 movzx	 ecx, al
  0043e	85 c9		 test	 ecx, ecx
  00440	74 0b		 je	 SHORT $LN1@operator
; Line 733
  00442	8b 55 ec	 mov	 edx, DWORD PTR __State$[ebp]
  00445	83 ca 04	 or	 edx, 4
  00448	89 55 ec	 mov	 DWORD PTR __State$[ebp], edx
; Line 734
  0044b	eb 05		 jmp	 SHORT $LN5@operator
$LN1@operator:
; Line 735
  0044d	e9 34 ff ff ff	 jmp	 $LN3@operator
$LN5@operator:
; Line 736
  00452	8b f4		 mov	 esi, esp
  00454	6a 00		 push	 0
  00456	6a 00		 push	 0
  00458	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0045b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0045d	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00460	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00463	8b ca		 mov	 ecx, edx
  00465	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  0046b	3b f4		 cmp	 esi, esp
  0046d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00472	eb 26		 jmp	 SHORT $LN22@operator
__catch$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$0:
; Line 737
  00474	8b f4		 mov	 esi, esp
  00476	6a 01		 push	 1
  00478	6a 04		 push	 4
  0047a	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0047d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0047f	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00482	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00485	8b ca		 mov	 ecx, edx
  00487	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
  0048d	3b f4		 cmp	 esi, esp
  0048f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00494	b8 00 00 00 00	 mov	 eax, $LN27@operator
  00499	c3		 ret	 0
$LN22@operator:
  0049a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  004a1	eb 07		 jmp	 SHORT $LN16@operator
$LN27@operator:
  004a3	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN16@operator:
; Line 740
  004aa	8b f4		 mov	 esi, esp
  004ac	6a 00		 push	 0
  004ae	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
  004b1	50		 push	 eax
  004b2	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  004b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  004b7	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  004ba	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  004bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z
  004c3	3b f4		 cmp	 esi, esp
  004c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 741
  004ca	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  004cd	89 45 b4	 mov	 DWORD PTR $T2[ebp], eax
  004d0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  004d7	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  004da	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
  004df	8b 45 b4	 mov	 eax, DWORD PTR $T2[ebp]
; Line 742
  004e2	52		 push	 edx
  004e3	8b cd		 mov	 ecx, ebp
  004e5	50		 push	 eax
  004e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN37@operator
  004ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004f1	58		 pop	 eax
  004f2	5a		 pop	 edx
  004f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  004f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004fd	59		 pop	 ecx
  004fe	5f		 pop	 edi
  004ff	5e		 pop	 esi
  00500	5b		 pop	 ebx
  00501	81 c4 a0 00 00
	00		 add	 esp, 160		; 000000a0H
  00507	3b ec		 cmp	 ebp, esp
  00509	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0050e	8b e5		 mov	 esp, ebp
  00510	5d		 pop	 ebp
  00511	c3		 ret	 0
  00512	8b ff		 npad	 2
$LN37@operator:
  00514	01 00 00 00	 DD	 1
  00518	00 00 00 00	 DD	 $LN36@operator
$LN36@operator:
  0051c	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00520	08 00 00 00	 DD	 8
  00524	00 00 00 00	 DD	 $LN34@operator
$LN34@operator:
  00528	5f		 DB	 95			; 0000005fH
  00529	4f		 DB	 79			; 0000004fH
  0052a	6b		 DB	 107			; 0000006bH
  0052b	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$2:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
__unwindfunclet$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z$3:
  00008	8d 4d c4	 lea	 ecx, DWORD PTR $T9[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1locale@std@@QAE@XZ	; std::locale::~locale
__ehhandler$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 8a 5c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-164]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 50	 add	 ecx, 80			; 00000050H
  00015	e8 00 00 00 00	 call	 ??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 50	 add	 ecx, 80			; 00000050H
  00020	8b f4		 mov	 esi, esp
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	5e		 pop	 esi
  00030	83 c4 04	 add	 esp, 4
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 e9 50	 sub	 ecx, 80			; 00000050H
  00014	e8 00 00 00 00	 call	 ??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
  00019	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001c	83 e0 01	 and	 eax, 1
  0001f	74 0f		 je	 SHORT $LN1@scalar
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 e9 50	 sub	 ecx, 80			; 00000050H
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002d	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 e8 50	 sub	 eax, 80			; 00000050H
  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
??_G?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__State$ = -8						; size = 4
_this$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 354
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 355
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0
; Line 356
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  00021	83 e0 01	 and	 eax, 1
  00024	75 09		 jne	 SHORT $LN4@Getstate
; Line 357
  00026	8b 4d f8	 mov	 ecx, DWORD PTR __State$[ebp]
  00029	83 c9 04	 or	 ecx, 4
  0002c	89 4d f8	 mov	 DWORD PTR __State$[ebp], ecx
$LN4@Getstate:
; Line 358
  0002f	8b 55 08	 mov	 edx, DWORD PTR __Mode$[ebp]
  00032	83 e2 02	 and	 edx, 2
  00035	75 09		 jne	 SHORT $LN3@Getstate
; Line 359
  00037	8b 45 f8	 mov	 eax, DWORD PTR __State$[ebp]
  0003a	83 c8 02	 or	 eax, 2
  0003d	89 45 f8	 mov	 DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 360
  00040	8b 4d 08	 mov	 ecx, DWORD PTR __Mode$[ebp]
  00043	83 e1 08	 and	 ecx, 8
  00046	74 09		 je	 SHORT $LN2@Getstate
; Line 361
  00048	8b 55 f8	 mov	 edx, DWORD PTR __State$[ebp]
  0004b	83 ca 08	 or	 edx, 8
  0004e	89 55 f8	 mov	 DWORD PTR __State$[ebp], edx
$LN2@Getstate:
; Line 362
  00051	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  00054	83 e0 04	 and	 eax, 4
  00057	74 09		 je	 SHORT $LN1@Getstate
; Line 363
  00059	8b 4d f8	 mov	 ecx, DWORD PTR __State$[ebp]
  0005c	83 c9 10	 or	 ecx, 16			; 00000010H
  0005f	89 4d f8	 mov	 DWORD PTR __State$[ebp], ecx
$LN1@Getstate:
; Line 364
  00062	8b 45 f8	 mov	 eax, DWORD PTR __State$[ebp]
; Line 365
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 338
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0001e	83 e1 01	 and	 ecx, 1
  00021	74 7a		 je	 SHORT $LN1@Tidy
; Line 341
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	85 c0		 test	 eax, eax
  00037	74 17		 je	 SHORT $LN4@Tidy
  00039	8b f4		 mov	 esi, esp
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	89 45 f8	 mov	 DWORD PTR tv88[ebp], eax
  0004e	eb 15		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00050	8b f4		 mov	 esi, esp
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	89 45 f8	 mov	 DWORD PTR tv88[ebp], eax
$LN5@Tidy:
  00065	8b f4		 mov	 esi, esp
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b 55 f8	 mov	 edx, DWORD PTR tv88[ebp]
  0007a	2b d0		 sub	 edx, eax
  0007c	d1 fa		 sar	 edx, 1
  0007e	52		 push	 edx
  0007f	8b f4		 mov	 esi, esp
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0008a	3b f4		 cmp	 esi, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	50		 push	 eax
  00092	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	83 c1 40	 add	 ecx, 64			; 00000040H
  00098	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
$LN1@Tidy:
; Line 342
  0009d	8b f4		 mov	 esi, esp
  0009f	6a 00		 push	 0
  000a1	6a 00		 push	 0
  000a3	6a 00		 push	 0
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  000ae	3b f4		 cmp	 esi, esp
  000b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 343
  000b5	8b f4		 mov	 esi, esp
  000b7	6a 00		 push	 0
  000b9	6a 00		 push	 0
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W0@Z
  000c4	3b f4		 cmp	 esi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 344
  000cb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ce	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 345
  000d5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000db	83 e2 fe	 and	 edx, -2			; fffffffeH
  000de	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	89 50 3c	 mov	 DWORD PTR [eax+60], edx
; Line 346
  000e4	5e		 pop	 esi
  000e5	83 c4 08	 add	 esp, 8
  000e8	3b ec		 cmp	 ebp, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c3		 ret	 0
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z
_TEXT	SEGMENT
tv141 = -12						; size = 4
__Pnew$1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 310
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 311
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 312
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 55 10	 mov	 edx, DWORD PTR __State$[ebp]
  0002f	89 51 3c	 mov	 DWORD PTR [ecx+60], edx
; Line 315
  00032	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00036	0f 84 05 01 00
	00		 je	 $LN5@Init
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00042	83 e1 06	 and	 ecx, 6
  00045	83 f9 06	 cmp	 ecx, 6
  00048	0f 84 f3 00 00
	00		 je	 $LN5@Init
; Line 317
  0004e	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00051	52		 push	 edx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 40	 add	 ecx, 64			; 00000040H
  00058	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
  0005d	89 45 f8	 mov	 DWORD PTR __Pnew$1[ebp], eax
; Line 318
  00060	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00063	50		 push	 eax
  00064	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00067	51		 push	 ecx
  00068	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 319
  00074	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00077	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  0007a	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	89 50 38	 mov	 DWORD PTR [eax+56], edx
; Line 321
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00089	83 e2 04	 and	 edx, 4
  0008c	75 24		 jne	 SHORT $LN3@Init
; Line 323
  0008e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00091	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  00094	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00097	8b f4		 mov	 esi, esp
  00099	52		 push	 edx
  0009a	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  000a1	51		 push	 ecx
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  000ab	3b f4		 cmp	 esi, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Init:
; Line 324
  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000b8	83 e0 02	 and	 eax, 2
  000bb	75 75		 jne	 SHORT $LN2@Init
; Line 328
  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000c3	83 e2 18	 and	 edx, 24			; 00000018H
  000c6	74 0e		 je	 SHORT $LN7@Init
  000c8	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  000cb	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  000ce	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  000d1	89 55 f4	 mov	 DWORD PTR tv141[ebp], edx
  000d4	eb 06		 jmp	 SHORT $LN8@Init
$LN7@Init:
  000d6	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  000d9	89 45 f4	 mov	 DWORD PTR tv141[ebp], eax
$LN8@Init:
  000dc	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  000df	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  000e2	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  000e5	8b f4		 mov	 esi, esp
  000e7	50		 push	 eax
  000e8	8b 4d f4	 mov	 ecx, DWORD PTR tv141[ebp]
  000eb	51		 push	 ecx
  000ec	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  000ef	52		 push	 edx
  000f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  000f9	3b f4		 cmp	 esi, esp
  000fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 329
  00100	8b f4		 mov	 esi, esp
  00102	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	85 c0		 test	 eax, eax
  00114	75 1c		 jne	 SHORT $LN2@Init
; Line 330
  00116	8b f4		 mov	 esi, esp
  00118	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  0011b	50		 push	 eax
  0011c	6a 00		 push	 0
  0011e	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  00121	51		 push	 ecx
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  0012b	3b f4		 cmp	 esi, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Init:
; Line 332
  00132	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00135	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00138	83 c8 01	 or	 eax, 1
  0013b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	89 41 3c	 mov	 DWORD PTR [ecx+60], eax
$LN5@Init:
; Line 334
  00141	5e		 pop	 esi
  00142	83 c4 0c	 add	 esp, 12			; 0000000cH
  00145	3b ec		 cmp	 ebp, esp
  00147	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014c	8b e5		 mov	 esp, ebp
  0014e	5d		 pop	 ebp
  0014f	c2 0c 00	 ret	 12			; 0000000cH
?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv346 = -32						; size = 8
tv286 = -24						; size = 8
tv263 = -16						; size = 4
__Off$ = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 276
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00010	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00013	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00016	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00019	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001c	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001f	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00022	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00025	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 277
  00028	8d 4d 0c	 lea	 ecx, DWORD PTR __Ptr$[ebp]
  0002b	e8 00 00 00 00	 call	 ??B?$fpos@H@std@@QBE_JXZ ; std::fpos<int>::operator __int64
  00030	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  00033	89 55 f8	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 278
  00036	8b f4		 mov	 esi, esp
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	85 c0		 test	 eax, eax
  0004a	74 32		 je	 SHORT $LN12@seekpos
  0004c	8b f4		 mov	 esi, esp
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00064	73 18		 jae	 SHORT $LN12@seekpos
; Line 279
  00066	8b f4		 mov	 esi, esp
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN12@seekpos:
; Line 281
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00083	89 45 f0	 mov	 DWORD PTR tv263[ebp], eax
  00086	8b 4d f0	 mov	 ecx, DWORD PTR tv263[ebp]
  00089	8b 55 f4	 mov	 edx, DWORD PTR __Off$[ebp]
  0008c	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0008e	75 10		 jne	 SHORT $LN11@seekpos
  00090	8b 45 f0	 mov	 eax, DWORD PTR tv263[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR __Off$[ebp+4]
  00096	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00099	75 05		 jne	 SHORT $LN11@seekpos
  0009b	e9 1c 02 00 00	 jmp	 $LN10@seekpos
$LN11@seekpos:
; Line 283
  000a0	8b 55 24	 mov	 edx, DWORD PTR __Mode$[ebp]
  000a3	83 e2 01	 and	 edx, 1
  000a6	0f 84 35 01 00
	00		 je	 $LN9@seekpos
  000ac	8b f4		 mov	 esi, esp
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000b7	3b f4		 cmp	 esi, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	85 c0		 test	 eax, eax
  000c0	0f 84 1b 01 00
	00		 je	 $LN9@seekpos
; Line 285
  000c6	83 7d f8 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  000ca	0f 8c fc 00 00
	00		 jl	 $LN8@seekpos
  000d0	7f 0a		 jg	 SHORT $LN15@seekpos
  000d2	83 7d f4 00	 cmp	 DWORD PTR __Off$[ebp], 0
  000d6	0f 82 f0 00 00
	00		 jb	 $LN8@seekpos
$LN15@seekpos:
  000dc	8b f4		 mov	 esi, esp
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000e7	3b f4		 cmp	 esi, esp
  000e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000f4	2b d0		 sub	 edx, eax
  000f6	d1 fa		 sar	 edx, 1
  000f8	8b c2		 mov	 eax, edx
  000fa	99		 cdq
  000fb	89 45 e8	 mov	 DWORD PTR tv286[ebp], eax
  000fe	89 55 ec	 mov	 DWORD PTR tv286[ebp+4], edx
  00101	8b 45 f8	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00104	3b 45 ec	 cmp	 eax, DWORD PTR tv286[ebp+4]
  00107	0f 8f bf 00 00
	00		 jg	 $LN8@seekpos
  0010d	7c 0c		 jl	 SHORT $LN16@seekpos
  0010f	8b 4d f4	 mov	 ecx, DWORD PTR __Off$[ebp]
  00112	3b 4d e8	 cmp	 ecx, DWORD PTR tv286[ebp]
  00115	0f 87 b1 00 00
	00		 ja	 $LN8@seekpos
$LN16@seekpos:
; Line 287
  0011b	8b f4		 mov	 esi, esp
  0011d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00126	3b f4		 cmp	 esi, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	8b f0		 mov	 esi, eax
  0012f	8b fc		 mov	 edi, esp
  00131	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00134	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0013a	3b fc		 cmp	 edi, esp
  0013c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00141	2b f0		 sub	 esi, eax
  00143	d1 fe		 sar	 esi, 1
  00145	8b c6		 mov	 eax, esi
  00147	99		 cdq
  00148	03 45 f4	 add	 eax, DWORD PTR __Off$[ebp]
  0014b	13 55 f8	 adc	 edx, DWORD PTR __Off$[ebp+4]
  0014e	8b f4		 mov	 esi, esp
  00150	50		 push	 eax
  00151	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00154	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
  0015a	3b f4		 cmp	 esi, esp
  0015c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 288
  00161	8b 55 24	 mov	 edx, DWORD PTR __Mode$[ebp]
  00164	83 e2 02	 and	 edx, 2
  00167	74 61		 je	 SHORT $LN7@seekpos
  00169	8b f4		 mov	 esi, esp
  0016b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00174	3b f4		 cmp	 esi, esp
  00176	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017b	85 c0		 test	 eax, eax
  0017d	74 4b		 je	 SHORT $LN7@seekpos
; Line 290
  0017f	8b f4		 mov	 esi, esp
  00181	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00184	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0018a	3b f4		 cmp	 esi, esp
  0018c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00191	8b f4		 mov	 esi, esp
  00193	50		 push	 eax
  00194	8b fc		 mov	 edi, esp
  00196	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00199	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0019f	3b fc		 cmp	 edi, esp
  001a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a6	50		 push	 eax
  001a7	8b fc		 mov	 edi, esp
  001a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  001b2	3b fc		 cmp	 edi, esp
  001b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b9	50		 push	 eax
  001ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  001c3	3b f4		 cmp	 esi, esp
  001c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@seekpos:
; Line 292
  001ca	eb 10		 jmp	 SHORT $LN6@seekpos
$LN8@seekpos:
; Line 293
  001cc	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  001d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d3	89 4d f4	 mov	 DWORD PTR __Off$[ebp], ecx
  001d6	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001d9	89 55 f8	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
  001dc	e9 db 00 00 00	 jmp	 $LN10@seekpos
$LN9@seekpos:
; Line 295
  001e1	8b 45 24	 mov	 eax, DWORD PTR __Mode$[ebp]
  001e4	83 e0 02	 and	 eax, 2
  001e7	0f 84 be 00 00
	00		 je	 $LN4@seekpos
  001ed	8b f4		 mov	 esi, esp
  001ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  001f8	3b f4		 cmp	 esi, esp
  001fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ff	85 c0		 test	 eax, eax
  00201	0f 84 a4 00 00
	00		 je	 $LN4@seekpos
; Line 297
  00207	83 7d f8 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  0020b	0f 8c 87 00 00
	00		 jl	 $LN3@seekpos
  00211	7f 06		 jg	 SHORT $LN17@seekpos
  00213	83 7d f4 00	 cmp	 DWORD PTR __Off$[ebp], 0
  00217	72 7f		 jb	 SHORT $LN3@seekpos
$LN17@seekpos:
  00219	8b f4		 mov	 esi, esp
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00224	3b f4		 cmp	 esi, esp
  00226	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022e	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00231	2b d0		 sub	 edx, eax
  00233	d1 fa		 sar	 edx, 1
  00235	8b c2		 mov	 eax, edx
  00237	99		 cdq
  00238	89 45 e0	 mov	 DWORD PTR tv346[ebp], eax
  0023b	89 55 e4	 mov	 DWORD PTR tv346[ebp+4], edx
  0023e	8b 45 f8	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00241	3b 45 e4	 cmp	 eax, DWORD PTR tv346[ebp+4]
  00244	7f 52		 jg	 SHORT $LN3@seekpos
  00246	7c 08		 jl	 SHORT $LN18@seekpos
  00248	8b 4d f4	 mov	 ecx, DWORD PTR __Off$[ebp]
  0024b	3b 4d e0	 cmp	 ecx, DWORD PTR tv346[ebp]
  0024e	77 48		 ja	 SHORT $LN3@seekpos
$LN18@seekpos:
; Line 299
  00250	8b f4		 mov	 esi, esp
  00252	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00255	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0025b	3b f4		 cmp	 esi, esp
  0025d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00262	8b f0		 mov	 esi, eax
  00264	8b fc		 mov	 edi, esp
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00269	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0026f	3b fc		 cmp	 edi, esp
  00271	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00276	2b f0		 sub	 esi, eax
  00278	d1 fe		 sar	 esi, 1
  0027a	8b c6		 mov	 eax, esi
  0027c	99		 cdq
  0027d	03 45 f4	 add	 eax, DWORD PTR __Off$[ebp]
  00280	13 55 f8	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00283	8b f4		 mov	 esi, esp
  00285	50		 push	 eax
  00286	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00289	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
  0028f	3b f4		 cmp	 esi, esp
  00291	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 300
  00296	eb 11		 jmp	 SHORT $LN2@seekpos
$LN3@seekpos:
; Line 301
  00298	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  0029e	8b 02		 mov	 eax, DWORD PTR [edx]
  002a0	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  002a3	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  002a6	89 4d f8	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN2@seekpos:
; Line 303
  002a9	eb 11		 jmp	 SHORT $LN10@seekpos
$LN4@seekpos:
; Line 304
  002ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002b1	8b 02		 mov	 eax, DWORD PTR [edx]
  002b3	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  002b6	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  002b9	89 4d f8	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN10@seekpos:
; Line 305
  002bc	8b 55 f8	 mov	 edx, DWORD PTR __Off$[ebp+4]
  002bf	52		 push	 edx
  002c0	8b 45 f4	 mov	 eax, DWORD PTR __Off$[ebp]
  002c3	50		 push	 eax
  002c4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  002c7	e8 00 00 00 00	 call	 ??0?$fpos@H@std@@QAE@_J@Z ; std::fpos<int>::fpos<int>
  002cc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 306
  002cf	5f		 pop	 edi
  002d0	5e		 pop	 esi
  002d1	83 c4 20	 add	 esp, 32			; 00000020H
  002d4	3b ec		 cmp	 ebp, esp
  002d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002db	8b e5		 mov	 esp, ebp
  002dd	5d		 pop	 ebp
  002de	c2 20 00	 ret	 32			; 00000020H
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv461 = -20						; size = 8
tv368 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 227
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000d	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00010	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00013	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00016	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00019	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 228
  0001f	8b f4		 mov	 esi, esp
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0002a	3b f4		 cmp	 esi, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	85 c0		 test	 eax, eax
  00033	74 32		 je	 SHORT $LN21@seekoff
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  0004d	73 18		 jae	 SHORT $LN21@seekoff
; Line 229
  0004f	8b f4		 mov	 esi, esp
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00064	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN21@seekoff:
; Line 231
  00067	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  0006a	83 e0 01	 and	 eax, 1
  0006d	0f 84 c8 01 00
	00		 je	 $LN20@seekoff
  00073	8b f4		 mov	 esi, esp
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	85 c0		 test	 eax, eax
  00087	0f 84 ae 01 00
	00		 je	 $LN20@seekoff
; Line 233
  0008d	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  00091	75 2d		 jne	 SHORT $LN19@seekoff
; Line 234
  00093	8b f4		 mov	 esi, esp
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0009e	3b f4		 cmp	 esi, esp
  000a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000ab	2b d0		 sub	 edx, eax
  000ad	d1 fa		 sar	 edx, 1
  000af	8b c2		 mov	 eax, edx
  000b1	99		 cdq
  000b2	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  000b5	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  000b8	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  000bb	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 235
  000be	eb 60		 jmp	 SHORT $LN18@seekoff
$LN19@seekoff:
; Line 236
  000c0	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  000c4	75 43		 jne	 SHORT $LN17@seekoff
  000c6	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  000c9	83 e0 02	 and	 eax, 2
  000cc	75 3b		 jne	 SHORT $LN17@seekoff
; Line 237
  000ce	8b f4		 mov	 esi, esp
  000d0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	8b f0		 mov	 esi, eax
  000e2	8b fc		 mov	 edi, esp
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000ed	3b fc		 cmp	 edi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	2b f0		 sub	 esi, eax
  000f6	d1 fe		 sar	 esi, 1
  000f8	8b c6		 mov	 eax, esi
  000fa	99		 cdq
  000fb	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  000fe	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00101	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00104	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 238
  00107	eb 17		 jmp	 SHORT $LN18@seekoff
$LN17@seekoff:
  00109	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  0010d	74 11		 je	 SHORT $LN18@seekoff
; Line 239
  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00115	8b 11		 mov	 edx, DWORD PTR [ecx]
  00117	89 55 0c	 mov	 DWORD PTR __Off$[ebp], edx
  0011a	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0011d	89 45 10	 mov	 DWORD PTR __Off$[ebp+4], eax
$LN18@seekoff:
; Line 241
  00120	83 7d 10 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  00124	0f 8c fc 00 00
	00		 jl	 $LN14@seekoff
  0012a	7f 0a		 jg	 SHORT $LN24@seekoff
  0012c	83 7d 0c 00	 cmp	 DWORD PTR __Off$[ebp], 0
  00130	0f 82 f0 00 00
	00		 jb	 $LN14@seekoff
$LN24@seekoff:
  00136	8b f4		 mov	 esi, esp
  00138	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00141	3b f4		 cmp	 esi, esp
  00143	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0014e	2b d0		 sub	 edx, eax
  00150	d1 fa		 sar	 edx, 1
  00152	8b c2		 mov	 eax, edx
  00154	99		 cdq
  00155	89 45 f4	 mov	 DWORD PTR tv368[ebp], eax
  00158	89 55 f8	 mov	 DWORD PTR tv368[ebp+4], edx
  0015b	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  0015e	3b 45 f8	 cmp	 eax, DWORD PTR tv368[ebp+4]
  00161	0f 8f bf 00 00
	00		 jg	 $LN14@seekoff
  00167	7c 0c		 jl	 SHORT $LN25@seekoff
  00169	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0016c	3b 4d f4	 cmp	 ecx, DWORD PTR tv368[ebp]
  0016f	0f 87 b1 00 00
	00		 ja	 $LN14@seekoff
$LN25@seekoff:
; Line 243
  00175	8b f4		 mov	 esi, esp
  00177	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00180	3b f4		 cmp	 esi, esp
  00182	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00187	8b f0		 mov	 esi, eax
  00189	8b fc		 mov	 edi, esp
  0018b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0018e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00194	3b fc		 cmp	 edi, esp
  00196	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019b	2b f0		 sub	 esi, eax
  0019d	d1 fe		 sar	 esi, 1
  0019f	8b c6		 mov	 eax, esi
  001a1	99		 cdq
  001a2	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  001a5	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  001a8	8b f4		 mov	 esi, esp
  001aa	50		 push	 eax
  001ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
  001b4	3b f4		 cmp	 esi, esp
  001b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 244
  001bb	8b 55 18	 mov	 edx, DWORD PTR __Which$[ebp]
  001be	83 e2 02	 and	 edx, 2
  001c1	74 61		 je	 SHORT $LN13@seekoff
  001c3	8b f4		 mov	 esi, esp
  001c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  001ce	3b f4		 cmp	 esi, esp
  001d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d5	85 c0		 test	 eax, eax
  001d7	74 4b		 je	 SHORT $LN13@seekoff
; Line 246
  001d9	8b f4		 mov	 esi, esp
  001db	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  001e4	3b f4		 cmp	 esi, esp
  001e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001eb	8b f4		 mov	 esi, esp
  001ed	50		 push	 eax
  001ee	8b fc		 mov	 edi, esp
  001f0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  001f9	3b fc		 cmp	 edi, esp
  001fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00200	50		 push	 eax
  00201	8b fc		 mov	 edi, esp
  00203	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00206	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0020c	3b fc		 cmp	 edi, esp
  0020e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00213	50		 push	 eax
  00214	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00217	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  0021d	3b f4		 cmp	 esi, esp
  0021f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@seekoff:
; Line 248
  00224	eb 10		 jmp	 SHORT $LN12@seekoff
$LN14@seekoff:
; Line 249
  00226	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  0022b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022d	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  00230	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00233	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
  00236	e9 6c 01 00 00	 jmp	 $LN11@seekoff
$LN20@seekoff:
; Line 251
  0023b	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  0023e	83 e0 02	 and	 eax, 2
  00241	0f 84 48 01 00
	00		 je	 $LN10@seekoff
  00247	8b f4		 mov	 esi, esp
  00249	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00252	3b f4		 cmp	 esi, esp
  00254	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00259	85 c0		 test	 eax, eax
  0025b	0f 84 2e 01 00
	00		 je	 $LN10@seekoff
; Line 253
  00261	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  00265	75 2d		 jne	 SHORT $LN9@seekoff
; Line 254
  00267	8b f4		 mov	 esi, esp
  00269	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00272	3b f4		 cmp	 esi, esp
  00274	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00279	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0027c	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0027f	2b d0		 sub	 edx, eax
  00281	d1 fa		 sar	 edx, 1
  00283	8b c2		 mov	 eax, edx
  00285	99		 cdq
  00286	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  00289	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  0028c	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  0028f	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 255
  00292	eb 57		 jmp	 SHORT $LN8@seekoff
$LN9@seekoff:
  00294	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  00298	75 3b		 jne	 SHORT $LN7@seekoff
; Line 256
  0029a	8b f4		 mov	 esi, esp
  0029c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0029f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  002a5	3b f4		 cmp	 esi, esp
  002a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ac	8b f0		 mov	 esi, eax
  002ae	8b fc		 mov	 edi, esp
  002b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  002b9	3b fc		 cmp	 edi, esp
  002bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c0	2b f0		 sub	 esi, eax
  002c2	d1 fe		 sar	 esi, 1
  002c4	8b c6		 mov	 eax, esi
  002c6	99		 cdq
  002c7	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  002ca	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  002cd	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  002d0	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 257
  002d3	eb 16		 jmp	 SHORT $LN8@seekoff
$LN7@seekoff:
  002d5	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  002d9	74 10		 je	 SHORT $LN8@seekoff
; Line 258
  002db	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e2	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  002e5	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002e8	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 260
  002eb	83 7d 10 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  002ef	0f 8c 87 00 00
	00		 jl	 $LN4@seekoff
  002f5	7f 06		 jg	 SHORT $LN26@seekoff
  002f7	83 7d 0c 00	 cmp	 DWORD PTR __Off$[ebp], 0
  002fb	72 7f		 jb	 SHORT $LN4@seekoff
$LN26@seekoff:
  002fd	8b f4		 mov	 esi, esp
  002ff	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00302	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00308	3b f4		 cmp	 esi, esp
  0030a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0030f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00312	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00315	2b d0		 sub	 edx, eax
  00317	d1 fa		 sar	 edx, 1
  00319	8b c2		 mov	 eax, edx
  0031b	99		 cdq
  0031c	89 45 ec	 mov	 DWORD PTR tv461[ebp], eax
  0031f	89 55 f0	 mov	 DWORD PTR tv461[ebp+4], edx
  00322	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00325	3b 45 f0	 cmp	 eax, DWORD PTR tv461[ebp+4]
  00328	7f 52		 jg	 SHORT $LN4@seekoff
  0032a	7c 08		 jl	 SHORT $LN27@seekoff
  0032c	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0032f	3b 4d ec	 cmp	 ecx, DWORD PTR tv461[ebp]
  00332	77 48		 ja	 SHORT $LN4@seekoff
$LN27@seekoff:
; Line 262
  00334	8b f4		 mov	 esi, esp
  00336	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00339	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0033f	3b f4		 cmp	 esi, esp
  00341	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00346	8b f0		 mov	 esi, eax
  00348	8b fc		 mov	 edi, esp
  0034a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0034d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00353	3b fc		 cmp	 edi, esp
  00355	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0035a	2b f0		 sub	 esi, eax
  0035c	d1 fe		 sar	 esi, 1
  0035e	8b c6		 mov	 eax, esi
  00360	99		 cdq
  00361	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  00364	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00367	8b f4		 mov	 esi, esp
  00369	50		 push	 eax
  0036a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0036d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
  00373	3b f4		 cmp	 esi, esp
  00375	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 263
  0037a	eb 11		 jmp	 SHORT $LN3@seekoff
$LN4@seekoff:
; Line 264
  0037c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00382	8b 02		 mov	 eax, DWORD PTR [edx]
  00384	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00387	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0038a	89 4d 10	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN3@seekoff:
  0038d	eb 18		 jmp	 SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
  0038f	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp]
  00392	0b 55 10	 or	 edx, DWORD PTR __Off$[ebp+4]
  00395	74 10		 je	 SHORT $LN11@seekoff
; Line 270
  00397	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  0039c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039e	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  003a1	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  003a4	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 271
  003a7	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  003aa	50		 push	 eax
  003ab	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  003ae	51		 push	 ecx
  003af	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  003b2	e8 00 00 00 00	 call	 ??0?$fpos@H@std@@QAE@_J@Z ; std::fpos<int>::fpos<int>
  003b7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 272
  003ba	5f		 pop	 edi
  003bb	5e		 pop	 esi
  003bc	83 c4 14	 add	 esp, 20			; 00000014H
  003bf	3b ec		 cmp	 ebp, esp
  003c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003c6	8b e5		 mov	 esp, ebp
  003c8	5d		 pop	 ebp
  003c9	c2 14 00	 ret	 20			; 00000014H
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 207
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 208
  00010	8b f4		 mov	 esi, esp
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	85 c0		 test	 eax, eax
  00024	75 0f		 jne	 SHORT $LN8@underflow
; Line 209
  00026	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  0002b	e9 54 01 00 00	 jmp	 $LN9@underflow
  00030	e9 4f 01 00 00	 jmp	 $LN9@underflow
$LN8@underflow:
; Line 210
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b f0		 mov	 esi, eax
  00049	8b fc		 mov	 edi, esp
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00054	3b fc		 cmp	 edi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	3b f0		 cmp	 esi, eax
  0005d	73 25		 jae	 SHORT $LN6@underflow
; Line 211
  0005f	8b f4		 mov	 esi, esp
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z ; std::char_traits<wchar_t>::to_int_type
  00077	83 c4 04	 add	 esp, 4
  0007a	e9 05 01 00 00	 jmp	 $LN9@underflow
; Line 212
  0007f	e9 00 01 00 00	 jmp	 $LN9@underflow
$LN6@underflow:
; Line 213
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0008a	83 e1 04	 and	 ecx, 4
  0008d	75 5a		 jne	 SHORT $LN3@underflow
  0008f	8b f4		 mov	 esi, esp
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	85 c0		 test	 eax, eax
  000a3	74 44		 je	 SHORT $LN3@underflow
  000a5	8b f4		 mov	 esi, esp
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000b0	3b f4		 cmp	 esi, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	8b f0		 mov	 esi, eax
  000b9	8b fc		 mov	 edi, esp
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000c4	3b fc		 cmp	 edi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	3b f0		 cmp	 esi, eax
  000cd	77 29		 ja	 SHORT $LN4@underflow
  000cf	8b f4		 mov	 esi, esp
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e4	39 42 38	 cmp	 DWORD PTR [edx+56], eax
  000e7	77 0f		 ja	 SHORT $LN4@underflow
$LN3@underflow:
; Line 214
  000e9	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  000ee	e9 91 00 00 00	 jmp	 $LN9@underflow
; Line 215
  000f3	e9 8c 00 00 00	 jmp	 $LN9@underflow
$LN4@underflow:
; Line 217
  000f8	8b f4		 mov	 esi, esp
  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00110	73 18		 jae	 SHORT $LN1@underflow
; Line 218
  00112	8b f4		 mov	 esi, esp
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0011d	3b f4		 cmp	 esi, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00127	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN1@underflow:
; Line 219
  0012a	8b f4		 mov	 esi, esp
  0012c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012f	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00132	51		 push	 ecx
  00133	8b fc		 mov	 edi, esp
  00135	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0013e	3b fc		 cmp	 edi, esp
  00140	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00145	50		 push	 eax
  00146	8b fc		 mov	 edi, esp
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00151	3b fc		 cmp	 edi, esp
  00153	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00158	50		 push	 eax
  00159	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  00162	3b f4		 cmp	 esi, esp
  00164	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 220
  00169	8b f4		 mov	 esi, esp
  0016b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00174	3b f4		 cmp	 esi, esp
  00176	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z ; std::char_traits<wchar_t>::to_int_type
  00181	83 c4 04	 add	 esp, 4
$LN9@underflow:
; Line 222
  00184	5f		 pop	 edi
  00185	5e		 pop	 esi
  00186	83 c4 04	 add	 esp, 4
  00189	3b ec		 cmp	 ebp, esp
  0018b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c3		 ret	 0
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
_TEXT	SEGMENT
$T1 = -10						; size = 2
$T2 = -8						; size = 2
$T3 = -6						; size = 2
_this$ = -4						; size = 4
__Meta$ = 8						; size = 2
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 190
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000f	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00016	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 195
  00020	8b f4		 mov	 esi, esp
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	85 c0		 test	 eax, eax
  00034	0f 84 95 00 00
	00		 je	 $LN3@pbackfail
  0003a	8b f4		 mov	 esi, esp
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b f0		 mov	 esi, eax
  0004e	8b fc		 mov	 edi, esp
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00059	3b fc		 cmp	 edi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	3b f0		 cmp	 esi, eax
  00062	76 6b		 jbe	 SHORT $LN3@pbackfail
  00064	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  00069	66 89 45 fa	 mov	 WORD PTR $T3[ebp], ax
  0006d	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00070	50		 push	 eax
  00071	8d 4d fa	 lea	 ecx, DWORD PTR $T3[ebp]
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
  0007a	83 c4 08	 add	 esp, 8
  0007d	0f b6 d0	 movzx	 edx, al
  00080	85 d2		 test	 edx, edx
  00082	75 54		 jne	 SHORT $LN4@pbackfail
  00084	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ; std::char_traits<wchar_t>::to_char_type
  0008d	83 c4 04	 add	 esp, 4
  00090	66 89 45 f8	 mov	 WORD PTR $T2[ebp], ax
  00094	8b f4		 mov	 esi, esp
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	b9 02 00 00 00	 mov	 ecx, 2
  000ab	6b d1 ff	 imul	 edx, ecx, -1
  000ae	03 c2		 add	 eax, edx
  000b0	50		 push	 eax
  000b1	8d 45 f8	 lea	 eax, DWORD PTR $T2[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?eq@?$char_traits@_W@std@@SA_NAB_W0@Z ; std::char_traits<wchar_t>::eq
  000ba	83 c4 08	 add	 esp, 8
  000bd	0f b6 c8	 movzx	 ecx, al
  000c0	85 c9		 test	 ecx, ecx
  000c2	75 14		 jne	 SHORT $LN4@pbackfail
  000c4	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c7	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000ca	83 e0 02	 and	 eax, 2
  000cd	74 09		 je	 SHORT $LN4@pbackfail
$LN3@pbackfail:
; Line 196
  000cf	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  000d4	eb 66		 jmp	 SHORT $LN5@pbackfail
; Line 197
  000d6	eb 64		 jmp	 SHORT $LN5@pbackfail
$LN4@pbackfail:
; Line 199
  000d8	8b f4		 mov	 esi, esp
  000da	6a ff		 push	 -1
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXH@Z
  000e5	3b f4		 cmp	 esi, esp
  000e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 200
  000ec	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  000f1	66 89 45 f6	 mov	 WORD PTR $T1[ebp], ax
  000f5	8d 4d 08	 lea	 ecx, DWORD PTR __Meta$[ebp]
  000f8	51		 push	 ecx
  000f9	8d 55 f6	 lea	 edx, DWORD PTR $T1[ebp]
  000fc	52		 push	 edx
  000fd	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
  00102	83 c4 08	 add	 esp, 8
  00105	0f b6 c0	 movzx	 eax, al
  00108	85 c0		 test	 eax, eax
  0010a	75 24		 jne	 SHORT $LN1@pbackfail
; Line 201
  0010c	8d 4d 08	 lea	 ecx, DWORD PTR __Meta$[ebp]
  0010f	51		 push	 ecx
  00110	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ; std::char_traits<wchar_t>::to_char_type
  00115	83 c4 04	 add	 esp, 4
  00118	66 8b f0	 mov	 si, ax
  0011b	8b fc		 mov	 edi, esp
  0011d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00126	3b fc		 cmp	 edi, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	66 89 30	 mov	 WORD PTR [eax], si
$LN1@pbackfail:
; Line 202
  00130	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  00133	52		 push	 edx
  00134	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@_W@std@@SAGABG@Z ; std::char_traits<wchar_t>::not_eof
  00139	83 c4 04	 add	 esp, 4
$LN5@pbackfail:
; Line 204
  0013c	5f		 pop	 edi
  0013d	5e		 pop	 esi
  0013e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00141	3b ec		 cmp	 ebp, esp
  00143	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c2 04 00	 ret	 4
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z
_TEXT	SEGMENT
tv200 = -36						; size = 4
tv196 = -32						; size = 4
$T1 = -26						; size = 2
__Oldptr$2 = -24					; size = 4
__Newptr$3 = -20					; size = 4
__Inc$4 = -16						; size = 4
__Newsize$5 = -12					; size = 4
__Oldsize$6 = -8					; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 2
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000d	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00010	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00013	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00016	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00019	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00022	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00025	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00028	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 121
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00031	83 e1 02	 and	 ecx, 2
  00034	74 0c		 je	 SHORT $LN17@overflow
; Line 122
  00036	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  0003b	e9 c4 03 00 00	 jmp	 $LN18@overflow
  00040	eb 31		 jmp	 SHORT $LN16@overflow
$LN17@overflow:
; Line 123
  00042	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  00047	66 89 45 e6	 mov	 WORD PTR $T1[ebp], ax
  0004b	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  0004e	52		 push	 edx
  0004f	8d 45 e6	 lea	 eax, DWORD PTR $T1[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ; std::char_traits<wchar_t>::eq_int_type
  00058	83 c4 08	 add	 esp, 8
  0005b	0f b6 c8	 movzx	 ecx, al
  0005e	85 c9		 test	 ecx, ecx
  00060	74 11		 je	 SHORT $LN16@overflow
; Line 124
  00062	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  00065	52		 push	 edx
  00066	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@_W@std@@SAGABG@Z ; std::char_traits<wchar_t>::not_eof
  0006b	83 c4 04	 add	 esp, 4
  0006e	e9 91 03 00 00	 jmp	 $LN18@overflow
$LN16@overflow:
; Line 127
  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00079	83 e1 08	 and	 ecx, 8
  0007c	74 6f		 je	 SHORT $LN14@overflow
  0007e	8b f4		 mov	 esi, esp
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	85 c0		 test	 eax, eax
  00092	74 59		 je	 SHORT $LN14@overflow
  00094	8b f4		 mov	 esi, esp
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a9	3b 42 38	 cmp	 eax, DWORD PTR [edx+56]
  000ac	73 3f		 jae	 SHORT $LN14@overflow
; Line 128
  000ae	8b f4		 mov	 esi, esp
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b f4		 mov	 esi, esp
  000c2	50		 push	 eax
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000c9	51		 push	 ecx
  000ca	8b fc		 mov	 edi, esp
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000d5	3b fc		 cmp	 edi, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dc	50		 push	 eax
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  000e6	3b f4		 cmp	 esi, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN14@overflow:
; Line 131
  000ed	8b f4		 mov	 esi, esp
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000f8	3b f4		 cmp	 esi, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	85 c0		 test	 eax, eax
  00101	74 5c		 je	 SHORT $LN13@overflow
  00103	8b f4		 mov	 esi, esp
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0010e	3b f4		 cmp	 esi, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00115	8b f0		 mov	 esi, eax
  00117	8b fc		 mov	 edi, esp
  00119	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00122	3b fc		 cmp	 edi, esp
  00124	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00129	3b f0		 cmp	 esi, eax
  0012b	73 32		 jae	 SHORT $LN13@overflow
; Line 133
  0012d	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  00130	52		 push	 edx
  00131	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ; std::char_traits<wchar_t>::to_char_type
  00136	83 c4 04	 add	 esp, 4
  00139	66 8b f0	 mov	 si, ax
  0013c	8b fc		 mov	 edi, esp
  0013e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
  00147	3b fc		 cmp	 edi, esp
  00149	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014e	66 89 30	 mov	 WORD PTR [eax], si
; Line 134
  00151	66 8b 45 08	 mov	 ax, WORD PTR __Meta$[ebp]
  00155	e9 aa 02 00 00	 jmp	 $LN18@overflow
; Line 136
  0015a	e9 a5 02 00 00	 jmp	 $LN18@overflow
$LN13@overflow:
; Line 139
  0015f	8b f4		 mov	 esi, esp
  00161	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0016a	3b f4		 cmp	 esi, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	85 c0		 test	 eax, eax
  00173	75 09		 jne	 SHORT $LN20@overflow
  00175	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
  0017c	eb 2d		 jmp	 SHORT $LN21@overflow
$LN20@overflow:
  0017e	8b f4		 mov	 esi, esp
  00180	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00189	3b f4		 cmp	 esi, esp
  0018b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00190	8b f0		 mov	 esi, eax
  00192	8b fc		 mov	 edi, esp
  00194	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0019d	3b fc		 cmp	 edi, esp
  0019f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a4	2b f0		 sub	 esi, eax
  001a6	d1 fe		 sar	 esi, 1
  001a8	89 75 e0	 mov	 DWORD PTR tv196[ebp], esi
$LN21@overflow:
  001ab	8b 45 e0	 mov	 eax, DWORD PTR tv196[ebp]
  001ae	89 45 f8	 mov	 DWORD PTR __Oldsize$6[ebp], eax
; Line 140
  001b1	8b 4d f8	 mov	 ecx, DWORD PTR __Oldsize$6[ebp]
  001b4	89 4d f4	 mov	 DWORD PTR __Newsize$5[ebp], ecx
; Line 142
  001b7	8b 55 f4	 mov	 edx, DWORD PTR __Newsize$5[ebp]
  001ba	d1 ea		 shr	 edx, 1
  001bc	83 fa 20	 cmp	 edx, 32			; 00000020H
  001bf	73 09		 jae	 SHORT $LN22@overflow
  001c1	c7 45 dc 20 00
	00 00		 mov	 DWORD PTR tv200[ebp], 32 ; 00000020H
  001c8	eb 08		 jmp	 SHORT $LN23@overflow
$LN22@overflow:
  001ca	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$5[ebp]
  001cd	d1 e8		 shr	 eax, 1
  001cf	89 45 dc	 mov	 DWORD PTR tv200[ebp], eax
$LN23@overflow:
  001d2	8b 4d dc	 mov	 ecx, DWORD PTR tv200[ebp]
  001d5	89 4d f0	 mov	 DWORD PTR __Inc$4[ebp], ecx
$LN11@overflow:
; Line 144
  001d8	83 7d f0 00	 cmp	 DWORD PTR __Inc$4[ebp], 0
  001dc	76 17		 jbe	 SHORT $LN10@overflow
  001de	ba ff ff ff 7f	 mov	 edx, 2147483647		; 7fffffffH
  001e3	2b 55 f0	 sub	 edx, DWORD PTR __Inc$4[ebp]
  001e6	3b 55 f4	 cmp	 edx, DWORD PTR __Newsize$5[ebp]
  001e9	73 0a		 jae	 SHORT $LN10@overflow
; Line 145
  001eb	8b 45 f0	 mov	 eax, DWORD PTR __Inc$4[ebp]
  001ee	d1 e8		 shr	 eax, 1
  001f0	89 45 f0	 mov	 DWORD PTR __Inc$4[ebp], eax
  001f3	eb e3		 jmp	 SHORT $LN11@overflow
$LN10@overflow:
; Line 146
  001f5	83 7d f0 00	 cmp	 DWORD PTR __Inc$4[ebp], 0
  001f9	75 0a		 jne	 SHORT $LN9@overflow
; Line 147
  001fb	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  00200	e9 ff 01 00 00	 jmp	 $LN18@overflow
$LN9@overflow:
; Line 149
  00205	8b 4d f4	 mov	 ecx, DWORD PTR __Newsize$5[ebp]
  00208	03 4d f0	 add	 ecx, DWORD PTR __Inc$4[ebp]
  0020b	89 4d f4	 mov	 DWORD PTR __Newsize$5[ebp], ecx
; Line 151
  0020e	8b 55 f4	 mov	 edx, DWORD PTR __Newsize$5[ebp]
  00211	52		 push	 edx
  00212	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00215	83 c1 40	 add	 ecx, 64			; 00000040H
  00218	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
  0021d	89 45 ec	 mov	 DWORD PTR __Newptr$3[ebp], eax
; Line 152
  00220	8b f4		 mov	 esi, esp
  00222	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00225	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0022b	3b f4		 cmp	 esi, esp
  0022d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00232	89 45 e8	 mov	 DWORD PTR __Oldptr$2[ebp], eax
; Line 154
  00235	83 7d f8 00	 cmp	 DWORD PTR __Oldsize$6[ebp], 0
  00239	76 14		 jbe	 SHORT $LN8@overflow
; Line 155
  0023b	8b 45 f8	 mov	 eax, DWORD PTR __Oldsize$6[ebp]
  0023e	50		 push	 eax
  0023f	8b 4d e8	 mov	 ecx, DWORD PTR __Oldptr$2[ebp]
  00242	51		 push	 ecx
  00243	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  00246	52		 push	 edx
  00247	e8 00 00 00 00	 call	 ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
  0024c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@overflow:
; Line 157
  0024f	83 7d f8 00	 cmp	 DWORD PTR __Oldsize$6[ebp], 0
  00253	75 78		 jne	 SHORT $LN7@overflow
; Line 159
  00255	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00258	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  0025b	89 48 38	 mov	 DWORD PTR [eax+56], ecx
; Line 160
  0025e	8b 55 f4	 mov	 edx, DWORD PTR __Newsize$5[ebp]
  00261	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00264	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  00267	8b f4		 mov	 esi, esp
  00269	51		 push	 ecx
  0026a	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  0026d	52		 push	 edx
  0026e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00271	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W0@Z
  00277	3b f4		 cmp	 esi, esp
  00279	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 161
  0027e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00281	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00284	83 e1 04	 and	 ecx, 4
  00287	74 1e		 je	 SHORT $LN6@overflow
; Line 162
  00289	8b f4		 mov	 esi, esp
  0028b	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  0028e	52		 push	 edx
  0028f	6a 00		 push	 0
  00291	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00294	50		 push	 eax
  00295	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00298	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  0029e	3b f4		 cmp	 esi, esp
  002a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 163
  002a5	eb 21		 jmp	 SHORT $LN5@overflow
$LN6@overflow:
; Line 164
  002a7	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  002aa	83 c1 02	 add	 ecx, 2
  002ad	8b f4		 mov	 esi, esp
  002af	51		 push	 ecx
  002b0	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  002b3	52		 push	 edx
  002b4	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  002b7	50		 push	 eax
  002b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  002c1	3b f4		 cmp	 esi, esp
  002c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@overflow:
; Line 166
  002c8	e9 e2 00 00 00	 jmp	 $LN4@overflow
$LN7@overflow:
; Line 168
  002cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d0	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  002d3	2b 55 e8	 sub	 edx, DWORD PTR __Oldptr$2[ebp]
  002d6	d1 fa		 sar	 edx, 1
  002d8	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  002db	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  002de	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002e1	89 4a 38	 mov	 DWORD PTR [edx+56], ecx
; Line 171
  002e4	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$5[ebp]
  002e7	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  002ea	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  002ed	8b f4		 mov	 esi, esp
  002ef	52		 push	 edx
  002f0	8b fc		 mov	 edi, esp
  002f2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  002fb	3b fc		 cmp	 edi, esp
  002fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00302	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  00305	d1 f8		 sar	 eax, 1
  00307	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  0030a	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0030d	52		 push	 edx
  0030e	8b fc		 mov	 edi, esp
  00310	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00313	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00319	3b fc		 cmp	 edi, esp
  0031b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00320	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  00323	d1 f8		 sar	 eax, 1
  00325	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  00328	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0032b	52		 push	 edx
  0032c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0032f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  00335	3b f4		 cmp	 esi, esp
  00337	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 172
  0033c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0033f	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00342	83 e1 04	 and	 ecx, 4
  00345	74 1e		 je	 SHORT $LN3@overflow
; Line 173
  00347	8b f4		 mov	 esi, esp
  00349	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  0034c	52		 push	 edx
  0034d	6a 00		 push	 0
  0034f	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00352	50		 push	 eax
  00353	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00356	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  0035c	3b f4		 cmp	 esi, esp
  0035e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 174
  00363	eb 4a		 jmp	 SHORT $LN4@overflow
$LN3@overflow:
; Line 177
  00365	8b f4		 mov	 esi, esp
  00367	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0036a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00370	3b f4		 cmp	 esi, esp
  00372	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00377	83 c0 02	 add	 eax, 2
  0037a	8b f4		 mov	 esi, esp
  0037c	50		 push	 eax
  0037d	8b fc		 mov	 edi, esp
  0037f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00382	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00388	3b fc		 cmp	 edi, esp
  0038a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0038f	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  00392	d1 f8		 sar	 eax, 1
  00394	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  00397	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0039a	52		 push	 edx
  0039b	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  0039e	50		 push	 eax
  0039f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXPA_W00@Z
  003a8	3b f4		 cmp	 esi, esp
  003aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@overflow:
; Line 180
  003af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003b2	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  003b5	83 e2 01	 and	 edx, 1
  003b8	74 13		 je	 SHORT $LN1@overflow
; Line 181
  003ba	8b 45 f8	 mov	 eax, DWORD PTR __Oldsize$6[ebp]
  003bd	50		 push	 eax
  003be	8b 4d e8	 mov	 ecx, DWORD PTR __Oldptr$2[ebp]
  003c1	51		 push	 ecx
  003c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003c5	83 c1 40	 add	 ecx, 64			; 00000040H
  003c8	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
$LN1@overflow:
; Line 182
  003cd	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003d0	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  003d3	83 c8 01	 or	 eax, 1
  003d6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d9	89 41 3c	 mov	 DWORD PTR [ecx+60], eax
; Line 184
  003dc	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  003df	52		 push	 edx
  003e0	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ; std::char_traits<wchar_t>::to_char_type
  003e5	83 c4 04	 add	 esp, 4
  003e8	66 8b f0	 mov	 si, ax
  003eb	8b fc		 mov	 edi, esp
  003ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEPA_WXZ
  003f6	3b fc		 cmp	 edi, esp
  003f8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003fd	66 89 30	 mov	 WORD PTR [eax], si
; Line 185
  00400	66 8b 45 08	 mov	 ax, WORD PTR __Meta$[ebp]
$LN18@overflow:
; Line 187
  00404	5f		 pop	 edi
  00405	5e		 pop	 esi
  00406	83 c4 24	 add	 esp, 36			; 00000024H
  00409	3b ec		 cmp	 ebp, esp
  0040b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00410	8b e5		 mov	 esp, ebp
  00412	5d		 pop	 ebp
  00413	c2 04 00	 ret	 4
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MAEGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
tv91 = -124						; size = 4
$T1 = -120						; size = 4
__Nul$2 = -112						; size = 28
__Str$3 = -76						; size = 28
__Str$4 = -40						; size = 28
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 93
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 84	 lea	 edi, DWORD PTR [ebp-124]
  0000c	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 45 88 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
; Line 94
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00033	83 e1 02	 and	 ecx, 2
  00036	0f 85 b3 00 00
	00		 jne	 $LN4@str
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00047	3b f4		 cmp	 esi, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	85 c0		 test	 eax, eax
  00050	0f 84 99 00 00
	00		 je	 $LN4@str
; Line 97
  00056	8b f4		 mov	 esi, esp
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	39 42 38	 cmp	 DWORD PTR [edx+56], eax
  0006e	73 17		 jae	 SHORT $LN7@str
  00070	8b f4		 mov	 esi, esp
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0007b	3b f4		 cmp	 esi, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	89 45 84	 mov	 DWORD PTR tv91[ebp], eax
  00085	eb 09		 jmp	 SHORT $LN8@str
$LN7@str:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0008d	89 4d 84	 mov	 DWORD PTR tv91[ebp], ecx
$LN8@str:
  00090	8b f4		 mov	 esi, esp
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	8b 55 84	 mov	 edx, DWORD PTR tv91[ebp]
  000a5	2b d0		 sub	 edx, eax
  000a7	d1 fa		 sar	 edx, 1
  000a9	52		 push	 edx
  000aa	8b f4		 mov	 esi, esp
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	50		 push	 eax
  000bd	8d 4d d8	 lea	 ecx, DWORD PTR __Str$4[ebp]
  000c0	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 98
  000c5	8d 45 d8	 lea	 eax, DWORD PTR __Str$4[ebp]
  000c8	50		 push	 eax
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000cc	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000d1	8b 4d 88	 mov	 ecx, DWORD PTR $T1[ebp]
  000d4	83 c9 01	 or	 ecx, 1
  000d7	89 4d 88	 mov	 DWORD PTR $T1[ebp], ecx
  000da	8d 4d d8	 lea	 ecx, DWORD PTR __Str$4[ebp]
  000dd	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000e2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000e5	e9 bc 00 00 00	 jmp	 $LN5@str
  000ea	e9 b7 00 00 00	 jmp	 $LN5@str
$LN4@str:
; Line 100
  000ef	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f2	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000f5	83 e0 04	 and	 eax, 4
  000f8	0f 85 80 00 00
	00		 jne	 $LN2@str
  000fe	8b f4		 mov	 esi, esp
  00100	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00109	3b f4		 cmp	 esi, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00110	85 c0		 test	 eax, eax
  00112	74 6a		 je	 SHORT $LN2@str
; Line 102
  00114	8b f4		 mov	 esi, esp
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	8b f0		 mov	 esi, eax
  00128	8b fc		 mov	 edi, esp
  0012a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  00133	3b fc		 cmp	 edi, esp
  00135	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013a	2b f0		 sub	 esi, eax
  0013c	d1 fe		 sar	 esi, 1
  0013e	56		 push	 esi
  0013f	8b f4		 mov	 esi, esp
  00141	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IBEPA_WXZ
  0014a	3b f4		 cmp	 esi, esp
  0014c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00151	50		 push	 eax
  00152	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  00155	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 103
  0015a	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  0015d	51		 push	 ecx
  0015e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00161	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00166	8b 55 88	 mov	 edx, DWORD PTR $T1[ebp]
  00169	83 ca 01	 or	 edx, 1
  0016c	89 55 88	 mov	 DWORD PTR $T1[ebp], edx
  0016f	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  00172	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00177	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0017a	eb 2a		 jmp	 SHORT $LN5@str
; Line 105
  0017c	eb 28		 jmp	 SHORT $LN5@str
$LN2@str:
; Line 107
  0017e	8d 4d 90	 lea	 ecx, DWORD PTR __Nul$2[ebp]
  00181	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 108
  00186	8d 45 90	 lea	 eax, DWORD PTR __Nul$2[ebp]
  00189	50		 push	 eax
  0018a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0018d	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00192	8b 4d 88	 mov	 ecx, DWORD PTR $T1[ebp]
  00195	83 c9 01	 or	 ecx, 1
  00198	89 4d 88	 mov	 DWORD PTR $T1[ebp], ecx
  0019b	8d 4d 90	 lea	 ecx, DWORD PTR __Nul$2[ebp]
  0019e	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  001a3	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
  001a6	52		 push	 edx
  001a7	8b cd		 mov	 ecx, ebp
  001a9	50		 push	 eax
  001aa	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@str
  001b0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001b5	58		 pop	 eax
  001b6	5a		 pop	 edx
  001b7	5f		 pop	 edi
  001b8	5e		 pop	 esi
  001b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bc	33 cd		 xor	 ecx, ebp
  001be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c3	83 c4 7c	 add	 esp, 124		; 0000007cH
  001c6	3b ec		 cmp	 ebp, esp
  001c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cd	8b e5		 mov	 esp, ebp
  001cf	5d		 pop	 ebp
  001d0	c2 04 00	 ret	 4
  001d3	90		 npad	 1
$LN18@str:
  001d4	03 00 00 00	 DD	 3
  001d8	00 00 00 00	 DD	 $LN17@str
$LN17@str:
  001dc	d8 ff ff ff	 DD	 -40			; ffffffd8H
  001e0	1c 00 00 00	 DD	 28			; 0000001cH
  001e4	00 00 00 00	 DD	 $LN14@str
  001e8	b4 ff ff ff	 DD	 -76			; ffffffb4H
  001ec	1c 00 00 00	 DD	 28			; 0000001cH
  001f0	00 00 00 00	 DD	 $LN15@str
  001f4	90 ff ff ff	 DD	 -112			; ffffff90H
  001f8	1c 00 00 00	 DD	 28			; 0000001cH
  001fc	00 00 00 00	 DD	 $LN16@str
$LN16@str:
  00200	5f		 DB	 95			; 0000005fH
  00201	4e		 DB	 78			; 0000004eH
  00202	75		 DB	 117			; 00000075H
  00203	6c		 DB	 108			; 0000006cH
  00204	00		 DB	 0
$LN15@str:
  00205	5f		 DB	 95			; 0000005fH
  00206	53		 DB	 83			; 00000053H
  00207	74		 DB	 116			; 00000074H
  00208	72		 DB	 114			; 00000072H
  00209	00		 DB	 0
$LN14@str:
  0020a	5f		 DB	 95			; 0000005fH
  0020b	53		 DB	 83			; 00000053H
  0020c	74		 DB	 116			; 00000074H
  0020d	72		 DB	 114			; 00000072H
  0020e	00		 DB	 0
?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 75
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
; Line 76
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 77
  00020	8b f4		 mov	 esi, esp
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	5e		 pop	 esi
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 28
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b f4		 mov	 esi, esp
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
  00050	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	83 c1 40	 add	 ecx, 64			; 00000040H
  00056	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QAE@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
; Line 31
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR __Mode$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AAEHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
  00067	50		 push	 eax
  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXPB_WIH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
; Line 32
  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5e		 pop	 esi
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	3b ec		 cmp	 ebp, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 545
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
; Line 546
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	83 c1 04	 add	 ecx, 4
  00028	e8 00 00 00 00	 call	 ?str@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00030	83 c9 01	 or	 ecx, 1
  00033	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 547
  00039	83 c4 08	 add	 esp, 8
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 536
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 b0	 mov	 ecx, DWORD PTR [eax-80]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 44 10 b0 00
	00 00 00	 mov	 DWORD PTR [eax+edx-80], OFFSET ??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 51 b0	 mov	 edx, DWORD PTR [ecx-80]
  00029	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002c	83 e8 50	 sub	 eax, 80			; 00000050H
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 51 b0	 mov	 edx, DWORD PTR [ecx-80]
  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	89 44 0a ac	 mov	 DWORD PTR [edx+ecx-84], eax
; Line 537
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 e9 4c	 sub	 ecx, 76			; 0000004cH
  00045	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	83 e9 48	 sub	 ecx, 72			; 00000048H
  00050	8b f4		 mov	 esi, esp
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	5e		 pop	 esi
  00060	83 c4 04	 add	 esp, 4
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
??1?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UAE@XZ ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z PROC ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001c	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00028	33 c5		 xor	 eax, ebp
  0002a	50		 push	 eax
  0002b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00034	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00037	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0003e	83 7d 0c 00	 cmp	 DWORD PTR _$initVBases$[ebp], 0
  00042	74 2e		 je	 SHORT $LN1@basic_ostr
  00044	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_8?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B@
  0004d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 50	 add	 ecx, 80			; 00000050H
  00053	8b f4		 mov	 esi, esp
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00069	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  0006c	83 c9 01	 or	 ecx, 1
  0006f	89 4d ec	 mov	 DWORD PTR $T2[ebp], ecx
$LN1@basic_ostr:
  00072	8b f4		 mov	 esi, esp
  00074	6a 00		 push	 0
  00076	6a 00		 push	 0
  00078	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	83 c2 04	 add	 edx, 4
  0007e	52		 push	 edx
  0007f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00096	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0009e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], OFFSET ??_7?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b0	83 e8 50	 sub	 eax, 80			; 00000050H
  000b3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000bb	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000be	89 44 0a fc	 mov	 DWORD PTR [edx+ecx-4], eax
  000c2	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  000c5	83 c8 02	 or	 eax, 2
  000c8	50		 push	 eax
  000c9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	83 c1 04	 add	 ecx, 4
  000cf	e8 00 00 00 00	 call	 ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 493
  000d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000db	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e8	59		 pop	 ecx
  000e9	5e		 pop	 esi
  000ea	83 c4 14	 add	 esp, 20			; 00000014H
  000ed	3b ec		 cmp	 ebp, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$0:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 19 00 00
	00		 je	 $LN5@basic_ostr
  0000c	83 65 ec fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 50	 add	 ecx, 80			; 00000050H
  00016	8b f4		 mov	 esi, esp
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  0001e	3b f4		 cmp	 esi, esp
  00020	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$LN5@basic_ostr:
  00025	c3		 ret	 0
__unwindfunclet$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z$1:
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 08	 add	 ecx, 8
  0002c	8b f4		 mov	 esi, esp
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ
  00034	3b f4		 cmp	 esi, esp
  00036	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z:
  0003b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00042	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z
  00051	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ENDP ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_hWnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?SWindowProc@@YGJPAUHWND__@@IIJ@Z PROC			; SWindowProc
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 218
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 220
  0000c	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  0000f	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  00012	83 7d fc 02	 cmp	 DWORD PTR tv64[ebp], 2
  00016	74 02		 je	 SHORT $LN1@SWindowPro
  00018	eb 15		 jmp	 SHORT $LN2@SWindowPro
$LN1@SWindowPro:
; Line 226
  0001a	8b f4		 mov	 esi, esp
  0001c	6a 00		 push	 0
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
  00024	3b f4		 cmp	 esi, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 227
  0002b	33 c0		 xor	 eax, eax
  0002d	eb 1f		 jmp	 SHORT $LN4@SWindowPro
$LN2@SWindowPro:
; Line 232
  0002f	8b f4		 mov	 esi, esp
  00031	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00034	51		 push	 ecx
  00035	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00038	52		 push	 edx
  00039	8b 45 0c	 mov	 eax, DWORD PTR _message$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  00040	51		 push	 ecx
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcW@16
  00047	3b f4		 cmp	 esi, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@SWindowPro:
; Line 233
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 10 00	 ret	 16			; 00000010H
?SWindowProc@@YGJPAUHWND__@@IIJ@Z ENDP			; SWindowProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -32						; size = 4
_x$1 = -28						; size = 4
_abc$ = -24						; size = 4
_texture$ = -16						; size = 4
_pd3devicecontext$ = -8					; size = 4
_pd3device$ = -4					; size = 4
?LoadTexture@@YAXXZ PROC				; LoadTexture
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 172
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0000f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00012	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00015	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00018	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001b	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001e	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00021	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 173
  00024	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00029	89 45 fc	 mov	 DWORD PTR _pd3device$[ebp], eax
; Line 174
  0002c	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  00031	89 45 f8	 mov	 DWORD PTR _pd3devicecontext$[ebp], eax
; Line 185
  00034	6a 00		 push	 0
  00036	68 00 00 00 00	 push	 OFFSET ?resourceView@@3PAUID3D11ShaderResourceView@@A ; resourceView
  0003b	8d 45 f0	 lea	 eax, DWORD PTR _texture$[ebp]
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET $SG188968
  00044	8b 4d f8	 mov	 ecx, DWORD PTR _pd3devicecontext$[ebp]
  00047	51		 push	 ecx
  00048	8b 55 fc	 mov	 edx, DWORD PTR _pd3device$[ebp]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 ?CreateWICTextureFromFile@DirectX@@YAJPAUID3D11Device@@PAUID3D11DeviceContext@@PB_WPAPAUID3D11Resource@@PAPAUID3D11ShaderResourceView@@I@Z ; DirectX::CreateWICTextureFromFile
  00051	83 c4 18	 add	 esp, 24			; 00000018H
  00054	89 45 e8	 mov	 DWORD PTR _abc$[ebp], eax
; Line 186
  00057	83 7d e8 00	 cmp	 DWORD PTR _abc$[ebp], 0
  0005b	7d 07		 jge	 SHORT $LN3@LoadTextur
; Line 188
  0005d	c7 45 e4 02 00
	00 00		 mov	 DWORD PTR _x$1[ebp], 2
$LN3@LoadTextur:
; Line 191
  00064	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?sBufferDesc@@3UD3D11_SAMPLER_DESC@@A+4, 1
; Line 192
  0006e	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?sBufferDesc@@3UD3D11_SAMPLER_DESC@@A+8, 1
; Line 193
  00078	c7 05 0c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?sBufferDesc@@3UD3D11_SAMPLER_DESC@@A+12, 1
; Line 194
  00082	c7 05 00 00 00
	00 55 00 00 00	 mov	 DWORD PTR ?sBufferDesc@@3UD3D11_SAMPLER_DESC@@A, 85 ; 00000055H
; Line 195
  0008c	c7 05 14 00 00
	00 10 00 00 00	 mov	 DWORD PTR ?sBufferDesc@@3UD3D11_SAMPLER_DESC@@A+20, 16 ; 00000010H
; Line 201
  00096	8b f4		 mov	 esi, esp
  00098	68 00 00 00 00	 push	 OFFSET ?samplerState@@3PAUID3D11SamplerState@@A ; samplerState
  0009d	68 00 00 00 00	 push	 OFFSET ?sBufferDesc@@3UD3D11_SAMPLER_DESC@@A ; sBufferDesc
  000a2	8b 45 fc	 mov	 eax, DWORD PTR _pd3device$[ebp]
  000a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a7	8b 55 fc	 mov	 edx, DWORD PTR _pd3device$[ebp]
  000aa	52		 push	 edx
  000ab	8b 41 5c	 mov	 eax, DWORD PTR [ecx+92]
  000ae	ff d0		 call	 eax
  000b0	3b f4		 cmp	 esi, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	89 45 e0	 mov	 DWORD PTR _hr$[ebp], eax
; Line 202
  000ba	83 7d f0 00	 cmp	 DWORD PTR _texture$[ebp], 0
  000be	74 1e		 je	 SHORT $LN4@LoadTextur
  000c0	8b 4d f0	 mov	 ecx, DWORD PTR _texture$[ebp]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	8b f4		 mov	 esi, esp
  000c7	8b 45 f0	 mov	 eax, DWORD PTR _texture$[ebp]
  000ca	50		 push	 eax
  000cb	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000ce	ff d1		 call	 ecx
  000d0	3b f4		 cmp	 esi, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _texture$[ebp], 0
$LN4@LoadTextur:
; Line 210
  000de	52		 push	 edx
  000df	8b cd		 mov	 ecx, ebp
  000e1	50		 push	 eax
  000e2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@LoadTextur
  000e8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ed	58		 pop	 eax
  000ee	5a		 pop	 edx
  000ef	5e		 pop	 esi
  000f0	83 c4 20	 add	 esp, 32			; 00000020H
  000f3	3b ec		 cmp	 ebp, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c3		 ret	 0
  000fe	8b ff		 npad	 2
$LN8@LoadTextur:
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN7@LoadTextur
$LN7@LoadTextur:
  00108	f0 ff ff ff	 DD	 -16			; fffffff0H
  0010c	04 00 00 00	 DD	 4
  00110	00 00 00 00	 DD	 $LN6@LoadTextur
$LN6@LoadTextur:
  00114	74		 DB	 116			; 00000074H
  00115	65		 DB	 101			; 00000065H
  00116	78		 DB	 120			; 00000078H
  00117	74		 DB	 116			; 00000074H
  00118	75		 DB	 117			; 00000075H
  00119	72		 DB	 114			; 00000072H
  0011a	65		 DB	 101			; 00000065H
  0011b	00		 DB	 0
?LoadTexture@@YAXXZ ENDP				; LoadTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv153 = -208						; size = 4
$T2 = -204						; size = 28
_outs$ = -172						; size = 152
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?RenderText@@YAXXZ PROC					; RenderText
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 347
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?RenderText@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  0001f	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 348
  0003f	6a 01		 push	 1
  00041	6a 02		 push	 2
  00043	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _outs$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@H@Z ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 349
  00055	68 00 00 00 00	 push	 OFFSET $SG189219
  0005a	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _outs$[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  00066	83 c4 08	 add	 esp, 8
; Line 350
  00069	e8 00 00 00 00	 call	 ?DXUTGetFPS@@YGMXZ	; DXUTGetFPS
  0006e	8b f4		 mov	 esi, esp
  00070	51		 push	 ecx
  00071	d9 1c 24	 fstp	 DWORD PTR [esp]
  00074	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _outs$[ebp]
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@M@Z
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 351
  00087	68 00 00 00 00	 push	 OFFSET $SG189266
  0008c	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _outs$[ebp]
  00092	51		 push	 ecx
  00093	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  00098	83 c4 08	 add	 esp, 8
; Line 352
  0009b	e8 00 00 00 00	 call	 ?DXUTGetDeviceStats@@YGPB_WXZ ; DXUTGetDeviceStats
  000a0	50		 push	 eax
  000a1	8d 95 54 ff ff
	ff		 lea	 edx, DWORD PTR _outs$[ebp]
  000a7	52		 push	 edx
  000a8	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000ad	83 c4 08	 add	 esp, 8
; Line 353
  000b0	68 00 00 00 00	 push	 OFFSET $SG189323
  000b5	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _outs$[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PBD@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000c1	83 c4 08	 add	 esp, 8
; Line 354
  000c4	6a 00		 push	 0
  000c6	e8 00 00 00 00	 call	 ?DXUTGetFrameStats@@YGPB_W_N@Z ; DXUTGetFrameStats
  000cb	50		 push	 eax
  000cc	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _outs$[ebp]
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 ??$?6_WU?$char_traits@_W@std@@@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@0@AAV10@PB_W@Z ; std::operator<<<wchar_t,std::char_traits<wchar_t> >
  000d8	83 c4 08	 add	 esp, 8
; Line 355
  000db	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  000e1	52		 push	 edx
  000e2	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _outs$[ebp]
  000e8	e8 00 00 00 00	 call	 ?str@?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::str
  000ed	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv153[ebp], eax
  000f3	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv153[ebp]
  000f9	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  000fe	8b f4		 mov	 esi, esp
  00100	50		 push	 eax
  00101	8b fc		 mov	 edi, esp
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  00109	3b fc		 cmp	 edi, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00110	50		 push	 eax
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextW@8
  00117	3b f4		 cmp	 esi, esp
  00119	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011e	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00124	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Line 356
  00129	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00130	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _outs$[ebp]
  00136	e8 00 00 00 00	 call	 ??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
  0013b	52		 push	 edx
  0013c	8b cd		 mov	 ecx, ebp
  0013e	50		 push	 eax
  0013f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@RenderText
  00145	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0014a	58		 pop	 eax
  0014b	5a		 pop	 edx
  0014c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00156	59		 pop	 ecx
  00157	5f		 pop	 edi
  00158	5e		 pop	 esi
  00159	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015c	33 cd		 xor	 ecx, ebp
  0015e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00163	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00169	3b ec		 cmp	 ebp, esp
  0016b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c3		 ret	 0
$LN8@RenderText:
  00174	01 00 00 00	 DD	 1
  00178	00 00 00 00	 DD	 $LN7@RenderText
$LN7@RenderText:
  0017c	54 ff ff ff	 DD	 -172			; ffffff54H
  00180	98 00 00 00	 DD	 152			; 00000098H
  00184	00 00 00 00	 DD	 $LN5@RenderText
$LN5@RenderText:
  00188	6f		 DB	 111			; 0000006fH
  00189	75		 DB	 117			; 00000075H
  0018a	74		 DB	 116			; 00000074H
  0018b	73		 DB	 115			; 00000073H
  0018c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?RenderText@@YAXXZ$0:
  00000	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _outs$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_D?$basic_ostringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
__ehhandler$?RenderText@@YAXXZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 30 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-208]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?RenderText@@YAXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?RenderText@@YAXXZ ENDP					; RenderText
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?InitApp@@YAXXZ PROC					; InitApp
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 329
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 330
  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	6a 01		 push	 1
  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 ?DXUTInit@@YGJ_N0PA_W0@Z ; DXUTInit
; Line 331
  00010	3b ec		 cmp	 ebp, esp
  00012	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?InitApp@@YAXXZ ENDP					; InitApp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv637 = -432						; size = 4
tv363 = -428						; size = 4
tv349 = -424						; size = 4
tv335 = -420						; size = 4
tv883 = -416						; size = 8
tv879 = -404						; size = 4
tv873 = -400						; size = 8
tv869 = -388						; size = 4
tv844 = -384						; size = 8
tv842 = -376						; size = 4
tv839 = -370						; size = 2
tv831 = -368						; size = 8
tv827 = -360						; size = 4
$T2 = -356						; size = 4
$T3 = -352						; size = 4
$T4 = -348						; size = 4
$T5 = -344						; size = 4
$T6 = -340						; size = 4
$T7 = -336						; size = 4
$T8 = -332						; size = 4
$T9 = -328						; size = 4
$T10 = -324						; size = 4
$T11 = -320						; size = 4
$T12 = -316						; size = 28
$T13 = -288						; size = 16
_pos$14 = -260						; size = 16
_POS$15 = -240						; size = 16
_y$16 = -224						; size = 4
_x$17 = -220						; size = 4
_i$18 = -216						; size = 4
_ss$ = -208						; size = 176
_iStartingWidth$ = -28					; size = 4
_hr$ = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_pd3dDevice$ = 8					; size = 4
?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z PROC	; CreateSimulationBuffers
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 478
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	81 ec ac 01 00
	00		 sub	 esp, 428		; 000001acH
  0002b	56		 push	 esi
  0002c	57		 push	 edi
  0002d	8d bd 44 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-444]
  00033	b9 6b 00 00 00	 mov	 ecx, 107		; 0000006bH
  00038	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0003d	f3 ab		 rep stosd
  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00044	33 c5		 xor	 eax, ebp
  00046	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00049	50		 push	 eax
  0004a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0004d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 479
  00053	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hr$[ebp], 0
; Line 482
  0005a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A, 0 ; g_pParticles
  00061	74 26		 je	 SHORT $LN35@CreateSimu
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
  00068	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006a	8b f4		 mov	 esi, esp
  0006c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
  00072	52		 push	 edx
  00073	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00076	ff d0		 call	 eax
  00078	3b f4		 cmp	 esi, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A, 0 ; g_pParticles
$LN35@CreateSimu:
; Line 483
  00089	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticlesSRV
  00090	74 26		 je	 SHORT $LN34@CreateSimu
  00092	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  00098	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009a	8b f4		 mov	 esi, esp
  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  000a1	50		 push	 eax
  000a2	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000a5	ff d1		 call	 ecx
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticlesSRV
$LN34@CreateSimu:
; Line 484
  000b8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticlesUAV
  000bf	74 27		 je	 SHORT $LN33@CreateSimu
  000c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  000c7	8b 02		 mov	 eax, DWORD PTR [edx]
  000c9	8b f4		 mov	 esi, esp
  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  000d1	51		 push	 ecx
  000d2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d5	ff d2		 call	 edx
  000d7	3b f4		 cmp	 esi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticlesUAV
$LN33@CreateSimu:
; Line 486
  000e8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A, 0 ; g_pSortedParticles
  000ef	74 26		 je	 SHORT $LN32@CreateSimu
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
  000f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f8	8b f4		 mov	 esi, esp
  000fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
  00100	52		 push	 edx
  00101	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00104	ff d0		 call	 eax
  00106	3b f4		 cmp	 esi, esp
  00108	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A, 0 ; g_pSortedParticles
$LN32@CreateSimu:
; Line 487
  00117	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pSortedParticlesSRV
  0011e	74 26		 je	 SHORT $LN31@CreateSimu
  00120	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  00126	8b 11		 mov	 edx, DWORD PTR [ecx]
  00128	8b f4		 mov	 esi, esp
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  0012f	50		 push	 eax
  00130	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00133	ff d1		 call	 ecx
  00135	3b f4		 cmp	 esi, esp
  00137	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pSortedParticlesSRV
$LN31@CreateSimu:
; Line 488
  00146	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pSortedParticlesUAV
  0014d	74 27		 je	 SHORT $LN30@CreateSimu
  0014f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
  00155	8b 02		 mov	 eax, DWORD PTR [edx]
  00157	8b f4		 mov	 esi, esp
  00159	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
  0015f	51		 push	 ecx
  00160	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00163	ff d2		 call	 edx
  00165	3b f4		 cmp	 esi, esp
  00167	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pSortedParticlesUAV
$LN30@CreateSimu:
; Line 490
  00176	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A, 0 ; g_pParticleForces
  0017d	74 26		 je	 SHORT $LN29@CreateSimu
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
  00184	8b 08		 mov	 ecx, DWORD PTR [eax]
  00186	8b f4		 mov	 esi, esp
  00188	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
  0018e	52		 push	 edx
  0018f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00192	ff d0		 call	 eax
  00194	3b f4		 cmp	 esi, esp
  00196	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A, 0 ; g_pParticleForces
$LN29@CreateSimu:
; Line 491
  001a5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleForcesSRV
  001ac	74 26		 je	 SHORT $LN28@CreateSimu
  001ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  001b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b6	8b f4		 mov	 esi, esp
  001b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  001bd	50		 push	 eax
  001be	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  001c1	ff d1		 call	 ecx
  001c3	3b f4		 cmp	 esi, esp
  001c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ca	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleForcesSRV
$LN28@CreateSimu:
; Line 492
  001d4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleForcesUAV
  001db	74 27		 je	 SHORT $LN27@CreateSimu
  001dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  001e3	8b 02		 mov	 eax, DWORD PTR [edx]
  001e5	8b f4		 mov	 esi, esp
  001e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  001ed	51		 push	 ecx
  001ee	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001f1	ff d2		 call	 edx
  001f3	3b f4		 cmp	 esi, esp
  001f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001fa	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleForcesUAV
$LN27@CreateSimu:
; Line 494
  00204	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A, 0 ; g_pParticleDensity
  0020b	74 26		 je	 SHORT $LN26@CreateSimu
  0020d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
  00212	8b 08		 mov	 ecx, DWORD PTR [eax]
  00214	8b f4		 mov	 esi, esp
  00216	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
  0021c	52		 push	 edx
  0021d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00220	ff d0		 call	 eax
  00222	3b f4		 cmp	 esi, esp
  00224	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00229	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A, 0 ; g_pParticleDensity
$LN26@CreateSimu:
; Line 495
  00233	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleDensitySRV
  0023a	74 26		 je	 SHORT $LN25@CreateSimu
  0023c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  00242	8b 11		 mov	 edx, DWORD PTR [ecx]
  00244	8b f4		 mov	 esi, esp
  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  0024b	50		 push	 eax
  0024c	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0024f	ff d1		 call	 ecx
  00251	3b f4		 cmp	 esi, esp
  00253	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00258	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleDensitySRV
$LN25@CreateSimu:
; Line 496
  00262	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleDensityUAV
  00269	74 27		 je	 SHORT $LN24@CreateSimu
  0026b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  00271	8b 02		 mov	 eax, DWORD PTR [edx]
  00273	8b f4		 mov	 esi, esp
  00275	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  0027b	51		 push	 ecx
  0027c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0027f	ff d2		 call	 edx
  00281	3b f4		 cmp	 esi, esp
  00283	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00288	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleDensityUAV
$LN24@CreateSimu:
; Line 498
  00292	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridSRV
  00299	74 26		 je	 SHORT $LN23@CreateSimu
  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  002a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a2	8b f4		 mov	 esi, esp
  002a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  002aa	52		 push	 edx
  002ab	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  002ae	ff d0		 call	 eax
  002b0	3b f4		 cmp	 esi, esp
  002b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridSRV
$LN23@CreateSimu:
; Line 499
  002c1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridUAV
  002c8	74 26		 je	 SHORT $LN22@CreateSimu
  002ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
  002d0	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d2	8b f4		 mov	 esi, esp
  002d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
  002d9	50		 push	 eax
  002da	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  002dd	ff d1		 call	 ecx
  002df	3b f4		 cmp	 esi, esp
  002e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridUAV
$LN22@CreateSimu:
; Line 500
  002f0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A, 0 ; g_pGrid
  002f7	74 27		 je	 SHORT $LN21@CreateSimu
  002f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
  002ff	8b 02		 mov	 eax, DWORD PTR [edx]
  00301	8b f4		 mov	 esi, esp
  00303	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
  00309	51		 push	 ecx
  0030a	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0030d	ff d2		 call	 edx
  0030f	3b f4		 cmp	 esi, esp
  00311	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00316	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A, 0 ; g_pGrid
$LN21@CreateSimu:
; Line 502
  00320	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridPingPongSRV
  00327	74 26		 je	 SHORT $LN20@CreateSimu
  00329	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
  0032e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00330	8b f4		 mov	 esi, esp
  00332	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
  00338	52		 push	 edx
  00339	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0033c	ff d0		 call	 eax
  0033e	3b f4		 cmp	 esi, esp
  00340	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00345	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridPingPongSRV
$LN20@CreateSimu:
; Line 503
  0034f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridPingPongUAV
  00356	74 26		 je	 SHORT $LN19@CreateSimu
  00358	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
  0035e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00360	8b f4		 mov	 esi, esp
  00362	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
  00367	50		 push	 eax
  00368	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0036b	ff d1		 call	 ecx
  0036d	3b f4		 cmp	 esi, esp
  0036f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00374	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridPingPongUAV
$LN19@CreateSimu:
; Line 504
  0037e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A, 0 ; g_pGridPingPong
  00385	74 27		 je	 SHORT $LN18@CreateSimu
  00387	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
  0038d	8b 02		 mov	 eax, DWORD PTR [edx]
  0038f	8b f4		 mov	 esi, esp
  00391	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
  00397	51		 push	 ecx
  00398	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0039b	ff d2		 call	 edx
  0039d	3b f4		 cmp	 esi, esp
  0039f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A, 0 ; g_pGridPingPong
$LN18@CreateSimu:
; Line 506
  003ae	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridIndicesSRV
  003b5	74 26		 je	 SHORT $LN17@CreateSimu
  003b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
  003bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003be	8b f4		 mov	 esi, esp
  003c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
  003c6	52		 push	 edx
  003c7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  003ca	ff d0		 call	 eax
  003cc	3b f4		 cmp	 esi, esp
  003ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003d3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridIndicesSRV
$LN17@CreateSimu:
; Line 507
  003dd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridIndicesUAV
  003e4	74 26		 je	 SHORT $LN16@CreateSimu
  003e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
  003ec	8b 11		 mov	 edx, DWORD PTR [ecx]
  003ee	8b f4		 mov	 esi, esp
  003f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
  003f5	50		 push	 eax
  003f6	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  003f9	ff d1		 call	 ecx
  003fb	3b f4		 cmp	 esi, esp
  003fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00402	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridIndicesUAV
$LN16@CreateSimu:
; Line 508
  0040c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A, 0 ; g_pGridIndices
  00413	74 27		 je	 SHORT $LN15@CreateSimu
  00415	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
  0041b	8b 02		 mov	 eax, DWORD PTR [edx]
  0041d	8b f4		 mov	 esi, esp
  0041f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
  00425	51		 push	 ecx
  00426	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00429	ff d2		 call	 edx
  0042b	3b f4		 cmp	 esi, esp
  0042d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00432	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A, 0 ; g_pGridIndices
$LN15@CreateSimu:
; Line 510
  0043c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
  00443	74 26		 je	 SHORT $LN14@CreateSimu
  00445	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  0044a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0044c	8b f4		 mov	 esi, esp
  0044e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  00454	52		 push	 edx
  00455	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00458	ff d0		 call	 eax
  0045a	3b f4		 cmp	 esi, esp
  0045c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00461	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
$LN14@CreateSimu:
; Line 511
  0046b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A, 0 ; m_pProcessCS
  00472	74 26		 je	 SHORT $LN13@CreateSimu
  00474	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
  0047a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0047c	8b f4		 mov	 esi, esp
  0047e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
  00483	50		 push	 eax
  00484	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00487	ff d1		 call	 ecx
  00489	3b f4		 cmp	 esi, esp
  0048b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00490	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A, 0 ; m_pProcessCS
$LN13@CreateSimu:
; Line 512
  0049a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
  004a1	74 27		 je	 SHORT $LN12@CreateSimu
  004a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  004a9	8b 02		 mov	 eax, DWORD PTR [edx]
  004ab	8b f4		 mov	 esi, esp
  004ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  004b3	51		 push	 ecx
  004b4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  004b7	ff d2		 call	 edx
  004b9	3b f4		 cmp	 esi, esp
  004bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
$LN12@CreateSimu:
; Line 513
  004ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
  004d1	74 26		 je	 SHORT $LN11@CreateSimu
  004d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  004d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  004da	8b f4		 mov	 esi, esp
  004dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  004e2	52		 push	 edx
  004e3	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  004e6	ff d0		 call	 eax
  004e8	3b f4		 cmp	 esi, esp
  004ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004ef	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
$LN11@CreateSimu:
; Line 517
  004f9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  004ff	89 8d 98 fe ff
	ff		 mov	 DWORD PTR tv827[ebp], ecx
  00505	f2 0f 2a 85 98
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv827[ebp]
  0050d	8b 95 98 fe ff
	ff		 mov	 edx, DWORD PTR tv827[ebp]
  00513	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00516	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  0051f	f2 0f 11 85 90
	fe ff ff	 movsd	 QWORD PTR tv831[ebp], xmm0
  00527	f2 0f 5a 85 90
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv831[ebp]
  0052f	51		 push	 ecx
  00530	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00535	e8 00 00 00 00	 call	 ?sqrt@@YAMM@Z		; sqrt
  0053a	83 c4 04	 add	 esp, 4
  0053d	d9 bd 8e fe ff
	ff		 fnstcw	 WORD PTR tv839[ebp]
  00543	0f b7 85 8e fe
	ff ff		 movzx	 eax, WORD PTR tv839[ebp]
  0054a	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0054f	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv842[ebp], eax
  00555	d9 ad 88 fe ff
	ff		 fldcw	 WORD PTR tv842[ebp]
  0055b	df bd 80 fe ff
	ff		 fistp	 QWORD PTR tv844[ebp]
  00561	d9 ad 8e fe ff
	ff		 fldcw	 WORD PTR tv839[ebp]
  00567	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv844[ebp]
  0056d	89 45 e4	 mov	 DWORD PTR _iStartingWidth$[ebp], eax
; Line 518
  00570	33 c9		 xor	 ecx, ecx
  00572	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00577	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  0057c	f7 e2		 mul	 edx
  0057e	0f 90 c1	 seto	 cl
  00581	f7 d9		 neg	 ecx
  00583	0b c8		 or	 ecx, eax
  00585	51		 push	 ecx
  00586	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0058b	83 c4 04	 add	 esp, 4
  0058e	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T11[ebp], eax
  00594	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T11[ebp]
  0059a	a3 00 00 00 00	 mov	 DWORD PTR ?particles@@3PAUParticle@@A, eax ; particles
; Line 519
  0059f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  005a5	c1 e1 04	 shl	 ecx, 4
  005a8	51		 push	 ecx
  005a9	6a 00		 push	 0
  005ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
  005b1	52		 push	 edx
  005b2	e8 00 00 00 00	 call	 _memset
  005b7	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 520
  005ba	6a 01		 push	 1
  005bc	6a 03		 push	 3
  005be	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  005c4	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  005c9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 521
  005d0	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$18[ebp], 0
  005da	eb 0f		 jmp	 SHORT $LN10@CreateSimu
$LN9@CreateSimu:
  005dc	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _i$18[ebp]
  005e2	83 c0 01	 add	 eax, 1
  005e5	89 85 28 ff ff
	ff		 mov	 DWORD PTR _i$18[ebp], eax
$LN10@CreateSimu:
  005eb	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _i$18[ebp]
  005f1	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  005f7	0f 83 f2 01 00
	00		 jae	 $LN8@CreateSimu
; Line 524
  005fd	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _i$18[ebp]
  00603	33 d2		 xor	 edx, edx
  00605	f7 75 e4	 div	 DWORD PTR _iStartingWidth$[ebp]
  00608	89 95 24 ff ff
	ff		 mov	 DWORD PTR _x$17[ebp], edx
; Line 525
  0060e	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _i$18[ebp]
  00614	33 d2		 xor	 edx, edx
  00616	f7 75 e4	 div	 DWORD PTR _iStartingWidth$[ebp]
  00619	89 85 20 ff ff
	ff		 mov	 DWORD PTR _y$16[ebp], eax
; Line 528
  0061f	51		 push	 ecx
  00620	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00628	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062d	51		 push	 ecx
  0062e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00636	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0063b	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _y$16[ebp]
  00641	89 95 7c fe ff
	ff		 mov	 DWORD PTR tv869[ebp], edx
  00647	f2 0f 2a 85 7c
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv869[ebp]
  0064f	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR tv869[ebp]
  00655	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00658	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00661	f2 0f 11 85 70
	fe ff ff	 movsd	 QWORD PTR tv873[ebp], xmm0
  00669	f2 0f 5a 85 70
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv873[ebp]
  00671	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _g_fInitialParticleSpacing
  00679	51		 push	 ecx
  0067a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0067f	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _x$17[ebp]
  00685	89 8d 6c fe ff
	ff		 mov	 DWORD PTR tv879[ebp], ecx
  0068b	f2 0f 2a 85 6c
	fe ff ff	 cvtsi2sd xmm0, DWORD PTR tv879[ebp]
  00693	8b 95 6c fe ff
	ff		 mov	 edx, DWORD PTR tv879[ebp]
  00699	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  0069c	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  006a5	f2 0f 11 85 60
	fe ff ff	 movsd	 QWORD PTR tv883[ebp], xmm0
  006ad	f2 0f 5a 85 60
	fe ff ff	 cvtsd2ss xmm0, QWORD PTR tv883[ebp]
  006b5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _g_fInitialParticleSpacing
  006bd	51		 push	 ecx
  006be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c3	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _pos$14[ebp]
  006c9	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@MMMM@Z ; DirectX::XMFLOAT4::XMFLOAT4
; Line 529
  006ce	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _ss$[ebp]
  006d4	85 c0		 test	 eax, eax
  006d6	74 11		 je	 SHORT $LN38@CreateSimu
  006d8	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  006de	83 c1 10	 add	 ecx, 16			; 00000010H
  006e1	89 8d 5c fe ff
	ff		 mov	 DWORD PTR tv335[ebp], ecx
  006e7	eb 0a		 jmp	 SHORT $LN39@CreateSimu
$LN38@CreateSimu:
  006e9	c7 85 5c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv335[ebp], 0
$LN39@CreateSimu:
  006f3	68 00 00 00 00	 push	 OFFSET $SG189691
  006f8	8b 95 5c fe ff
	ff		 mov	 edx, DWORD PTR tv335[ebp]
  006fe	52		 push	 edx
  006ff	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00704	83 c4 08	 add	 esp, 8
; Line 530
  00707	8b f4		 mov	 esi, esp
  00709	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _x$17[ebp]
  0070f	50		 push	 eax
  00710	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp+16]
  00716	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
  0071c	3b f4		 cmp	 esi, esp
  0071e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 531
  00723	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00729	85 c9		 test	 ecx, ecx
  0072b	74 11		 je	 SHORT $LN40@CreateSimu
  0072d	8d 95 30 ff ff
	ff		 lea	 edx, DWORD PTR _ss$[ebp]
  00733	83 c2 10	 add	 edx, 16			; 00000010H
  00736	89 95 58 fe ff
	ff		 mov	 DWORD PTR tv349[ebp], edx
  0073c	eb 0a		 jmp	 SHORT $LN41@CreateSimu
$LN40@CreateSimu:
  0073e	c7 85 58 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv349[ebp], 0
$LN41@CreateSimu:
  00748	68 00 00 00 00	 push	 OFFSET $SG189738
  0074d	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR tv349[ebp]
  00753	50		 push	 eax
  00754	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00759	83 c4 08	 add	 esp, 8
; Line 532
  0075c	8b f4		 mov	 esi, esp
  0075e	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _y$16[ebp]
  00764	51		 push	 ecx
  00765	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp+16]
  0076b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
  00771	3b f4		 cmp	 esi, esp
  00773	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 533
  00778	8d 95 30 ff ff
	ff		 lea	 edx, DWORD PTR _ss$[ebp]
  0077e	85 d2		 test	 edx, edx
  00780	74 11		 je	 SHORT $LN42@CreateSimu
  00782	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _ss$[ebp]
  00788	83 c0 10	 add	 eax, 16			; 00000010H
  0078b	89 85 54 fe ff
	ff		 mov	 DWORD PTR tv363[ebp], eax
  00791	eb 0a		 jmp	 SHORT $LN43@CreateSimu
$LN42@CreateSimu:
  00793	c7 85 54 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv363[ebp], 0
$LN43@CreateSimu:
  0079d	68 00 00 00 00	 push	 OFFSET $SG189766
  007a2	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR tv363[ebp]
  007a8	51		 push	 ecx
  007a9	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  007ae	83 c4 08	 add	 esp, 8
; Line 534
  007b1	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _pos$14[ebp]
  007b7	e8 00 00 00 00	 call	 ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
  007bc	0f 29 85 e0 fe
	ff ff		 movaps	 XMMWORD PTR $T13[ebp], xmm0
  007c3	0f 28 85 e0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T13[ebp]
  007ca	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _POS$15[ebp], xmm0
; Line 535
  007d1	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _i$18[ebp]
  007d7	c1 e2 04	 shl	 edx, 4
  007da	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
  007e0	0f 10 85 10 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _POS$15[ebp]
  007e7	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
; Line 536
  007ea	e9 ed fd ff ff	 jmp	 $LN9@CreateSimu
$LN8@CreateSimu:
; Line 538
  007ef	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
  007f5	50		 push	 eax
  007f6	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  007fc	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
  00801	89 85 50 fe ff
	ff		 mov	 DWORD PTR tv637[ebp], eax
  00807	8b 8d 50 fe ff
	ff		 mov	 ecx, DWORD PTR tv637[ebp]
  0080d	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00812	8b f4		 mov	 esi, esp
  00814	50		 push	 eax
  00815	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4
  0081b	3b f4		 cmp	 esi, esp
  0081d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00822	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00828	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 540
  0082d	6a 00		 push	 0
  0082f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
  00835	51		 push	 ecx
  00836	68 00 00 00 00	 push	 OFFSET ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  0083b	68 00 00 00 00	 push	 OFFSET ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  00840	68 00 00 00 00	 push	 OFFSET ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
  00845	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  0084b	52		 push	 edx
  0084c	e8 00 00 00 00	 call	 ??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z ; CreateStructuredBuffer<Particle>
  00851	83 c4 18	 add	 esp, 24			; 00000018H
  00854	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax
  00857	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0085b	7d 3d		 jge	 SHORT $LN7@CreateSimu
  0085d	6a 01		 push	 1
  0085f	68 00 00 00 00	 push	 OFFSET $SG189783
  00864	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  00867	50		 push	 eax
  00868	68 1c 02 00 00	 push	 540			; 0000021cH
  0086d	68 00 00 00 00	 push	 OFFSET $SG189784
  00872	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00877	89 85 bc fe ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  0087d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00884	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  0088a	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  0088f	8b 85 bc fe ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  00895	e9 49 04 00 00	 jmp	 $LN36@CreateSimu
$LN7@CreateSimu:
; Line 541
  0089a	68 00 00 00 00	 push	 OFFSET $SG189785
  0089f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
  008a5	51		 push	 ecx
  008a6	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  008ab	83 c4 08	 add	 esp, 8
; Line 542
  008ae	68 00 00 00 00	 push	 OFFSET $SG189786
  008b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  008b9	52		 push	 edx
  008ba	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  008bf	83 c4 08	 add	 esp, 8
; Line 543
  008c2	68 00 00 00 00	 push	 OFFSET $SG189787
  008c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  008cc	50		 push	 eax
  008cd	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  008d2	83 c4 08	 add	 esp, 8
; Line 545
  008d5	6a 00		 push	 0
  008d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
  008dd	51		 push	 ecx
  008de	68 00 00 00 00	 push	 OFFSET ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
  008e3	68 00 00 00 00	 push	 OFFSET ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  008e8	68 00 00 00 00	 push	 OFFSET ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
  008ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  008f3	52		 push	 edx
  008f4	e8 00 00 00 00	 call	 ??$CreateStructuredBuffer@UParticle@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticle@@_N@Z ; CreateStructuredBuffer<Particle>
  008f9	83 c4 18	 add	 esp, 24			; 00000018H
  008fc	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax
  008ff	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00903	7d 3d		 jge	 SHORT $LN6@CreateSimu
  00905	6a 01		 push	 1
  00907	68 00 00 00 00	 push	 OFFSET $SG189793
  0090c	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  0090f	50		 push	 eax
  00910	68 21 02 00 00	 push	 545			; 00000221H
  00915	68 00 00 00 00	 push	 OFFSET $SG189794
  0091a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0091f	89 85 b8 fe ff
	ff		 mov	 DWORD PTR $T9[ebp], eax
  00925	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0092c	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00932	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00937	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  0093d	e9 a1 03 00 00	 jmp	 $LN36@CreateSimu
$LN6@CreateSimu:
; Line 546
  00942	68 00 00 00 00	 push	 OFFSET $SG189795
  00947	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
  0094d	51		 push	 ecx
  0094e	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00953	83 c4 08	 add	 esp, 8
; Line 547
  00956	68 00 00 00 00	 push	 OFFSET $SG189796
  0095b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  00961	52		 push	 edx
  00962	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00967	83 c4 08	 add	 esp, 8
; Line 548
  0096a	68 00 00 00 00	 push	 OFFSET $SG189797
  0096f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
  00974	50		 push	 eax
  00975	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0097a	83 c4 08	 add	 esp, 8
; Line 550
  0097d	6a 00		 push	 0
  0097f	6a 00		 push	 0
  00981	68 00 00 00 00	 push	 OFFSET ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  00986	68 00 00 00 00	 push	 OFFSET ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  0098b	68 00 00 00 00	 push	 OFFSET ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
  00990	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00996	51		 push	 ecx
  00997	e8 00 00 00 00	 call	 ??$CreateStructuredBuffer@UParticleForces@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleForces@@_N@Z ; CreateStructuredBuffer<ParticleForces>
  0099c	83 c4 18	 add	 esp, 24			; 00000018H
  0099f	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax
  009a2	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  009a6	7d 3d		 jge	 SHORT $LN5@CreateSimu
  009a8	6a 01		 push	 1
  009aa	68 00 00 00 00	 push	 OFFSET $SG189812
  009af	8b 55 e8	 mov	 edx, DWORD PTR _hr$[ebp]
  009b2	52		 push	 edx
  009b3	68 26 02 00 00	 push	 550			; 00000226H
  009b8	68 00 00 00 00	 push	 OFFSET $SG189813
  009bd	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  009c2	89 85 b4 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  009c8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  009cf	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  009d5	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  009da	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  009e0	e9 fe 02 00 00	 jmp	 $LN36@CreateSimu
$LN5@CreateSimu:
; Line 551
  009e5	68 00 00 00 00	 push	 OFFSET $SG189814
  009ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
  009ef	50		 push	 eax
  009f0	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  009f5	83 c4 08	 add	 esp, 8
; Line 552
  009f8	68 00 00 00 00	 push	 OFFSET $SG189815
  009fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  00a03	51		 push	 ecx
  00a04	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00a09	83 c4 08	 add	 esp, 8
; Line 553
  00a0c	68 00 00 00 00	 push	 OFFSET $SG189816
  00a11	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  00a17	52		 push	 edx
  00a18	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00a1d	83 c4 08	 add	 esp, 8
; Line 555
  00a20	6a 00		 push	 0
  00a22	6a 00		 push	 0
  00a24	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  00a29	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  00a2e	68 00 00 00 00	 push	 OFFSET ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
  00a33	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00a38	50		 push	 eax
  00a39	e8 00 00 00 00	 call	 ??$CreateStructuredBuffer@UParticleDensity@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUParticleDensity@@_N@Z ; CreateStructuredBuffer<ParticleDensity>
  00a3e	83 c4 18	 add	 esp, 24			; 00000018H
  00a41	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax
  00a44	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00a48	7d 3d		 jge	 SHORT $LN4@CreateSimu
  00a4a	6a 01		 push	 1
  00a4c	68 00 00 00 00	 push	 OFFSET $SG189831
  00a51	8b 4d e8	 mov	 ecx, DWORD PTR _hr$[ebp]
  00a54	51		 push	 ecx
  00a55	68 2b 02 00 00	 push	 555			; 0000022bH
  00a5a	68 00 00 00 00	 push	 OFFSET $SG189832
  00a5f	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00a64	89 85 b0 fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00a6a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a71	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00a77	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00a7c	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  00a82	e9 5c 02 00 00	 jmp	 $LN36@CreateSimu
$LN4@CreateSimu:
; Line 556
  00a87	68 00 00 00 00	 push	 OFFSET $SG189833
  00a8c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
  00a92	52		 push	 edx
  00a93	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00a98	83 c4 08	 add	 esp, 8
; Line 557
  00a9b	68 00 00 00 00	 push	 OFFSET $SG189834
  00aa0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  00aa5	50		 push	 eax
  00aa6	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00aab	83 c4 08	 add	 esp, 8
; Line 558
  00aae	68 00 00 00 00	 push	 OFFSET $SG189835
  00ab3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  00ab9	51		 push	 ecx
  00aba	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00abf	83 c4 08	 add	 esp, 8
; Line 560
  00ac2	6a 00		 push	 0
  00ac4	6a 00		 push	 0
  00ac6	68 00 00 00 00	 push	 OFFSET ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
  00acb	68 00 00 00 00	 push	 OFFSET ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  00ad0	68 00 00 00 00	 push	 OFFSET ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
  00ad5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00adb	52		 push	 edx
  00adc	e8 00 00 00 00	 call	 ??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z ; CreateStructuredBuffer<unsigned int>
  00ae1	83 c4 18	 add	 esp, 24			; 00000018H
  00ae4	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax
  00ae7	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00aeb	7d 3d		 jge	 SHORT $LN3@CreateSimu
  00aed	6a 01		 push	 1
  00aef	68 00 00 00 00	 push	 OFFSET $SG189850
  00af4	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  00af7	50		 push	 eax
  00af8	68 30 02 00 00	 push	 560			; 00000230H
  00afd	68 00 00 00 00	 push	 OFFSET $SG189851
  00b02	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00b07	89 85 ac fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00b0d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b14	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00b1a	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00b1f	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00b25	e9 b9 01 00 00	 jmp	 $LN36@CreateSimu
$LN3@CreateSimu:
; Line 561
  00b2a	68 00 00 00 00	 push	 OFFSET $SG189852
  00b2f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
  00b35	51		 push	 ecx
  00b36	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00b3b	83 c4 08	 add	 esp, 8
; Line 562
  00b3e	68 00 00 00 00	 push	 OFFSET $SG189853
  00b43	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  00b49	52		 push	 edx
  00b4a	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00b4f	83 c4 08	 add	 esp, 8
; Line 563
  00b52	68 00 00 00 00	 push	 OFFSET $SG189854
  00b57	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
  00b5c	50		 push	 eax
  00b5d	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00b62	83 c4 08	 add	 esp, 8
; Line 565
  00b65	6a 00		 push	 0
  00b67	6a 00		 push	 0
  00b69	68 00 00 00 00	 push	 OFFSET ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
  00b6e	68 00 00 00 00	 push	 OFFSET ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
  00b73	68 00 00 00 00	 push	 OFFSET ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
  00b78	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumParticles@@3IA ; g_iNumParticles
  00b7e	51		 push	 ecx
  00b7f	e8 00 00 00 00	 call	 ??$CreateStructuredBuffer@I@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBI_N@Z ; CreateStructuredBuffer<unsigned int>
  00b84	83 c4 18	 add	 esp, 24			; 00000018H
  00b87	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax
  00b8a	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00b8e	7d 3d		 jge	 SHORT $LN2@CreateSimu
  00b90	6a 01		 push	 1
  00b92	68 00 00 00 00	 push	 OFFSET $SG189860
  00b97	8b 55 e8	 mov	 edx, DWORD PTR _hr$[ebp]
  00b9a	52		 push	 edx
  00b9b	68 35 02 00 00	 push	 565			; 00000235H
  00ba0	68 00 00 00 00	 push	 OFFSET $SG189861
  00ba5	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00baa	89 85 a8 fe ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  00bb0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00bb7	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00bbd	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00bc2	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  00bc8	e9 16 01 00 00	 jmp	 $LN36@CreateSimu
$LN2@CreateSimu:
; Line 566
  00bcd	68 00 00 00 00	 push	 OFFSET $SG189862
  00bd2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
  00bd7	50		 push	 eax
  00bd8	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00bdd	83 c4 08	 add	 esp, 8
; Line 567
  00be0	68 00 00 00 00	 push	 OFFSET $SG189863
  00be5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
  00beb	51		 push	 ecx
  00bec	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00bf1	83 c4 08	 add	 esp, 8
; Line 568
  00bf4	68 00 00 00 00	 push	 OFFSET $SG189864
  00bf9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
  00bff	52		 push	 edx
  00c00	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00c05	83 c4 08	 add	 esp, 8
; Line 570
  00c08	6a 00		 push	 0
  00c0a	6a 00		 push	 0
  00c0c	68 00 00 00 00	 push	 OFFSET ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
  00c11	68 00 00 00 00	 push	 OFFSET ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
  00c16	68 00 00 00 00	 push	 OFFSET ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
  00c1b	68 00 00 01 00	 push	 65536			; 00010000H
  00c20	e8 00 00 00 00	 call	 ??$CreateStructuredBuffer@Uu322@@@@YAJIPAPAUID3D11Buffer@@PAPAUID3D11ShaderResourceView@@PAPAUID3D11UnorderedAccessView@@PBUu322@@_N@Z ; CreateStructuredBuffer<u322>
  00c25	83 c4 18	 add	 esp, 24			; 00000018H
  00c28	89 45 e8	 mov	 DWORD PTR _hr$[ebp], eax
  00c2b	83 7d e8 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00c2f	7d 3a		 jge	 SHORT $LN1@CreateSimu
  00c31	6a 01		 push	 1
  00c33	68 00 00 00 00	 push	 OFFSET $SG189879
  00c38	8b 45 e8	 mov	 eax, DWORD PTR _hr$[ebp]
  00c3b	50		 push	 eax
  00c3c	68 3a 02 00 00	 push	 570			; 0000023aH
  00c41	68 00 00 00 00	 push	 OFFSET $SG189880
  00c46	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00c4b	89 85 a4 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00c51	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c58	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00c5e	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00c63	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00c69	eb 78		 jmp	 SHORT $LN36@CreateSimu
$LN1@CreateSimu:
; Line 571
  00c6b	68 00 00 00 00	 push	 OFFSET $SG189881
  00c70	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
  00c76	51		 push	 ecx
  00c77	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00c7c	83 c4 08	 add	 esp, 8
; Line 572
  00c7f	68 00 00 00 00	 push	 OFFSET $SG189882
  00c84	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
  00c8a	52		 push	 edx
  00c8b	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00c90	83 c4 08	 add	 esp, 8
; Line 573
  00c93	68 00 00 00 00	 push	 OFFSET $SG189883
  00c98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
  00c9d	50		 push	 eax
  00c9e	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00ca3	83 c4 08	 add	 esp, 8
; Line 575
  00ca6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?particles@@3PAUParticle@@A ; particles
  00cac	89 8d a0 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], ecx
  00cb2	8b 95 a0 fe ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00cb8	52		 push	 edx
  00cb9	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00cbe	83 c4 04	 add	 esp, 4
; Line 577
  00cc1	c7 85 9c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  00ccb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cd2	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00cd8	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00cdd	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
$LN36@CreateSimu:
; Line 578
  00ce3	52		 push	 edx
  00ce4	8b cd		 mov	 ecx, ebp
  00ce6	50		 push	 eax
  00ce7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN50@CreateSimu
  00ced	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00cf2	58		 pop	 eax
  00cf3	5a		 pop	 edx
  00cf4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00cf7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00cfe	59		 pop	 ecx
  00cff	5f		 pop	 edi
  00d00	5e		 pop	 esi
  00d01	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00d04	33 cd		 xor	 ecx, ebp
  00d06	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00d0b	8b e5		 mov	 esp, ebp
  00d0d	5d		 pop	 ebp
  00d0e	8b e3		 mov	 esp, ebx
  00d10	5b		 pop	 ebx
  00d11	c3		 ret	 0
  00d12	8b ff		 npad	 2
$LN50@CreateSimu:
  00d14	02 00 00 00	 DD	 2
  00d18	00 00 00 00	 DD	 $LN49@CreateSimu
$LN49@CreateSimu:
  00d1c	30 ff ff ff	 DD	 -208			; ffffff30H
  00d20	b0 00 00 00	 DD	 176			; 000000b0H
  00d24	00 00 00 00	 DD	 $LN46@CreateSimu
  00d28	fc fe ff ff	 DD	 -260			; fffffefcH
  00d2c	10 00 00 00	 DD	 16			; 00000010H
  00d30	00 00 00 00	 DD	 $LN47@CreateSimu
$LN47@CreateSimu:
  00d34	70		 DB	 112			; 00000070H
  00d35	6f		 DB	 111			; 0000006fH
  00d36	73		 DB	 115			; 00000073H
  00d37	00		 DB	 0
$LN46@CreateSimu:
  00d38	73		 DB	 115			; 00000073H
  00d39	73		 DB	 115			; 00000073H
  00d3a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z$0:
  00000	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__ehhandler$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 44 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-444]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z ENDP	; CreateSimulationBuffers
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDSV$ = -44						; size = 4
_pRTV$ = -40						; size = 4
_states$ = -32						; size = 12
_deviceContext$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pd3dDevice$ = 8					; size = 4
_pd3dImmediateContext$ = 12				; size = 4
_fTime$ = 16						; size = 8
_fElapsedTime$ = 24					; size = 4
_pUserContext$ = 28					; size = 4
?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z PROC ; OnD3D11FrameRender
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  0001d	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00020	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00023	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00026	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00029	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	33 c5		 xor	 eax, ebp
  00039	50		 push	 eax
  0003a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 1198
  00043	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  00048	89 45 f0	 mov	 DWORD PTR _deviceContext$[ebp], eax
; Line 1199
  0004b	e8 00 00 00 00	 call	 ?DXUTGetD3D11Device@@YGPAUID3D11Device@@XZ ; DXUTGetD3D11Device
  00050	50		 push	 eax
  00051	8d 4d e0	 lea	 ecx, DWORD PTR _states$[ebp]
  00054	e8 00 00 00 00	 call	 ??0CommonStates@DirectX@@QAE@PAUID3D11Device@@@Z ; DirectX::CommonStates::CommonStates
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1200
  00060	8b f4		 mov	 esi, esp
  00062	6a ff		 push	 -1
  00064	6a 00		 push	 0
  00066	8d 45 e0	 lea	 eax, DWORD PTR _states$[ebp]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?NonPremultiplied@CommonStates@DirectX@@QBAPAUID3D11BlendState@@XZ ; DirectX::CommonStates::NonPremultiplied
  0006f	83 c4 04	 add	 esp, 4
  00072	50		 push	 eax
  00073	8b 4d f0	 mov	 ecx, DWORD PTR _deviceContext$[ebp]
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8b 45 f0	 mov	 eax, DWORD PTR _deviceContext$[ebp]
  0007b	50		 push	 eax
  0007c	8b 8a 8c 00 00
	00		 mov	 ecx, DWORD PTR [edx+140]
  00082	ff d1		 call	 ecx
  00084	3b f4		 cmp	 esi, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  0008b	e8 00 00 00 00	 call	 ?DXUTGetD3D11RenderTargetView@@YGPAUID3D11RenderTargetView@@XZ ; DXUTGetD3D11RenderTargetView
  00090	89 45 d8	 mov	 DWORD PTR _pRTV$[ebp], eax
; Line 1203
  00093	b9 00 00 00 00	 mov	 ecx, OFFSET ?Black@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::Black
  00098	e8 00 00 00 00	 call	 ??BXMVECTORF32@DirectX@@QBEPBMXZ ; DirectX::XMVECTORF32::operator float const *
  0009d	8b f4		 mov	 esi, esp
  0009f	50		 push	 eax
  000a0	8b 55 d8	 mov	 edx, DWORD PTR _pRTV$[ebp]
  000a3	52		 push	 edx
  000a4	8b 45 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	8b 55 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000ac	52		 push	 edx
  000ad	8b 81 c8 00 00
	00		 mov	 eax, DWORD PTR [ecx+200]
  000b3	ff d0		 call	 eax
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1204
  000bc	e8 00 00 00 00	 call	 ?DXUTGetD3D11DepthStencilView@@YGPAUID3D11DepthStencilView@@XZ ; DXUTGetD3D11DepthStencilView
  000c1	89 45 d4	 mov	 DWORD PTR _pDSV$[ebp], eax
; Line 1205
  000c4	8b f4		 mov	 esi, esp
  000c6	6a 00		 push	 0
  000c8	51		 push	 ecx
  000c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	6a 01		 push	 1
  000d8	8b 4d d4	 mov	 ecx, DWORD PTR _pDSV$[ebp]
  000db	51		 push	 ecx
  000dc	8b 55 0c	 mov	 edx, DWORD PTR _pd3dImmediateContext$[ebp]
  000df	8b 02		 mov	 eax, DWORD PTR [edx]
  000e1	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  000e4	51		 push	 ecx
  000e5	8b 90 d4 00 00
	00		 mov	 edx, DWORD PTR [eax+212]
  000eb	ff d2		 call	 edx
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1206
  000f4	e8 00 00 00 00	 call	 ?UpdateColor@@YAXXZ	; UpdateColor
; Line 1207
  000f9	51		 push	 ecx
  000fa	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  000ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00104	8b 45 0c	 mov	 eax, DWORD PTR _pd3dImmediateContext$[ebp]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?SimulateFluid@@YAXPAUID3D11DeviceContext@@M@Z ; SimulateFluid
; Line 1209
  0010d	83 c4 04	 add	 esp, 4
  00110	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00115	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011a	8b 4d 0c	 mov	 ecx, DWORD PTR _pd3dImmediateContext$[ebp]
  0011d	51		 push	 ecx
  0011e	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  00121	52		 push	 edx
  00122	e8 00 00 00 00	 call	 ?RenderFluid@@YAXPAUID3D11Device@@PAUID3D11DeviceContext@@M@Z ; RenderFluid
  00127	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1211
  0012a	e8 00 00 00 00	 call	 ?RenderText@@YAXXZ	; RenderText
; Line 1214
  0012f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00136	8d 4d e0	 lea	 ecx, DWORD PTR _states$[ebp]
  00139	e8 00 00 00 00	 call	 ??1CommonStates@DirectX@@UAE@XZ ; DirectX::CommonStates::~CommonStates
  0013e	52		 push	 edx
  0013f	8b cd		 mov	 ecx, ebp
  00141	50		 push	 eax
  00142	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@OnD3D11Fra
  00148	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0014d	58		 pop	 eax
  0014e	5a		 pop	 edx
  0014f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00152	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00159	59		 pop	 ecx
  0015a	5e		 pop	 esi
  0015b	83 c4 2c	 add	 esp, 44			; 0000002cH
  0015e	3b ec		 cmp	 ebp, esp
  00160	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00165	8b e5		 mov	 esp, ebp
  00167	5d		 pop	 ebp
  00168	c2 18 00	 ret	 24			; 00000018H
  0016b	90		 npad	 1
$LN7@OnD3D11Fra:
  0016c	01 00 00 00	 DD	 1
  00170	00 00 00 00	 DD	 $LN6@OnD3D11Fra
$LN6@OnD3D11Fra:
  00174	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00178	0c 00 00 00	 DD	 12			; 0000000cH
  0017c	00 00 00 00	 DD	 $LN4@OnD3D11Fra
$LN4@OnD3D11Fra:
  00180	73		 DB	 115			; 00000073H
  00181	74		 DB	 116			; 00000074H
  00182	61		 DB	 97			; 00000061H
  00183	74		 DB	 116			; 00000074H
  00184	65		 DB	 101			; 00000065H
  00185	73		 DB	 115			; 00000073H
  00186	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR _states$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CommonStates@DirectX@@UAE@XZ ; DirectX::CommonStates::~CommonStates
__ehhandler$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z ENDP ; OnD3D11FrameRender
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pUserContext$ = 8					; size = 4
?OnD3D11DestroyDevice@@YGXPAX@Z PROC			; OnD3D11DestroyDevice
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 1230
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 1231
  00004	e8 00 00 00 00	 call	 ?DXUTGetGlobalResourceCache@@YGAAVCDXUTResourceCache@@XZ ; DXUTGetGlobalResourceCache
  00009	8b c8		 mov	 ecx, eax
  0000b	e8 00 00 00 00	 call	 ?OnDestroyDevice@CDXUTResourceCache@@QAEJXZ ; CDXUTResourceCache::OnDestroyDevice
; Line 1233
  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A, 0 ; g_pcbSimulationConstants
  00017	74 26		 je	 SHORT $LN47@OnD3D11Des
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	8b f4		 mov	 esi, esp
  00022	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  00028	52		 push	 edx
  00029	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0002c	ff d0		 call	 eax
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A, 0 ; g_pcbSimulationConstants
$LN47@OnD3D11Des:
; Line 1234
  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A, 0 ; g_pcbRenderConstants
  00046	74 26		 je	 SHORT $LN46@OnD3D11Des
  00048	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
  0004e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00050	8b f4		 mov	 esi, esp
  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
  00057	50		 push	 eax
  00058	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0005b	ff d1		 call	 ecx
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A, 0 ; g_pcbRenderConstants
$LN46@OnD3D11Des:
; Line 1235
  0006e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A, 0 ; g_pSortCB
  00075	74 27		 je	 SHORT $LN45@OnD3D11Des
  00077	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
  0007d	8b 02		 mov	 eax, DWORD PTR [edx]
  0007f	8b f4		 mov	 esi, esp
  00081	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
  00087	51		 push	 ecx
  00088	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0008b	ff d2		 call	 edx
  0008d	3b f4		 cmp	 esi, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortCB@@3PAUID3D11Buffer@@A, 0 ; g_pSortCB
$LN45@OnD3D11Des:
; Line 1236
  0009e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?samplerState@@3PAUID3D11SamplerState@@A, 0 ; samplerState
  000a5	74 26		 je	 SHORT $LN44@OnD3D11Des
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?samplerState@@3PAUID3D11SamplerState@@A ; samplerState
  000ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ae	8b f4		 mov	 esi, esp
  000b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?samplerState@@3PAUID3D11SamplerState@@A ; samplerState
  000b6	52		 push	 edx
  000b7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ba	ff d0		 call	 eax
  000bc	3b f4		 cmp	 esi, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?samplerState@@3PAUID3D11SamplerState@@A, 0 ; samplerState
$LN44@OnD3D11Des:
; Line 1237
  000cd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?resourceView@@3PAUID3D11ShaderResourceView@@A, 0 ; resourceView
  000d4	74 26		 je	 SHORT $LN43@OnD3D11Des
  000d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?resourceView@@3PAUID3D11ShaderResourceView@@A ; resourceView
  000dc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000de	8b f4		 mov	 esi, esp
  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?resourceView@@3PAUID3D11ShaderResourceView@@A ; resourceView
  000e5	50		 push	 eax
  000e6	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000e9	ff d1		 call	 ecx
  000eb	3b f4		 cmp	 esi, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?resourceView@@3PAUID3D11ShaderResourceView@@A, 0 ; resourceView
$LN43@OnD3D11Des:
; Line 1239
  000fc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A, 0 ; g_pParticleVS
  00103	74 27		 je	 SHORT $LN42@OnD3D11Des
  00105	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
  0010b	8b 02		 mov	 eax, DWORD PTR [edx]
  0010d	8b f4		 mov	 esi, esp
  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
  00115	51		 push	 ecx
  00116	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00119	ff d2		 call	 edx
  0011b	3b f4		 cmp	 esi, esp
  0011d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00122	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A, 0 ; g_pParticleVS
$LN42@OnD3D11Des:
; Line 1240
  0012c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A, 0 ; g_pParticleGS
  00133	74 26		 je	 SHORT $LN41@OnD3D11Des
  00135	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
  0013a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013c	8b f4		 mov	 esi, esp
  0013e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
  00144	52		 push	 edx
  00145	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00148	ff d0		 call	 eax
  0014a	3b f4		 cmp	 esi, esp
  0014c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00151	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A, 0 ; g_pParticleGS
$LN41@OnD3D11Des:
; Line 1241
  0015b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A, 0 ; g_pParticlePS
  00162	74 26		 je	 SHORT $LN40@OnD3D11Des
  00164	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
  0016a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016c	8b f4		 mov	 esi, esp
  0016e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
  00173	50		 push	 eax
  00174	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00177	ff d1		 call	 ecx
  00179	3b f4		 cmp	 esi, esp
  0017b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00180	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A, 0 ; g_pParticlePS
$LN40@OnD3D11Des:
; Line 1243
  0018a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pIntegrateCS
  00191	74 27		 je	 SHORT $LN39@OnD3D11Des
  00193	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
  00199	8b 02		 mov	 eax, DWORD PTR [edx]
  0019b	8b f4		 mov	 esi, esp
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
  001a3	51		 push	 ecx
  001a4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001a7	ff d2		 call	 edx
  001a9	3b f4		 cmp	 esi, esp
  001ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pIntegrateCS
$LN39@OnD3D11Des:
; Line 1244
  001ba	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_SimpleCS
  001c1	74 26		 je	 SHORT $LN38@OnD3D11Des
  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
  001c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ca	8b f4		 mov	 esi, esp
  001cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
  001d2	52		 push	 edx
  001d3	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001d6	ff d0		 call	 eax
  001d8	3b f4		 cmp	 esi, esp
  001da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001df	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_SimpleCS
$LN38@OnD3D11Des:
; Line 1245
  001e9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_SimpleCS
  001f0	74 26		 je	 SHORT $LN37@OnD3D11Des
  001f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
  001f8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fa	8b f4		 mov	 esi, esp
  001fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
  00201	50		 push	 eax
  00202	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00205	ff d1		 call	 ecx
  00207	3b f4		 cmp	 esi, esp
  00209	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_SimpleCS
$LN37@OnD3D11Des:
; Line 1246
  00218	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_SharedCS
  0021f	74 27		 je	 SHORT $LN36@OnD3D11Des
  00221	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
  00227	8b 02		 mov	 eax, DWORD PTR [edx]
  00229	8b f4		 mov	 esi, esp
  0022b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
  00231	51		 push	 ecx
  00232	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00235	ff d2		 call	 edx
  00237	3b f4		 cmp	 esi, esp
  00239	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_SharedCS
$LN36@OnD3D11Des:
; Line 1247
  00248	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_SharedCS
  0024f	74 26		 je	 SHORT $LN35@OnD3D11Des
  00251	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
  00256	8b 08		 mov	 ecx, DWORD PTR [eax]
  00258	8b f4		 mov	 esi, esp
  0025a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
  00260	52		 push	 edx
  00261	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00264	ff d0		 call	 eax
  00266	3b f4		 cmp	 esi, esp
  00268	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0026d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_SharedCS
$LN35@OnD3D11Des:
; Line 1248
  00277	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_GridCS
  0027e	74 26		 je	 SHORT $LN34@OnD3D11Des
  00280	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
  00286	8b 11		 mov	 edx, DWORD PTR [ecx]
  00288	8b f4		 mov	 esi, esp
  0028a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
  0028f	50		 push	 eax
  00290	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00293	ff d1		 call	 ecx
  00295	3b f4		 cmp	 esi, esp
  00297	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0029c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pDensity_GridCS
$LN34@OnD3D11Des:
; Line 1249
  002a6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_GridCS
  002ad	74 27		 je	 SHORT $LN33@OnD3D11Des
  002af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
  002b5	8b 02		 mov	 eax, DWORD PTR [edx]
  002b7	8b f4		 mov	 esi, esp
  002b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
  002bf	51		 push	 ecx
  002c0	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  002c3	ff d2		 call	 edx
  002c5	3b f4		 cmp	 esi, esp
  002c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002cc	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pForce_GridCS
$LN33@OnD3D11Des:
; Line 1250
  002d6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pBuildGridCS
  002dd	74 26		 je	 SHORT $LN32@OnD3D11Des
  002df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
  002e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e6	8b f4		 mov	 esi, esp
  002e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
  002ee	52		 push	 edx
  002ef	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  002f2	ff d0		 call	 eax
  002f4	3b f4		 cmp	 esi, esp
  002f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002fb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pBuildGridCS
$LN32@OnD3D11Des:
; Line 1251
  00305	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pClearGridIndicesCS
  0030c	74 26		 je	 SHORT $LN31@OnD3D11Des
  0030e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
  00314	8b 11		 mov	 edx, DWORD PTR [ecx]
  00316	8b f4		 mov	 esi, esp
  00318	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
  0031d	50		 push	 eax
  0031e	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00321	ff d1		 call	 ecx
  00323	3b f4		 cmp	 esi, esp
  00325	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0032a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pClearGridIndicesCS
$LN31@OnD3D11Des:
; Line 1252
  00334	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pBuildGridIndicesCS
  0033b	74 27		 je	 SHORT $LN30@OnD3D11Des
  0033d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
  00343	8b 02		 mov	 eax, DWORD PTR [edx]
  00345	8b f4		 mov	 esi, esp
  00347	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
  0034d	51		 push	 ecx
  0034e	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00351	ff d2		 call	 edx
  00353	3b f4		 cmp	 esi, esp
  00355	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0035a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pBuildGridIndicesCS
$LN30@OnD3D11Des:
; Line 1253
  00364	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pRearrangeParticlesCS
  0036b	74 26		 je	 SHORT $LN29@OnD3D11Des
  0036d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
  00372	8b 08		 mov	 ecx, DWORD PTR [eax]
  00374	8b f4		 mov	 esi, esp
  00376	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
  0037c	52		 push	 edx
  0037d	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00380	ff d0		 call	 eax
  00382	3b f4		 cmp	 esi, esp
  00384	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00389	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pRearrangeParticlesCS
$LN29@OnD3D11Des:
; Line 1254
  00393	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A, 0 ; g_pSortBitonic
  0039a	74 26		 je	 SHORT $LN28@OnD3D11Des
  0039c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
  003a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  003a4	8b f4		 mov	 esi, esp
  003a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
  003ab	50		 push	 eax
  003ac	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  003af	ff d1		 call	 ecx
  003b1	3b f4		 cmp	 esi, esp
  003b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A, 0 ; g_pSortBitonic
$LN28@OnD3D11Des:
; Line 1255
  003c2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A, 0 ; g_pSortTranspose
  003c9	74 27		 je	 SHORT $LN27@OnD3D11Des
  003cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
  003d1	8b 02		 mov	 eax, DWORD PTR [edx]
  003d3	8b f4		 mov	 esi, esp
  003d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
  003db	51		 push	 ecx
  003dc	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  003df	ff d2		 call	 edx
  003e1	3b f4		 cmp	 esi, esp
  003e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A, 0 ; g_pSortTranspose
$LN27@OnD3D11Des:
; Line 1257
  003f2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A, 0 ; g_pParticles
  003f9	74 26		 je	 SHORT $LN26@OnD3D11Des
  003fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
  00400	8b 08		 mov	 ecx, DWORD PTR [eax]
  00402	8b f4		 mov	 esi, esp
  00404	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A ; g_pParticles
  0040a	52		 push	 edx
  0040b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0040e	ff d0		 call	 eax
  00410	3b f4		 cmp	 esi, esp
  00412	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00417	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticles@@3PAUID3D11Buffer@@A, 0 ; g_pParticles
$LN26@OnD3D11Des:
; Line 1258
  00421	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticlesSRV
  00428	74 26		 je	 SHORT $LN25@OnD3D11Des
  0042a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  00430	8b 11		 mov	 edx, DWORD PTR [ecx]
  00432	8b f4		 mov	 esi, esp
  00434	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticlesSRV
  00439	50		 push	 eax
  0043a	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0043d	ff d1		 call	 ecx
  0043f	3b f4		 cmp	 esi, esp
  00441	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00446	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticlesSRV
$LN25@OnD3D11Des:
; Line 1259
  00450	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticlesUAV
  00457	74 27		 je	 SHORT $LN24@OnD3D11Des
  00459	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  0045f	8b 02		 mov	 eax, DWORD PTR [edx]
  00461	8b f4		 mov	 esi, esp
  00463	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticlesUAV
  00469	51		 push	 ecx
  0046a	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0046d	ff d2		 call	 edx
  0046f	3b f4		 cmp	 esi, esp
  00471	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00476	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticlesUAV
$LN24@OnD3D11Des:
; Line 1261
  00480	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A, 0 ; g_pSortedParticles
  00487	74 26		 je	 SHORT $LN23@OnD3D11Des
  00489	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
  0048e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00490	8b f4		 mov	 esi, esp
  00492	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A ; g_pSortedParticles
  00498	52		 push	 edx
  00499	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0049c	ff d0		 call	 eax
  0049e	3b f4		 cmp	 esi, esp
  004a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004a5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortedParticles@@3PAUID3D11Buffer@@A, 0 ; g_pSortedParticles
$LN23@OnD3D11Des:
; Line 1262
  004af	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pSortedParticlesSRV
  004b6	74 26		 je	 SHORT $LN22@OnD3D11Des
  004b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  004be	8b 11		 mov	 edx, DWORD PTR [ecx]
  004c0	8b f4		 mov	 esi, esp
  004c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pSortedParticlesSRV
  004c7	50		 push	 eax
  004c8	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  004cb	ff d1		 call	 ecx
  004cd	3b f4		 cmp	 esi, esp
  004cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004d4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortedParticlesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pSortedParticlesSRV
$LN22@OnD3D11Des:
; Line 1263
  004de	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pSortedParticlesUAV
  004e5	74 27		 je	 SHORT $LN21@OnD3D11Des
  004e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
  004ed	8b 02		 mov	 eax, DWORD PTR [edx]
  004ef	8b f4		 mov	 esi, esp
  004f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pSortedParticlesUAV
  004f7	51		 push	 ecx
  004f8	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  004fb	ff d2		 call	 edx
  004fd	3b f4		 cmp	 esi, esp
  004ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00504	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pSortedParticlesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pSortedParticlesUAV
$LN21@OnD3D11Des:
; Line 1265
  0050e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A, 0 ; g_pParticleForces
  00515	74 26		 je	 SHORT $LN20@OnD3D11Des
  00517	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
  0051c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0051e	8b f4		 mov	 esi, esp
  00520	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A ; g_pParticleForces
  00526	52		 push	 edx
  00527	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0052a	ff d0		 call	 eax
  0052c	3b f4		 cmp	 esi, esp
  0052e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00533	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleForces@@3PAUID3D11Buffer@@A, 0 ; g_pParticleForces
$LN20@OnD3D11Des:
; Line 1266
  0053d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleForcesSRV
  00544	74 26		 je	 SHORT $LN19@OnD3D11Des
  00546	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  0054c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0054e	8b f4		 mov	 esi, esp
  00550	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleForcesSRV
  00555	50		 push	 eax
  00556	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00559	ff d1		 call	 ecx
  0055b	3b f4		 cmp	 esi, esp
  0055d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00562	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleForcesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleForcesSRV
$LN19@OnD3D11Des:
; Line 1267
  0056c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleForcesUAV
  00573	74 27		 je	 SHORT $LN18@OnD3D11Des
  00575	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  0057b	8b 02		 mov	 eax, DWORD PTR [edx]
  0057d	8b f4		 mov	 esi, esp
  0057f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleForcesUAV
  00585	51		 push	 ecx
  00586	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00589	ff d2		 call	 edx
  0058b	3b f4		 cmp	 esi, esp
  0058d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00592	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleForcesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleForcesUAV
$LN18@OnD3D11Des:
; Line 1269
  0059c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A, 0 ; g_pParticleDensity
  005a3	74 26		 je	 SHORT $LN17@OnD3D11Des
  005a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
  005aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  005ac	8b f4		 mov	 esi, esp
  005ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A ; g_pParticleDensity
  005b4	52		 push	 edx
  005b5	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  005b8	ff d0		 call	 eax
  005ba	3b f4		 cmp	 esi, esp
  005bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005c1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleDensity@@3PAUID3D11Buffer@@A, 0 ; g_pParticleDensity
$LN17@OnD3D11Des:
; Line 1270
  005cb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleDensitySRV
  005d2	74 26		 je	 SHORT $LN16@OnD3D11Des
  005d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  005da	8b 11		 mov	 edx, DWORD PTR [ecx]
  005dc	8b f4		 mov	 esi, esp
  005de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A ; g_pParticleDensitySRV
  005e3	50		 push	 eax
  005e4	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  005e7	ff d1		 call	 ecx
  005e9	3b f4		 cmp	 esi, esp
  005eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005f0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleDensitySRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pParticleDensitySRV
$LN16@OnD3D11Des:
; Line 1271
  005fa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleDensityUAV
  00601	74 27		 je	 SHORT $LN15@OnD3D11Des
  00603	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  00609	8b 02		 mov	 eax, DWORD PTR [edx]
  0060b	8b f4		 mov	 esi, esp
  0060d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pParticleDensityUAV
  00613	51		 push	 ecx
  00614	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00617	ff d2		 call	 edx
  00619	3b f4		 cmp	 esi, esp
  0061b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00620	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pParticleDensityUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pParticleDensityUAV
$LN15@OnD3D11Des:
; Line 1273
  0062a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridSRV
  00631	74 26		 je	 SHORT $LN14@OnD3D11Des
  00633	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  00638	8b 08		 mov	 ecx, DWORD PTR [eax]
  0063a	8b f4		 mov	 esi, esp
  0063c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridSRV
  00642	52		 push	 edx
  00643	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00646	ff d0		 call	 eax
  00648	3b f4		 cmp	 esi, esp
  0064a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0064f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridSRV
$LN14@OnD3D11Des:
; Line 1274
  00659	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridUAV
  00660	74 26		 je	 SHORT $LN13@OnD3D11Des
  00662	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
  00668	8b 11		 mov	 edx, DWORD PTR [ecx]
  0066a	8b f4		 mov	 esi, esp
  0066c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridUAV
  00671	50		 push	 eax
  00672	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00675	ff d1		 call	 ecx
  00677	3b f4		 cmp	 esi, esp
  00679	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0067e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridUAV
$LN13@OnD3D11Des:
; Line 1275
  00688	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A, 0 ; g_pGrid
  0068f	74 27		 je	 SHORT $LN12@OnD3D11Des
  00691	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
  00697	8b 02		 mov	 eax, DWORD PTR [edx]
  00699	8b f4		 mov	 esi, esp
  0069b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A ; g_pGrid
  006a1	51		 push	 ecx
  006a2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  006a5	ff d2		 call	 edx
  006a7	3b f4		 cmp	 esi, esp
  006a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006ae	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGrid@@3PAUID3D11Buffer@@A, 0 ; g_pGrid
$LN12@OnD3D11Des:
; Line 1277
  006b8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridPingPongSRV
  006bf	74 26		 je	 SHORT $LN11@OnD3D11Des
  006c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
  006c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  006c8	8b f4		 mov	 esi, esp
  006ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridPingPongSRV
  006d0	52		 push	 edx
  006d1	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  006d4	ff d0		 call	 eax
  006d6	3b f4		 cmp	 esi, esp
  006d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006dd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridPingPongSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridPingPongSRV
$LN11@OnD3D11Des:
; Line 1278
  006e7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridPingPongUAV
  006ee	74 26		 je	 SHORT $LN10@OnD3D11Des
  006f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
  006f6	8b 11		 mov	 edx, DWORD PTR [ecx]
  006f8	8b f4		 mov	 esi, esp
  006fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridPingPongUAV
  006ff	50		 push	 eax
  00700	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00703	ff d1		 call	 ecx
  00705	3b f4		 cmp	 esi, esp
  00707	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0070c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridPingPongUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridPingPongUAV
$LN10@OnD3D11Des:
; Line 1279
  00716	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A, 0 ; g_pGridPingPong
  0071d	74 27		 je	 SHORT $LN9@OnD3D11Des
  0071f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
  00725	8b 02		 mov	 eax, DWORD PTR [edx]
  00727	8b f4		 mov	 esi, esp
  00729	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A ; g_pGridPingPong
  0072f	51		 push	 ecx
  00730	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00733	ff d2		 call	 edx
  00735	3b f4		 cmp	 esi, esp
  00737	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0073c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridPingPong@@3PAUID3D11Buffer@@A, 0 ; g_pGridPingPong
$LN9@OnD3D11Des:
; Line 1281
  00746	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridIndicesSRV
  0074d	74 26		 je	 SHORT $LN8@OnD3D11Des
  0074f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
  00754	8b 08		 mov	 ecx, DWORD PTR [eax]
  00756	8b f4		 mov	 esi, esp
  00758	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A ; g_pGridIndicesSRV
  0075e	52		 push	 edx
  0075f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00762	ff d0		 call	 eax
  00764	3b f4		 cmp	 esi, esp
  00766	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0076b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridIndicesSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; g_pGridIndicesSRV
$LN8@OnD3D11Des:
; Line 1282
  00775	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridIndicesUAV
  0077c	74 26		 je	 SHORT $LN7@OnD3D11Des
  0077e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
  00784	8b 11		 mov	 edx, DWORD PTR [ecx]
  00786	8b f4		 mov	 esi, esp
  00788	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A ; g_pGridIndicesUAV
  0078d	50		 push	 eax
  0078e	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00791	ff d1		 call	 ecx
  00793	3b f4		 cmp	 esi, esp
  00795	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0079a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridIndicesUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; g_pGridIndicesUAV
$LN7@OnD3D11Des:
; Line 1283
  007a4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A, 0 ; g_pGridIndices
  007ab	74 27		 je	 SHORT $LN6@OnD3D11Des
  007ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
  007b3	8b 02		 mov	 eax, DWORD PTR [edx]
  007b5	8b f4		 mov	 esi, esp
  007b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A ; g_pGridIndices
  007bd	51		 push	 ecx
  007be	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  007c1	ff d2		 call	 edx
  007c3	3b f4		 cmp	 esi, esp
  007c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007ca	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pGridIndices@@3PAUID3D11Buffer@@A, 0 ; g_pGridIndices
$LN6@OnD3D11Des:
; Line 1285
  007d4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pRepositionParticlesCS
  007db	74 26		 je	 SHORT $LN5@OnD3D11Des
  007dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRepositionParticlesCS
  007e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  007e4	8b f4		 mov	 esi, esp
  007e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRepositionParticlesCS
  007ec	52		 push	 edx
  007ed	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  007f0	ff d0		 call	 eax
  007f2	3b f4		 cmp	 esi, esp
  007f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007f9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_pRepositionParticlesCS@@3PAUID3D11ComputeShader@@A, 0 ; g_pRepositionParticlesCS
$LN5@OnD3D11Des:
; Line 1287
  00803	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
  0080a	74 26		 je	 SHORT $LN4@OnD3D11Des
  0080c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  00812	8b 11		 mov	 edx, DWORD PTR [ecx]
  00814	8b f4		 mov	 esi, esp
  00816	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A ; m_pProcessBuffer
  0081b	50		 push	 eax
  0081c	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0081f	ff d1		 call	 ecx
  00821	3b f4		 cmp	 esi, esp
  00823	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00828	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessBuffer@@3PAUID3D11Buffer@@A, 0 ; m_pProcessBuffer
$LN4@OnD3D11Des:
; Line 1288
  00832	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A, 0 ; m_pProcessCS
  00839	74 27		 je	 SHORT $LN3@OnD3D11Des
  0083b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
  00841	8b 02		 mov	 eax, DWORD PTR [edx]
  00843	8b f4		 mov	 esi, esp
  00845	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
  0084b	51		 push	 ecx
  0084c	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0084f	ff d2		 call	 edx
  00851	3b f4		 cmp	 esi, esp
  00853	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00858	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A, 0 ; m_pProcessCS
$LN3@OnD3D11Des:
; Line 1289
  00862	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
  00869	74 26		 je	 SHORT $LN2@OnD3D11Des
  0086b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  00870	8b 08		 mov	 ecx, DWORD PTR [eax]
  00872	8b f4		 mov	 esi, esp
  00874	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A ; m_pProcessSRV
  0087a	52		 push	 edx
  0087b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0087e	ff d0		 call	 eax
  00880	3b f4		 cmp	 esi, esp
  00882	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00887	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessSRV@@3PAUID3D11ShaderResourceView@@A, 0 ; m_pProcessSRV
$LN2@OnD3D11Des:
; Line 1290
  00891	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
  00898	74 26		 je	 SHORT $LN48@OnD3D11Des
  0089a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  008a0	8b 11		 mov	 edx, DWORD PTR [ecx]
  008a2	8b f4		 mov	 esi, esp
  008a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A ; m_pProcessUAV
  008a9	50		 push	 eax
  008aa	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  008ad	ff d1		 call	 ecx
  008af	3b f4		 cmp	 esi, esp
  008b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008b6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?m_pProcessUAV@@3PAUID3D11UnorderedAccessView@@A, 0 ; m_pProcessUAV
$LN48@OnD3D11Des:
; Line 1291
  008c0	5e		 pop	 esi
  008c1	3b ec		 cmp	 ebp, esp
  008c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008c8	5d		 pop	 ebp
  008c9	c2 04 00	 ret	 4
?OnD3D11DestroyDevice@@YGXPAX@Z ENDP			; OnD3D11DestroyDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pUserContext$ = 8					; size = 4
?OnD3D11ReleasingSwapChain@@YGXPAX@Z PROC		; OnD3D11ReleasingSwapChain
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 1221
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1223
  00003	5d		 pop	 ebp
  00004	c2 04 00	 ret	 4
?OnD3D11ReleasingSwapChain@@YGXPAX@Z ENDP		; OnD3D11ReleasingSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pd3dDevice$ = 8					; size = 4
_pSwapChain$ = 12					; size = 4
_pBackBufferSurfaceDesc$ = 16				; size = 4
_pUserContext$ = 20					; size = 4
?OnD3D11ResizedSwapChain@@YGJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z PROC ; OnD3D11ResizedSwapChain
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 794
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 796
  0000b	33 c0		 xor	 eax, eax
; Line 797
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c2 10 00	 ret	 16			; 00000010H
?OnD3D11ResizedSwapChain@@YGJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z ENDP ; OnD3D11ResizedSwapChain
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv258 = -740						; size = 4
$T2 = -736						; size = 4
$T3 = -732						; size = 4
$T4 = -728						; size = 4
$T5 = -724						; size = 4
$T6 = -720						; size = 4
$T7 = -716						; size = 4
$T8 = -712						; size = 4
$T9 = -708						; size = 4
$T10 = -704						; size = 4
$T11 = -700						; size = 4
$T12 = -696						; size = 4
$T13 = -692						; size = 4
$T14 = -688						; size = 4
$T15 = -684						; size = 4
$T16 = -680						; size = 4
$T17 = -676						; size = 4
$T18 = -672						; size = 4
$T19 = -668						; size = 4
$T20 = -664						; size = 4
$T21 = -660						; size = 4
$T22 = -656						; size = 4
$T23 = -652						; size = 4
$T24 = -648						; size = 4
$T25 = -644						; size = 4
$T26 = -640						; size = 4
$T27 = -636						; size = 4
$T28 = -632						; size = 4
$T29 = -628						; size = 4
$T30 = -624						; size = 4
$T31 = -620						; size = 4
$T32 = -616						; size = 4
$T33 = -612						; size = 4
$T34 = -608						; size = 4
_CompilingShadersDlg$ = -600				; size = 556
_CSTarget$ = -40					; size = 4
_pBlob$ = -32						; size = 4
_pd3dImmediateContext$ = -24				; size = 4
_hr$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pd3dDevice$ = 8					; size = 4
_pBackBufferSurfaceDesc$ = 12				; size = 4
_pUserContext$ = 16					; size = 4
?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z PROC ; OnD3D11CreateDevice
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 674
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 02 00
	00		 sub	 esp, 728		; 000002d8H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd 1c fd ff
	ff		 lea	 edi, DWORD PTR [ebp-740]
  0001f	b9 b6 00 00 00	 mov	 ecx, 182		; 000000b6H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 677
  0003f	e8 00 00 00 00	 call	 ?DXUTGetD3D11DeviceContext@@YGPAUID3D11DeviceContext@@XZ ; DXUTGetD3D11DeviceContext
  00044	89 45 e8	 mov	 DWORD PTR _pd3dImmediateContext$[ebp], eax
; Line 680
  00047	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
; Line 684
  0004e	8d 45 e0	 lea	 eax, DWORD PTR _pBlob$[ebp]
  00051	50		 push	 eax
  00052	6a 00		 push	 0
  00054	68 00 08 00 00	 push	 2048			; 00000800H
  00059	68 00 00 00 00	 push	 OFFSET $SG189967
  0005e	68 00 00 00 00	 push	 OFFSET $SG189968
  00063	6a 00		 push	 0
  00065	68 00 00 00 00	 push	 OFFSET $SG189969
  0006a	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  0006f	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00072	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00076	7d 1f		 jge	 SHORT $LN55@OnD3D11Cre
  00078	6a 01		 push	 1
  0007a	68 00 00 00 00	 push	 OFFSET $SG189973
  0007f	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  00082	51		 push	 ecx
  00083	68 ac 02 00 00	 push	 684			; 000002acH
  00088	68 00 00 00 00	 push	 OFFSET $SG189974
  0008d	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00092	e9 37 15 00 00	 jmp	 $LN56@OnD3D11Cre
$LN55@OnD3D11Cre:
; Line 685
  00097	8b f4		 mov	 esi, esp
  00099	68 00 00 00 00	 push	 OFFSET ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
  0009e	6a 00		 push	 0
  000a0	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  000a3	8b 02		 mov	 eax, DWORD PTR [edx]
  000a5	8b fc		 mov	 edi, esp
  000a7	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  000aa	51		 push	 ecx
  000ab	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  000ae	ff d2		 call	 edx
  000b0	3b fc		 cmp	 edi, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	50		 push	 eax
  000b8	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	8b fc		 mov	 edi, esp
  000bf	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  000c2	52		 push	 edx
  000c3	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000c6	ff d0		 call	 eax
  000c8	3b fc		 cmp	 edi, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	50		 push	 eax
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  000d3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d5	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  000d8	50		 push	 eax
  000d9	8b 4a 30	 mov	 ecx, DWORD PTR [edx+48]
  000dc	ff d1		 call	 ecx
  000de	3b f4		 cmp	 esi, esp
  000e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e5	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  000e8	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  000ec	7d 1f		 jge	 SHORT $LN54@OnD3D11Cre
  000ee	6a 01		 push	 1
  000f0	68 00 00 00 00	 push	 OFFSET $SG189978
  000f5	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  000f8	52		 push	 edx
  000f9	68 ad 02 00 00	 push	 685			; 000002adH
  000fe	68 00 00 00 00	 push	 OFFSET $SG189979
  00103	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00108	e9 c1 14 00 00	 jmp	 $LN56@OnD3D11Cre
$LN54@OnD3D11Cre:
; Line 686
  0010d	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00111	74 1e		 je	 SHORT $LN53@OnD3D11Cre
  00113	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00116	8b 08		 mov	 ecx, DWORD PTR [eax]
  00118	8b f4		 mov	 esi, esp
  0011a	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0011d	52		 push	 edx
  0011e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00121	ff d0		 call	 eax
  00123	3b f4		 cmp	 esi, esp
  00125	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012a	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN53@OnD3D11Cre:
; Line 687
  00131	68 00 00 00 00	 push	 OFFSET $SG189981
  00136	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pParticleVS@@3PAUID3D11VertexShader@@A ; g_pParticleVS
  0013c	51		 push	 ecx
  0013d	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00142	83 c4 08	 add	 esp, 8
; Line 689
  00145	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  00148	52		 push	 edx
  00149	6a 00		 push	 0
  0014b	68 00 08 00 00	 push	 2048			; 00000800H
  00150	68 00 00 00 00	 push	 OFFSET $SG189982
  00155	68 00 00 00 00	 push	 OFFSET $SG189983
  0015a	6a 00		 push	 0
  0015c	68 00 00 00 00	 push	 OFFSET $SG189984
  00161	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  00166	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00169	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0016d	7d 1f		 jge	 SHORT $LN52@OnD3D11Cre
  0016f	6a 01		 push	 1
  00171	68 00 00 00 00	 push	 OFFSET $SG189988
  00176	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  00179	50		 push	 eax
  0017a	68 b1 02 00 00	 push	 689			; 000002b1H
  0017f	68 00 00 00 00	 push	 OFFSET $SG189989
  00184	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00189	e9 40 14 00 00	 jmp	 $LN56@OnD3D11Cre
$LN52@OnD3D11Cre:
; Line 690
  0018e	8b f4		 mov	 esi, esp
  00190	68 00 00 00 00	 push	 OFFSET ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
  00195	6a 00		 push	 0
  00197	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  0019a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0019c	8b fc		 mov	 edi, esp
  0019e	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  001a1	50		 push	 eax
  001a2	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  001a5	ff d1		 call	 ecx
  001a7	3b fc		 cmp	 edi, esp
  001a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ae	50		 push	 eax
  001af	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  001b2	8b 02		 mov	 eax, DWORD PTR [edx]
  001b4	8b fc		 mov	 edi, esp
  001b6	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  001b9	51		 push	 ecx
  001ba	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001bd	ff d2		 call	 edx
  001bf	3b fc		 cmp	 edi, esp
  001c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c6	50		 push	 eax
  001c7	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  001ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cc	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  001cf	52		 push	 edx
  001d0	8b 41 34	 mov	 eax, DWORD PTR [ecx+52]
  001d3	ff d0		 call	 eax
  001d5	3b f4		 cmp	 esi, esp
  001d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001dc	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  001df	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  001e3	7d 1f		 jge	 SHORT $LN51@OnD3D11Cre
  001e5	6a 01		 push	 1
  001e7	68 00 00 00 00	 push	 OFFSET $SG189993
  001ec	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  001ef	51		 push	 ecx
  001f0	68 b2 02 00 00	 push	 690			; 000002b2H
  001f5	68 00 00 00 00	 push	 OFFSET $SG189994
  001fa	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  001ff	e9 ca 13 00 00	 jmp	 $LN56@OnD3D11Cre
$LN51@OnD3D11Cre:
; Line 691
  00204	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00208	74 1e		 je	 SHORT $LN50@OnD3D11Cre
  0020a	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0020d	8b 02		 mov	 eax, DWORD PTR [edx]
  0020f	8b f4		 mov	 esi, esp
  00211	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  00214	51		 push	 ecx
  00215	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00218	ff d2		 call	 edx
  0021a	3b f4		 cmp	 esi, esp
  0021c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00221	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN50@OnD3D11Cre:
; Line 692
  00228	68 00 00 00 00	 push	 OFFSET $SG189996
  0022d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pParticleGS@@3PAUID3D11GeometryShader@@A ; g_pParticleGS
  00232	50		 push	 eax
  00233	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00238	83 c4 08	 add	 esp, 8
; Line 694
  0023b	8d 4d e0	 lea	 ecx, DWORD PTR _pBlob$[ebp]
  0023e	51		 push	 ecx
  0023f	6a 00		 push	 0
  00241	68 00 08 00 00	 push	 2048			; 00000800H
  00246	68 00 00 00 00	 push	 OFFSET $SG189997
  0024b	68 00 00 00 00	 push	 OFFSET $SG189998
  00250	6a 00		 push	 0
  00252	68 00 00 00 00	 push	 OFFSET $SG189999
  00257	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  0025c	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0025f	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00263	7d 1f		 jge	 SHORT $LN49@OnD3D11Cre
  00265	6a 01		 push	 1
  00267	68 00 00 00 00	 push	 OFFSET $SG190003
  0026c	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  0026f	52		 push	 edx
  00270	68 b6 02 00 00	 push	 694			; 000002b6H
  00275	68 00 00 00 00	 push	 OFFSET $SG190004
  0027a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0027f	e9 4a 13 00 00	 jmp	 $LN56@OnD3D11Cre
$LN49@OnD3D11Cre:
; Line 695
  00284	8b f4		 mov	 esi, esp
  00286	68 00 00 00 00	 push	 OFFSET ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
  0028b	6a 00		 push	 0
  0028d	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00290	8b 08		 mov	 ecx, DWORD PTR [eax]
  00292	8b fc		 mov	 edi, esp
  00294	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00297	52		 push	 edx
  00298	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0029b	ff d0		 call	 eax
  0029d	3b fc		 cmp	 edi, esp
  0029f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a4	50		 push	 eax
  002a5	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  002a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  002aa	8b fc		 mov	 edi, esp
  002ac	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  002af	50		 push	 eax
  002b0	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  002b3	ff d1		 call	 ecx
  002b5	3b fc		 cmp	 edi, esp
  002b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bc	50		 push	 eax
  002bd	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  002c0	8b 02		 mov	 eax, DWORD PTR [edx]
  002c2	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  002c5	51		 push	 ecx
  002c6	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  002c9	ff d2		 call	 edx
  002cb	3b f4		 cmp	 esi, esp
  002cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d2	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  002d5	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  002d9	7d 1f		 jge	 SHORT $LN48@OnD3D11Cre
  002db	6a 01		 push	 1
  002dd	68 00 00 00 00	 push	 OFFSET $SG190008
  002e2	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  002e5	50		 push	 eax
  002e6	68 b7 02 00 00	 push	 695			; 000002b7H
  002eb	68 00 00 00 00	 push	 OFFSET $SG190009
  002f0	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  002f5	e9 d4 12 00 00	 jmp	 $LN56@OnD3D11Cre
$LN48@OnD3D11Cre:
; Line 696
  002fa	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  002fe	74 1e		 je	 SHORT $LN47@OnD3D11Cre
  00300	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  00303	8b 11		 mov	 edx, DWORD PTR [ecx]
  00305	8b f4		 mov	 esi, esp
  00307	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  0030a	50		 push	 eax
  0030b	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0030e	ff d1		 call	 ecx
  00310	3b f4		 cmp	 esi, esp
  00312	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00317	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN47@OnD3D11Cre:
; Line 697
  0031e	68 00 00 00 00	 push	 OFFSET $SG190011
  00323	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_pParticlePS@@3PAUID3D11PixelShader@@A ; g_pParticlePS
  00329	52		 push	 edx
  0032a	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0032f	83 c4 08	 add	 esp, 8
; Line 700
  00332	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00335	8b 08		 mov	 ecx, DWORD PTR [eax]
  00337	8b f4		 mov	 esi, esp
  00339	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  0033c	52		 push	 edx
  0033d	8b 81 94 00 00
	00		 mov	 eax, DWORD PTR [ecx+148]
  00343	ff d0		 call	 eax
  00345	3b f4		 cmp	 esi, esp
  00347	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034c	3d 00 b0 00 00	 cmp	 eax, 45056		; 0000b000H
  00351	7c 0c		 jl	 SHORT $LN58@OnD3D11Cre
  00353	c7 85 1c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv258[ebp], OFFSET $SG190013
  0035d	eb 0a		 jmp	 SHORT $LN59@OnD3D11Cre
$LN58@OnD3D11Cre:
  0035f	c7 85 1c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR tv258[ebp], OFFSET $SG190014
$LN59@OnD3D11Cre:
  00369	8b 8d 1c fd ff
	ff		 mov	 ecx, DWORD PTR tv258[ebp]
  0036f	89 4d d8	 mov	 DWORD PTR _CSTarget$[ebp], ecx
; Line 702
  00372	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00378	e8 00 00 00 00	 call	 ??0CWaitDlg@@QAE@XZ	; CWaitDlg::CWaitDlg
  0037d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 703
  00384	68 00 00 00 00	 push	 OFFSET $SG190016
  00389	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  0038f	e8 00 00 00 00	 call	 ?ShowDialog@CWaitDlg@@QAE_NPA_W@Z ; CWaitDlg::ShowDialog
; Line 705
  00394	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  00397	52		 push	 edx
  00398	6a 00		 push	 0
  0039a	68 00 08 00 00	 push	 2048			; 00000800H
  0039f	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  003a2	50		 push	 eax
  003a3	68 00 00 00 00	 push	 OFFSET $SG190017
  003a8	6a 00		 push	 0
  003aa	68 00 00 00 00	 push	 OFFSET $SG190018
  003af	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  003b4	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  003b7	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  003bb	7d 3d		 jge	 SHORT $LN46@OnD3D11Cre
  003bd	6a 01		 push	 1
  003bf	68 00 00 00 00	 push	 OFFSET $SG190023
  003c4	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  003c7	51		 push	 ecx
  003c8	68 c1 02 00 00	 push	 705			; 000002c1H
  003cd	68 00 00 00 00	 push	 OFFSET $SG190024
  003d2	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  003d7	89 85 a0 fd ff
	ff		 mov	 DWORD PTR $T34[ebp], eax
  003dd	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003e4	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  003ea	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  003ef	8b 85 a0 fd ff
	ff		 mov	 eax, DWORD PTR $T34[ebp]
  003f5	e9 d4 11 00 00	 jmp	 $LN56@OnD3D11Cre
$LN46@OnD3D11Cre:
; Line 706
  003fa	8b f4		 mov	 esi, esp
  003fc	68 00 00 00 00	 push	 OFFSET ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
  00401	6a 00		 push	 0
  00403	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00406	8b 02		 mov	 eax, DWORD PTR [edx]
  00408	8b fc		 mov	 edi, esp
  0040a	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  0040d	51		 push	 ecx
  0040e	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00411	ff d2		 call	 edx
  00413	3b fc		 cmp	 edi, esp
  00415	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0041a	50		 push	 eax
  0041b	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  0041e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00420	8b fc		 mov	 edi, esp
  00422	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00425	52		 push	 edx
  00426	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00429	ff d0		 call	 eax
  0042b	3b fc		 cmp	 edi, esp
  0042d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00432	50		 push	 eax
  00433	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00436	8b 11		 mov	 edx, DWORD PTR [ecx]
  00438	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  0043b	50		 push	 eax
  0043c	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  0043f	ff d1		 call	 ecx
  00441	3b f4		 cmp	 esi, esp
  00443	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00448	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0044b	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0044f	7d 3d		 jge	 SHORT $LN45@OnD3D11Cre
  00451	6a 01		 push	 1
  00453	68 00 00 00 00	 push	 OFFSET $SG190029
  00458	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  0045b	52		 push	 edx
  0045c	68 c2 02 00 00	 push	 706			; 000002c2H
  00461	68 00 00 00 00	 push	 OFFSET $SG190030
  00466	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0046b	89 85 9c fd ff
	ff		 mov	 DWORD PTR $T33[ebp], eax
  00471	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00478	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  0047e	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00483	8b 85 9c fd ff
	ff		 mov	 eax, DWORD PTR $T33[ebp]
  00489	e9 40 11 00 00	 jmp	 $LN56@OnD3D11Cre
$LN45@OnD3D11Cre:
; Line 707
  0048e	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00492	74 1e		 je	 SHORT $LN44@OnD3D11Cre
  00494	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00497	8b 08		 mov	 ecx, DWORD PTR [eax]
  00499	8b f4		 mov	 esi, esp
  0049b	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0049e	52		 push	 edx
  0049f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  004a2	ff d0		 call	 eax
  004a4	3b f4		 cmp	 esi, esp
  004a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004ab	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN44@OnD3D11Cre:
; Line 708
  004b2	68 00 00 00 00	 push	 OFFSET $SG190032
  004b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pIntegrateCS@@3PAUID3D11ComputeShader@@A ; g_pIntegrateCS
  004bd	51		 push	 ecx
  004be	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  004c3	83 c4 08	 add	 esp, 8
; Line 710
  004c6	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  004c9	52		 push	 edx
  004ca	6a 00		 push	 0
  004cc	68 00 08 00 00	 push	 2048			; 00000800H
  004d1	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  004d4	50		 push	 eax
  004d5	68 00 00 00 00	 push	 OFFSET $SG190033
  004da	6a 00		 push	 0
  004dc	68 00 00 00 00	 push	 OFFSET $SG190034
  004e1	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  004e6	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  004e9	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  004ed	7d 3d		 jge	 SHORT $LN43@OnD3D11Cre
  004ef	6a 01		 push	 1
  004f1	68 00 00 00 00	 push	 OFFSET $SG190039
  004f6	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  004f9	51		 push	 ecx
  004fa	68 c6 02 00 00	 push	 710			; 000002c6H
  004ff	68 00 00 00 00	 push	 OFFSET $SG190040
  00504	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00509	89 85 98 fd ff
	ff		 mov	 DWORD PTR $T32[ebp], eax
  0050f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00516	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  0051c	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00521	8b 85 98 fd ff
	ff		 mov	 eax, DWORD PTR $T32[ebp]
  00527	e9 a2 10 00 00	 jmp	 $LN56@OnD3D11Cre
$LN43@OnD3D11Cre:
; Line 711
  0052c	8b f4		 mov	 esi, esp
  0052e	68 00 00 00 00	 push	 OFFSET ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
  00533	6a 00		 push	 0
  00535	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00538	8b 02		 mov	 eax, DWORD PTR [edx]
  0053a	8b fc		 mov	 edi, esp
  0053c	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  0053f	51		 push	 ecx
  00540	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00543	ff d2		 call	 edx
  00545	3b fc		 cmp	 edi, esp
  00547	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0054c	50		 push	 eax
  0054d	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00550	8b 08		 mov	 ecx, DWORD PTR [eax]
  00552	8b fc		 mov	 edi, esp
  00554	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00557	52		 push	 edx
  00558	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0055b	ff d0		 call	 eax
  0055d	3b fc		 cmp	 edi, esp
  0055f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00564	50		 push	 eax
  00565	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00568	8b 11		 mov	 edx, DWORD PTR [ecx]
  0056a	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  0056d	50		 push	 eax
  0056e	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00571	ff d1		 call	 ecx
  00573	3b f4		 cmp	 esi, esp
  00575	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0057a	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0057d	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00581	7d 3d		 jge	 SHORT $LN42@OnD3D11Cre
  00583	6a 01		 push	 1
  00585	68 00 00 00 00	 push	 OFFSET $SG190045
  0058a	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  0058d	52		 push	 edx
  0058e	68 c7 02 00 00	 push	 711			; 000002c7H
  00593	68 00 00 00 00	 push	 OFFSET $SG190046
  00598	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0059d	89 85 94 fd ff
	ff		 mov	 DWORD PTR $T31[ebp], eax
  005a3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005aa	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  005b0	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  005b5	8b 85 94 fd ff
	ff		 mov	 eax, DWORD PTR $T31[ebp]
  005bb	e9 0e 10 00 00	 jmp	 $LN56@OnD3D11Cre
$LN42@OnD3D11Cre:
; Line 712
  005c0	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  005c4	74 1e		 je	 SHORT $LN41@OnD3D11Cre
  005c6	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  005c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  005cb	8b f4		 mov	 esi, esp
  005cd	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  005d0	52		 push	 edx
  005d1	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  005d4	ff d0		 call	 eax
  005d6	3b f4		 cmp	 esi, esp
  005d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005dd	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN41@OnD3D11Cre:
; Line 713
  005e4	68 00 00 00 00	 push	 OFFSET $SG190048
  005e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDensity_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SimpleCS
  005ef	51		 push	 ecx
  005f0	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  005f5	83 c4 08	 add	 esp, 8
; Line 715
  005f8	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  005fb	52		 push	 edx
  005fc	6a 00		 push	 0
  005fe	68 00 08 00 00	 push	 2048			; 00000800H
  00603	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  00606	50		 push	 eax
  00607	68 00 00 00 00	 push	 OFFSET $SG190049
  0060c	6a 00		 push	 0
  0060e	68 00 00 00 00	 push	 OFFSET $SG190050
  00613	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  00618	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0061b	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0061f	7d 3d		 jge	 SHORT $LN40@OnD3D11Cre
  00621	6a 01		 push	 1
  00623	68 00 00 00 00	 push	 OFFSET $SG190055
  00628	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  0062b	51		 push	 ecx
  0062c	68 cb 02 00 00	 push	 715			; 000002cbH
  00631	68 00 00 00 00	 push	 OFFSET $SG190056
  00636	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0063b	89 85 90 fd ff
	ff		 mov	 DWORD PTR $T30[ebp], eax
  00641	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00648	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  0064e	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00653	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR $T30[ebp]
  00659	e9 70 0f 00 00	 jmp	 $LN56@OnD3D11Cre
$LN40@OnD3D11Cre:
; Line 716
  0065e	8b f4		 mov	 esi, esp
  00660	68 00 00 00 00	 push	 OFFSET ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
  00665	6a 00		 push	 0
  00667	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0066a	8b 02		 mov	 eax, DWORD PTR [edx]
  0066c	8b fc		 mov	 edi, esp
  0066e	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  00671	51		 push	 ecx
  00672	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00675	ff d2		 call	 edx
  00677	3b fc		 cmp	 edi, esp
  00679	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0067e	50		 push	 eax
  0067f	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00682	8b 08		 mov	 ecx, DWORD PTR [eax]
  00684	8b fc		 mov	 edi, esp
  00686	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00689	52		 push	 edx
  0068a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0068d	ff d0		 call	 eax
  0068f	3b fc		 cmp	 edi, esp
  00691	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00696	50		 push	 eax
  00697	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0069a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0069c	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  0069f	50		 push	 eax
  006a0	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  006a3	ff d1		 call	 ecx
  006a5	3b f4		 cmp	 esi, esp
  006a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006ac	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  006af	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  006b3	7d 3d		 jge	 SHORT $LN39@OnD3D11Cre
  006b5	6a 01		 push	 1
  006b7	68 00 00 00 00	 push	 OFFSET $SG190061
  006bc	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  006bf	52		 push	 edx
  006c0	68 cc 02 00 00	 push	 716			; 000002ccH
  006c5	68 00 00 00 00	 push	 OFFSET $SG190062
  006ca	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  006cf	89 85 8c fd ff
	ff		 mov	 DWORD PTR $T29[ebp], eax
  006d5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  006dc	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  006e2	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  006e7	8b 85 8c fd ff
	ff		 mov	 eax, DWORD PTR $T29[ebp]
  006ed	e9 dc 0e 00 00	 jmp	 $LN56@OnD3D11Cre
$LN39@OnD3D11Cre:
; Line 717
  006f2	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  006f6	74 1e		 je	 SHORT $LN38@OnD3D11Cre
  006f8	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  006fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  006fd	8b f4		 mov	 esi, esp
  006ff	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00702	52		 push	 edx
  00703	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00706	ff d0		 call	 eax
  00708	3b f4		 cmp	 esi, esp
  0070a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0070f	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN38@OnD3D11Cre:
; Line 718
  00716	68 00 00 00 00	 push	 OFFSET $SG190064
  0071b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pForce_SimpleCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SimpleCS
  00721	51		 push	 ecx
  00722	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00727	83 c4 08	 add	 esp, 8
; Line 720
  0072a	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  0072d	52		 push	 edx
  0072e	6a 00		 push	 0
  00730	68 00 08 00 00	 push	 2048			; 00000800H
  00735	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  00738	50		 push	 eax
  00739	68 00 00 00 00	 push	 OFFSET $SG190065
  0073e	6a 00		 push	 0
  00740	68 00 00 00 00	 push	 OFFSET $SG190066
  00745	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  0074a	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0074d	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00751	7d 3d		 jge	 SHORT $LN37@OnD3D11Cre
  00753	6a 01		 push	 1
  00755	68 00 00 00 00	 push	 OFFSET $SG190071
  0075a	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  0075d	51		 push	 ecx
  0075e	68 d0 02 00 00	 push	 720			; 000002d0H
  00763	68 00 00 00 00	 push	 OFFSET $SG190072
  00768	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0076d	89 85 88 fd ff
	ff		 mov	 DWORD PTR $T28[ebp], eax
  00773	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0077a	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00780	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00785	8b 85 88 fd ff
	ff		 mov	 eax, DWORD PTR $T28[ebp]
  0078b	e9 3e 0e 00 00	 jmp	 $LN56@OnD3D11Cre
$LN37@OnD3D11Cre:
; Line 721
  00790	8b f4		 mov	 esi, esp
  00792	68 00 00 00 00	 push	 OFFSET ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
  00797	6a 00		 push	 0
  00799	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0079c	8b 02		 mov	 eax, DWORD PTR [edx]
  0079e	8b fc		 mov	 edi, esp
  007a0	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  007a3	51		 push	 ecx
  007a4	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  007a7	ff d2		 call	 edx
  007a9	3b fc		 cmp	 edi, esp
  007ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007b0	50		 push	 eax
  007b1	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  007b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  007b6	8b fc		 mov	 edi, esp
  007b8	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  007bb	52		 push	 edx
  007bc	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  007bf	ff d0		 call	 eax
  007c1	3b fc		 cmp	 edi, esp
  007c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007c8	50		 push	 eax
  007c9	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  007cc	8b 11		 mov	 edx, DWORD PTR [ecx]
  007ce	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  007d1	50		 push	 eax
  007d2	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  007d5	ff d1		 call	 ecx
  007d7	3b f4		 cmp	 esi, esp
  007d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007de	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  007e1	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  007e5	7d 3d		 jge	 SHORT $LN36@OnD3D11Cre
  007e7	6a 01		 push	 1
  007e9	68 00 00 00 00	 push	 OFFSET $SG190077
  007ee	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  007f1	52		 push	 edx
  007f2	68 d1 02 00 00	 push	 721			; 000002d1H
  007f7	68 00 00 00 00	 push	 OFFSET $SG190078
  007fc	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00801	89 85 84 fd ff
	ff		 mov	 DWORD PTR $T27[ebp], eax
  00807	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0080e	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00814	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00819	8b 85 84 fd ff
	ff		 mov	 eax, DWORD PTR $T27[ebp]
  0081f	e9 aa 0d 00 00	 jmp	 $LN56@OnD3D11Cre
$LN36@OnD3D11Cre:
; Line 722
  00824	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00828	74 1e		 je	 SHORT $LN35@OnD3D11Cre
  0082a	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  0082d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0082f	8b f4		 mov	 esi, esp
  00831	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00834	52		 push	 edx
  00835	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00838	ff d0		 call	 eax
  0083a	3b f4		 cmp	 esi, esp
  0083c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00841	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN35@OnD3D11Cre:
; Line 723
  00848	68 00 00 00 00	 push	 OFFSET $SG190080
  0084d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDensity_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_SharedCS
  00853	51		 push	 ecx
  00854	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00859	83 c4 08	 add	 esp, 8
; Line 725
  0085c	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  0085f	52		 push	 edx
  00860	6a 00		 push	 0
  00862	68 00 08 00 00	 push	 2048			; 00000800H
  00867	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  0086a	50		 push	 eax
  0086b	68 00 00 00 00	 push	 OFFSET $SG190081
  00870	6a 00		 push	 0
  00872	68 00 00 00 00	 push	 OFFSET $SG190082
  00877	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  0087c	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0087f	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00883	7d 3d		 jge	 SHORT $LN34@OnD3D11Cre
  00885	6a 01		 push	 1
  00887	68 00 00 00 00	 push	 OFFSET $SG190087
  0088c	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  0088f	51		 push	 ecx
  00890	68 d5 02 00 00	 push	 725			; 000002d5H
  00895	68 00 00 00 00	 push	 OFFSET $SG190088
  0089a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0089f	89 85 80 fd ff
	ff		 mov	 DWORD PTR $T26[ebp], eax
  008a5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008ac	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  008b2	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  008b7	8b 85 80 fd ff
	ff		 mov	 eax, DWORD PTR $T26[ebp]
  008bd	e9 0c 0d 00 00	 jmp	 $LN56@OnD3D11Cre
$LN34@OnD3D11Cre:
; Line 726
  008c2	8b f4		 mov	 esi, esp
  008c4	68 00 00 00 00	 push	 OFFSET ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
  008c9	6a 00		 push	 0
  008cb	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  008ce	8b 02		 mov	 eax, DWORD PTR [edx]
  008d0	8b fc		 mov	 edi, esp
  008d2	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  008d5	51		 push	 ecx
  008d6	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  008d9	ff d2		 call	 edx
  008db	3b fc		 cmp	 edi, esp
  008dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008e2	50		 push	 eax
  008e3	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  008e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  008e8	8b fc		 mov	 edi, esp
  008ea	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  008ed	52		 push	 edx
  008ee	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  008f1	ff d0		 call	 eax
  008f3	3b fc		 cmp	 edi, esp
  008f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008fa	50		 push	 eax
  008fb	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  008fe	8b 11		 mov	 edx, DWORD PTR [ecx]
  00900	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00903	50		 push	 eax
  00904	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00907	ff d1		 call	 ecx
  00909	3b f4		 cmp	 esi, esp
  0090b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00910	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00913	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00917	7d 3d		 jge	 SHORT $LN33@OnD3D11Cre
  00919	6a 01		 push	 1
  0091b	68 00 00 00 00	 push	 OFFSET $SG190093
  00920	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  00923	52		 push	 edx
  00924	68 d6 02 00 00	 push	 726			; 000002d6H
  00929	68 00 00 00 00	 push	 OFFSET $SG190094
  0092e	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00933	89 85 7c fd ff
	ff		 mov	 DWORD PTR $T25[ebp], eax
  00939	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00940	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00946	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  0094b	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR $T25[ebp]
  00951	e9 78 0c 00 00	 jmp	 $LN56@OnD3D11Cre
$LN33@OnD3D11Cre:
; Line 727
  00956	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  0095a	74 1e		 je	 SHORT $LN32@OnD3D11Cre
  0095c	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  0095f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00961	8b f4		 mov	 esi, esp
  00963	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00966	52		 push	 edx
  00967	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0096a	ff d0		 call	 eax
  0096c	3b f4		 cmp	 esi, esp
  0096e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00973	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN32@OnD3D11Cre:
; Line 728
  0097a	68 00 00 00 00	 push	 OFFSET $SG190096
  0097f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pForce_SharedCS@@3PAUID3D11ComputeShader@@A ; g_pForce_SharedCS
  00985	51		 push	 ecx
  00986	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0098b	83 c4 08	 add	 esp, 8
; Line 730
  0098e	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  00991	52		 push	 edx
  00992	6a 00		 push	 0
  00994	68 00 08 00 00	 push	 2048			; 00000800H
  00999	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  0099c	50		 push	 eax
  0099d	68 00 00 00 00	 push	 OFFSET $SG190097
  009a2	6a 00		 push	 0
  009a4	68 00 00 00 00	 push	 OFFSET $SG190098
  009a9	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  009ae	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  009b1	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  009b5	7d 3d		 jge	 SHORT $LN31@OnD3D11Cre
  009b7	6a 01		 push	 1
  009b9	68 00 00 00 00	 push	 OFFSET $SG190103
  009be	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  009c1	51		 push	 ecx
  009c2	68 da 02 00 00	 push	 730			; 000002daH
  009c7	68 00 00 00 00	 push	 OFFSET $SG190104
  009cc	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  009d1	89 85 78 fd ff
	ff		 mov	 DWORD PTR $T24[ebp], eax
  009d7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  009de	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  009e4	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  009e9	8b 85 78 fd ff
	ff		 mov	 eax, DWORD PTR $T24[ebp]
  009ef	e9 da 0b 00 00	 jmp	 $LN56@OnD3D11Cre
$LN31@OnD3D11Cre:
; Line 731
  009f4	8b f4		 mov	 esi, esp
  009f6	68 00 00 00 00	 push	 OFFSET ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
  009fb	6a 00		 push	 0
  009fd	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00a00	8b 02		 mov	 eax, DWORD PTR [edx]
  00a02	8b fc		 mov	 edi, esp
  00a04	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  00a07	51		 push	 ecx
  00a08	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00a0b	ff d2		 call	 edx
  00a0d	3b fc		 cmp	 edi, esp
  00a0f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a14	50		 push	 eax
  00a15	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00a18	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a1a	8b fc		 mov	 edi, esp
  00a1c	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00a1f	52		 push	 edx
  00a20	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00a23	ff d0		 call	 eax
  00a25	3b fc		 cmp	 edi, esp
  00a27	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a2c	50		 push	 eax
  00a2d	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00a30	8b 11		 mov	 edx, DWORD PTR [ecx]
  00a32	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00a35	50		 push	 eax
  00a36	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00a39	ff d1		 call	 ecx
  00a3b	3b f4		 cmp	 esi, esp
  00a3d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a42	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00a45	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00a49	7d 3d		 jge	 SHORT $LN30@OnD3D11Cre
  00a4b	6a 01		 push	 1
  00a4d	68 00 00 00 00	 push	 OFFSET $SG190109
  00a52	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  00a55	52		 push	 edx
  00a56	68 db 02 00 00	 push	 731			; 000002dbH
  00a5b	68 00 00 00 00	 push	 OFFSET $SG190110
  00a60	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00a65	89 85 74 fd ff
	ff		 mov	 DWORD PTR $T23[ebp], eax
  00a6b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00a72	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00a78	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00a7d	8b 85 74 fd ff
	ff		 mov	 eax, DWORD PTR $T23[ebp]
  00a83	e9 46 0b 00 00	 jmp	 $LN56@OnD3D11Cre
$LN30@OnD3D11Cre:
; Line 732
  00a88	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00a8c	74 1e		 je	 SHORT $LN29@OnD3D11Cre
  00a8e	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00a91	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a93	8b f4		 mov	 esi, esp
  00a95	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00a98	52		 push	 edx
  00a99	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00a9c	ff d0		 call	 eax
  00a9e	3b f4		 cmp	 esi, esp
  00aa0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aa5	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN29@OnD3D11Cre:
; Line 733
  00aac	68 00 00 00 00	 push	 OFFSET $SG190112
  00ab1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pDensity_GridCS@@3PAUID3D11ComputeShader@@A ; g_pDensity_GridCS
  00ab7	51		 push	 ecx
  00ab8	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00abd	83 c4 08	 add	 esp, 8
; Line 735
  00ac0	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  00ac3	52		 push	 edx
  00ac4	6a 00		 push	 0
  00ac6	68 00 08 00 00	 push	 2048			; 00000800H
  00acb	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  00ace	50		 push	 eax
  00acf	68 00 00 00 00	 push	 OFFSET $SG190113
  00ad4	6a 00		 push	 0
  00ad6	68 00 00 00 00	 push	 OFFSET $SG190114
  00adb	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  00ae0	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00ae3	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00ae7	7d 3d		 jge	 SHORT $LN28@OnD3D11Cre
  00ae9	6a 01		 push	 1
  00aeb	68 00 00 00 00	 push	 OFFSET $SG190119
  00af0	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  00af3	51		 push	 ecx
  00af4	68 df 02 00 00	 push	 735			; 000002dfH
  00af9	68 00 00 00 00	 push	 OFFSET $SG190120
  00afe	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00b03	89 85 70 fd ff
	ff		 mov	 DWORD PTR $T22[ebp], eax
  00b09	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00b10	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00b16	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00b1b	8b 85 70 fd ff
	ff		 mov	 eax, DWORD PTR $T22[ebp]
  00b21	e9 a8 0a 00 00	 jmp	 $LN56@OnD3D11Cre
$LN28@OnD3D11Cre:
; Line 736
  00b26	8b f4		 mov	 esi, esp
  00b28	68 00 00 00 00	 push	 OFFSET ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
  00b2d	6a 00		 push	 0
  00b2f	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00b32	8b 02		 mov	 eax, DWORD PTR [edx]
  00b34	8b fc		 mov	 edi, esp
  00b36	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  00b39	51		 push	 ecx
  00b3a	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00b3d	ff d2		 call	 edx
  00b3f	3b fc		 cmp	 edi, esp
  00b41	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b46	50		 push	 eax
  00b47	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00b4a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b4c	8b fc		 mov	 edi, esp
  00b4e	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00b51	52		 push	 edx
  00b52	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00b55	ff d0		 call	 eax
  00b57	3b fc		 cmp	 edi, esp
  00b59	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b5e	50		 push	 eax
  00b5f	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00b62	8b 11		 mov	 edx, DWORD PTR [ecx]
  00b64	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00b67	50		 push	 eax
  00b68	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00b6b	ff d1		 call	 ecx
  00b6d	3b f4		 cmp	 esi, esp
  00b6f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b74	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00b77	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00b7b	7d 3d		 jge	 SHORT $LN27@OnD3D11Cre
  00b7d	6a 01		 push	 1
  00b7f	68 00 00 00 00	 push	 OFFSET $SG190125
  00b84	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  00b87	52		 push	 edx
  00b88	68 e0 02 00 00	 push	 736			; 000002e0H
  00b8d	68 00 00 00 00	 push	 OFFSET $SG190126
  00b92	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00b97	89 85 6c fd ff
	ff		 mov	 DWORD PTR $T21[ebp], eax
  00b9d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ba4	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00baa	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00baf	8b 85 6c fd ff
	ff		 mov	 eax, DWORD PTR $T21[ebp]
  00bb5	e9 14 0a 00 00	 jmp	 $LN56@OnD3D11Cre
$LN27@OnD3D11Cre:
; Line 737
  00bba	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00bbe	74 1e		 je	 SHORT $LN26@OnD3D11Cre
  00bc0	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00bc3	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bc5	8b f4		 mov	 esi, esp
  00bc7	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00bca	52		 push	 edx
  00bcb	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00bce	ff d0		 call	 eax
  00bd0	3b f4		 cmp	 esi, esp
  00bd2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bd7	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN26@OnD3D11Cre:
; Line 738
  00bde	68 00 00 00 00	 push	 OFFSET $SG190128
  00be3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pForce_GridCS@@3PAUID3D11ComputeShader@@A ; g_pForce_GridCS
  00be9	51		 push	 ecx
  00bea	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00bef	83 c4 08	 add	 esp, 8
; Line 740
  00bf2	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  00bf5	52		 push	 edx
  00bf6	6a 00		 push	 0
  00bf8	68 00 08 00 00	 push	 2048			; 00000800H
  00bfd	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  00c00	50		 push	 eax
  00c01	68 00 00 00 00	 push	 OFFSET $SG190129
  00c06	6a 00		 push	 0
  00c08	68 00 00 00 00	 push	 OFFSET $SG190130
  00c0d	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  00c12	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00c15	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00c19	7d 3d		 jge	 SHORT $LN25@OnD3D11Cre
  00c1b	6a 01		 push	 1
  00c1d	68 00 00 00 00	 push	 OFFSET $SG190135
  00c22	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  00c25	51		 push	 ecx
  00c26	68 e4 02 00 00	 push	 740			; 000002e4H
  00c2b	68 00 00 00 00	 push	 OFFSET $SG190136
  00c30	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00c35	89 85 68 fd ff
	ff		 mov	 DWORD PTR $T20[ebp], eax
  00c3b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00c42	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00c48	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00c4d	8b 85 68 fd ff
	ff		 mov	 eax, DWORD PTR $T20[ebp]
  00c53	e9 76 09 00 00	 jmp	 $LN56@OnD3D11Cre
$LN25@OnD3D11Cre:
; Line 741
  00c58	8b f4		 mov	 esi, esp
  00c5a	68 00 00 00 00	 push	 OFFSET ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
  00c5f	6a 00		 push	 0
  00c61	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00c64	8b 02		 mov	 eax, DWORD PTR [edx]
  00c66	8b fc		 mov	 edi, esp
  00c68	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  00c6b	51		 push	 ecx
  00c6c	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00c6f	ff d2		 call	 edx
  00c71	3b fc		 cmp	 edi, esp
  00c73	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c78	50		 push	 eax
  00c79	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00c7c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c7e	8b fc		 mov	 edi, esp
  00c80	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00c83	52		 push	 edx
  00c84	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00c87	ff d0		 call	 eax
  00c89	3b fc		 cmp	 edi, esp
  00c8b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c90	50		 push	 eax
  00c91	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00c94	8b 11		 mov	 edx, DWORD PTR [ecx]
  00c96	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00c99	50		 push	 eax
  00c9a	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00c9d	ff d1		 call	 ecx
  00c9f	3b f4		 cmp	 esi, esp
  00ca1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ca6	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00ca9	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00cad	7d 3d		 jge	 SHORT $LN24@OnD3D11Cre
  00caf	6a 01		 push	 1
  00cb1	68 00 00 00 00	 push	 OFFSET $SG190141
  00cb6	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  00cb9	52		 push	 edx
  00cba	68 e5 02 00 00	 push	 741			; 000002e5H
  00cbf	68 00 00 00 00	 push	 OFFSET $SG190142
  00cc4	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00cc9	89 85 64 fd ff
	ff		 mov	 DWORD PTR $T19[ebp], eax
  00ccf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00cd6	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00cdc	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00ce1	8b 85 64 fd ff
	ff		 mov	 eax, DWORD PTR $T19[ebp]
  00ce7	e9 e2 08 00 00	 jmp	 $LN56@OnD3D11Cre
$LN24@OnD3D11Cre:
; Line 742
  00cec	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00cf0	74 1e		 je	 SHORT $LN23@OnD3D11Cre
  00cf2	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00cf5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cf7	8b f4		 mov	 esi, esp
  00cf9	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00cfc	52		 push	 edx
  00cfd	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00d00	ff d0		 call	 eax
  00d02	3b f4		 cmp	 esi, esp
  00d04	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d09	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN23@OnD3D11Cre:
; Line 743
  00d10	68 00 00 00 00	 push	 OFFSET $SG190144
  00d15	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pBuildGridCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridCS
  00d1b	51		 push	 ecx
  00d1c	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00d21	83 c4 08	 add	 esp, 8
; Line 745
  00d24	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  00d27	52		 push	 edx
  00d28	6a 00		 push	 0
  00d2a	68 00 08 00 00	 push	 2048			; 00000800H
  00d2f	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  00d32	50		 push	 eax
  00d33	68 00 00 00 00	 push	 OFFSET $SG190145
  00d38	6a 00		 push	 0
  00d3a	68 00 00 00 00	 push	 OFFSET $SG190146
  00d3f	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  00d44	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00d47	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00d4b	7d 3d		 jge	 SHORT $LN22@OnD3D11Cre
  00d4d	6a 01		 push	 1
  00d4f	68 00 00 00 00	 push	 OFFSET $SG190151
  00d54	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  00d57	51		 push	 ecx
  00d58	68 e9 02 00 00	 push	 745			; 000002e9H
  00d5d	68 00 00 00 00	 push	 OFFSET $SG190152
  00d62	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00d67	89 85 60 fd ff
	ff		 mov	 DWORD PTR $T18[ebp], eax
  00d6d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00d74	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00d7a	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00d7f	8b 85 60 fd ff
	ff		 mov	 eax, DWORD PTR $T18[ebp]
  00d85	e9 44 08 00 00	 jmp	 $LN56@OnD3D11Cre
$LN22@OnD3D11Cre:
; Line 746
  00d8a	8b f4		 mov	 esi, esp
  00d8c	68 00 00 00 00	 push	 OFFSET ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
  00d91	6a 00		 push	 0
  00d93	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00d96	8b 02		 mov	 eax, DWORD PTR [edx]
  00d98	8b fc		 mov	 edi, esp
  00d9a	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  00d9d	51		 push	 ecx
  00d9e	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00da1	ff d2		 call	 edx
  00da3	3b fc		 cmp	 edi, esp
  00da5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00daa	50		 push	 eax
  00dab	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00dae	8b 08		 mov	 ecx, DWORD PTR [eax]
  00db0	8b fc		 mov	 edi, esp
  00db2	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00db5	52		 push	 edx
  00db6	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00db9	ff d0		 call	 eax
  00dbb	3b fc		 cmp	 edi, esp
  00dbd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00dc2	50		 push	 eax
  00dc3	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00dc6	8b 11		 mov	 edx, DWORD PTR [ecx]
  00dc8	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00dcb	50		 push	 eax
  00dcc	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00dcf	ff d1		 call	 ecx
  00dd1	3b f4		 cmp	 esi, esp
  00dd3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00dd8	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00ddb	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00ddf	7d 3d		 jge	 SHORT $LN21@OnD3D11Cre
  00de1	6a 01		 push	 1
  00de3	68 00 00 00 00	 push	 OFFSET $SG190157
  00de8	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  00deb	52		 push	 edx
  00dec	68 ea 02 00 00	 push	 746			; 000002eaH
  00df1	68 00 00 00 00	 push	 OFFSET $SG190158
  00df6	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00dfb	89 85 5c fd ff
	ff		 mov	 DWORD PTR $T17[ebp], eax
  00e01	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e08	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00e0e	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00e13	8b 85 5c fd ff
	ff		 mov	 eax, DWORD PTR $T17[ebp]
  00e19	e9 b0 07 00 00	 jmp	 $LN56@OnD3D11Cre
$LN21@OnD3D11Cre:
; Line 747
  00e1e	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00e22	74 1e		 je	 SHORT $LN20@OnD3D11Cre
  00e24	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00e27	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e29	8b f4		 mov	 esi, esp
  00e2b	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00e2e	52		 push	 edx
  00e2f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00e32	ff d0		 call	 eax
  00e34	3b f4		 cmp	 esi, esp
  00e36	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e3b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN20@OnD3D11Cre:
; Line 748
  00e42	68 00 00 00 00	 push	 OFFSET $SG190160
  00e47	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pClearGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pClearGridIndicesCS
  00e4d	51		 push	 ecx
  00e4e	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00e53	83 c4 08	 add	 esp, 8
; Line 750
  00e56	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  00e59	52		 push	 edx
  00e5a	6a 00		 push	 0
  00e5c	68 00 08 00 00	 push	 2048			; 00000800H
  00e61	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  00e64	50		 push	 eax
  00e65	68 00 00 00 00	 push	 OFFSET $SG190161
  00e6a	6a 00		 push	 0
  00e6c	68 00 00 00 00	 push	 OFFSET $SG190162
  00e71	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  00e76	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00e79	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00e7d	7d 3d		 jge	 SHORT $LN19@OnD3D11Cre
  00e7f	6a 01		 push	 1
  00e81	68 00 00 00 00	 push	 OFFSET $SG190167
  00e86	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  00e89	51		 push	 ecx
  00e8a	68 ee 02 00 00	 push	 750			; 000002eeH
  00e8f	68 00 00 00 00	 push	 OFFSET $SG190168
  00e94	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00e99	89 85 58 fd ff
	ff		 mov	 DWORD PTR $T16[ebp], eax
  00e9f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00ea6	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00eac	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00eb1	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR $T16[ebp]
  00eb7	e9 12 07 00 00	 jmp	 $LN56@OnD3D11Cre
$LN19@OnD3D11Cre:
; Line 751
  00ebc	8b f4		 mov	 esi, esp
  00ebe	68 00 00 00 00	 push	 OFFSET ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
  00ec3	6a 00		 push	 0
  00ec5	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00ec8	8b 02		 mov	 eax, DWORD PTR [edx]
  00eca	8b fc		 mov	 edi, esp
  00ecc	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  00ecf	51		 push	 ecx
  00ed0	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00ed3	ff d2		 call	 edx
  00ed5	3b fc		 cmp	 edi, esp
  00ed7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00edc	50		 push	 eax
  00edd	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00ee0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ee2	8b fc		 mov	 edi, esp
  00ee4	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00ee7	52		 push	 edx
  00ee8	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00eeb	ff d0		 call	 eax
  00eed	3b fc		 cmp	 edi, esp
  00eef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ef4	50		 push	 eax
  00ef5	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  00ef8	8b 11		 mov	 edx, DWORD PTR [ecx]
  00efa	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  00efd	50		 push	 eax
  00efe	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  00f01	ff d1		 call	 ecx
  00f03	3b f4		 cmp	 esi, esp
  00f05	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f0a	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00f0d	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00f11	7d 3d		 jge	 SHORT $LN18@OnD3D11Cre
  00f13	6a 01		 push	 1
  00f15	68 00 00 00 00	 push	 OFFSET $SG190173
  00f1a	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  00f1d	52		 push	 edx
  00f1e	68 ef 02 00 00	 push	 751			; 000002efH
  00f23	68 00 00 00 00	 push	 OFFSET $SG190174
  00f28	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00f2d	89 85 54 fd ff
	ff		 mov	 DWORD PTR $T15[ebp], eax
  00f33	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f3a	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00f40	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00f45	8b 85 54 fd ff
	ff		 mov	 eax, DWORD PTR $T15[ebp]
  00f4b	e9 7e 06 00 00	 jmp	 $LN56@OnD3D11Cre
$LN18@OnD3D11Cre:
; Line 752
  00f50	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  00f54	74 1e		 je	 SHORT $LN17@OnD3D11Cre
  00f56	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  00f59	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f5b	8b f4		 mov	 esi, esp
  00f5d	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00f60	52		 push	 edx
  00f61	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00f64	ff d0		 call	 eax
  00f66	3b f4		 cmp	 esi, esp
  00f68	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f6d	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN17@OnD3D11Cre:
; Line 753
  00f74	68 00 00 00 00	 push	 OFFSET $SG190176
  00f79	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pBuildGridIndicesCS@@3PAUID3D11ComputeShader@@A ; g_pBuildGridIndicesCS
  00f7f	51		 push	 ecx
  00f80	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  00f85	83 c4 08	 add	 esp, 8
; Line 755
  00f88	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  00f8b	52		 push	 edx
  00f8c	6a 00		 push	 0
  00f8e	68 00 08 00 00	 push	 2048			; 00000800H
  00f93	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  00f96	50		 push	 eax
  00f97	68 00 00 00 00	 push	 OFFSET $SG190177
  00f9c	6a 00		 push	 0
  00f9e	68 00 00 00 00	 push	 OFFSET $SG190178
  00fa3	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  00fa8	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  00fab	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  00faf	7d 3d		 jge	 SHORT $LN16@OnD3D11Cre
  00fb1	6a 01		 push	 1
  00fb3	68 00 00 00 00	 push	 OFFSET $SG190183
  00fb8	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  00fbb	51		 push	 ecx
  00fbc	68 f3 02 00 00	 push	 755			; 000002f3H
  00fc1	68 00 00 00 00	 push	 OFFSET $SG190184
  00fc6	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  00fcb	89 85 50 fd ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  00fd1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00fd8	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00fde	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  00fe3	8b 85 50 fd ff
	ff		 mov	 eax, DWORD PTR $T14[ebp]
  00fe9	e9 e0 05 00 00	 jmp	 $LN56@OnD3D11Cre
$LN16@OnD3D11Cre:
; Line 756
  00fee	8b f4		 mov	 esi, esp
  00ff0	68 00 00 00 00	 push	 OFFSET ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
  00ff5	6a 00		 push	 0
  00ff7	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  00ffa	8b 02		 mov	 eax, DWORD PTR [edx]
  00ffc	8b fc		 mov	 edi, esp
  00ffe	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  01001	51		 push	 ecx
  01002	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  01005	ff d2		 call	 edx
  01007	3b fc		 cmp	 edi, esp
  01009	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0100e	50		 push	 eax
  0100f	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  01012	8b 08		 mov	 ecx, DWORD PTR [eax]
  01014	8b fc		 mov	 edi, esp
  01016	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  01019	52		 push	 edx
  0101a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0101d	ff d0		 call	 eax
  0101f	3b fc		 cmp	 edi, esp
  01021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01026	50		 push	 eax
  01027	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0102a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0102c	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  0102f	50		 push	 eax
  01030	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  01033	ff d1		 call	 ecx
  01035	3b f4		 cmp	 esi, esp
  01037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0103c	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0103f	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01043	7d 3d		 jge	 SHORT $LN15@OnD3D11Cre
  01045	6a 01		 push	 1
  01047	68 00 00 00 00	 push	 OFFSET $SG190189
  0104c	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  0104f	52		 push	 edx
  01050	68 f4 02 00 00	 push	 756			; 000002f4H
  01055	68 00 00 00 00	 push	 OFFSET $SG190190
  0105a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0105f	89 85 4c fd ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  01065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0106c	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  01072	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  01077	8b 85 4c fd ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  0107d	e9 4c 05 00 00	 jmp	 $LN56@OnD3D11Cre
$LN15@OnD3D11Cre:
; Line 757
  01082	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  01086	74 1e		 je	 SHORT $LN14@OnD3D11Cre
  01088	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  0108b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0108d	8b f4		 mov	 esi, esp
  0108f	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  01092	52		 push	 edx
  01093	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  01096	ff d0		 call	 eax
  01098	3b f4		 cmp	 esi, esp
  0109a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0109f	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN14@OnD3D11Cre:
; Line 758
  010a6	68 00 00 00 00	 push	 OFFSET $SG190192
  010ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pRearrangeParticlesCS@@3PAUID3D11ComputeShader@@A ; g_pRearrangeParticlesCS
  010b1	51		 push	 ecx
  010b2	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  010b7	83 c4 08	 add	 esp, 8
; Line 761
  010ba	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  010bd	52		 push	 edx
  010be	6a 00		 push	 0
  010c0	68 00 08 00 00	 push	 2048			; 00000800H
  010c5	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  010c8	50		 push	 eax
  010c9	68 00 00 00 00	 push	 OFFSET $SG190193
  010ce	6a 00		 push	 0
  010d0	68 00 00 00 00	 push	 OFFSET $SG190194
  010d5	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  010da	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  010dd	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  010e1	7d 3d		 jge	 SHORT $LN13@OnD3D11Cre
  010e3	6a 01		 push	 1
  010e5	68 00 00 00 00	 push	 OFFSET $SG190199
  010ea	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  010ed	51		 push	 ecx
  010ee	68 f9 02 00 00	 push	 761			; 000002f9H
  010f3	68 00 00 00 00	 push	 OFFSET $SG190200
  010f8	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  010fd	89 85 48 fd ff
	ff		 mov	 DWORD PTR $T12[ebp], eax
  01103	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0110a	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  01110	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  01115	8b 85 48 fd ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  0111b	e9 ae 04 00 00	 jmp	 $LN56@OnD3D11Cre
$LN13@OnD3D11Cre:
; Line 762
  01120	8b f4		 mov	 esi, esp
  01122	68 00 00 00 00	 push	 OFFSET ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
  01127	6a 00		 push	 0
  01129	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0112c	8b 02		 mov	 eax, DWORD PTR [edx]
  0112e	8b fc		 mov	 edi, esp
  01130	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  01133	51		 push	 ecx
  01134	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  01137	ff d2		 call	 edx
  01139	3b fc		 cmp	 edi, esp
  0113b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01140	50		 push	 eax
  01141	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  01144	8b 08		 mov	 ecx, DWORD PTR [eax]
  01146	8b fc		 mov	 edi, esp
  01148	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0114b	52		 push	 edx
  0114c	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0114f	ff d0		 call	 eax
  01151	3b fc		 cmp	 edi, esp
  01153	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01158	50		 push	 eax
  01159	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0115c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0115e	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  01161	50		 push	 eax
  01162	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  01165	ff d1		 call	 ecx
  01167	3b f4		 cmp	 esi, esp
  01169	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0116e	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  01171	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01175	7d 3d		 jge	 SHORT $LN12@OnD3D11Cre
  01177	6a 01		 push	 1
  01179	68 00 00 00 00	 push	 OFFSET $SG190205
  0117e	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  01181	52		 push	 edx
  01182	68 fa 02 00 00	 push	 762			; 000002faH
  01187	68 00 00 00 00	 push	 OFFSET $SG190206
  0118c	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  01191	89 85 44 fd ff
	ff		 mov	 DWORD PTR $T11[ebp], eax
  01197	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0119e	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  011a4	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  011a9	8b 85 44 fd ff
	ff		 mov	 eax, DWORD PTR $T11[ebp]
  011af	e9 1a 04 00 00	 jmp	 $LN56@OnD3D11Cre
$LN12@OnD3D11Cre:
; Line 763
  011b4	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  011b8	74 1e		 je	 SHORT $LN11@OnD3D11Cre
  011ba	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  011bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  011bf	8b f4		 mov	 esi, esp
  011c1	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  011c4	52		 push	 edx
  011c5	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  011c8	ff d0		 call	 eax
  011ca	3b f4		 cmp	 esi, esp
  011cc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011d1	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN11@OnD3D11Cre:
; Line 764
  011d8	68 00 00 00 00	 push	 OFFSET $SG190208
  011dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortBitonic@@3PAUID3D11ComputeShader@@A ; g_pSortBitonic
  011e3	51		 push	 ecx
  011e4	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  011e9	83 c4 08	 add	 esp, 8
; Line 766
  011ec	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  011ef	52		 push	 edx
  011f0	6a 00		 push	 0
  011f2	68 00 08 00 00	 push	 2048			; 00000800H
  011f7	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  011fa	50		 push	 eax
  011fb	68 00 00 00 00	 push	 OFFSET $SG190209
  01200	6a 00		 push	 0
  01202	68 00 00 00 00	 push	 OFFSET $SG190210
  01207	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  0120c	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0120f	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01213	7d 3d		 jge	 SHORT $LN10@OnD3D11Cre
  01215	6a 01		 push	 1
  01217	68 00 00 00 00	 push	 OFFSET $SG190215
  0121c	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  0121f	51		 push	 ecx
  01220	68 fe 02 00 00	 push	 766			; 000002feH
  01225	68 00 00 00 00	 push	 OFFSET $SG190216
  0122a	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0122f	89 85 40 fd ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  01235	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0123c	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  01242	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  01247	8b 85 40 fd ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  0124d	e9 7c 03 00 00	 jmp	 $LN56@OnD3D11Cre
$LN10@OnD3D11Cre:
; Line 767
  01252	8b f4		 mov	 esi, esp
  01254	68 00 00 00 00	 push	 OFFSET ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
  01259	6a 00		 push	 0
  0125b	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0125e	8b 02		 mov	 eax, DWORD PTR [edx]
  01260	8b fc		 mov	 edi, esp
  01262	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  01265	51		 push	 ecx
  01266	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  01269	ff d2		 call	 edx
  0126b	3b fc		 cmp	 edi, esp
  0126d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01272	50		 push	 eax
  01273	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  01276	8b 08		 mov	 ecx, DWORD PTR [eax]
  01278	8b fc		 mov	 edi, esp
  0127a	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  0127d	52		 push	 edx
  0127e	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  01281	ff d0		 call	 eax
  01283	3b fc		 cmp	 edi, esp
  01285	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0128a	50		 push	 eax
  0128b	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  0128e	8b 11		 mov	 edx, DWORD PTR [ecx]
  01290	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  01293	50		 push	 eax
  01294	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  01297	ff d1		 call	 ecx
  01299	3b f4		 cmp	 esi, esp
  0129b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012a0	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  012a3	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  012a7	7d 3d		 jge	 SHORT $LN9@OnD3D11Cre
  012a9	6a 01		 push	 1
  012ab	68 00 00 00 00	 push	 OFFSET $SG190221
  012b0	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  012b3	52		 push	 edx
  012b4	68 ff 02 00 00	 push	 767			; 000002ffH
  012b9	68 00 00 00 00	 push	 OFFSET $SG190222
  012be	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  012c3	89 85 3c fd ff
	ff		 mov	 DWORD PTR $T9[ebp], eax
  012c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  012d0	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  012d6	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  012db	8b 85 3c fd ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  012e1	e9 e8 02 00 00	 jmp	 $LN56@OnD3D11Cre
$LN9@OnD3D11Cre:
; Line 768
  012e6	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  012ea	74 1e		 je	 SHORT $LN8@OnD3D11Cre
  012ec	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  012ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  012f1	8b f4		 mov	 esi, esp
  012f3	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  012f6	52		 push	 edx
  012f7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  012fa	ff d0		 call	 eax
  012fc	3b f4		 cmp	 esi, esp
  012fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01303	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN8@OnD3D11Cre:
; Line 769
  0130a	68 00 00 00 00	 push	 OFFSET $SG190224
  0130f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pSortTranspose@@3PAUID3D11ComputeShader@@A ; g_pSortTranspose
  01315	51		 push	 ecx
  01316	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0131b	83 c4 08	 add	 esp, 8
; Line 771
  0131e	8d 55 e0	 lea	 edx, DWORD PTR _pBlob$[ebp]
  01321	52		 push	 edx
  01322	6a 00		 push	 0
  01324	68 00 08 00 00	 push	 2048			; 00000800H
  01329	8b 45 d8	 mov	 eax, DWORD PTR _CSTarget$[ebp]
  0132c	50		 push	 eax
  0132d	68 00 00 00 00	 push	 OFFSET $SG190225
  01332	6a 00		 push	 0
  01334	68 00 00 00 00	 push	 OFFSET $SG190226
  01339	e8 00 00 00 00	 call	 ?DXUTCompileFromFile@@YGJPB_WPBU_D3D_SHADER_MACRO@@PBD2IIPAPAUID3D10Blob@@@Z ; DXUTCompileFromFile
  0133e	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  01341	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01345	7d 3d		 jge	 SHORT $LN7@OnD3D11Cre
  01347	6a 01		 push	 1
  01349	68 00 00 00 00	 push	 OFFSET $SG190231
  0134e	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  01351	51		 push	 ecx
  01352	68 03 03 00 00	 push	 771			; 00000303H
  01357	68 00 00 00 00	 push	 OFFSET $SG190232
  0135c	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  01361	89 85 38 fd ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  01367	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0136e	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  01374	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  01379	8b 85 38 fd ff
	ff		 mov	 eax, DWORD PTR $T8[ebp]
  0137f	e9 4a 02 00 00	 jmp	 $LN56@OnD3D11Cre
$LN7@OnD3D11Cre:
; Line 772
  01384	8b f4		 mov	 esi, esp
  01386	68 00 00 00 00	 push	 OFFSET ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
  0138b	6a 00		 push	 0
  0138d	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  01390	8b 02		 mov	 eax, DWORD PTR [edx]
  01392	8b fc		 mov	 edi, esp
  01394	8b 4d e0	 mov	 ecx, DWORD PTR _pBlob$[ebp]
  01397	51		 push	 ecx
  01398	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0139b	ff d2		 call	 edx
  0139d	3b fc		 cmp	 edi, esp
  0139f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013a4	50		 push	 eax
  013a5	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  013a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  013aa	8b fc		 mov	 edi, esp
  013ac	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  013af	52		 push	 edx
  013b0	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  013b3	ff d0		 call	 eax
  013b5	3b fc		 cmp	 edi, esp
  013b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013bc	50		 push	 eax
  013bd	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  013c0	8b 11		 mov	 edx, DWORD PTR [ecx]
  013c2	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  013c5	50		 push	 eax
  013c6	8b 4a 48	 mov	 ecx, DWORD PTR [edx+72]
  013c9	ff d1		 call	 ecx
  013cb	3b f4		 cmp	 esi, esp
  013cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013d2	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  013d5	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  013d9	7d 3d		 jge	 SHORT $LN6@OnD3D11Cre
  013db	6a 01		 push	 1
  013dd	68 00 00 00 00	 push	 OFFSET $SG190237
  013e2	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  013e5	52		 push	 edx
  013e6	68 04 03 00 00	 push	 772			; 00000304H
  013eb	68 00 00 00 00	 push	 OFFSET $SG190238
  013f0	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  013f5	89 85 34 fd ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  013fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01402	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  01408	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  0140d	8b 85 34 fd ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  01413	e9 b6 01 00 00	 jmp	 $LN56@OnD3D11Cre
$LN6@OnD3D11Cre:
; Line 773
  01418	83 7d e0 00	 cmp	 DWORD PTR _pBlob$[ebp], 0
  0141c	74 1e		 je	 SHORT $LN5@OnD3D11Cre
  0141e	8b 45 e0	 mov	 eax, DWORD PTR _pBlob$[ebp]
  01421	8b 08		 mov	 ecx, DWORD PTR [eax]
  01423	8b f4		 mov	 esi, esp
  01425	8b 55 e0	 mov	 edx, DWORD PTR _pBlob$[ebp]
  01428	52		 push	 edx
  01429	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0142c	ff d0		 call	 eax
  0142e	3b f4		 cmp	 esi, esp
  01430	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01435	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pBlob$[ebp], 0
$LN5@OnD3D11Cre:
; Line 774
  0143c	68 00 00 00 00	 push	 OFFSET $SG190240
  01441	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pProcessCS@@3PAUID3D11ComputeShader@@A ; m_pProcessCS
  01447	51		 push	 ecx
  01448	e8 00 00 00 00	 call	 ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ; DXUT_SetDebugName
  0144d	83 c4 08	 add	 esp, 8
; Line 775
  01450	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  01456	e8 00 00 00 00	 call	 ?DestroyDialog@CWaitDlg@@QAEXXZ ; CWaitDlg::DestroyDialog
; Line 778
  0145b	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  0145e	52		 push	 edx
  0145f	e8 00 00 00 00	 call	 ?CreateSimulationBuffers@@YAJPAUID3D11Device@@@Z ; CreateSimulationBuffers
  01464	83 c4 04	 add	 esp, 4
  01467	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0146a	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0146e	7d 3d		 jge	 SHORT $LN4@OnD3D11Cre
  01470	6a 01		 push	 1
  01472	68 00 00 00 00	 push	 OFFSET $SG190245
  01477	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  0147a	50		 push	 eax
  0147b	68 0a 03 00 00	 push	 778			; 0000030aH
  01480	68 00 00 00 00	 push	 OFFSET $SG190246
  01485	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0148a	89 85 30 fd ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  01490	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01497	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  0149d	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  014a2	8b 85 30 fd ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  014a8	e9 21 01 00 00	 jmp	 $LN56@OnD3D11Cre
$LN4@OnD3D11Cre:
; Line 781
  014ad	68 00 00 00 00	 push	 OFFSET ?g_pcbSimulationConstants@@3PAUID3D11Buffer@@A ; g_pcbSimulationConstants
  014b2	8b 4d 08	 mov	 ecx, DWORD PTR _pd3dDevice$[ebp]
  014b5	51		 push	 ecx
  014b6	e8 00 00 00 00	 call	 ??$CreateConstantBuffer@UCBSimulationConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<CBSimulationConstants>
  014bb	83 c4 08	 add	 esp, 8
  014be	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  014c1	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  014c5	7d 3d		 jge	 SHORT $LN3@OnD3D11Cre
  014c7	6a 01		 push	 1
  014c9	68 00 00 00 00	 push	 OFFSET $SG190257
  014ce	8b 55 ec	 mov	 edx, DWORD PTR _hr$[ebp]
  014d1	52		 push	 edx
  014d2	68 0d 03 00 00	 push	 781			; 0000030dH
  014d7	68 00 00 00 00	 push	 OFFSET $SG190258
  014dc	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  014e1	89 85 2c fd ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  014e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  014ee	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  014f4	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  014f9	8b 85 2c fd ff
	ff		 mov	 eax, DWORD PTR $T5[ebp]
  014ff	e9 ca 00 00 00	 jmp	 $LN56@OnD3D11Cre
$LN3@OnD3D11Cre:
; Line 782
  01504	68 00 00 00 00	 push	 OFFSET ?g_pcbRenderConstants@@3PAUID3D11Buffer@@A ; g_pcbRenderConstants
  01509	8b 45 08	 mov	 eax, DWORD PTR _pd3dDevice$[ebp]
  0150c	50		 push	 eax
  0150d	e8 00 00 00 00	 call	 ??$CreateConstantBuffer@UCBRenderConstants@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<CBRenderConstants>
  01512	83 c4 08	 add	 esp, 8
  01515	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  01518	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  0151c	7d 3a		 jge	 SHORT $LN2@OnD3D11Cre
  0151e	6a 01		 push	 1
  01520	68 00 00 00 00	 push	 OFFSET $SG190269
  01525	8b 4d ec	 mov	 ecx, DWORD PTR _hr$[ebp]
  01528	51		 push	 ecx
  01529	68 0e 03 00 00	 push	 782			; 0000030eH
  0152e	68 00 00 00 00	 push	 OFFSET $SG190270
  01533	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  01538	89 85 28 fd ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  0153e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01545	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  0154b	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  01550	8b 85 28 fd ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  01556	eb 76		 jmp	 SHORT $LN56@OnD3D11Cre
$LN2@OnD3D11Cre:
; Line 783
  01558	68 00 00 00 00	 push	 OFFSET ?g_pSortCB@@3PAUID3D11Buffer@@A ; g_pSortCB
  0155d	8b 55 08	 mov	 edx, DWORD PTR _pd3dDevice$[ebp]
  01560	52		 push	 edx
  01561	e8 00 00 00 00	 call	 ??$CreateConstantBuffer@USortCB@@@@YAJPAUID3D11Device@@PAPAUID3D11Buffer@@@Z ; CreateConstantBuffer<SortCB>
  01566	83 c4 08	 add	 esp, 8
  01569	89 45 ec	 mov	 DWORD PTR _hr$[ebp], eax
  0156c	83 7d ec 00	 cmp	 DWORD PTR _hr$[ebp], 0
  01570	7d 3a		 jge	 SHORT $LN1@OnD3D11Cre
  01572	6a 01		 push	 1
  01574	68 00 00 00 00	 push	 OFFSET $SG190281
  01579	8b 45 ec	 mov	 eax, DWORD PTR _hr$[ebp]
  0157c	50		 push	 eax
  0157d	68 0f 03 00 00	 push	 783			; 0000030fH
  01582	68 00 00 00 00	 push	 OFFSET $SG190282
  01587	e8 00 00 00 00	 call	 ?DXUTTrace@@YGJPBDKJPB_W_N@Z ; DXUTTrace
  0158c	89 85 24 fd ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  01592	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  01599	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  0159f	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  015a4	8b 85 24 fd ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  015aa	eb 22		 jmp	 SHORT $LN56@OnD3D11Cre
$LN1@OnD3D11Cre:
; Line 785
  015ac	c7 85 20 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  015b6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  015bd	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  015c3	e8 00 00 00 00	 call	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
  015c8	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
$LN56@OnD3D11Cre:
; Line 786
  015ce	52		 push	 edx
  015cf	8b cd		 mov	 ecx, ebp
  015d1	50		 push	 eax
  015d2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN65@OnD3D11Cre
  015d8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  015dd	58		 pop	 eax
  015de	5a		 pop	 edx
  015df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  015e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  015e9	59		 pop	 ecx
  015ea	5f		 pop	 edi
  015eb	5e		 pop	 esi
  015ec	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  015ef	33 cd		 xor	 ecx, ebp
  015f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  015f6	81 c4 e4 02 00
	00		 add	 esp, 740		; 000002e4H
  015fc	3b ec		 cmp	 ebp, esp
  015fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01603	8b e5		 mov	 esp, ebp
  01605	5d		 pop	 ebp
  01606	c2 0c 00	 ret	 12			; 0000000cH
  01609	8d 49 00	 npad	 3
$LN65@OnD3D11Cre:
  0160c	02 00 00 00	 DD	 2
  01610	00 00 00 00	 DD	 $LN64@OnD3D11Cre
$LN64@OnD3D11Cre:
  01614	e0 ff ff ff	 DD	 -32			; ffffffe0H
  01618	04 00 00 00	 DD	 4
  0161c	00 00 00 00	 DD	 $LN61@OnD3D11Cre
  01620	a8 fd ff ff	 DD	 -600			; fffffda8H
  01624	2c 02 00 00	 DD	 556			; 0000022cH
  01628	00 00 00 00	 DD	 $LN62@OnD3D11Cre
$LN62@OnD3D11Cre:
  0162c	43		 DB	 67			; 00000043H
  0162d	6f		 DB	 111			; 0000006fH
  0162e	6d		 DB	 109			; 0000006dH
  0162f	70		 DB	 112			; 00000070H
  01630	69		 DB	 105			; 00000069H
  01631	6c		 DB	 108			; 0000006cH
  01632	69		 DB	 105			; 00000069H
  01633	6e		 DB	 110			; 0000006eH
  01634	67		 DB	 103			; 00000067H
  01635	53		 DB	 83			; 00000053H
  01636	68		 DB	 104			; 00000068H
  01637	61		 DB	 97			; 00000061H
  01638	64		 DB	 100			; 00000064H
  01639	65		 DB	 101			; 00000065H
  0163a	72		 DB	 114			; 00000072H
  0163b	73		 DB	 115			; 00000073H
  0163c	44		 DB	 68			; 00000044H
  0163d	6c		 DB	 108			; 0000006cH
  0163e	67		 DB	 103			; 00000067H
  0163f	00		 DB	 0
$LN61@OnD3D11Cre:
  01640	70		 DB	 112			; 00000070H
  01641	42		 DB	 66			; 00000042H
  01642	6c		 DB	 108			; 0000006cH
  01643	6f		 DB	 111			; 0000006fH
  01644	62		 DB	 98			; 00000062H
  01645	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z$0:
  00000	8d 8d a8 fd ff
	ff		 lea	 ecx, DWORD PTR _CompilingShadersDlg$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CWaitDlg@@QAE@XZ	; CWaitDlg::~CWaitDlg
__ehhandler$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 1c fd ff
	ff		 mov	 ecx, DWORD PTR [edx-740]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z ENDP ; OnD3D11CreateDevice
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_AdapterInfo$ = 8					; size = 4
_Output$ = 12						; size = 4
_DeviceInfo$ = 16					; size = 4
_BackBufferFormat$ = 20					; size = 4
_bWindowed$ = 24					; size = 1
_pUserContext$ = 28					; size = 4
?IsD3D11DeviceAcceptable@@YG_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z PROC ; IsD3D11DeviceAcceptable
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 397
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 398
  00003	8b 45 10	 mov	 eax, DWORD PTR _DeviceInfo$[ebp]
  00006	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0000a	75 04		 jne	 SHORT $LN1@IsD3D11Dev
; Line 399
  0000c	32 c0		 xor	 al, al
  0000e	eb 02		 jmp	 SHORT $LN2@IsD3D11Dev
$LN1@IsD3D11Dev:
; Line 401
  00010	b0 01		 mov	 al, 1
$LN2@IsD3D11Dev:
; Line 402
  00012	5d		 pop	 ebp
  00013	c2 18 00	 ret	 24			; 00000018H
?IsD3D11DeviceAcceptable@@YG_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z ENDP ; IsD3D11DeviceAcceptable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -36						; size = 4
$T1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
_rect$4 = -20						; size = 4
_point$5 = -12						; size = 8
_hWnd$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_pbNoFurtherProcessing$ = 24				; size = 4
_pUserContext$ = 28					; size = 4
?MsgProc@@YGJPAUHWND__@@IIJPA_NPAX@Z PROC		; MsgProc
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 364
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0000f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00012	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00015	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00018	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00021	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00024	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 365
  00027	81 7d 0c 01 02
	00 00		 cmp	 DWORD PTR _uMsg$[ebp], 513 ; 00000201H
  0002e	0f 85 04 01 00
	00		 jne	 $LN4@MsgProc
; Line 368
  00034	8b f4		 mov	 esi, esp
  00036	8d 45 f4	 lea	 eax, DWORD PTR _point$5[ebp]
  00039	50		 push	 eax
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCursorPos@4
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 369
  00047	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _point$5[ebp]
  0004c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A, xmm0
; Line 370
  00054	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _point$5[ebp+4]
  00059	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4, xmm0
; Line 371
  00061	c7 45 e8 10 00
	00 00		 mov	 DWORD PTR $T3[ebp], 16	; 00000010H
  00068	8b 4d e8	 mov	 ecx, DWORD PTR $T3[ebp]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00071	83 c4 04	 add	 esp, 4
  00074	89 45 e4	 mov	 DWORD PTR $T2[ebp], eax
  00077	83 7d e4 00	 cmp	 DWORD PTR $T2[ebp], 0
  0007b	74 1a		 je	 SHORT $LN7@MsgProc
  0007d	8b 55 e8	 mov	 edx, DWORD PTR $T3[ebp]
  00080	52		 push	 edx
  00081	6a 00		 push	 0
  00083	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 _memset
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008f	8b 4d e4	 mov	 ecx, DWORD PTR $T2[ebp]
  00092	89 4d dc	 mov	 DWORD PTR tv81[ebp], ecx
  00095	eb 07		 jmp	 SHORT $LN8@MsgProc
$LN7@MsgProc:
  00097	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN8@MsgProc:
  0009e	8b 55 dc	 mov	 edx, DWORD PTR tv81[ebp]
  000a1	89 55 ec	 mov	 DWORD PTR _rect$4[ebp], edx
; Line 372
  000a4	8b f4		 mov	 esi, esp
  000a6	8b 45 ec	 mov	 eax, DWORD PTR _rect$4[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR _hWnd$[ebp]
  000ad	51		 push	 ecx
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  000b4	3b f4		 cmp	 esi, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	85 c0		 test	 eax, eax
  000bd	74 5e		 je	 SHORT $LN3@MsgProc
; Line 374
  000bf	8b 55 ec	 mov	 edx, DWORD PTR _rect$4[ebp]
  000c2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000c5	99		 cdq
  000c6	2b c2		 sub	 eax, edx
  000c8	d1 f8		 sar	 eax, 1
  000ca	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000ce	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A
  000d6	f3 0f 5c c8	 subss	 xmm1, xmm0
  000da	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A, xmm1
; Line 375
  000e2	8b 45 ec	 mov	 eax, DWORD PTR _rect$4[ebp]
  000e5	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000e8	99		 cdq
  000e9	2b c2		 sub	 eax, edx
  000eb	d1 f8		 sar	 eax, 1
  000ed	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f1	f3 0f 10 0d 04
	00 00 00	 movss	 xmm1, DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4
  000f9	f3 0f 5c c8	 subss	 xmm1, xmm0
  000fd	f3 0f 11 0d 04
	00 00 00	 movss	 DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4, xmm1
; Line 376
  00105	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4
  0010d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@bf800000
  00115	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4, xmm0
$LN3@MsgProc:
; Line 378
  0011d	8b 4d ec	 mov	 ecx, DWORD PTR _rect$4[ebp]
  00120	89 4d e0	 mov	 DWORD PTR $T1[ebp], ecx
  00123	8b 55 e0	 mov	 edx, DWORD PTR $T1[ebp]
  00126	52		 push	 edx
  00127	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0012c	83 c4 04	 add	 esp, 4
; Line 379
  0012f	b8 01 00 00 00	 mov	 eax, 1
  00134	eb 34		 jmp	 SHORT $LN5@MsgProc
  00136	eb 30		 jmp	 SHORT $LN1@MsgProc
$LN4@MsgProc:
; Line 381
  00138	b8 02 02 00 00	 mov	 eax, 514		; 00000202H
  0013d	85 c0		 test	 eax, eax
  0013f	74 27		 je	 SHORT $LN1@MsgProc
; Line 383
  00141	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00149	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A, xmm0
; Line 384
  00151	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00159	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?mousePosition@@3UXMFLOAT2A@DirectX@@A+4, xmm0
; Line 385
  00161	b8 01 00 00 00	 mov	 eax, 1
  00166	eb 02		 jmp	 SHORT $LN5@MsgProc
$LN1@MsgProc:
; Line 387
  00168	33 c0		 xor	 eax, eax
$LN5@MsgProc:
; Line 388
  0016a	52		 push	 edx
  0016b	8b cd		 mov	 ecx, ebp
  0016d	50		 push	 eax
  0016e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@MsgProc
  00174	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00179	58		 pop	 eax
  0017a	5a		 pop	 edx
  0017b	5e		 pop	 esi
  0017c	83 c4 24	 add	 esp, 36			; 00000024H
  0017f	3b ec		 cmp	 ebp, esp
  00181	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00186	8b e5		 mov	 esp, ebp
  00188	5d		 pop	 ebp
  00189	c2 18 00	 ret	 24			; 00000018H
$LN11@MsgProc:
  0018c	01 00 00 00	 DD	 1
  00190	00 00 00 00	 DD	 $LN10@MsgProc
$LN10@MsgProc:
  00194	f4 ff ff ff	 DD	 -12			; fffffff4H
  00198	08 00 00 00	 DD	 8
  0019c	00 00 00 00	 DD	 $LN9@MsgProc
$LN9@MsgProc:
  001a0	70		 DB	 112			; 00000070H
  001a1	6f		 DB	 111			; 0000006fH
  001a2	69		 DB	 105			; 00000069H
  001a3	6e		 DB	 110			; 0000006eH
  001a4	74		 DB	 116			; 00000074H
  001a5	00		 DB	 0
?MsgProc@@YGJPAUHWND__@@IIJPA_NPAX@Z ENDP		; MsgProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pDeviceSettings$ = 8					; size = 4
_pUserContext$ = 12					; size = 4
?ModifyDeviceSettings@@YG_NPAUDXUTDeviceSettings@@PAX@Z PROC ; ModifyDeviceSettings
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 338
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 339
  00003	b0 01		 mov	 al, 1
; Line 340
  00005	5d		 pop	 ebp
  00006	c2 08 00	 ret	 8
?ModifyDeviceSettings@@YG_NPAUDXUTDeviceSettings@@PAX@Z ENDP ; ModifyDeviceSettings
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CBRenderConstants@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBRenderConstants@@QAE@XZ PROC			; CBRenderConstants::CBRenderConstants, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0XMFLOAT4X4@DirectX@@QAE@XZ ; DirectX::XMFLOAT4X4::XMFLOAT4X4
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0CBRenderConstants@@QAE@XZ ENDP			; CBRenderConstants::CBRenderConstants
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__EmousePosition@@YAXXZ
text$di	SEGMENT
??__EmousePosition@@YAXXZ PROC				; `dynamic initializer for 'mousePosition'', COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 27
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?mousePosition@@3UXMFLOAT2A@DirectX@@A ; mousePosition
  00008	e8 00 00 00 00	 call	 ??0XMFLOAT2A@DirectX@@QAE@XZ ; DirectX::XMFLOAT2A::XMFLOAT2A
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__EmousePosition@@YAXXZ ENDP				; `dynamic initializer for 'mousePosition''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z PROC ; std::allocator<Particle>::destroy<Particle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z ENDP ; std::allocator<Particle>::destroy<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z PROC ; std::allocator_traits<std::allocator<Particle> >::destroy<Particle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 730
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@UParticle@@@?$allocator@UParticle@@@std@@QAEXPAUParticle@@@Z ; std::allocator<Particle>::destroy<Particle>
; Line 731
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z ENDP ; std::allocator_traits<std::allocator<Particle> >::destroy<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z PROC ; std::_Wrap_alloc<std::allocator<Particle> >::destroy<Particle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@UParticle@@@?$allocator_traits@V?$allocator@UParticle@@@std@@@std@@SAXAAV?$allocator@UParticle@@@1@PAUParticle@@@Z ; std::allocator_traits<std::allocator<Particle> >::destroy<Particle>
  0001b	83 c4 08	 add	 esp, 8
; Line 880
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z ENDP ; std::_Wrap_alloc<std::allocator<Particle> >::destroy<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z PROC	; std::allocator<wchar_t>::destroy<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ENDP	; std::allocator<wchar_t>::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ; std::forward<wchar_t * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 04		 push	 4
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 1b		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006d	89 4d e4	 mov	 DWORD PTR tv73[ebp], ecx
  00070	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00072	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00079	8b 55 e4	 mov	 edx, DWORD PTR tv73[ebp]
  0007c	89 55 ec	 mov	 DWORD PTR $T3[ebp], edx
  0007f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	83 c4 1c	 add	 esp, 28			; 0000001cH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f4		 mov	 esi, esp
  00006	6a 00		 push	 0
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	5e		 pop	 esi
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f4		 mov	 esi, esp
  00006	6a 00		 push	 0
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
  00013	3b f4		 cmp	 esi, esp
  00015	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001a	5e		 pop	 esi
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 81
  00003	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00005	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00008	83 c0 10	 add	 eax, 16			; 00000010H
  0000b	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00011	3b 4d 0c	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00014	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00016	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00019	52		 push	 edx
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  0001d	e8 00 00 00 00	 call	 ??$destroy@UParticle@@@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@@Z ; std::_Wrap_alloc<std::allocator<Particle> >::destroy<Particle>
  00022	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z PROC ; std::_Ptr_cat<Particle,Particle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 446
  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z ENDP ; std::_Ptr_cat<Particle,Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 730
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 730
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t *>
; Line 731
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ; std::forward<wchar_t * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z ; std::allocator<wchar_t>::construct<wchar_t *,wchar_t * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z PROC		; std::forward<wchar_t * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ENDP		; std::forward<wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 730
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 723
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
  00008	e8 00 00 00 00	 call	 ??1_System_error_category@std@@UAE@XZ
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
  00008	e8 00 00 00 00	 call	 ??0_System_error_category@std@@QAE@XZ ; std::_System_error_category::_System_error_category
  0000d	68 00 00 00 00	 push	 OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
  00008	e8 00 00 00 00	 call	 ??1_Iostream_error_category@std@@UAE@XZ
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
  00008	e8 00 00 00 00	 call	 ??0_Iostream_error_category@std@@QAE@XZ ; std::_Iostream_error_category::_Iostream_error_category
  0000d	68 00 00 00 00	 push	 OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
  00008	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UAE@XZ
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
  00008	e8 00 00 00 00	 call	 ??0_Generic_error_category@std@@QAE@XZ ; std::_Generic_error_category::_Generic_error_category
  0000d	68 00 00 00 00	 push	 OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@_W@std@@YAPA_WIPA_W@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@_W@std@@YAPA_WIPA_W@Z PROC			; std::_Allocate<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 2f		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 7f		 cmp	 DWORD PTR __Count$[ebp], 2147483647 ; 7fffffffH
  00022	77 17		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	d1 e0		 shl	 eax, 1
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	83 c4 04	 add	 esp, 4
  00032	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00035	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00039	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003b	8b f4		 mov	 esi, esp
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004a	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004d	5e		 pop	 esi
  0004e	83 c4 04	 add	 esp, 4
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??$_Allocate@_W@std@@YAPA_WIPA_W@Z ENDP			; std::_Allocate<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 2a		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	83 7d 08 ff	 cmp	 DWORD PTR __Count$[ebp], -1
  0001f	77 15		 ja	 SHORT $LN1@Allocate
  00021	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00030	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00034	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  00036	8b f4		 mov	 esi, esp
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  00045	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  00048	5e		 pop	 esi
  00049	83 c4 04	 add	 esp, 4
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 23
  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00013	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00017	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  00019	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0001b	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00022	77 18		 ja	 SHORT $LN1@Allocate
  00024	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	c1 e0 03	 shl	 eax, 3
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
  00036	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0003a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0003c	8b f4		 mov	 esi, esp
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0004b	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0004e	5e		 pop	 esi
  0004f	83 c4 04	 add	 esp, 4
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 96
  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@UParticle@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUParticle@@0@Z ; std::_Ptr_cat<Particle,Particle>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 141
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 142
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 40 04	 mov	 al, BYTE PTR [eax+4]
; Line 143
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??Bsentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 130
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 132
  0000f	8b f4		 mov	 esi, esp
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
  00017	3b f4		 cmp	 esi, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	0f b6 c0	 movzx	 eax, al
  00021	85 c0		 test	 eax, eax
  00023	75 14		 jne	 SHORT $LN2@sentry
; Line 133
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@sentry:
; Line 138
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
  00041	5e		 pop	 esi
  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??1sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 123
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00031	50		 push	 eax
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 124
  00041	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00049	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  0004c	8b f4		 mov	 esi, esp
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	85 c0		 test	 eax, eax
  00060	74 6c		 je	 SHORT $LN1@sentry
  00062	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00065	8b 11		 mov	 edx, DWORD PTR [ecx]
  00067	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0006a	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  0006d	8b f4		 mov	 esi, esp
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	85 c0		 test	 eax, eax
  0007e	74 4e		 je	 SHORT $LN1@sentry
  00080	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00083	8b 08		 mov	 ecx, DWORD PTR [eax]
  00085	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00088	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0008b	8b f4		 mov	 esi, esp
  0008d	8b ca		 mov	 ecx, edx
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	3b 45 08	 cmp	 eax, DWORD PTR __Ostr$[ebp]
  0009f	74 2d		 je	 SHORT $LN1@sentry
; Line 125
  000a1	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000a9	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000ac	8b f4		 mov	 esi, esp
  000ae	8b ca		 mov	 ecx, edx
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_ostream@_WU?$char_traits@_W@std@@@2@XZ
  000b6	3b f4		 cmp	 esi, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b f4		 mov	 esi, esp
  000bf	8b c8		 mov	 ecx, eax
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@sentry:
; Line 126
  000ce	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d3	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000d6	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000d9	8b f4		 mov	 esi, esp
  000db	8b ca		 mov	 ecx, edx
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  000e3	3b f4		 cmp	 esi, esp
  000e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ea	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	88 41 04	 mov	 BYTE PTR [ecx+4], al
; Line 127
  000f0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00104	59		 pop	 ecx
  00105	5e		 pop	 esi
  00106	83 c4 10	 add	 esp, 16			; 00000010H
  00109	3b ec		 cmp	 ebp, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -16						; size = 4
tv86 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 106
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 107
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 4d f8	 mov	 DWORD PTR tv72[ebp], ecx
  00023	8b 55 f8	 mov	 edx, DWORD PTR tv72[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	8b 4d f8	 mov	 ecx, DWORD PTR tv72[ebp]
  0002b	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0002e	8b f4		 mov	 esi, esp
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	85 c0		 test	 eax, eax
  0003f	74 3d		 je	 SHORT $LN2@Sentry_bas
; Line 108
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	89 55 f4	 mov	 DWORD PTR tv86[ebp], edx
  00049	8b 45 f4	 mov	 eax, DWORD PTR tv86[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	8b 55 f4	 mov	 edx, DWORD PTR tv86[ebp]
  00051	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00054	8b f4		 mov	 esi, esp
  00056	8b ca		 mov	 ecx, edx
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  0005e	3b f4		 cmp	 esi, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	89 45 f0	 mov	 DWORD PTR tv92[ebp], eax
  00068	8b 45 f0	 mov	 eax, DWORD PTR tv92[ebp]
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b f4		 mov	 esi, esp
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR tv92[ebp]
  00072	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00075	ff d0		 call	 eax
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Sentry_bas:
; Line 109
  0007e	5e		 pop	 esi
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -16						; size = 4
tv87 = -12						; size = 4
tv73 = -8						; size = 4
_this$ = -4						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 100
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00021	89 08		 mov	 DWORD PTR [eax], ecx
; Line 101
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	89 45 f8	 mov	 DWORD PTR tv73[ebp], eax
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR tv73[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 4d f8	 mov	 ecx, DWORD PTR tv73[ebp]
  00033	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00036	8b f4		 mov	 esi, esp
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	85 c0		 test	 eax, eax
  00047	74 3b		 je	 SHORT $LN2@Sentry_bas
; Line 102
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	89 4d f4	 mov	 DWORD PTR tv87[ebp], ecx
  00051	8b 55 f4	 mov	 edx, DWORD PTR tv87[ebp]
  00054	8b 02		 mov	 eax, DWORD PTR [edx]
  00056	8b 4d f4	 mov	 ecx, DWORD PTR tv87[ebp]
  00059	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0005c	8b f4		 mov	 esi, esp
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ
  00064	3b f4		 cmp	 esi, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	89 45 f0	 mov	 DWORD PTR tv93[ebp], eax
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR tv93[ebp]
  00071	8b 11		 mov	 edx, DWORD PTR [ecx]
  00073	8b f4		 mov	 esi, esp
  00075	8b 4d f0	 mov	 ecx, DWORD PTR tv93[ebp]
  00078	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0007b	ff d0		 call	 eax
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Sentry_bas:
; Line 103
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
??0_Sentry_base@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 141
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 142
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8a 40 04	 mov	 al, BYTE PTR [eax+4]
; Line 143
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 130
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 132
  0000f	8b f4		 mov	 esi, esp
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
  00017	3b f4		 cmp	 esi, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	0f b6 c0	 movzx	 eax, al
  00021	85 c0		 test	 eax, eax
  00023	75 14		 jne	 SHORT $LN2@sentry
; Line 133
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@sentry:
; Line 138
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00041	5e		 pop	 esi
  00042	83 c4 04	 add	 esp, 4
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 123
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00031	50		 push	 eax
  00032	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 124
  00041	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00049	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  0004c	8b f4		 mov	 esi, esp
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	85 c0		 test	 eax, eax
  00060	74 6c		 je	 SHORT $LN1@sentry
  00062	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00065	8b 11		 mov	 edx, DWORD PTR [ecx]
  00067	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0006a	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  0006d	8b f4		 mov	 esi, esp
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	85 c0		 test	 eax, eax
  0007e	74 4e		 je	 SHORT $LN1@sentry
  00080	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00083	8b 08		 mov	 ecx, DWORD PTR [eax]
  00085	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00088	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0008b	8b f4		 mov	 esi, esp
  0008d	8b ca		 mov	 ecx, edx
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  00095	3b f4		 cmp	 esi, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	3b 45 08	 cmp	 eax, DWORD PTR __Ostr$[ebp]
  0009f	74 2d		 je	 SHORT $LN1@sentry
; Line 125
  000a1	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000a9	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000ac	8b f4		 mov	 esi, esp
  000ae	8b ca		 mov	 ecx, edx
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000b6	3b f4		 cmp	 esi, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b f4		 mov	 esi, esp
  000bf	8b c8		 mov	 ecx, eax
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
  000c7	3b f4		 cmp	 esi, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@sentry:
; Line 126
  000ce	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d3	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000d6	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000d9	8b f4		 mov	 esi, esp
  000db	8b ca		 mov	 ecx, edx
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  000e3	3b f4		 cmp	 esi, esp
  000e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ea	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	88 41 04	 mov	 BYTE PTR [ecx+4], al
; Line 127
  000f0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f7	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000fa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00104	59		 pop	 ecx
  00105	5e		 pop	 esi
  00106	83 c4 10	 add	 esp, 16			; 00000010H
  00109	3b ec		 cmp	 ebp, esp
  0010b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -16						; size = 4
tv86 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 106
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 107
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 4d f8	 mov	 DWORD PTR tv72[ebp], ecx
  00023	8b 55 f8	 mov	 edx, DWORD PTR tv72[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	8b 4d f8	 mov	 ecx, DWORD PTR tv72[ebp]
  0002b	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0002e	8b f4		 mov	 esi, esp
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	85 c0		 test	 eax, eax
  0003f	74 3d		 je	 SHORT $LN2@Sentry_bas
; Line 108
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	89 55 f4	 mov	 DWORD PTR tv86[ebp], edx
  00049	8b 45 f4	 mov	 eax, DWORD PTR tv86[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	8b 55 f4	 mov	 edx, DWORD PTR tv86[ebp]
  00051	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00054	8b f4		 mov	 esi, esp
  00056	8b ca		 mov	 ecx, edx
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0005e	3b f4		 cmp	 esi, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	89 45 f0	 mov	 DWORD PTR tv92[ebp], eax
  00068	8b 45 f0	 mov	 eax, DWORD PTR tv92[ebp]
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b f4		 mov	 esi, esp
  0006f	8b 4d f0	 mov	 ecx, DWORD PTR tv92[ebp]
  00072	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00075	ff d0		 call	 eax
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Sentry_bas:
; Line 109
  0007e	5e		 pop	 esi
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -16						; size = 4
tv87 = -12						; size = 4
tv73 = -8						; size = 4
_this$ = -4						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 100
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00021	89 08		 mov	 DWORD PTR [eax], ecx
; Line 101
  00023	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	89 45 f8	 mov	 DWORD PTR tv73[ebp], eax
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR tv73[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 4d f8	 mov	 ecx, DWORD PTR tv73[ebp]
  00033	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00036	8b f4		 mov	 esi, esp
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	85 c0		 test	 eax, eax
  00047	74 3b		 je	 SHORT $LN2@Sentry_bas
; Line 102
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	89 4d f4	 mov	 DWORD PTR tv87[ebp], ecx
  00051	8b 55 f4	 mov	 edx, DWORD PTR tv87[ebp]
  00054	8b 02		 mov	 eax, DWORD PTR [edx]
  00056	8b 4d f4	 mov	 ecx, DWORD PTR tv87[ebp]
  00059	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0005c	8b f4		 mov	 esi, esp
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00064	3b f4		 cmp	 esi, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	89 45 f0	 mov	 DWORD PTR tv93[ebp], eax
  0006e	8b 4d f0	 mov	 ecx, DWORD PTR tv93[ebp]
  00071	8b 11		 mov	 edx, DWORD PTR [ecx]
  00073	8b f4		 mov	 esi, esp
  00075	8b 4d f0	 mov	 ecx, DWORD PTR tv93[ebp]
  00078	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0007b	ff d0		 call	 eax
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Sentry_bas:
; Line 103
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	5e		 pop	 esi
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  0001b	83 c4 08	 add	 esp, 8
; Line 880
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00022	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00036	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	6a 08		 push	 8
  0003f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00044	83 c4 08	 add	 esp, 8
  00047	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	83 7d e8 00	 cmp	 DWORD PTR $T2[ebp], 0
  00055	74 21		 je	 SHORT $LN3@construct
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00060	83 c4 04	 add	 esp, 4
  00063	8b 10		 mov	 edx, DWORD PTR [eax]
  00065	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00068	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0006b	89 11		 mov	 DWORD PTR [ecx], edx
  0006d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00070	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp]
  00073	89 55 e4	 mov	 DWORD PTR tv74[ebp], edx
  00076	eb 07		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00078	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  0007f	8b 45 e4	 mov	 eax, DWORD PTR tv74[ebp]
  00082	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
  00085	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  0008c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00096	59		 pop	 ecx
  00097	83 c4 1c	 add	 esp, 28			; 0000001cH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@_W@std@@YAPA_WAA_W@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@_W@std@@YAPA_WAA_W@Z PROC			; std::addressof<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@_W@std@@YAPA_WAA_W@Z ENDP			; std::addressof<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
  0001b	83 c4 08	 add	 esp, 8
; Line 880
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z ; std::forward<wchar_t * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 95
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
  0001b	83 c4 08	 add	 esp, 8
; Line 880
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 67
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 68
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 10		 mov	 edx, DWORD PTR [eax]
  00017	03 51 08	 add	 edx, DWORD PTR [ecx+8]
  0001a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0001d	13 71 0c	 adc	 esi, DWORD PTR [ecx+12]
  00020	8b c2		 mov	 eax, edx
  00022	8b d6		 mov	 edx, esi
; Line 69
  00024	5e		 pop	 esi
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 43
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp+4]
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00026	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
; Line 44
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1505
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__FParticlesRW@@YAXXZ
text$yd	SEGMENT
??__FParticlesRW@@YAXXZ PROC				; `dynamic atexit destructor for 'ParticlesRW'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET _ParticlesRW
  00008	e8 00 00 00 00	 call	 ??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::vector<Particle,std::allocator<Particle> >::~vector<Particle,std::allocator<Particle> >
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__FParticlesRW@@YAXXZ ENDP				; `dynamic atexit destructor for 'ParticlesRW''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__EParticlesRW@@YAXXZ
text$di	SEGMENT
??__EParticlesRW@@YAXXZ PROC				; `dynamic initializer for 'ParticlesRW'', COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\simdoperations.h
; Line 8
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET _ParticlesRW
  00008	e8 00 00 00 00	 call	 ??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::vector<Particle,std::allocator<Particle> >::vector<Particle,std::allocator<Particle> >
  0000d	68 00 00 00 00	 push	 OFFSET ??__FParticlesRW@@YAXXZ ; `dynamic atexit destructor for 'ParticlesRW''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__EParticlesRW@@YAXXZ ENDP				; `dynamic initializer for 'ParticlesRW''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ PROC ; std::vector<Particle,std::allocator<Particle> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001f	74 70		 je	 SHORT $LN2@Tidy
; Line 1625
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002c	3b f4		 cmp	 esi, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00039	52		 push	 edx
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	51		 push	 ecx
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z ; std::vector<Particle,std::allocator<Particle> >::_Destroy
; Line 1628
  00049	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00052	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  00055	c1 f9 04	 sar	 ecx, 4
  00058	51		 push	 ecx
  00059	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0005f	50		 push	 eax
  00060	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00063	51		 push	 ecx
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z ; std::_Wrap_alloc<std::allocator<Particle> >::deallocate
; Line 1629
  00073	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00076	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 1630
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
  00091	5e		 pop	 esi
  00092	83 c4 08	 add	 esp, 8
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ ENDP ; std::vector<Particle,std::allocator<Particle> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z PROC ; std::vector<Particle,std::allocator<Particle> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0001a	8d 45 f7	 lea	 eax, DWORD PTR __Alval$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal
; Line 1567
  00026	8d 4d f7	 lea	 ecx, DWORD PTR __Alval$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@@std@@YAXPAUParticle@@0AAU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Particle> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0003a	52		 push	 edx
  0003b	8b cd		 mov	 ecx, ebp
  0003d	50		 push	 eax
  0003e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00044	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00049	58		 pop	 eax
  0004a	5a		 pop	 edx
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 08 00	 ret	 8
  0005b	90		 npad	 1
$LN5@Destroy:
  0005c	01 00 00 00	 DD	 1
  00060	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00064	f7 ff ff ff	 DD	 -9			; fffffff7H
  00068	01 00 00 00	 DD	 1
  0006c	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00070	5f		 DB	 95			; 0000005fH
  00071	41		 DB	 65			; 00000041H
  00072	6c		 DB	 108			; 0000006cH
  00073	76		 DB	 118			; 00000076H
  00074	61		 DB	 97			; 00000061H
  00075	6c		 DB	 108			; 0000006cH
  00076	00		 DB	 0
?_Destroy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXPAUParticle@@0@Z ENDP ; std::vector<Particle,std::allocator<Particle> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ PROC ; std::vector<Particle,std::allocator<Particle> >::~vector<Particle,std::allocator<Particle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@IAEXXZ ; std::vector<Particle,std::allocator<Particle> >::_Tidy
; Line 946
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::~_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::vector<Particle,std::allocator<Particle> >::~vector<Particle,std::allocator<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ PROC ; std::vector<Particle,std::allocator<Particle> >::vector<Particle,std::allocator<Particle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@UParticle@@@std@@QAE@XZ ; std::allocator<Particle>::allocator<Particle>
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
; Line 681
  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
??0?$vector@UParticle@@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::vector<Particle,std::allocator<Particle> >::vector<Particle,std::allocator<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Particle> >::_Wrap_alloc<std::allocator<Particle> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 637
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 627
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::~_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Free_proxy
; Line 609
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::~_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Particle> >::_Vector_val<std::_Simple_types<Particle> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Alloc_proxy
; Line 604
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UParticle@@V?$allocator@UParticle@@@std@@@std@@@std@@QAE@ABV?$allocator@UParticle@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >::_Vector_alloc<0,std::_Vec_base_types<Particle,std::allocator<Particle> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Particle> >::~_Vector_val<std::_Simple_types<Particle> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Particle> >::~_Vector_val<std::_Simple_types<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Particle> >::_Vector_val<std::_Simple_types<Particle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 484
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0
; Line 485
  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5e		 pop	 esi
  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Particle> >::_Vector_val<std::_Simple_types<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z PROC ; std::_Wrap_alloc<std::allocator<Particle> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z ; std::allocator<Particle>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAEXPAUParticle@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<Particle> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<Particle> >::_Wrap_alloc<std::allocator<Particle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@UParticle@@@std@@QAE@XZ ; std::allocator<Particle>::allocator<Particle>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@UParticle@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<Particle> >::_Wrap_alloc<std::allocator<Particle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z PROC ; std::allocator<Particle>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@UParticle@@@std@@QAEXPAUParticle@@I@Z ENDP ; std::allocator<Particle>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@UParticle@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UParticle@@@std@@QAE@XZ PROC		; std::allocator<Particle>::allocator<Particle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@UParticle@@@std@@QAE@XZ ENDP		; std::allocator<Particle>::allocator<Particle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_vPlanes@@YAXXZ
text$di	SEGMENT
??__Eg_vPlanes@@YAXXZ PROC				; `dynamic initializer for 'g_vPlanes'', COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 218
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0000c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00011	51		 push	 ecx
  00012	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	51		 push	 ecx
  00020	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00028	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET _g_vPlanes
  00032	e8 00 00 00 00	 call	 ??0XMFLOAT3A@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3A::XMFLOAT3A
  00037	51		 push	 ecx
  00038	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00045	51		 push	 ecx
  00046	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0004e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00053	51		 push	 ecx
  00054	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0005c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00061	b9 10 00 00 00	 mov	 ecx, OFFSET _g_vPlanes+16
  00066	e8 00 00 00 00	 call	 ??0XMFLOAT3A@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3A::XMFLOAT3A
  0006b	51		 push	 ecx
  0006c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fMapWidth
  00074	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00079	51		 push	 ecx
  0007a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	51		 push	 ecx
  00088	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00090	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00095	b9 20 00 00 00	 mov	 ecx, OFFSET _g_vPlanes+32
  0009a	e8 00 00 00 00	 call	 ??0XMFLOAT3A@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3A::XMFLOAT3A
  0009f	51		 push	 ecx
  000a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _g_fMapHeight
  000a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ad	51		 push	 ecx
  000ae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	51		 push	 ecx
  000bc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c9	b9 30 00 00 00	 mov	 ecx, OFFSET _g_vPlanes+48
  000ce	e8 00 00 00 00	 call	 ??0XMFLOAT3A@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3A::XMFLOAT3A
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
??__Eg_vPlanes@@YAXXZ ENDP				; `dynamic initializer for 'g_vPlanes''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_fMapWidth@@YAXXZ
text$di	SEGMENT
??__Eg_fMapWidth@@YAXXZ PROC				; `dynamic initializer for 'g_fMapWidth'', COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3faaaaab
  0000b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _g_fMapHeight
  00013	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR _g_fMapWidth, xmm0
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??__Eg_fMapWidth@@YAXXZ ENDP				; `dynamic initializer for 'g_fMapWidth''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_vGravity@@YAXXZ
text$di	SEGMENT
??__Eg_vGravity@@YAXXZ PROC				; `dynamic initializer for 'g_vGravity'', COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 202
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR _GRAVITY_DOWN
  00008	a3 00 00 00 00	 mov	 DWORD PTR ?g_vGravity@@3UXMFLOAT2A@DirectX@@A, eax
  0000d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _GRAVITY_DOWN+4
  00013	89 0d 04 00 00
	00		 mov	 DWORD PTR ?g_vGravity@@3UXMFLOAT2A@DirectX@@A+4, ecx
  00019	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR _GRAVITY_DOWN+8
  0001f	89 15 08 00 00
	00		 mov	 DWORD PTR ?g_vGravity@@3UXMFLOAT2A@DirectX@@A+8, edx
  00025	a1 0c 00 00 00	 mov	 eax, DWORD PTR _GRAVITY_DOWN+12
  0002a	a3 0c 00 00 00	 mov	 DWORD PTR ?g_vGravity@@3UXMFLOAT2A@DirectX@@A+12, eax
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
??__Eg_vGravity@@YAXXZ ENDP				; `dynamic initializer for 'g_vGravity''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__EGRAVITY_DOWN@@YAXXZ
text$di	SEGMENT
??__EGRAVITY_DOWN@@YAXXZ PROC				; `dynamic initializer for 'GRAVITY_DOWN'', COMDAT
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 201
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0000c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00011	51		 push	 ecx
  00012	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET _GRAVITY_DOWN
  00024	e8 00 00 00 00	 call	 ??0XMFLOAT2A@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2A::XMFLOAT2A
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??__EGRAVITY_DOWN@@YAXXZ ENDP				; `dynamic initializer for 'GRAVITY_DOWN''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GFOO@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GFOO@@QAEPAXI@Z PROC					; FOO::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1FOO@@QAE@XZ		; FOO::~FOO
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_GFOO@@QAEPAXI@Z ENDP					; FOO::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1FOO@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1FOO@@QAE@XZ PROC					; FOO::~FOO, COMDAT
; _this$ = ecx
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 160
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 162
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??1FOO@@QAE@XZ ENDP					; FOO::~FOO
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -96						; size = 16
$T2 = -80						; size = 16
_t$ = -64						; size = 16
$T3 = -48						; size = 16
$T4 = -32						; size = 16
_xMask$ = -16						; size = 16
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?_mm_div_ps_composite@@YA?AT__m128@@ABT1@0@Z PROC	; _mm_div_ps_composite
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 110
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 60	 sub	 esp, 96			; 00000060H
  00019	57		 push	 edi
  0001a	8d 7d a0	 lea	 edi, DWORD PTR [ebp-96]
  0001d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
; Line 111
  00029	0f 57 c0	 xorps	 xmm0, xmm0
  0002c	0f 29 45 e0	 movaps	 XMMWORD PTR $T4[ebp], xmm0
  00030	8b 43 0c	 mov	 eax, DWORD PTR _b$[ebx]
  00033	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00036	0f c2 45 e0 04	 cmpneqps xmm0, XMMWORD PTR $T4[ebp]
  0003b	0f 29 45 d0	 movaps	 XMMWORD PTR $T3[ebp], xmm0
  0003f	0f 28 45 d0	 movaps	 xmm0, XMMWORD PTR $T3[ebp]
  00043	0f 29 45 f0	 movaps	 XMMWORD PTR _xMask$[ebp], xmm0
; Line 112
  00047	8b 4b 0c	 mov	 ecx, DWORD PTR _b$[ebx]
  0004a	8b 53 08	 mov	 edx, DWORD PTR _a$[ebx]
  0004d	0f 10 02	 movups	 xmm0, XMMWORD PTR [edx]
  00050	0f 5e 01	 divps	 xmm0, XMMWORD PTR [ecx]
  00053	0f 29 45 b0	 movaps	 XMMWORD PTR $T2[ebp], xmm0
  00057	0f 28 45 b0	 movaps	 xmm0, XMMWORD PTR $T2[ebp]
  0005b	0f 29 45 c0	 movaps	 XMMWORD PTR _t$[ebp], xmm0
; Line 113
  0005f	0f 28 45 c0	 movaps	 xmm0, XMMWORD PTR _t$[ebp]
  00063	0f 54 45 f0	 andps	 xmm0, XMMWORD PTR _xMask$[ebp]
  00067	0f 29 45 a0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  0006b	0f 28 45 a0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
  0006f	0f 29 45 c0	 movaps	 XMMWORD PTR _t$[ebp], xmm0
; Line 114
  00073	0f 28 45 c0	 movaps	 xmm0, XMMWORD PTR _t$[ebp]
; Line 115
  00077	5f		 pop	 edi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	8b e3		 mov	 esp, ebx
  0007d	5b		 pop	 ebx
  0007e	c3		 ret	 0
?_mm_div_ps_composite@@YA?AT__m128@@ABT1@0@Z ENDP	; _mm_div_ps_composite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -48						; size = 16
$T2 = -32						; size = 16
$T3 = -16						; size = 16
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_c$ = 16						; size = 4
_d$ = 20						; size = 4
?_mm_add4_ps_composite@@YA?AT__m128@@ABT1@000@Z PROC	; _mm_add4_ps_composite
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 97
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 30	 sub	 esp, 48			; 00000030H
  00019	57		 push	 edi
  0001a	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0001d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
; Line 98
  00029	8b 43 14	 mov	 eax, DWORD PTR _d$[ebx]
  0002c	8b 4b 10	 mov	 ecx, DWORD PTR _c$[ebx]
  0002f	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00032	0f 58 00	 addps	 xmm0, XMMWORD PTR [eax]
  00035	0f 29 45 e0	 movaps	 XMMWORD PTR $T2[ebp], xmm0
  00039	8b 53 0c	 mov	 edx, DWORD PTR _b$[ebx]
  0003c	8b 43 08	 mov	 eax, DWORD PTR _a$[ebx]
  0003f	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00042	0f 58 02	 addps	 xmm0, XMMWORD PTR [edx]
  00045	0f 29 45 f0	 movaps	 XMMWORD PTR $T3[ebp], xmm0
  00049	0f 28 45 f0	 movaps	 xmm0, XMMWORD PTR $T3[ebp]
  0004d	0f 58 45 e0	 addps	 xmm0, XMMWORD PTR $T2[ebp]
  00051	0f 29 45 d0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00055	0f 28 45 d0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 99
  00059	5f		 pop	 edi
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	8b e3		 mov	 esp, ebx
  0005f	5b		 pop	 ebx
  00060	c3		 ret	 0
?_mm_add4_ps_composite@@YA?AT__m128@@ABT1@000@Z ENDP	; _mm_add4_ps_composite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -32						; size = 16
$T2 = -16						; size = 16
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_c$ = 16						; size = 4
?_mm_add3_ps_composite@@YA?AT__m128@@ABT1@00@Z PROC	; _mm_add3_ps_composite
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 82
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 20	 sub	 esp, 32			; 00000020H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00021	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00024	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00027	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00030	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00033	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 83
  00036	8b 43 0c	 mov	 eax, DWORD PTR _b$[ebx]
  00039	8b 4b 08	 mov	 ecx, DWORD PTR _a$[ebx]
  0003c	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  0003f	0f 58 00	 addps	 xmm0, XMMWORD PTR [eax]
  00042	0f 29 45 f0	 movaps	 XMMWORD PTR $T2[ebp], xmm0
  00046	8b 53 10	 mov	 edx, DWORD PTR _c$[ebx]
  00049	0f 28 45 f0	 movaps	 xmm0, XMMWORD PTR $T2[ebp]
  0004d	0f 58 02	 addps	 xmm0, XMMWORD PTR [edx]
  00050	0f 29 45 e0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00054	0f 28 45 e0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 84
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	8b e3		 mov	 esp, ebx
  0005d	5b		 pop	 ebx
  0005e	c3		 ret	 0
?_mm_add3_ps_composite@@YA?AT__m128@@ABT1@00@Z ENDP	; _mm_add3_ps_composite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -16						; size = 16
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_w$ = 20						; size = 4
?CAST@@YA?AT__m128@@MMMM@Z PROC				; CAST
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 68
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 10	 sub	 esp, 16			; 00000010H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00021	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00024	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00027	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 69
  0002a	f3 0f 10 43 14	 movss	 xmm0, DWORD PTR _w$[ebx]
  0002f	f3 0f 10 4b 10	 movss	 xmm1, DWORD PTR _z$[ebx]
  00034	f3 0f 10 53 0c	 movss	 xmm2, DWORD PTR _y$[ebx]
  00039	f3 0f 10 5b 08	 movss	 xmm3, DWORD PTR _x$[ebx]
  0003e	0f 14 d9	 unpcklps xmm3, xmm1
  00041	0f 14 d0	 unpcklps xmm2, xmm0
  00044	0f 14 da	 unpcklps xmm3, xmm2
  00047	0f 29 5d f0	 movaps	 XMMWORD PTR $T1[ebp], xmm3
  0004b	0f 28 45 f0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 70
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	8b e3		 mov	 esp, ebx
  00054	5b		 pop	 ebx
  00055	c3		 ret	 0
?CAST@@YA?AT__m128@@MMMM@Z ENDP				; CAST
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_v$ = 8							; size = 4
?GetW@@YAMABT__m128@@@Z PROC				; GetW
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 63
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 64
  00003	b8 04 00 00 00	 mov	 eax, 4
  00008	6b c8 03	 imul	 ecx, eax, 3
  0000b	8b 55 08	 mov	 edx, DWORD PTR _v$[ebp]
  0000e	d9 04 0a	 fld	 DWORD PTR [edx+ecx]
; Line 65
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?GetW@@YAMABT__m128@@@Z ENDP				; GetW
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_v$ = 8							; size = 4
?GetZ@@YAMABT__m128@@@Z PROC				; GetZ
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 54
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 55
  00003	b8 04 00 00 00	 mov	 eax, 4
  00008	d1 e0		 shl	 eax, 1
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
  0000d	d9 04 01	 fld	 DWORD PTR [ecx+eax]
; Line 56
  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?GetZ@@YAMABT__m128@@@Z ENDP				; GetZ
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_v$ = -32						; size = 16
?GetY@@YAMT__m128@@@Z PROC				; GetY
; _v$ = xmm0
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 45
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 30	 sub	 esp, 48			; 00000030H
  00019	57		 push	 edi
  0001a	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0001d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	0f 29 45 e0	 movaps	 XMMWORD PTR _v$[ebp], xmm0
; Line 46
  0002d	b8 04 00 00 00	 mov	 eax, 4
  00032	c1 e0 00	 shl	 eax, 0
  00035	d9 44 05 e0	 fld	 DWORD PTR _v$[ebp+eax]
; Line 47
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@GetY
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	5f		 pop	 edi
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	8b e3		 mov	 esp, ebx
  00050	5b		 pop	 ebx
  00051	c3		 ret	 0
  00052	8b ff		 npad	 2
$LN5@GetY:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN4@GetY
$LN4@GetY:
  0005c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00060	10 00 00 00	 DD	 16			; 00000010H
  00064	00 00 00 00	 DD	 $LN3@GetY
$LN3@GetY:
  00068	76		 DB	 118			; 00000076H
  00069	00		 DB	 0
?GetY@@YAMT__m128@@@Z ENDP				; GetY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_v$ = -32						; size = 16
?GetX@@YAMT__m128@@@Z PROC				; GetX
; _v$ = xmm0
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 36
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 30	 sub	 esp, 48			; 00000030H
  00019	57		 push	 edi
  0001a	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0001d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	0f 29 45 e0	 movaps	 XMMWORD PTR _v$[ebp], xmm0
; Line 37
  0002d	b8 04 00 00 00	 mov	 eax, 4
  00032	6b c8 00	 imul	 ecx, eax, 0
  00035	d9 44 0d e0	 fld	 DWORD PTR _v$[ebp+ecx]
; Line 38
  00039	52		 push	 edx
  0003a	8b cd		 mov	 ecx, ebp
  0003c	50		 push	 eax
  0003d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@GetX
  00043	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00048	58		 pop	 eax
  00049	5a		 pop	 edx
  0004a	5f		 pop	 edi
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	8b e3		 mov	 esp, ebx
  00050	5b		 pop	 ebx
  00051	c3		 ret	 0
  00052	8b ff		 npad	 2
$LN5@GetX:
  00054	01 00 00 00	 DD	 1
  00058	00 00 00 00	 DD	 $LN4@GetX
$LN4@GetX:
  0005c	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00060	10 00 00 00	 DD	 16			; 00000010H
  00064	00 00 00 00	 DD	 $LN3@GetX
$LN3@GetX:
  00068	76		 DB	 118			; 00000076H
  00069	00		 DB	 0
?GetX@@YAMT__m128@@@Z ENDP				; GetX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -32						; size = 16
$T2 = -16						; size = 16
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_scalar$ = 16						; size = 4
?lerpAligned@@YA?AT__m128@@ABT1@0ABM@Z PROC		; lerpAligned
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 29
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 20	 sub	 esp, 32			; 00000020H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00021	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00024	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00027	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00030	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00033	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 30
  00036	8b 43 0c	 mov	 eax, DWORD PTR _b$[ebx]
  00039	0f 10 08	 movups	 xmm1, XMMWORD PTR [eax]
  0003c	8b 4b 08	 mov	 ecx, DWORD PTR _a$[ebx]
  0003f	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00042	e8 00 00 00 00	 call	 ?Add@@YA?AT__m128@@T1@0@Z ; Add
  00047	0f 29 45 f0	 movaps	 XMMWORD PTR $T2[ebp], xmm0
  0004b	8b 53 10	 mov	 edx, DWORD PTR _scalar$[ebx]
  0004e	52		 push	 edx
  0004f	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?Mult@@YA?AT__m128@@ABT1@ABM@Z ; Mult
  00058	83 c4 08	 add	 esp, 8
  0005b	0f 29 45 e0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  0005f	0f 28 45 e0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 31
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	8b e3		 mov	 esp, ebx
  00068	5b		 pop	 ebx
  00069	c3		 ret	 0
?lerpAligned@@YA?AT__m128@@ABT1@0ABM@Z ENDP		; lerpAligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -96						; size = 16
_$S1$ = -64						; size = 16
$T2 = -32						; size = 16
_scalarA$ = -4						; size = 4
_a$ = 8							; size = 4
_scalar$ = 12						; size = 4
?Mult@@YA?AT__m128@@ABT1@ABM@Z PROC			; Mult
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 23
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 60	 sub	 esp, 96			; 00000060H
  00019	57		 push	 edi
  0001a	8d 7d a0	 lea	 edi, DWORD PTR [ebp-96]
  0001d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
; Line 24
  00029	8b 43 0c	 mov	 eax, DWORD PTR _scalar$[ebx]
  0002c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00030	0f c6 c0 00	 shufps	 xmm0, xmm0, 0
  00034	0f 29 45 e0	 movaps	 XMMWORD PTR $T2[ebp], xmm0
  00038	0f 28 45 e0	 movaps	 xmm0, XMMWORD PTR $T2[ebp]
  0003c	0f 29 45 c0	 movaps	 XMMWORD PTR _$S1$[ebp], xmm0
  00040	8d 4d c0	 lea	 ecx, DWORD PTR _$S1$[ebp]
  00043	89 4d fc	 mov	 DWORD PTR _scalarA$[ebp], ecx
; Line 25
  00046	8b 55 fc	 mov	 edx, DWORD PTR _scalarA$[ebp]
  00049	8b 43 08	 mov	 eax, DWORD PTR _a$[ebx]
  0004c	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0004f	0f 59 02	 mulps	 xmm0, XMMWORD PTR [edx]
  00052	0f 29 45 a0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00056	0f 28 45 a0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 26
  0005a	52		 push	 edx
  0005b	8b cd		 mov	 ecx, ebp
  0005d	50		 push	 eax
  0005e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Mult
  00064	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00069	58		 pop	 eax
  0006a	5a		 pop	 edx
  0006b	5f		 pop	 edi
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	8b e3		 mov	 esp, ebx
  00071	5b		 pop	 ebx
  00072	c3		 ret	 0
  00073	90		 npad	 1
$LN5@Mult:
  00074	01 00 00 00	 DD	 1
  00078	00 00 00 00	 DD	 $LN4@Mult
$LN4@Mult:
  0007c	c0 ff ff ff	 DD	 -64			; ffffffc0H
  00080	10 00 00 00	 DD	 16			; 00000010H
  00084	00 00 00 00	 DD	 $LN3@Mult
$LN3@Mult:
  00088	24		 DB	 36			; 00000024H
  00089	53		 DB	 83			; 00000053H
  0008a	31		 DB	 49			; 00000031H
  0008b	00		 DB	 0
?Mult@@YA?AT__m128@@ABT1@ABM@Z ENDP			; Mult
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T1 = -48						; size = 16
_b$ = -32						; size = 16
_a$ = -16						; size = 16
?Add@@YA?AT__m128@@T1@0@Z PROC				; Add
; _a$ = xmm0
; _b$ = xmm1
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\constants.h
; Line 18
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 30	 sub	 esp, 48			; 00000030H
  00019	57		 push	 edi
  0001a	8d 7d d0	 lea	 edi, DWORD PTR [ebp-48]
  0001d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	0f 29 4d e0	 movaps	 XMMWORD PTR _b$[ebp], xmm1
  0002d	0f 29 45 f0	 movaps	 XMMWORD PTR _a$[ebp], xmm0
; Line 19
  00031	0f 28 45 f0	 movaps	 xmm0, XMMWORD PTR _a$[ebp]
  00035	0f 58 45 e0	 addps	 xmm0, XMMWORD PTR _b$[ebp]
  00039	0f 29 45 d0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  0003d	0f 28 45 d0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 20
  00041	5f		 pop	 edi
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	8b e3		 mov	 esp, ebx
  00047	5b		 pop	 ebx
  00048	c3		 ret	 0
?Add@@YA?AT__m128@@T1@0@Z ENDP				; Add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2295
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 2296
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2290
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 2291
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Ptr$3 = -8						; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2273
  0001e	0f b6 45 08	 movzx	 eax, BYTE PTR __Built$[ebp]
  00022	85 c0		 test	 eax, eax
  00024	75 02		 jne	 SHORT $LN4@Tidy
  00026	eb 73		 jmp	 SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 79 18 08	 cmp	 DWORD PTR [ecx+24], 8
  0002f	72 6a		 jb	 SHORT $LN3@Tidy
; Line 2277
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	89 45 f8	 mov	 DWORD PTR __Ptr$3[ebp], eax
; Line 2278
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 04	 add	 ecx, 4
  00040	51		 push	 ecx
  00041	8d 55 f7	 lea	 edx, DWORD PTR $T2[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t *>
; Line 2279
  00054	83 7d 0c 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  00058	76 20		 jbe	 SHORT $LN1@Tidy
; Line 2281
  0005a	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr$3[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$addressof@_W@std@@YAPA_WAA_W@Z ; std::addressof<wchar_t>
  00067	83 c4 04	 add	 esp, 4
  0006a	50		 push	 eax
  0006b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	83 c2 04	 add	 edx, 4
  00071	52		 push	 edx
  00072	e8 00 00 00 00	 call	 ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Tidy:
; Line 2282
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00080	83 c1 01	 add	 ecx, 1
  00083	51		 push	 ecx
  00084	8b 55 f8	 mov	 edx, DWORD PTR __Ptr$3[ebp]
  00087	52		 push	 edx
  00088	8d 45 f6	 lea	 eax, DWORD PTR $T1[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN3@Tidy:
; Line 2284
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	c7 41 18 07 00
	00 00		 mov	 DWORD PTR [ecx+24], 7
; Line 2285
  000a5	8b 55 0c	 mov	 edx, DWORD PTR __Newsize$[ebp]
  000a8	52		 push	 edx
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 2286
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 08 00	 ret	 8
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2258
  0000e	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00012	74 23		 je	 SHORT $LN2@Inside
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  0001c	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  0001f	72 16		 jb	 SHORT $LN2@Inside
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0002f	8d 04 50	 lea	 eax, DWORD PTR [eax+edx*2]
  00032	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00035	77 06		 ja	 SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
  00037	32 c0		 xor	 al, al
  00039	eb 04		 jmp	 SHORT $LN4@Inside
; Line 2260
  0003b	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
  0003d	b0 01		 mov	 al, 1
$LN4@Inside:
; Line 2262
  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2243
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  00026	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  00029	73 08		 jae	 SHORT $LN6@Grow
; Line 2244
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN6@Grow:
; Line 2245
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00039	3b 4d 08	 cmp	 ecx, DWORD PTR __Newsize$[ebp]
  0003c	73 15		 jae	 SHORT $LN5@Grow
; Line 2246
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00044	50		 push	 eax
  00045	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00048	51		 push	 ecx
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
  00051	eb 4a		 jmp	 SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
  00053	0f b6 55 0c	 movzx	 edx, BYTE PTR __Trim$[ebp]
  00057	85 d2		 test	 edx, edx
  00059	74 32		 je	 SHORT $LN3@Grow
  0005b	83 7d 08 08	 cmp	 DWORD PTR __Newsize$[ebp], 8
  0005f	73 2c		 jae	 SHORT $LN3@Grow
; Line 2249
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00067	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  0006a	73 08		 jae	 SHORT $LN9@Grow
  0006c	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  0006f	89 55 f8	 mov	 DWORD PTR tv129[ebp], edx
  00072	eb 09		 jmp	 SHORT $LN10@Grow
$LN9@Grow:
  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0007a	89 4d f8	 mov	 DWORD PTR tv129[ebp], ecx
$LN10@Grow:
  0007d	8b 55 f8	 mov	 edx, DWORD PTR tv129[ebp]
  00080	52		 push	 edx
  00081	6a 01		 push	 1
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
  0008b	eb 10		 jmp	 SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
  0008d	83 7d 08 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  00091	75 0a		 jne	 SHORT $LN4@Grow
; Line 2251
  00093	6a 00		 push	 0
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN4@Grow:
; Line 2252
  0009d	83 7d 08 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  000a1	76 09		 jbe	 SHORT $LN11@Grow
  000a3	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv136[ebp], 1
  000aa	eb 07		 jmp	 SHORT $LN12@Grow
$LN11@Grow:
  000ac	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN12@Grow:
  000b3	8a 45 f4	 mov	 al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b9	3b ec		 cmp	 ebp, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -6						; size = 2
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2237
  00017	33 c0		 xor	 eax, eax
  00019	66 89 45 fa	 mov	 WORD PTR $T1[ebp], ax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  00023	89 51 14	 mov	 DWORD PTR [ecx+20], edx
  00026	8d 45 fa	 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00032	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00035	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  00038	52		 push	 edx
  00039	e8 00 00 00 00	 call	 ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ; std::char_traits<wchar_t>::assign
  0003e	83 c4 08	 add	 esp, 8
; Line 2238
  00041	83 c4 08	 add	 esp, 8
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -56						; size = 4
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv202 = -44						; size = 4
$T2 = -39						; size = 1
$T3 = -38						; size = 1
$T4 = -37						; size = 1
__Ptr$ = -32						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 28	 sub	 esp, 40			; 00000028H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	51		 push	 ecx
  00019	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0001c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	59		 pop	 ecx
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2202
  00040	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00043	83 c8 07	 or	 eax, 7
  00046	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax
; Line 2203
  00049	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  00051	3b 45 e8	 cmp	 eax, DWORD PTR __Newres$[ebp]
  00054	73 08		 jae	 SHORT $LN9@Copy
; Line 2204
  00056	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00059	89 4d e8	 mov	 DWORD PTR __Newres$[ebp], ecx
  0005c	eb 52		 jmp	 SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
  0005e	8b 45 e8	 mov	 eax, DWORD PTR __Newres$[ebp]
  00061	33 d2		 xor	 edx, edx
  00063	b9 03 00 00 00	 mov	 ecx, 3
  00068	f7 f1		 div	 ecx
  0006a	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00070	d1 e9		 shr	 ecx, 1
  00072	3b c8		 cmp	 ecx, eax
  00074	77 02		 ja	 SHORT $LN7@Copy
  00076	eb 38		 jmp	 SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
  00078	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	8b 72 18	 mov	 esi, DWORD PTR [edx+24]
  0007e	d1 ee		 shr	 esi, 1
  00080	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  00088	2b c6		 sub	 eax, esi
  0008a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  00090	77 13		 ja	 SHORT $LN5@Copy
; Line 2209
  00092	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00095	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00098	d1 e8		 shr	 eax, 1
  0009a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	03 41 18	 add	 eax, DWORD PTR [ecx+24]
  000a0	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax
; Line 2210
  000a3	eb 0b		 jmp	 SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
  000a5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  000ad	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
  000b0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
  000b7	8d 55 db	 lea	 edx, DWORD PTR $T4[ebp]
  000ba	52		 push	 edx
  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
  000c3	89 45 d4	 mov	 DWORD PTR tv202[ebp], eax
  000c6	8b 45 e8	 mov	 eax, DWORD PTR __Newres$[ebp]
  000c9	83 c0 01	 add	 eax, 1
  000cc	50		 push	 eax
  000cd	8b 4d d4	 mov	 ecx, DWORD PTR tv202[ebp]
  000d0	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
  000d5	89 45 d0	 mov	 DWORD PTR tv203[ebp], eax
  000d8	8b 4d d0	 mov	 ecx, DWORD PTR tv203[ebp]
  000db	89 4d e0	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000de	eb 67		 jmp	 SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0:
; Line 2216
  000e0	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 2217
  000e3	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  000e6	89 55 e8	 mov	 DWORD PTR __Newres$[ebp], edx
; Line 2218
  000e9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
  000ed	8d 45 da	 lea	 eax, DWORD PTR $T3[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
  000f9	89 45 cc	 mov	 DWORD PTR tv204[ebp], eax
  000fc	8b 4d e8	 mov	 ecx, DWORD PTR __Newres$[ebp]
  000ff	83 c1 01	 add	 ecx, 1
  00102	51		 push	 ecx
  00103	8b 4d cc	 mov	 ecx, DWORD PTR tv204[ebp]
  00106	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
  0010b	89 45 c8	 mov	 DWORD PTR tv205[ebp], eax
  0010e	8b 55 c8	 mov	 edx, DWORD PTR tv205[ebp]
  00111	89 55 e0	 mov	 DWORD PTR __Ptr$[ebp], edx
  00114	eb 1b		 jmp	 SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1:
; Line 2221
  00116	6a 00		 push	 0
  00118	6a 01		 push	 1
  0011a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 2222
  00122	6a 00		 push	 0
  00124	6a 00		 push	 0
  00126	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 2223
  0012b	b8 00 00 00 00	 mov	 eax, $LN17@Copy
  00130	c3		 ret	 0
$LN14@Copy:
  00131	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  00138	eb 07		 jmp	 SHORT __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$2
$LN17@Copy:
  0013a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$2:
; Line 2224
  00141	b8 00 00 00 00	 mov	 eax, $LN19@Copy
  00146	c3		 ret	 0
$LN12@Copy:
  00147	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0014e	eb 07		 jmp	 SHORT __tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$3
$LN19@Copy:
  00150	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$3:
; Line 2226
  00157	83 7d 0c 00	 cmp	 DWORD PTR __Oldlen$[ebp], 0
  0015b	76 19		 jbe	 SHORT $LN1@Copy
; Line 2228
  0015d	8b 45 0c	 mov	 eax, DWORD PTR __Oldlen$[ebp]
  00160	50		 push	 eax
  00161	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00169	50		 push	 eax
  0016a	8b 4d e0	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0016d	51		 push	 ecx
  0016e	e8 00 00 00 00	 call	 ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
  00173	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Copy:
; Line 2229
  00176	6a 00		 push	 0
  00178	6a 01		 push	 1
  0017a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 2230
  00182	8d 55 e0	 lea	 edx, DWORD PTR __Ptr$[ebp]
  00185	52		 push	 edx
  00186	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00189	83 c0 04	 add	 eax, 4
  0018c	50		 push	 eax
  0018d	8d 4d d9	 lea	 ecx, DWORD PTR $T2[ebp]
  00190	51		 push	 ecx
  00191	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
  00199	8b c8		 mov	 ecx, eax
  0019b	e8 00 00 00 00	 call	 ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
; Line 2231
  001a0	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  001a3	8b 45 e8	 mov	 eax, DWORD PTR __Newres$[ebp]
  001a6	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 2232
  001a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  001ac	51		 push	 ecx
  001ad	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b0	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN11@Copy:
; Line 2233
  001b5	52		 push	 edx
  001b6	8b cd		 mov	 ecx, ebp
  001b8	50		 push	 eax
  001b9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@Copy
  001bf	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001c4	58		 pop	 eax
  001c5	5a		 pop	 edx
  001c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001d0	59		 pop	 ecx
  001d1	5f		 pop	 edi
  001d2	5e		 pop	 esi
  001d3	5b		 pop	 ebx
  001d4	83 c4 38	 add	 esp, 56			; 00000038H
  001d7	3b ec		 cmp	 ebp, esp
  001d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c2 08 00	 ret	 8
$LN23@Copy:
  001e4	01 00 00 00	 DD	 1
  001e8	00 00 00 00	 DD	 $LN22@Copy
$LN22@Copy:
  001ec	e0 ff ff ff	 DD	 -32			; ffffffe0H
  001f0	04 00 00 00	 DD	 4
  001f4	00 00 00 00	 DD	 $LN20@Copy
$LN20@Copy:
  001f8	5f		 DB	 95			; 0000005fH
  001f9	50		 DB	 80			; 00000050H
  001fa	74		 DB	 116			; 00000074H
  001fb	72		 DB	 114			; 00000072H
  001fc	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -16						; size = 4
$T1 = -9						; size = 1
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  0001a	8d 45 f7	 lea	 eax, DWORD PTR $T1[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
  00026	8b c8		 mov	 ecx, eax
  00028	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
  0002d	89 45 f8	 mov	 DWORD PTR __Num$[ebp], eax
; Line 1760
  00030	83 7d f8 01	 cmp	 DWORD PTR __Num$[ebp], 1
  00034	77 09		 ja	 SHORT $LN3@max_size
  00036	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0003d	eb 09		 jmp	 SHORT $LN4@max_size
$LN3@max_size:
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR __Num$[ebp]
  00042	83 e9 01	 sub	 ecx, 1
  00045	89 4d f0	 mov	 DWORD PTR tv75[ebp], ecx
$LN4@max_size:
  00048	8b 45 f0	 mov	 eax, DWORD PTR tv75[ebp]
; Line 1761
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
; Line 1755
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1738
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1739
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
; Line 1740
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1343
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00024	3b 4d 08	 cmp	 ecx, DWORD PTR __Off$[ebp]
  00027	73 08		 jae	 SHORT $LN4@erase
; Line 1344
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN4@erase:
; Line 1345
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00037	2b 45 08	 sub	 eax, DWORD PTR __Off$[ebp]
  0003a	3b 45 0c	 cmp	 eax, DWORD PTR __Count$[ebp]
  0003d	77 0e		 ja	 SHORT $LN3@erase
; Line 1346
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00042	51		 push	 ecx
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
  0004b	eb 4c		 jmp	 SHORT $LN2@erase
$LN3@erase:
; Line 1347
  0004d	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00051	76 46		 jbe	 SHORT $LN2@erase
; Line 1349
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  0005b	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  0005e	8d 04 50	 lea	 eax, DWORD PTR [eax+edx*2]
  00061	89 45 f8	 mov	 DWORD PTR __Ptr$2[ebp], eax
; Line 1350
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0006a	2b 55 0c	 sub	 edx, DWORD PTR __Count$[ebp]
  0006d	89 55 f4	 mov	 DWORD PTR __Newsize$1[ebp], edx
; Line 1351
  00070	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$1[ebp]
  00073	2b 45 08	 sub	 eax, DWORD PTR __Off$[ebp]
  00076	50		 push	 eax
  00077	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  0007a	8b 55 f8	 mov	 edx, DWORD PTR __Ptr$2[ebp]
  0007d	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr$2[ebp]
  00084	51		 push	 ecx
  00085	e8 00 00 00 00	 call	 ?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1352
  0008d	8b 55 f4	 mov	 edx, DWORD PTR __Newsize$1[ebp]
  00090	52		 push	 edx
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN2@erase:
; Line 1354
  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 08 00	 ret	 8
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1335
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00014	3b 4d 08	 cmp	 ecx, DWORD PTR __Off$[ebp]
  00017	73 08		 jae	 SHORT $LN1@erase
; Line 1336
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN1@erase:
; Line 1337
  00021	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  00024	52		 push	 edx
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
; Line 1338
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
  00030	83 c4 04	 add	 esp, 4
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1150
  0000e	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00012	74 16		 je	 SHORT $LN3@assign
; Line 1151
  00014	68 7f 04 00 00	 push	 1151			; 0000047fH
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Debug_pointer@_W@std@@YAXPB_W0I@Z ; std::_Debug_pointer<wchar_t>
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@assign:
; Line 1154
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
  00036	0f b6 d0	 movzx	 edx, al
  00039	85 d2		 test	 edx, edx
  0003b	74 22		 je	 SHORT $LN2@assign
; Line 1156
  0003d	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00040	50		 push	 eax
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00049	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0004c	2b c8		 sub	 ecx, eax
  0004e	d1 f9		 sar	 ecx, 1
  00050	51		 push	 ecx
  00051	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00054	52		 push	 edx
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
  0005d	eb 3d		 jmp	 SHORT $LN4@assign
$LN2@assign:
; Line 1158
  0005f	6a 00		 push	 0
  00061	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00064	50		 push	 eax
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
  0006d	0f b6 c8	 movzx	 ecx, al
  00070	85 c9		 test	 ecx, ecx
  00072	74 25		 je	 SHORT $LN1@assign
; Line 1160
  00074	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00077	52		 push	 edx
  00078	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1161
  0008d	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00090	51		 push	 ecx
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN1@assign:
; Line 1163
  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
  0009c	83 c4 04	 add	 esp, 4
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 08 00	 ret	 8
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1130
  00017	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001a	e8 00 00 00 00	 call	 ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
  0001f	3b 45 0c	 cmp	 eax, DWORD PTR __Roff$[ebp]
  00022	73 08		 jae	 SHORT $LN5@assign
; Line 1131
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN5@assign:
; Line 1132
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002f	e8 00 00 00 00	 call	 ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
  00034	2b 45 0c	 sub	 eax, DWORD PTR __Roff$[ebp]
  00037	89 45 f8	 mov	 DWORD PTR __Num$[ebp], eax
; Line 1133
  0003a	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  0003d	3b 45 f8	 cmp	 eax, DWORD PTR __Num$[ebp]
  00040	73 06		 jae	 SHORT $LN4@assign
; Line 1134
  00042	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  00045	89 4d f8	 mov	 DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	3b 55 08	 cmp	 edx, DWORD PTR __Right$[ebp]
  0004e	75 1f		 jne	 SHORT $LN3@assign
; Line 1137
  00050	8b 45 0c	 mov	 eax, DWORD PTR __Roff$[ebp]
  00053	03 45 f8	 add	 eax, DWORD PTR __Num$[ebp]
  00056	50		 push	 eax
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  00062	51		 push	 ecx
  00063	6a 00		 push	 0
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
  0006d	eb 45		 jmp	 SHORT $LN2@assign
$LN3@assign:
; Line 1138
  0006f	6a 00		 push	 0
  00071	8b 55 f8	 mov	 edx, DWORD PTR __Num$[ebp]
  00074	52		 push	 edx
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
  0007d	0f b6 c0	 movzx	 eax, al
  00080	85 c0		 test	 eax, eax
  00082	74 30		 je	 SHORT $LN2@assign
; Line 1141
  00084	8b 4d f8	 mov	 ecx, DWORD PTR __Num$[ebp]
  00087	51		 push	 ecx
  00088	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00090	8b 55 0c	 mov	 edx, DWORD PTR __Roff$[ebp]
  00093	8d 04 50	 lea	 eax, DWORD PTR [eax+edx*2]
  00096	50		 push	 eax
  00097	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::copy
  000a5	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1142
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR __Num$[ebp]
  000ab	51		 push	 ecx
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN2@assign:
; Line 1144
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
  000b7	83 c4 08	 add	 esp, 8
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 991
  0000e	6a 00		 push	 0
  00010	6a 01		 push	 1
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 992
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 935
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 936
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	83 78 18 08	 cmp	 DWORD PTR [eax+24], 8
  0001e	73 22		 jae	 SHORT $LN2@Assign_rv
; Line 938
  00020	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00023	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00026	83 c2 01	 add	 edx, 1
  00029	52		 push	 edx
  0002a	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0002d	83 c0 04	 add	 eax, 4
  00030	50		 push	 eax
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	83 c1 04	 add	 ecx, 4
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ; std::char_traits<wchar_t>::move
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 939
  00040	eb 2b		 jmp	 SHORT $LN1@Assign_rv
$LN2@Assign_rv:
; Line 941
  00042	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00045	83 c2 04	 add	 edx, 4
  00048	52		 push	 edx
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	83 c0 04	 add	 eax, 4
  0004f	50		 push	 eax
  00050	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 ??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * &>
; Line 942
  00063	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00066	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
$LN1@Assign_rv:
; Line 944
  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00073	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00076	89 50 14	 mov	 DWORD PTR [eax+20], edx
; Line 945
  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0007f	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00082	89 50 18	 mov	 DWORD PTR [eax+24], edx
; Line 946
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 947
  00091	83 c4 08	 add	 esp, 8
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 887
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
; Line 888
  0002c	6a 00		 push	 0
  0002e	6a 00		 push	 0
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 889
  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00041	83 c4 04	 add	 esp, 4
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
; Line 890
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 766
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QAE@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 767
  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 768
  0005a	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00061	51		 push	 ecx
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 769
  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 14	 add	 esp, 20			; 00000014H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 738
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QAE@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 739
  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
; Line 740
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00067	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006e	59		 pop	 ecx
  0006f	83 c4 14	 add	 esp, 20			; 00000014H
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 684
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 674
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 676
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 679
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 665
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 667
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 669
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 650
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
; Line 651
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
; Line 646
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<0,std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 520
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 78 18 08	 cmp	 DWORD PTR [eax+24], 8
  0001e	72 14		 jb	 SHORT $LN3@Myptr
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 ??$addressof@_W@std@@YAPA_WAA_W@Z ; std::addressof<wchar_t>
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  00032	eb 09		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 c0 04	 add	 eax, 4
  0003a	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
$LN4@Myptr:
  0003d	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
; Line 521
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 513
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 78 18 08	 cmp	 DWORD PTR [eax+24], 8
  0001e	72 14		 jb	 SHORT $LN3@Myptr
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 ??$addressof@_W@std@@YAPA_WAA_W@Z ; std::addressof<wchar_t>
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  00032	eb 09		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 c0 04	 add	 eax, 4
  0003a	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
$LN4@Myptr:
  0003d	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
; Line 514
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 494
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0
; Line 495
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 496
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	5e		 pop	 esi
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ; std::allocator<wchar_t>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QAEPA_WI@Z ; std::allocator<wchar_t>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QAE@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@_W@std@@QBEIXZ ; std::allocator<wchar_t>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@_W@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@_W@std@@QBEIXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
; Line 613
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@_W@std@@QBEIXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@_W@std@@YAPA_WIPA_W@Z ; std::_Allocate<wchar_t>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T2 = -64						; size = 4
$T3 = -60						; size = 12
__Pfmod$4 = -48						; size = 4
__Pf$5 = -44						; size = 4
__Id$6 = -40						; size = 4
__Psave$7 = -32						; size = 4
__Lock$8 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<wchar_t> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 561
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8d 7d c0	 lea	 edi, DWORD PTR [ebp-64]
  00019	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002a	33 c5		 xor	 eax, ebp
  0002c	50		 push	 eax
  0002d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00030	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 567
  00036	8b f4		 mov	 esi, esp
  00038	6a 00		 push	 0
  0003a	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$8[ebp]
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 569
  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
  00056	89 45 e0	 mov	 DWORD PTR __Psave$7[ebp], eax
; Line 571
  00059	8b f4		 mov	 esi, esp
  0005b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?id@?$ctype@_W@std@@2V0locale@2@A
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??Bid@locale@std@@QAEIXZ
  00067	3b f4		 cmp	 esi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	89 45 d8	 mov	 DWORD PTR __Id$6[ebp], eax
; Line 572
  00071	8b 4d d8	 mov	 ecx, DWORD PTR __Id$6[ebp]
  00074	51		 push	 ecx
  00075	8b 4d 08	 mov	 ecx, DWORD PTR __Loc$[ebp]
  00078	e8 00 00 00 00	 call	 ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ; std::locale::_Getfacet
  0007d	89 45 d4	 mov	 DWORD PTR __Pf$5[ebp], eax
; Line 574
  00080	83 7d d4 00	 cmp	 DWORD PTR __Pf$5[ebp], 0
  00084	74 05		 je	 SHORT $LN6@use_facet
  00086	e9 8b 00 00 00	 jmp	 $LN5@use_facet
$LN6@use_facet:
; Line 576
  0008b	83 7d e0 00	 cmp	 DWORD PTR __Psave$7[ebp], 0
  0008f	74 08		 je	 SHORT $LN4@use_facet
; Line 577
  00091	8b 55 e0	 mov	 edx, DWORD PTR __Psave$7[ebp]
  00094	89 55 d4	 mov	 DWORD PTR __Pf$5[ebp], edx
  00097	eb 7d		 jmp	 SHORT $LN5@use_facet
$LN4@use_facet:
; Line 578
  00099	8b f4		 mov	 esi, esp
  0009b	8b 45 08	 mov	 eax, DWORD PTR __Loc$[ebp]
  0009e	50		 push	 eax
  0009f	8d 4d e0	 lea	 ecx, DWORD PTR __Psave$7[ebp]
  000a2	51		 push	 ecx
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
  000a9	83 c4 08	 add	 esp, 8
  000ac	3b f4		 cmp	 esi, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b3	83 f8 ff	 cmp	 eax, -1
  000b6	75 27		 jne	 SHORT $LN2@use_facet
; Line 582
  000b8	8b f4		 mov	 esi, esp
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
  000bf	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0bad_cast@std@@QAE@PBD@Z
  000c8	3b f4		 cmp	 esi, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_cast@std@@
  000d4	8d 55 c4	 lea	 edx, DWORD PTR $T3[ebp]
  000d7	52		 push	 edx
  000d8	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 588
  000dd	eb 37		 jmp	 SHORT $LN5@use_facet
$LN2@use_facet:
; Line 590
  000df	8b 45 e0	 mov	 eax, DWORD PTR __Psave$7[ebp]
  000e2	89 45 d4	 mov	 DWORD PTR __Pf$5[ebp], eax
; Line 591
  000e5	8b 4d e0	 mov	 ecx, DWORD PTR __Psave$7[ebp]
  000e8	89 0d 00 00 00
	00		 mov	 DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@_W@std@@@std@@2PBVfacet@locale@2@B, ecx ; std::_Facetptr<std::ctype<wchar_t> >::_Psave
; Line 593
  000ee	8b 55 e0	 mov	 edx, DWORD PTR __Psave$7[ebp]
  000f1	89 55 d0	 mov	 DWORD PTR __Pfmod$4[ebp], edx
; Line 594
  000f4	8b 45 d0	 mov	 eax, DWORD PTR __Pfmod$4[ebp]
  000f7	8b 10		 mov	 edx, DWORD PTR [eax]
  000f9	8b f4		 mov	 esi, esp
  000fb	8b 4d d0	 mov	 ecx, DWORD PTR __Pfmod$4[ebp]
  000fe	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00101	ff d0		 call	 eax
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 600
  0010a	8b 4d d0	 mov	 ecx, DWORD PTR __Pfmod$4[ebp]
  0010d	51		 push	 ecx
  0010e	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z ; std::_Facet_Register
  00113	83 c4 04	 add	 esp, 4
$LN5@use_facet:
; Line 604
  00116	8b 55 d4	 mov	 edx, DWORD PTR __Pf$5[ebp]
  00119	89 55 c0	 mov	 DWORD PTR $T2[ebp], edx
  0011c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00123	8b f4		 mov	 esi, esp
  00125	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$8[ebp]
  00128	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0012e	3b f4		 cmp	 esi, esp
  00130	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00135	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
$LN8@use_facet:
; Line 607
  00138	52		 push	 edx
  00139	8b cd		 mov	 ecx, ebp
  0013b	50		 push	 eax
  0013c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN14@use_facet
  00142	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00147	58		 pop	 eax
  00148	5a		 pop	 edx
  00149	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00153	59		 pop	 ecx
  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	83 c4 40	 add	 esp, 64			; 00000040H
  00159	3b ec		 cmp	 ebp, esp
  0015b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00160	8b e5		 mov	 esp, ebp
  00162	5d		 pop	 ebp
  00163	c3		 ret	 0
$LN14@use_facet:
  00164	02 00 00 00	 DD	 2
  00168	00 00 00 00	 DD	 $LN13@use_facet
$LN13@use_facet:
  0016c	ec ff ff ff	 DD	 -20			; ffffffecH
  00170	04 00 00 00	 DD	 4
  00174	00 00 00 00	 DD	 $LN10@use_facet
  00178	e0 ff ff ff	 DD	 -32			; ffffffe0H
  0017c	04 00 00 00	 DD	 4
  00180	00 00 00 00	 DD	 $LN11@use_facet
$LN11@use_facet:
  00184	5f		 DB	 95			; 0000005fH
  00185	50		 DB	 80			; 00000050H
  00186	73		 DB	 115			; 00000073H
  00187	61		 DB	 97			; 00000061H
  00188	76		 DB	 118			; 00000076H
  00189	65		 DB	 101			; 00000065H
  0018a	00		 DB	 0
$LN10@use_facet:
  0018b	5f		 DB	 95			; 0000005fH
  0018c	4c		 DB	 76			; 0000004cH
  0018d	6f		 DB	 111			; 0000006fH
  0018e	63		 DB	 99			; 00000063H
  0018f	6b		 DB	 107			; 0000006bH
  00190	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR __Lock$8[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@_W@std@@@std@@YAABV?$ctype@_W@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<wchar_t> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_System_error_category@std@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 615
  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 0c	 mov	 eax, DWORD PTR __Errval$[ebp]
  00014	50		 push	 eax
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
  0001b	83 c4 04	 add	 esp, 4
  0001e	3b f4		 cmp	 esi, esp
  00020	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00025	85 c0		 test	 eax, eax
  00027	74 19		 je	 SHORT $LN2@default_er
; Line 616
  00029	e8 00 00 00 00	 call	 ?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
  0002e	50		 push	 eax
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR __Errval$[ebp]
  00032	51		 push	 ecx
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00036	e8 00 00 00 00	 call	 ??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
  0003b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003e	eb 17		 jmp	 SHORT $LN3@default_er
; Line 617
  00040	eb 15		 jmp	 SHORT $LN3@default_er
$LN2@default_er:
; Line 618
  00042	e8 00 00 00 00	 call	 ?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
  00047	50		 push	 eax
  00048	8b 55 0c	 mov	 edx, DWORD PTR __Errval$[ebp]
  0004b	52		 push	 edx
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	e8 00 00 00 00	 call	 ??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
  00054	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
  00057	5e		 pop	 esi
  00058	83 c4 04	 add	 esp, 4
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 08 00	 ret	 8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
; Line 608
  00022	8b f4		 mov	 esi, esp
  00024	8b 45 0c	 mov	 eax, DWORD PTR __Errcode$[ebp]
  00027	50		 push	 eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Winerror_map@std@@YAPBDH@Z
  0002e	83 c4 04	 add	 esp, 4
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	89 45 f8	 mov	 DWORD PTR __Name$[ebp], eax
; Line 609
  0003b	83 7d f8 00	 cmp	 DWORD PTR __Name$[ebp], 0
  0003f	74 08		 je	 SHORT $LN3@message
  00041	8b 4d f8	 mov	 ecx, DWORD PTR __Name$[ebp]
  00044	89 4d f0	 mov	 DWORD PTR tv69[ebp], ecx
  00047	eb 07		 jmp	 SHORT $LN4@message
$LN3@message:
  00049	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
  00050	8b 55 f0	 mov	 edx, DWORD PTR tv69[ebp]
  00053	52		 push	 edx
  00054	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00057	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005c	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  0005f	83 c8 01	 or	 eax, 1
  00062	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00065	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
  00068	5e		 pop	 esi
  00069	83 c4 10	 add	 esp, 16			; 00000010H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 603
  0000e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Generic_error_category@std@@QAE@XZ ; std::_Generic_error_category::_Generic_error_category
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iostream_error_category@std@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
; Line 585
  0001e	83 7d 0c 01	 cmp	 DWORD PTR __Errcode$[ebp], 1
  00022	75 1d		 jne	 SHORT $LN2@message
; Line 586
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00031	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00034	83 c8 01	 or	 eax, 1
  00037	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0003a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003d	eb 1e		 jmp	 SHORT $LN3@message
; Line 587
  0003f	eb 1c		 jmp	 SHORT $LN3@message
$LN2@message:
; Line 588
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR __Errcode$[ebp]
  00044	51		 push	 ecx
  00045	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00048	52		 push	 edx
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
  00051	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00054	83 c8 01	 or	 eax, 1
  00057	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0005a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
  0005d	83 c4 08	 add	 esp, 8
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 580
  0000e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Generic_error_category@std@@QAE@XZ ; std::_Generic_error_category::_Generic_error_category
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1error_category@std@@UAE@XZ ; std::error_category::~error_category
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0
; Line 564
  00022	8b f4		 mov	 esi, esp
  00024	8b 45 0c	 mov	 eax, DWORD PTR __Errcode$[ebp]
  00027	50		 push	 eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
  0002e	83 c4 04	 add	 esp, 4
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	89 45 f8	 mov	 DWORD PTR __Name$[ebp], eax
; Line 565
  0003b	83 7d f8 00	 cmp	 DWORD PTR __Name$[ebp], 0
  0003f	74 08		 je	 SHORT $LN3@message
  00041	8b 4d f8	 mov	 ecx, DWORD PTR __Name$[ebp]
  00044	89 4d f0	 mov	 DWORD PTR tv69[ebp], ecx
  00047	eb 07		 jmp	 SHORT $LN4@message
$LN3@message:
  00049	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
  00050	8b 55 f0	 mov	 edx, DWORD PTR tv69[ebp]
  00053	52		 push	 edx
  00054	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00057	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005c	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  0005f	83 c8 01	 or	 eax, 1
  00062	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00065	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
  00068	5e		 pop	 esi
  00069	83 c4 10	 add	 esp, 16			; 00000010H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 559
  0000e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0error_category@std@@QAE@XZ ; std::error_category::error_category
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	e8 00 00 00 00	 call	 ?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
  00020	50		 push	 eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
  00029	8b c8		 mov	 ecx, eax
  0002b	e8 00 00 00 00	 call	 ??8error_category@std@@QBE_NABV01@@Z ; std::error_category::operator==
  00030	0f b6 c0	 movzx	 eax, al
  00033	85 c0		 test	 eax, eax
  00035	74 1f		 je	 SHORT $LN3@operator
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?value@error_condition@std@@QBEHXZ ; std::error_condition::value
  0003f	8b f0		 mov	 esi, eax
  00041	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00044	e8 00 00 00 00	 call	 ?value@error_condition@std@@QBEHXZ ; std::error_condition::value
  00049	3b f0		 cmp	 esi, eax
  0004b	75 09		 jne	 SHORT $LN3@operator
  0004d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  00054	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00056	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@operator:
  0005d	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]
; Line 355
  00060	5e		 pop	 esi
  00061	83 c4 08	 add	 esp, 8
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 338
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; Line 339
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 333
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 334
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	8b 45 0c	 mov	 eax, DWORD PTR __Cat$[ebp]
  0001c	89 42 04	 mov	 DWORD PTR [edx+4], eax
; Line 300
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 247
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; Line 248
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 242
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 243
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1error_category@std@@UAE@XZ ; std::error_category::~error_category
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0c		 je	 SHORT $LN1@scalar
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 177
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	3b 45 08	 cmp	 eax, DWORD PTR __Right$[ebp]
  0001d	75 09		 jne	 SHORT $LN3@operator
  0001f	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00026	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN4@operator:
  0002f	8a 45 f8	 mov	 al, BYTE PTR tv65[ebp]
; Line 178
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 392
  00017	8b 4d 08	 mov	 ecx, DWORD PTR __Code$[ebp]
  0001a	e8 00 00 00 00	 call	 ?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
  0001f	50		 push	 eax
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ??8error_category@std@@QBE_NABV01@@Z ; std::error_category::operator==
  00028	0f b6 c0	 movzx	 eax, al
  0002b	85 c0		 test	 eax, eax
  0002d	74 16		 je	 SHORT $LN3@equivalent
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Code$[ebp]
  00032	e8 00 00 00 00	 call	 ?value@error_code@std@@QBEHXZ ; std::error_code::value
  00037	3b 45 0c	 cmp	 eax, DWORD PTR __Errval$[ebp]
  0003a	75 09		 jne	 SHORT $LN3@equivalent
  0003c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv74[ebp], 1
  00043	eb 07		 jmp	 SHORT $LN4@equivalent
$LN3@equivalent:
  00045	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN4@equivalent:
  0004c	8a 45 f8	 mov	 al, BYTE PTR tv74[ebp]
; Line 393
  0004f	83 c4 08	 add	 esp, 8
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 385
  0001f	8b 45 0c	 mov	 eax, DWORD PTR __Cond$[ebp]
  00022	50		 push	 eax
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Errval$[ebp]
  00028	51		 push	 ecx
  00029	8d 55 f4	 lea	 edx, DWORD PTR $T1[ebp]
  0002c	52		 push	 edx
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 10		 mov	 edx, DWORD PTR [eax]
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00038	ff d0		 call	 eax
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b c8		 mov	 ecx, eax
  00043	e8 00 00 00 00	 call	 ??8error_condition@std@@QBE_NABV01@@Z ; std::error_condition::operator==
; Line 386
  00048	5e		 pop	 esi
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 378
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 0c	 mov	 ecx, DWORD PTR __Errval$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00019	e8 00 00 00 00	 call	 ??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 653
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 643
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@_W@std@@YAXPB_W0I@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z PROC		; std::_Debug_pointer<wchar_t>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 546
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 547
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z ENDP		; std::_Debug_pointer<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 546
  00004	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 547
  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z PROC ; std::_DebugHeapDelete<std::_Facet_base>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xdebug
; Line 56
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 57
  00004	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00008	74 2d		 je	 SHORT $LN2@DebugHeapD
; Line 59
  0000a	8b f4		 mov	 esi, esp
  0000c	6a 00		 push	 0
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00016	8b 02		 mov	 eax, DWORD PTR [edx]
  00018	ff d0		 call	 eax
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 62
  00021	8b f4		 mov	 esi, esp
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00026	51		 push	 ecx
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0002d	83 c4 04	 add	 esp, 4
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DebugHeapD:
; Line 64
  00037	5e		 pop	 esi
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z ENDP ; std::_DebugHeapDelete<std::_Facet_base>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
tv83 = -20						; size = 4
tv71 = -16						; size = 4
__Ptr$1 = -12						; size = 4
__Facptr$ = -8						; size = 4
_this$ = -4						; size = 4
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 466
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000f	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00012	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00015	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00018	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 468
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	8b 55 08	 mov	 edx, DWORD PTR __Id$[ebp]
  00026	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00029	73 13		 jae	 SHORT $LN6@Getfacet
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00033	8b 45 08	 mov	 eax, DWORD PTR __Id$[ebp]
  00036	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  00039	89 4d f0	 mov	 DWORD PTR tv71[ebp], ecx
  0003c	eb 07		 jmp	 SHORT $LN7@Getfacet
$LN6@Getfacet:
  0003e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN7@Getfacet:
  00045	8b 55 f0	 mov	 edx, DWORD PTR tv71[ebp]
  00048	89 55 f8	 mov	 DWORD PTR __Facptr$[ebp], edx
; Line 469
  0004b	83 7d f8 00	 cmp	 DWORD PTR __Facptr$[ebp], 0
  0004f	75 0d		 jne	 SHORT $LN2@Getfacet
  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 08		 mov	 ecx, DWORD PTR [eax]
  00056	0f b6 51 14	 movzx	 edx, BYTE PTR [ecx+20]
  0005a	85 d2		 test	 edx, edx
  0005c	75 07		 jne	 SHORT $LN3@Getfacet
$LN2@Getfacet:
; Line 470
  0005e	8b 45 f8	 mov	 eax, DWORD PTR __Facptr$[ebp]
  00061	eb 3a		 jmp	 SHORT $LN4@Getfacet
; Line 471
  00063	eb 38		 jmp	 SHORT $LN4@Getfacet
$LN3@Getfacet:
; Line 473
  00065	8b f4		 mov	 esi, esp
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ
  0006d	3b f4		 cmp	 esi, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	89 45 f4	 mov	 DWORD PTR __Ptr$1[ebp], eax
; Line 476
  00077	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$1[ebp]
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR __Id$[ebp]
  0007d	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00080	73 11		 jae	 SHORT $LN8@Getfacet
  00082	8b 55 f4	 mov	 edx, DWORD PTR __Ptr$1[ebp]
  00085	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR __Id$[ebp]
  0008b	8b 14 88	 mov	 edx, DWORD PTR [eax+ecx*4]
  0008e	89 55 ec	 mov	 DWORD PTR tv83[ebp], edx
  00091	eb 07		 jmp	 SHORT $LN9@Getfacet
$LN8@Getfacet:
  00093	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN9@Getfacet:
  0009a	8b 45 ec	 mov	 eax, DWORD PTR tv83[ebp]
$LN4@Getfacet:
; Line 478
  0009d	5e		 pop	 esi
  0009e	83 c4 14	 add	 esp, 20			; 00000014H
  000a1	3b ec		 cmp	 ebp, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 04 00	 ret	 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocale
; Line 438
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 439
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 38 00	 cmp	 DWORD PTR [eax], 0
  00015	74 23		 je	 SHORT $LN2@locale
; Line 440
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 12		 mov	 edx, DWORD PTR [edx]
  00021	8b f4		 mov	 esi, esp
  00023	8b 08		 mov	 ecx, DWORD PTR [eax]
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	ff d0		 call	 eax
  0002a	3b f4		 cmp	 esi, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z ; std::_DebugHeapDelete<std::_Facet_base>
  00037	83 c4 04	 add	 esp, 4
$LN2@locale:
; Line 441
  0003a	5e		 pop	 esi
  0003b	83 c4 04	 add	 esp, 4
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DestroyDialog@CWaitDlg@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyDialog@CWaitDlg@@QAEXXZ PROC			; CWaitDlg::DestroyDialog, COMDAT
; _this$ = ecx
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 96
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 97
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c6 40 10 01	 mov	 BYTE PTR [eax+16], 1
; Line 99
  00016	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  0001b	0f b6 c8	 movzx	 ecx, al
  0001e	85 c9		 test	 ecx, ecx
  00020	75 02		 jne	 SHORT $LN3@DestroyDia
; Line 100
  00022	eb 6c		 jmp	 SHORT $LN4@DestroyDia
$LN3@DestroyDia:
; Line 102
  00024	8b f4		 mov	 esi, esp
  00026	6a ff		 push	 -1
  00028	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002e	50		 push	 eax
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 104
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00042	74 15		 je	 SHORT $LN2@DestroyDia
; Line 105
  00044	8b f4		 mov	 esi, esp
  00046	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00049	8b 02		 mov	 eax, DWORD PTR [edx]
  0004b	50		 push	 eax
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DestroyDia:
; Line 106
  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 108
  00062	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00067	8b f4		 mov	 esi, esp
  00069	50		 push	 eax
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	85 c0		 test	 eax, eax
  00079	74 15		 je	 SHORT $LN4@DestroyDia
; Line 109
  0007b	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00080	8b f4		 mov	 esi, esp
  00082	50		 push	 eax
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetForegroundWindow@4
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@DestroyDia:
; Line 110
  00090	5e		 pop	 esi
  00091	83 c4 04	 add	 esp, 4
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
?DestroyDialog@CWaitDlg@@QAEXXZ ENDP			; CWaitDlg::DestroyDialog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ShowDialog@CWaitDlg@@QAE_NPA_W@Z
_TEXT	SEGMENT
_threadAddr$ = -12					; size = 4
_this$ = -4						; size = 4
_pszInputText$ = 8					; size = 4
?ShowDialog@CWaitDlg@@QAE_NPA_W@Z PROC			; CWaitDlg::ShowDialog, COMDAT
; _this$ = ecx
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 81
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 82
  0001b	e8 00 00 00 00	 call	 ?DXUTIsWindowed@@YG_NXZ	; DXUTIsWindowed
  00020	0f b6 c0	 movzx	 eax, al
  00023	85 c0		 test	 eax, eax
  00025	75 04		 jne	 SHORT $LN1@ShowDialog
; Line 83
  00027	32 c0		 xor	 al, al
  00029	eb 6b		 jmp	 SHORT $LN2@ShowDialog
$LN1@ShowDialog:
; Line 86
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	83 c1 14	 add	 ecx, 20			; 00000014H
  00031	8b f4		 mov	 esi, esp
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ?DXUTGetHWND@@YGPAUHWND__@@XZ ; DXUTGetHWND
  00039	50		 push	 eax
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 87
  00047	8b f4		 mov	 esi, esp
  00049	8b 55 08	 mov	 edx, DWORD PTR _pszInputText$[ebp]
  0004c	52		 push	 edx
  0004d	68 04 01 00 00	 push	 260			; 00000104H
  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	83 c0 24	 add	 eax, 36			; 00000024H
  00058	50		 push	 eax
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 91
  00069	8b f4		 mov	 esi, esp
  0006b	8d 4d f4	 lea	 ecx, DWORD PTR _threadAddr$[ebp]
  0006e	51		 push	 ecx
  0006f	6a 00		 push	 0
  00071	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00074	52		 push	 edx
  00075	68 00 00 00 00	 push	 OFFSET ?WaitThread@@YGIPAX@Z ; WaitThread
  0007a	6a 00		 push	 0
  0007c	6a 00		 push	 0
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___beginthreadex
  00084	83 c4 18	 add	 esp, 24			; 00000018H
  00087	3b f4		 cmp	 esi, esp
  00089	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 92
  00094	b0 01		 mov	 al, 1
$LN2@ShowDialog:
; Line 93
  00096	52		 push	 edx
  00097	8b cd		 mov	 ecx, ebp
  00099	50		 push	 eax
  0009a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@ShowDialog
  000a0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a5	58		 pop	 eax
  000a6	5a		 pop	 edx
  000a7	5e		 pop	 esi
  000a8	83 c4 10	 add	 esp, 16			; 00000010H
  000ab	3b ec		 cmp	 ebp, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 04 00	 ret	 4
$LN6@ShowDialog:
  000b8	01 00 00 00	 DD	 1
  000bc	00 00 00 00	 DD	 $LN5@ShowDialog
$LN5@ShowDialog:
  000c0	f4 ff ff ff	 DD	 -12			; fffffff4H
  000c4	04 00 00 00	 DD	 4
  000c8	00 00 00 00	 DD	 $LN4@ShowDialog
$LN4@ShowDialog:
  000cc	74		 DB	 116			; 00000074H
  000cd	68		 DB	 104			; 00000068H
  000ce	72		 DB	 114			; 00000072H
  000cf	65		 DB	 101			; 00000065H
  000d0	61		 DB	 97			; 00000061H
  000d1	64		 DB	 100			; 00000064H
  000d2	41		 DB	 65			; 00000041H
  000d3	64		 DB	 100			; 00000064H
  000d4	64		 DB	 100			; 00000064H
  000d5	72		 DB	 114			; 00000072H
  000d6	00		 DB	 0
?ShowDialog@CWaitDlg@@QAE_NPA_W@Z ENDP			; CWaitDlg::ShowDialog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDialogControls@CWaitDlg@@QAE_NXZ
_TEXT	SEGMENT
_hMessage$ = -16					; size = 4
_up$ = -12						; size = 4
_left$ = -8						; size = 4
_this$ = -4						; size = 4
?GetDialogControls@CWaitDlg@@QAE_NXZ PROC		; CWaitDlg::GetDialogControls, COMDAT
; _this$ = ecx
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 53
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 54
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0
; Line 56
  00022	8b f4		 mov	 esi, esp
  00024	6a 00		 push	 0
  00026	68 00 00 00 00	 push	 OFFSET ?WaitDialogProc@@YGHPAUHWND__@@IIJ@Z ; WaitDialogProc
  0002b	6a 00		 push	 0
  0002d	6a 71		 push	 113			; 00000071H
  0002f	e8 00 00 00 00	 call	 ?DXUTGetHINSTANCE@@YGPAUHINSTANCE__@@XZ ; DXUTGetHINSTANCE
  00034	50		 push	 eax
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateDialogParamW@20
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	89 01		 mov	 DWORD PTR [ecx], eax
; Line 57
  00047	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004a	83 3a 00	 cmp	 DWORD PTR [edx], 0
  0004d	75 07		 jne	 SHORT $LN1@GetDialogC
; Line 58
  0004f	32 c0		 xor	 al, al
  00051	e9 fa 00 00 00	 jmp	 $LN2@GetDialogC
$LN1@GetDialogC:
; Line 60
  00056	8b f4		 mov	 esi, esp
  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	50		 push	 eax
  0005c	6a eb		 push	 -21			; ffffffebH
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 11		 mov	 edx, DWORD PTR [ecx]
  00063	52		 push	 edx
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongW@12
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 63
  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00077	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	03 41 1c	 add	 eax, DWORD PTR [ecx+28]
  0007d	99		 cdq
  0007e	2b c2		 sub	 eax, edx
  00080	d1 f8		 sar	 eax, 1
  00082	89 45 f8	 mov	 DWORD PTR _left$[ebp], eax
; Line 64
  00085	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00088	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	03 41 20	 add	 eax, DWORD PTR [ecx+32]
  00091	99		 cdq
  00092	2b c2		 sub	 eax, edx
  00094	d1 f8		 sar	 eax, 1
  00096	89 45 f4	 mov	 DWORD PTR _up$[ebp], eax
; Line 66
  00099	8b f4		 mov	 esi, esp
  0009b	6a 01		 push	 1
  0009d	6a 00		 push	 0
  0009f	6a 00		 push	 0
  000a1	8b 55 f4	 mov	 edx, DWORD PTR _up$[ebp]
  000a4	52		 push	 edx
  000a5	8b 45 f8	 mov	 eax, DWORD PTR _left$[ebp]
  000a8	50		 push	 eax
  000a9	6a 00		 push	 0
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b0	52		 push	 edx
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowPos@28
  000b7	3b f4		 cmp	 esi, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 67
  000be	8b f4		 mov	 esi, esp
  000c0	6a 05		 push	 5
  000c2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	51		 push	 ecx
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  000ce	3b f4		 cmp	 esi, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 70
  000d5	8b f4		 mov	 esi, esp
  000d7	68 e8 03 00 00	 push	 1000			; 000003e8H
  000dc	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000df	8b 02		 mov	 eax, DWORD PTR [edx]
  000e1	50		 push	 eax
  000e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  000e8	3b f4		 cmp	 esi, esp
  000ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 71
  000f5	8b f4		 mov	 esi, esp
  000f7	68 00 00 64 00	 push	 6553600			; 00640000H
  000fc	6a 00		 push	 0
  000fe	68 01 04 00 00	 push	 1025			; 00000401H
  00103	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00106	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00109	50		 push	 eax
  0010a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageW@16
  00110	3b f4		 cmp	 esi, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 74
  00117	8b f4		 mov	 esi, esp
  00119	68 e9 03 00 00	 push	 1001			; 000003e9H
  0011e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00121	8b 11		 mov	 edx, DWORD PTR [ecx]
  00123	52		 push	 edx
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDlgItem@8
  0012a	3b f4		 cmp	 esi, esp
  0012c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00131	89 45 f0	 mov	 DWORD PTR _hMessage$[ebp], eax
; Line 75
  00134	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00137	83 c0 24	 add	 eax, 36			; 00000024H
  0013a	8b f4		 mov	 esi, esp
  0013c	50		 push	 eax
  0013d	8b 4d f0	 mov	 ecx, DWORD PTR _hMessage$[ebp]
  00140	51		 push	 ecx
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextW@8
  00147	3b f4		 cmp	 esi, esp
  00149	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 77
  0014e	b0 01		 mov	 al, 1
$LN2@GetDialogC:
; Line 78
  00150	5e		 pop	 esi
  00151	83 c4 10	 add	 esp, 16			; 00000010H
  00154	3b ec		 cmp	 ebp, esp
  00156	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c3		 ret	 0
?GetDialogControls@CWaitDlg@@QAE_NXZ ENDP		; CWaitDlg::GetDialogControls
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?UpdateProgressBar@CWaitDlg@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateProgressBar@CWaitDlg@@QAEXXZ PROC		; CWaitDlg::UpdateProgressBar, COMDAT
; _this$ = ecx
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 42
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 43
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00015	83 c1 01	 add	 ecx, 1
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
; Line 44
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 78 0c 6e	 cmp	 DWORD PTR [eax+12], 110	; 0000006eH
  00025	7e 0a		 jle	 SHORT $LN1@UpdateProg
; Line 45
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN1@UpdateProg:
; Line 47
  00031	8b f4		 mov	 esi, esp
  00033	6a 00		 push	 0
  00035	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00038	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0003b	50		 push	 eax
  0003c	68 02 04 00 00	 push	 1026			; 00000402H
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00047	52		 push	 edx
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageW@16
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 48
  00055	8b f4		 mov	 esi, esp
  00057	6a 00		 push	 0
  00059	6a 00		 push	 0
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	51		 push	 ecx
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InvalidateRect@12
  00067	3b f4		 cmp	 esi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 49
  0006e	8b f4		 mov	 esi, esp
  00070	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00073	8b 02		 mov	 eax, DWORD PTR [edx]
  00075	50		 push	 eax
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UpdateWindow@4
  0007c	3b f4		 cmp	 esi, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 50
  00083	5e		 pop	 esi
  00084	83 c4 04	 add	 esp, 4
  00087	3b ec		 cmp	 ebp, esp
  00089	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
?UpdateProgressBar@CWaitDlg@@QAEXXZ ENDP		; CWaitDlg::UpdateProgressBar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsRunning@CWaitDlg@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?IsRunning@CWaitDlg@@QBE_NXZ PROC			; CWaitDlg::IsRunning, COMDAT
; _this$ = ecx
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 39
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	0f b6 48 10	 movzx	 ecx, BYTE PTR [eax+16]
  0001e	85 c9		 test	 ecx, ecx
  00020	75 09		 jne	 SHORT $LN3@IsRunning
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00029	eb 07		 jmp	 SHORT $LN4@IsRunning
$LN3@IsRunning:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN4@IsRunning:
  00032	8a 45 f8	 mov	 al, BYTE PTR tv67[ebp]
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?IsRunning@CWaitDlg@@QBE_NXZ ENDP			; CWaitDlg::IsRunning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CWaitDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CWaitDlg@@QAE@XZ PROC				; CWaitDlg::~CWaitDlg, COMDAT
; _this$ = ecx
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 37
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?DestroyDialog@CWaitDlg@@QAEXXZ ; CWaitDlg::DestroyDialog
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1CWaitDlg@@QAE@XZ ENDP				; CWaitDlg::~CWaitDlg
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CWaitDlg@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CWaitDlg@@QAE@XZ PROC				; CWaitDlg::CWaitDlg, COMDAT
; _this$ = ecx
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 35
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00021	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00024	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	c6 41 10 00	 mov	 BYTE PTR [ecx+16], 0
; Line 36
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
??0CWaitDlg@@QAE@XZ ENDP				; CWaitDlg::CWaitDlg
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pThisDialog$ = -4					; size = 4
_pArg$ = 8						; size = 4
?WaitThread@@YGIPAX@Z PROC				; WaitThread
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 135
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 136
  0000c	8b 45 08	 mov	 eax, DWORD PTR _pArg$[ebp]
  0000f	89 45 fc	 mov	 DWORD PTR _pThisDialog$[ebp], eax
; Line 140
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _pThisDialog$[ebp]
  00015	e8 00 00 00 00	 call	 ?GetDialogControls@CWaitDlg@@QAE_NXZ ; CWaitDlg::GetDialogControls
$LN2@WaitThread:
; Line 142
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _pThisDialog$[ebp]
  0001d	e8 00 00 00 00	 call	 ?IsRunning@CWaitDlg@@QBE_NXZ ; CWaitDlg::IsRunning
  00022	0f b6 c8	 movzx	 ecx, al
  00025	85 c9		 test	 ecx, ecx
  00027	74 1b		 je	 SHORT $LN1@WaitThread
; Line 144
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _pThisDialog$[ebp]
  0002c	e8 00 00 00 00	 call	 ?UpdateProgressBar@CWaitDlg@@QAEXXZ ; CWaitDlg::UpdateProgressBar
; Line 145
  00031	8b f4		 mov	 esi, esp
  00033	6a 64		 push	 100			; 00000064H
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 146
  00042	eb d6		 jmp	 SHORT $LN2@WaitThread
$LN1@WaitThread:
; Line 148
  00044	33 c0		 xor	 eax, eax
; Line 149
  00046	5e		 pop	 esi
  00047	83 c4 04	 add	 esp, 4
  0004a	3b ec		 cmp	 ebp, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?WaitThread@@YGIPAX@Z ENDP				; WaitThread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -8						; size = 4
_pThisDialog$ = -4					; size = 4
_hwndDlg$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WaitDialogProc@@YGHPAUHWND__@@IIJ@Z PROC		; WaitDialogProc
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\waitdlg.h
; Line 115
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 119
  00015	8b f4		 mov	 esi, esp
  00017	6a eb		 push	 -21			; ffffffebH
  00019	8b 45 08	 mov	 eax, DWORD PTR _hwndDlg$[ebp]
  0001c	50		 push	 eax
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowLongW@8
  00023	3b f4		 cmp	 esi, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	89 45 fc	 mov	 DWORD PTR _pThisDialog$[ebp], eax
; Line 121
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _uMsg$[ebp]
  00030	89 4d f8	 mov	 DWORD PTR tv67[ebp], ecx
  00033	83 7d f8 10	 cmp	 DWORD PTR tv67[ebp], 16	; 00000010H
  00037	74 12		 je	 SHORT $LN1@WaitDialog
  00039	81 7d f8 10 01
	00 00		 cmp	 DWORD PTR tv67[ebp], 272 ; 00000110H
  00040	74 02		 je	 SHORT $LN2@WaitDialog
  00042	eb 16		 jmp	 SHORT $LN3@WaitDialog
$LN2@WaitDialog:
; Line 124
  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	eb 11		 jmp	 SHORT $LN5@WaitDialog
$LN1@WaitDialog:
; Line 126
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _pThisDialog$[ebp]
  0004e	e8 00 00 00 00	 call	 ?DestroyDialog@CWaitDlg@@QAEXXZ ; CWaitDlg::DestroyDialog
; Line 127
  00053	b8 01 00 00 00	 mov	 eax, 1
  00058	eb 02		 jmp	 SHORT $LN5@WaitDialog
$LN3@WaitDialog:
; Line 130
  0005a	33 c0		 xor	 eax, eax
$LN5@WaitDialog:
; Line 131
  0005c	5e		 pop	 esi
  0005d	83 c4 08	 add	 esp, 8
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 10 00	 ret	 16			; 00000010H
?WaitDialogProc@@YGHPAUHWND__@@IIJ@Z ENDP		; WaitDialogProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
tv82 = -9						; size = 1
tv79 = -8						; size = 4
tv76 = -4						; size = 4
_pObj$ = 8						; size = 4
_pstrName$ = 12						; size = 4
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z PROC	; DXUT_SetDebugName, COMDAT
; File d:\users\pn9623\engine\sse_fluid\dxut\core\dxutmisc.h
; Line 197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 198
  00018	83 7d 08 00	 cmp	 DWORD PTR _pObj$[ebp], 0
  0001c	74 4e		 je	 SHORT $LN2@DXUT_SetDe
; Line 199
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _pstrName$[ebp]
  00021	89 45 fc	 mov	 DWORD PTR tv76[ebp], eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR tv76[ebp]
  00027	83 c1 01	 add	 ecx, 1
  0002a	89 4d f8	 mov	 DWORD PTR tv79[ebp], ecx
$LL4@DXUT_SetDe:
  0002d	8b 55 fc	 mov	 edx, DWORD PTR tv76[ebp]
  00030	8a 02		 mov	 al, BYTE PTR [edx]
  00032	88 45 f7	 mov	 BYTE PTR tv82[ebp], al
  00035	83 45 fc 01	 add	 DWORD PTR tv76[ebp], 1
  00039	80 7d f7 00	 cmp	 BYTE PTR tv82[ebp], 0
  0003d	75 ee		 jne	 SHORT $LL4@DXUT_SetDe
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR tv76[ebp]
  00042	2b 4d f8	 sub	 ecx, DWORD PTR tv79[ebp]
  00045	89 4d f0	 mov	 DWORD PTR tv72[ebp], ecx
  00048	8b f4		 mov	 esi, esp
  0004a	8b 55 0c	 mov	 edx, DWORD PTR _pstrName$[ebp]
  0004d	52		 push	 edx
  0004e	8b 45 f0	 mov	 eax, DWORD PTR tv72[ebp]
  00051	50		 push	 eax
  00052	68 00 00 00 00	 push	 OFFSET _WKPDID_D3DDebugObjectName
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _pObj$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	8b 45 08	 mov	 eax, DWORD PTR _pObj$[ebp]
  0005f	50		 push	 eax
  00060	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  00063	ff d1		 call	 ecx
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DXUT_SetDe:
; Line 200
  0006c	5e		 pop	 esi
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?DXUT_SetDebugName@@YAXPAUID3D11DeviceChild@@PBD@Z ENDP	; DXUT_SetDebugName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2295
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 2296
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2290
  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 2291
  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Ptr$3 = -8						; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2273
  0001e	0f b6 45 08	 movzx	 eax, BYTE PTR __Built$[ebp]
  00022	85 c0		 test	 eax, eax
  00024	75 02		 jne	 SHORT $LN4@Tidy
  00026	eb 73		 jmp	 SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  0002f	72 6a		 jb	 SHORT $LN3@Tidy
; Line 2277
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	89 45 f8	 mov	 DWORD PTR __Ptr$3[ebp], eax
; Line 2278
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 04	 add	 ecx, 4
  00040	51		 push	 ecx
  00041	8d 55 f7	 lea	 edx, DWORD PTR $T2[ebp]
  00044	52		 push	 edx
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
  00054	83 7d 0c 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  00058	76 20		 jbe	 SHORT $LN1@Tidy
; Line 2281
  0005a	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr$3[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPADAAD@Z ; std::addressof<char>
  00067	83 c4 04	 add	 esp, 4
  0006a	50		 push	 eax
  0006b	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0006e	83 c2 04	 add	 edx, 4
  00071	52		 push	 edx
  00072	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Tidy:
; Line 2282
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00080	83 c1 01	 add	 ecx, 1
  00083	51		 push	 ecx
  00084	8b 55 f8	 mov	 edx, DWORD PTR __Ptr$3[ebp]
  00087	52		 push	 edx
  00088	8d 45 f6	 lea	 eax, DWORD PTR $T1[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
  0009b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
; Line 2285
  000a5	8b 55 0c	 mov	 edx, DWORD PTR __Newsize$[ebp]
  000a8	52		 push	 edx
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2258
  0000e	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00012	74 20		 je	 SHORT $LN2@Inside
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0001c	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  0001f	72 13		 jb	 SHORT $LN2@Inside
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	03 41 14	 add	 eax, DWORD PTR [ecx+20]
  0002f	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00032	77 06		 ja	 SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
  00034	32 c0		 xor	 al, al
  00036	eb 04		 jmp	 SHORT $LN4@Inside
; Line 2260
  00038	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
  0003a	b0 01		 mov	 al, 1
$LN4@Inside:
; Line 2262
  0003c	83 c4 04	 add	 esp, 4
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2243
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00026	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  00029	73 08		 jae	 SHORT $LN6@Grow
; Line 2244
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00039	3b 4d 08	 cmp	 ecx, DWORD PTR __Newsize$[ebp]
  0003c	73 15		 jae	 SHORT $LN5@Grow
; Line 2246
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00041	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00044	50		 push	 eax
  00045	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00048	51		 push	 ecx
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00051	eb 4a		 jmp	 SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
  00053	0f b6 55 0c	 movzx	 edx, BYTE PTR __Trim$[ebp]
  00057	85 d2		 test	 edx, edx
  00059	74 32		 je	 SHORT $LN3@Grow
  0005b	83 7d 08 10	 cmp	 DWORD PTR __Newsize$[ebp], 16 ; 00000010H
  0005f	73 2c		 jae	 SHORT $LN3@Grow
; Line 2249
  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00067	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  0006a	73 08		 jae	 SHORT $LN9@Grow
  0006c	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  0006f	89 55 f8	 mov	 DWORD PTR tv129[ebp], edx
  00072	eb 09		 jmp	 SHORT $LN10@Grow
$LN9@Grow:
  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0007a	89 4d f8	 mov	 DWORD PTR tv129[ebp], ecx
$LN10@Grow:
  0007d	8b 55 f8	 mov	 edx, DWORD PTR tv129[ebp]
  00080	52		 push	 edx
  00081	6a 01		 push	 1
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  0008b	eb 10		 jmp	 SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
  0008d	83 7d 08 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  00091	75 0a		 jne	 SHORT $LN4@Grow
; Line 2251
  00093	6a 00		 push	 0
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
  0009d	83 7d 08 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  000a1	76 09		 jbe	 SHORT $LN11@Grow
  000a3	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv136[ebp], 1
  000aa	eb 07		 jmp	 SHORT $LN12@Grow
$LN11@Grow:
  000ac	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN12@Grow:
  000b3	8a 45 f4	 mov	 al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b9	3b ec		 cmp	 ebp, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2237
  00017	c6 45 fb 00	 mov	 BYTE PTR $T1[ebp], 0
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00021	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00024	8d 55 fb	 lea	 edx, DWORD PTR $T1[ebp]
  00027	52		 push	 edx
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00030	03 45 08	 add	 eax, DWORD PTR __Newsize$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
  00039	83 c4 08	 add	 esp, 8
; Line 2238
  0003c	83 c4 08	 add	 esp, 8
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -56						; size = 4
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv202 = -44						; size = 4
$T2 = -39						; size = 1
$T3 = -38						; size = 1
$T4 = -37						; size = 1
__Ptr$ = -32						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 28	 sub	 esp, 40			; 00000028H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	51		 push	 ecx
  00019	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0001c	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	59		 pop	 ecx
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0003d	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2202
  00040	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00043	83 c8 0f	 or	 eax, 15			; 0000000fH
  00046	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax
; Line 2203
  00049	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00051	3b 45 e8	 cmp	 eax, DWORD PTR __Newres$[ebp]
  00054	73 08		 jae	 SHORT $LN9@Copy
; Line 2204
  00056	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00059	89 4d e8	 mov	 DWORD PTR __Newres$[ebp], ecx
  0005c	eb 52		 jmp	 SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
  0005e	8b 45 e8	 mov	 eax, DWORD PTR __Newres$[ebp]
  00061	33 d2		 xor	 edx, edx
  00063	b9 03 00 00 00	 mov	 ecx, 3
  00068	f7 f1		 div	 ecx
  0006a	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0006d	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00070	d1 e9		 shr	 ecx, 1
  00072	3b c8		 cmp	 ecx, eax
  00074	77 02		 ja	 SHORT $LN7@Copy
  00076	eb 38		 jmp	 SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
  00078	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	8b 72 18	 mov	 esi, DWORD PTR [edx+24]
  0007e	d1 ee		 shr	 esi, 1
  00080	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00088	2b c6		 sub	 eax, esi
  0008a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  00090	77 13		 ja	 SHORT $LN5@Copy
; Line 2209
  00092	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00095	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00098	d1 e8		 shr	 eax, 1
  0009a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	03 41 18	 add	 eax, DWORD PTR [ecx+24]
  000a0	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax
; Line 2210
  000a3	eb 0b		 jmp	 SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
  000a5	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000ad	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
  000b0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
  000b7	8d 55 db	 lea	 edx, DWORD PTR $T4[ebp]
  000ba	52		 push	 edx
  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  000c3	89 45 d4	 mov	 DWORD PTR tv202[ebp], eax
  000c6	8b 45 e8	 mov	 eax, DWORD PTR __Newres$[ebp]
  000c9	83 c0 01	 add	 eax, 1
  000cc	50		 push	 eax
  000cd	8b 4d d4	 mov	 ecx, DWORD PTR tv202[ebp]
  000d0	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  000d5	89 45 d0	 mov	 DWORD PTR tv203[ebp], eax
  000d8	8b 4d d0	 mov	 ecx, DWORD PTR tv203[ebp]
  000db	89 4d e0	 mov	 DWORD PTR __Ptr$[ebp], ecx
  000de	eb 67		 jmp	 SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
  000e0	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 2217
  000e3	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  000e6	89 55 e8	 mov	 DWORD PTR __Newres$[ebp], edx
; Line 2218
  000e9	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
  000ed	8d 45 da	 lea	 eax, DWORD PTR $T3[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  000f9	89 45 cc	 mov	 DWORD PTR tv204[ebp], eax
  000fc	8b 4d e8	 mov	 ecx, DWORD PTR __Newres$[ebp]
  000ff	83 c1 01	 add	 ecx, 1
  00102	51		 push	 ecx
  00103	8b 4d cc	 mov	 ecx, DWORD PTR tv204[ebp]
  00106	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  0010b	89 45 c8	 mov	 DWORD PTR tv205[ebp], eax
  0010e	8b 55 c8	 mov	 edx, DWORD PTR tv205[ebp]
  00111	89 55 e0	 mov	 DWORD PTR __Ptr$[ebp], edx
  00114	eb 1b		 jmp	 SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
  00116	6a 00		 push	 0
  00118	6a 01		 push	 1
  0011a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0011d	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
  00122	6a 00		 push	 0
  00124	6a 00		 push	 0
  00126	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 2223
  0012b	b8 00 00 00 00	 mov	 eax, $LN17@Copy
  00130	c3		 ret	 0
$LN14@Copy:
  00131	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  00138	eb 07		 jmp	 SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
  0013a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
  00141	b8 00 00 00 00	 mov	 eax, $LN19@Copy
  00146	c3		 ret	 0
$LN12@Copy:
  00147	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0014e	eb 07		 jmp	 SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
  00150	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
  00157	83 7d 0c 00	 cmp	 DWORD PTR __Oldlen$[ebp], 0
  0015b	76 19		 jbe	 SHORT $LN1@Copy
; Line 2228
  0015d	8b 45 0c	 mov	 eax, DWORD PTR __Oldlen$[ebp]
  00160	50		 push	 eax
  00161	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00164	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00169	50		 push	 eax
  0016a	8b 4d e0	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0016d	51		 push	 ecx
  0016e	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00173	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Copy:
; Line 2229
  00176	6a 00		 push	 0
  00178	6a 01		 push	 1
  0017a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0017d	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
  00182	8d 55 e0	 lea	 edx, DWORD PTR __Ptr$[ebp]
  00185	52		 push	 edx
  00186	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00189	83 c0 04	 add	 eax, 4
  0018c	50		 push	 eax
  0018d	8d 4d d9	 lea	 ecx, DWORD PTR $T2[ebp]
  00190	51		 push	 ecx
  00191	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00199	8b c8		 mov	 ecx, eax
  0019b	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
  001a0	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  001a3	8b 45 e8	 mov	 eax, DWORD PTR __Newres$[ebp]
  001a6	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 2232
  001a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  001ac	51		 push	 ecx
  001ad	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b0	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
  001b5	52		 push	 edx
  001b6	8b cd		 mov	 ecx, ebp
  001b8	50		 push	 eax
  001b9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@Copy
  001bf	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001c4	58		 pop	 eax
  001c5	5a		 pop	 edx
  001c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001d0	59		 pop	 ecx
  001d1	5f		 pop	 edi
  001d2	5e		 pop	 esi
  001d3	5b		 pop	 ebx
  001d4	83 c4 38	 add	 esp, 56			; 00000038H
  001d7	3b ec		 cmp	 ebp, esp
  001d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c2 08 00	 ret	 8
$LN23@Copy:
  001e4	01 00 00 00	 DD	 1
  001e8	00 00 00 00	 DD	 $LN22@Copy
$LN22@Copy:
  001ec	e0 ff ff ff	 DD	 -32			; ffffffe0H
  001f0	04 00 00 00	 DD	 4
  001f4	00 00 00 00	 DD	 $LN20@Copy
$LN20@Copy:
  001f8	5f		 DB	 95			; 0000005fH
  001f9	50		 DB	 80			; 00000050H
  001fa	74		 DB	 116			; 00000074H
  001fb	72		 DB	 114			; 00000072H
  001fc	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -16						; size = 4
$T1 = -9						; size = 1
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  0001a	8d 45 f7	 lea	 eax, DWORD PTR $T1[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00026	8b c8		 mov	 ecx, eax
  00028	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
  0002d	89 45 f8	 mov	 DWORD PTR __Num$[ebp], eax
; Line 1760
  00030	83 7d f8 01	 cmp	 DWORD PTR __Num$[ebp], 1
  00034	77 09		 ja	 SHORT $LN3@max_size
  00036	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv75[ebp], 1
  0003d	eb 09		 jmp	 SHORT $LN4@max_size
$LN3@max_size:
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR __Num$[ebp]
  00042	83 e9 01	 sub	 ecx, 1
  00045	89 4d f0	 mov	 DWORD PTR tv75[ebp], ecx
$LN4@max_size:
  00048	8b 45 f0	 mov	 eax, DWORD PTR tv75[ebp]
; Line 1761
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
; Line 1755
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1738
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1739
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Line 1740
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1343
  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00024	3b 4d 08	 cmp	 ecx, DWORD PTR __Off$[ebp]
  00027	73 08		 jae	 SHORT $LN4@erase
; Line 1344
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
  00031	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00034	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00037	2b 45 08	 sub	 eax, DWORD PTR __Off$[ebp]
  0003a	3b 45 0c	 cmp	 eax, DWORD PTR __Count$[ebp]
  0003d	77 0e		 ja	 SHORT $LN3@erase
; Line 1346
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00042	51		 push	 ecx
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
  0004b	eb 46		 jmp	 SHORT $LN2@erase
$LN3@erase:
; Line 1347
  0004d	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00051	76 40		 jbe	 SHORT $LN2@erase
; Line 1349
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0005b	03 45 08	 add	 eax, DWORD PTR __Off$[ebp]
  0005e	89 45 f8	 mov	 DWORD PTR __Ptr$2[ebp], eax
; Line 1350
  00061	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00064	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00067	2b 45 0c	 sub	 eax, DWORD PTR __Count$[ebp]
  0006a	89 45 f4	 mov	 DWORD PTR __Newsize$1[ebp], eax
; Line 1351
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __Newsize$1[ebp]
  00070	2b 4d 08	 sub	 ecx, DWORD PTR __Off$[ebp]
  00073	51		 push	 ecx
  00074	8b 55 f8	 mov	 edx, DWORD PTR __Ptr$2[ebp]
  00077	03 55 0c	 add	 edx, DWORD PTR __Count$[ebp]
  0007a	52		 push	 edx
  0007b	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$2[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1352
  00087	8b 4d f4	 mov	 ecx, DWORD PTR __Newsize$1[ebp]
  0008a	51		 push	 ecx
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
  00093	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
  00096	83 c4 0c	 add	 esp, 12			; 0000000cH
  00099	3b ec		 cmp	 ebp, esp
  0009b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1335
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00014	3b 4d 08	 cmp	 ecx, DWORD PTR __Off$[ebp]
  00017	73 08		 jae	 SHORT $LN1@erase
; Line 1336
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
  00021	8b 55 08	 mov	 edx, DWORD PTR __Off$[ebp]
  00024	52		 push	 edx
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
  00030	83 c4 04	 add	 esp, 4
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1168
  0000e	68 90 04 00 00	 push	 1168			; 00000490H
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00018	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char>
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1169
  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  0002d	83 c4 04	 add	 esp, 4
  00030	50		 push	 eax
  00031	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00034	52		 push	 edx
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
  0003d	83 c4 04	 add	 esp, 4
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1150
  0000e	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00012	74 16		 je	 SHORT $LN3@assign
; Line 1151
  00014	68 7f 04 00 00	 push	 1151			; 0000047fH
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char>
  00027	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@assign:
; Line 1154
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  00036	0f b6 d0	 movzx	 edx, al
  00039	85 d2		 test	 edx, edx
  0003b	74 20		 je	 SHORT $LN2@assign
; Line 1156
  0003d	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00040	50		 push	 eax
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00049	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0004c	2b c8		 sub	 ecx, eax
  0004e	51		 push	 ecx
  0004f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00052	52		 push	 edx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0005b	eb 3d		 jmp	 SHORT $LN4@assign
$LN2@assign:
; Line 1158
  0005d	6a 00		 push	 0
  0005f	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00062	50		 push	 eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0006b	0f b6 c8	 movzx	 ecx, al
  0006e	85 c9		 test	 ecx, ecx
  00070	74 25		 je	 SHORT $LN1@assign
; Line 1160
  00072	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00075	52		 push	 edx
  00076	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00088	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1161
  0008b	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  0008e	51		 push	 ecx
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
  00097	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
  0009a	83 c4 04	 add	 esp, 4
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1130
  00017	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001a	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0001f	3b 45 0c	 cmp	 eax, DWORD PTR __Roff$[ebp]
  00022	73 08		 jae	 SHORT $LN5@assign
; Line 1131
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002f	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00034	2b 45 0c	 sub	 eax, DWORD PTR __Roff$[ebp]
  00037	89 45 f8	 mov	 DWORD PTR __Num$[ebp], eax
; Line 1133
  0003a	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  0003d	3b 45 f8	 cmp	 eax, DWORD PTR __Num$[ebp]
  00040	73 06		 jae	 SHORT $LN4@assign
; Line 1134
  00042	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  00045	89 4d f8	 mov	 DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
  00048	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	3b 55 08	 cmp	 edx, DWORD PTR __Right$[ebp]
  0004e	75 1f		 jne	 SHORT $LN3@assign
; Line 1137
  00050	8b 45 0c	 mov	 eax, DWORD PTR __Roff$[ebp]
  00053	03 45 f8	 add	 eax, DWORD PTR __Num$[ebp]
  00056	50		 push	 eax
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  00062	51		 push	 ecx
  00063	6a 00		 push	 0
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  0006d	eb 42		 jmp	 SHORT $LN2@assign
$LN3@assign:
; Line 1138
  0006f	6a 00		 push	 0
  00071	8b 55 f8	 mov	 edx, DWORD PTR __Num$[ebp]
  00074	52		 push	 edx
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  0007d	0f b6 c0	 movzx	 eax, al
  00080	85 c0		 test	 eax, eax
  00082	74 2d		 je	 SHORT $LN2@assign
; Line 1141
  00084	8b 4d f8	 mov	 ecx, DWORD PTR __Num$[ebp]
  00087	51		 push	 ecx
  00088	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00090	03 45 0c	 add	 eax, DWORD PTR __Roff$[ebp]
  00093	50		 push	 eax
  00094	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1142
  000a5	8b 55 f8	 mov	 edx, DWORD PTR __Num$[ebp]
  000a8	52		 push	 edx
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
  000b4	83 c4 08	 add	 esp, 8
  000b7	3b ec		 cmp	 ebp, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 991
  0000e	6a 00		 push	 0
  00010	6a 01		 push	 1
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 935
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 936
  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0001e	73 22		 jae	 SHORT $LN2@Assign_rv
; Line 938
  00020	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00023	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00026	83 c2 01	 add	 edx, 1
  00029	52		 push	 edx
  0002a	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0002d	83 c0 04	 add	 eax, 4
  00030	50		 push	 eax
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	83 c1 04	 add	 ecx, 4
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 939
  00040	eb 2b		 jmp	 SHORT $LN1@Assign_rv
$LN2@Assign_rv:
; Line 941
  00042	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00045	83 c2 04	 add	 edx, 4
  00048	52		 push	 edx
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	83 c0 04	 add	 eax, 4
  0004f	50		 push	 eax
  00050	8d 4d fb	 lea	 ecx, DWORD PTR $T1[ebp]
  00053	51		 push	 ecx
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 942
  00063	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00066	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
$LN1@Assign_rv:
; Line 944
  0006d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00073	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00076	89 50 14	 mov	 DWORD PTR [eax+20], edx
; Line 945
  00079	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0007f	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00082	89 50 18	 mov	 DWORD PTR [eax+24], edx
; Line 946
  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 947
  00091	83 c4 08	 add	 esp, 8
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 887
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	8d 45 fb	 lea	 eax, DWORD PTR $T1[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Line 888
  0002c	6a 00		 push	 0
  0002e	6a 00		 push	 0
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 889
  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00041	83 c4 04	 add	 esp, 4
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
; Line 890
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
  0005a	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
  00066	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00070	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007a	59		 pop	 ecx
  0007b	83 c4 14	 add	 esp, 20			; 00000014H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 766
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 767
  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 768
  0005a	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00061	51		 push	 ecx
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 769
  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 14	 add	 esp, 20			; 00000014H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 738
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 739
  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 740
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00067	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006e	59		 pop	 ecx
  0006f	83 c4 14	 add	 esp, 20			; 00000014H
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 684
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 04 00	 ret	 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 674
  0001b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 676
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	51		 push	 ecx
  0003b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003e	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
  00043	6a 01		 push	 1
  00045	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	50		 push	 eax
  0004b	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0004e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 679
  0005c	52		 push	 edx
  0005d	8b cd		 mov	 ecx, ebp
  0005f	50		 push	 eax
  00060	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00066	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006b	58		 pop	 eax
  0006c	5a		 pop	 edx
  0006d	5e		 pop	 esi
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN5@Free_proxy:
  0007c	01 00 00 00	 DD	 1
  00080	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00084	f7 ff ff ff	 DD	 -9			; fffffff7H
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  00090	5f		 DB	 95			; 0000005fH
  00091	41		 DB	 65			; 00000041H
  00092	6c		 DB	 108			; 0000006cH
  00093	70		 DB	 112			; 00000070H
  00094	72		 DB	 114			; 00000072H
  00095	6f		 DB	 111			; 0000006fH
  00096	78		 DB	 120			; 00000078H
  00097	79		 DB	 121			; 00000079H
  00098	00		 DB	 0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 665
  00020	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00023	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
  00028	6a 01		 push	 1
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	89 01		 mov	 DWORD PTR [ecx], eax
; Line 667
  00037	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0003a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0003f	50		 push	 eax
  00040	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00043	8b 02		 mov	 eax, DWORD PTR [edx]
  00045	50		 push	 eax
  00046	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00049	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00056	89 02		 mov	 DWORD PTR [edx], eax
; Line 669
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	83 c4 18	 add	 esp, 24			; 00000018H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
  00077	90		 npad	 1
$LN5@Alloc_prox:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  00080	f7 ff ff ff	 DD	 -9			; fffffff7H
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  0008c	5f		 DB	 95			; 0000005fH
  0008d	41		 DB	 65			; 00000041H
  0008e	6c		 DB	 108			; 0000006cH
  0008f	70		 DB	 112			; 00000070H
  00090	72		 DB	 114			; 00000072H
  00091	6f		 DB	 111			; 0000006fH
  00092	78		 DB	 120			; 00000078H
  00093	79		 DB	 121			; 00000079H
  00094	00		 DB	 0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 650
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
  00044	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5e		 pop	 esi
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 520
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0001e	72 14		 jb	 SHORT $LN3@Myptr
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPADAAD@Z ; std::addressof<char>
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  00032	eb 09		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 c0 04	 add	 eax, 4
  0003a	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
$LN4@Myptr:
  0003d	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
; Line 521
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 513
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0001e	72 14		 jb	 SHORT $LN3@Myptr
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPADAAD@Z ; std::addressof<char>
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  00032	eb 09		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 c0 04	 add	 eax, 4
  0003a	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
$LN4@Myptr:
  0003d	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
; Line 514
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0001a	3b f4		 cmp	 esi, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 494
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0
; Line 495
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 496
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	5e		 pop	 esi
  00039	83 c4 04	 add	 esp, 4
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
  00017	83 c4 04	 add	 esp, 4
; Line 885
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
; Line 848
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
; Line 802
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 735
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@D@std@@QBEIXZ ; std::allocator<char>::max_size
; Line 736
  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  0000e	83 c8 ff	 or	 eax, -1
; Line 613
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  0000e	6a 00		 push	 0
  00010	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  00019	83 c4 08	 add	 esp, 8
; Line 579
  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
; Line 574
  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMReciprocalTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1736
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMReciprocalTwoPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMReciprocalTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMTwoPi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1735
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMTwoPi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMReciprocalPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMReciprocalPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMReciprocalPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMReciprocalPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMReciprocalPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMPi@DirectX@@YAXXZ PROC				; DirectX::`dynamic initializer for 'g_XMPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1733
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMPi@DirectX@@YAXXZ ENDP				; DirectX::`dynamic initializer for 'g_XMPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMHalfPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMHalfPi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMHalfPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1732
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PIDIV2
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PIDIV2
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PIDIV2
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PIDIV2
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMHalfPi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMHalfPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMNegativePi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMNegativePi@DirectX@@YAXXZ PROC			; DirectX::`dynamic initializer for 'g_XMNegativePi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1731
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0000b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00012	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B, xmm0
  0001a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  00022	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00029	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  00039	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00040	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  00050	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00057	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??__Eg_XMNegativePi@DirectX@@YAXXZ ENDP			; DirectX::`dynamic initializer for 'g_XMNegativePi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMNegativeTwoPi'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1730
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0000b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00012	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B, xmm0
  0001a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  00022	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00029	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  00039	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00040	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  00050	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00057	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
??__Eg_XMNegativeTwoPi@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMNegativeTwoPi''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMPiConstants0@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMPiConstants0@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMPiConstants0'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1705
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_PI
  0000b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B, xmm0
  00013	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_2PI
  0001b	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+4, xmm0
  00023	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0002b	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+8, xmm0
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIV2PI
  0003b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??__Eg_XMPiConstants0@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMPiConstants0''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ
text$di	SEGMENT
??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ PROC		; DirectX::`dynamic initializer for 'g_XMTanEstCoefficients'', COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 1703
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR _XM_1DIVPI
  0000b	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B+12, xmm0
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??__Eg_XMTanEstCoefficients@DirectX@@YAXXZ ENDP		; DirectX::`dynamic initializer for 'g_XMTanEstCoefficients''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMScalarNearEqual@DirectX@@YA_NMMM@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
tv76 = -8						; size = 4
_Delta$ = -4						; size = 4
_S1$ = 8						; size = 4
_S2$ = 12						; size = 4
_Epsilon$ = 16						; size = 4
?XMScalarNearEqual@DirectX@@YA_NMMM@Z PROC		; DirectX::XMScalarNearEqual, COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmisc.inl
; Line 2150
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 2151
  0001b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _S1$[ebp]
  00020	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _S2$[ebp]
  00025	f3 0f 11 45 fc	 movss	 DWORD PTR _Delta$[ebp], xmm0
; Line 2152
  0002a	51		 push	 ecx
  0002b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _Delta$[ebp]
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	e8 00 00 00 00	 call	 _fabsf
  0003a	83 c4 04	 add	 esp, 4
  0003d	d9 5d f8	 fstp	 DWORD PTR tv76[ebp]
  00040	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _Epsilon$[ebp]
  00045	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR tv76[ebp]
  00049	72 09		 jb	 SHORT $LN3@XMScalarNe
  0004b	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00052	eb 07		 jmp	 SHORT $LN4@XMScalarNe
$LN3@XMScalarNe:
  00054	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@XMScalarNe:
  0005b	8a 45 f4	 mov	 al, BYTE PTR tv68[ebp]
; Line 2153
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?XMScalarNearEqual@DirectX@@YA_NMMM@Z ENDP		; DirectX::XMScalarNearEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z
_TEXT	SEGMENT
$T1 = -304						; size = 16
$T2 = -288						; size = 16
$T3 = -272						; size = 16
$T4 = -256						; size = 16
$T5 = -240						; size = 16
$T6 = -224						; size = 16
$T7 = -208						; size = 16
$T8 = -192						; size = 16
$T9 = -176						; size = 16
_vTemp$ = -160						; size = 16
_vValues$ = -144					; size = 16
_rMem$ = -128						; size = 16
_fRange$ = -104						; size = 4
_M$ = -96						; size = 64
_FarZ$ = -20						; size = 4
_NearZ$ = -16						; size = 4
_ViewHeight$ = -12					; size = 4
_ViewWidth$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z PROC ; DirectX::XMMatrixOrthographicLH, COMDAT
; _ViewWidth$ = xmm0s
; _ViewHeight$ = xmm1s
; _NearZ$ = xmm2s
; _FarZ$ = xmm3s
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 2575
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec 3c 01 00
	00		 sub	 esp, 316		; 0000013cH
  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	51		 push	 ecx
  0001f	8d bd c4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-316]
  00025	b9 4f 00 00 00	 mov	 ecx, 79			; 0000004fH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	59		 pop	 ecx
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	33 c5		 xor	 eax, ebp
  00039	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0003c	f3 0f 11 5d ec	 movss	 DWORD PTR _FarZ$[ebp], xmm3
  00041	f3 0f 11 55 f0	 movss	 DWORD PTR _NearZ$[ebp], xmm2
  00046	f3 0f 11 4d f4	 movss	 DWORD PTR _ViewHeight$[ebp], xmm1
  0004b	f3 0f 11 45 f8	 movss	 DWORD PTR _ViewWidth$[ebp], xmm0
; Line 2576
  00050	51		 push	 ecx
  00051	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3727c5ac
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	51		 push	 ecx
  0005f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	51		 push	 ecx
  0006d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _ViewWidth$[ebp]
  00072	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00077	e8 00 00 00 00	 call	 ?XMScalarNearEqual@DirectX@@YA_NMMM@Z ; DirectX::XMScalarNearEqual
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007f	0f b6 c0	 movzx	 eax, al
  00082	85 c0		 test	 eax, eax
  00084	74 21		 je	 SHORT $LN3@XMMatrixOr
  00086	8b f4		 mov	 esi, esp
  00088	68 10 0a 00 00	 push	 2576			; 00000a10H
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?0?$AA?5?$AA0?$AA?4@
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a0	3b f4		 cmp	 esi, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@XMMatrixOr:
; Line 2577
  000a7	51		 push	 ecx
  000a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3727c5ac
  000b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c3	51		 push	 ecx
  000c4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _ViewHeight$[ebp]
  000c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ce	e8 00 00 00 00	 call	 ?XMScalarNearEqual@DirectX@@YA_NMMM@Z ; DirectX::XMScalarNearEqual
  000d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d6	0f b6 d0	 movzx	 edx, al
  000d9	85 d2		 test	 edx, edx
  000db	74 21		 je	 SHORT $LN4@XMMatrixOr
  000dd	8b f4		 mov	 esi, esp
  000df	68 11 0a 00 00	 push	 2577			; 00000a11H
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAV?$AAi?$AAe?$AAw?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?0?$AA?5?$AA0@
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000f4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f7	3b f4		 cmp	 esi, esp
  000f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@XMMatrixOr:
; Line 2578
  000fe	51		 push	 ecx
  000ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3727c5ac
  00107	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010c	51		 push	 ecx
  0010d	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _NearZ$[ebp]
  00112	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00117	51		 push	 ecx
  00118	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _FarZ$[ebp]
  0011d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00122	e8 00 00 00 00	 call	 ?XMScalarNearEqual@DirectX@@YA_NMMM@Z ; DirectX::XMScalarNearEqual
  00127	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012a	0f b6 c8	 movzx	 ecx, al
  0012d	85 c9		 test	 ecx, ecx
  0012f	74 21		 je	 SHORT $LN5@XMMatrixOr
  00131	8b f4		 mov	 esi, esp
  00133	68 12 0a 00 00	 push	 2578			; 00000a12H
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@FPIPICAN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq?$AAu?$AAa?$AAl?$AA?$CI?$AAF?$AAa?$AAr?$AAZ?$AA?0?$AA?5?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?0?$AA?5@
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00148	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014b	3b f4		 cmp	 esi, esp
  0014d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@XMMatrixOr:
; Line 2617
  00152	8d 4d a0	 lea	 ecx, DWORD PTR _M$[ebp]
  00155	e8 00 00 00 00	 call	 ??0XMMATRIX@DirectX@@QAE@XZ ; DirectX::XMMATRIX::XMMATRIX
; Line 2618
  0015a	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _FarZ$[ebp]
  0015f	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _NearZ$[ebp]
  00164	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0016c	f3 0f 5e c8	 divss	 xmm1, xmm0
  00170	f3 0f 11 4d 98	 movss	 DWORD PTR _fRange$[ebp], xmm1
; Line 2625
  00175	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0017d	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _ViewWidth$[ebp]
  00182	f3 0f 11 45 80	 movss	 DWORD PTR _rMem$[ebp], xmm0
  00187	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0018f	f3 0f 5e 45 f4	 divss	 xmm0, DWORD PTR _ViewHeight$[ebp]
  00194	f3 0f 11 45 84	 movss	 DWORD PTR _rMem$[ebp+4], xmm0
  00199	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _fRange$[ebp]
  0019e	f3 0f 11 45 88	 movss	 DWORD PTR _rMem$[ebp+8], xmm0
  001a3	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _fRange$[ebp]
  001a8	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001af	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _NearZ$[ebp]
  001b4	f3 0f 11 45 8c	 movss	 DWORD PTR _rMem$[ebp+12], xmm0
; Line 2627
  001b9	0f 28 45 80	 movaps	 xmm0, XMMWORD PTR _rMem$[ebp]
  001bd	0f 29 85 70 ff
	ff ff		 movaps	 XMMWORD PTR _vValues$[ebp], xmm0
; Line 2628
  001c4	0f 57 c0	 xorps	 xmm0, xmm0
  001c7	0f 29 85 50 ff
	ff ff		 movaps	 XMMWORD PTR $T9[ebp], xmm0
  001ce	0f 28 85 50 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T9[ebp]
  001d5	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2630
  001dc	0f 28 85 70 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vValues$[ebp]
  001e3	0f 28 8d 60 ff
	ff ff		 movaps	 xmm1, XMMWORD PTR _vTemp$[ebp]
  001ea	f3 0f 10 c8	 _movss	 xmm1, xmm0
  001ee	0f 29 8d 40 ff
	ff ff		 movaps	 XMMWORD PTR $T8[ebp], xmm1
  001f5	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T8[ebp]
  001fc	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2632
  00203	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00208	6b c8 00	 imul	 ecx, eax, 0
  0020b	0f 10 85 60 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _vTemp$[ebp]
  00212	0f 11 44 0d a0	 movups	 XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 2634
  00217	0f 28 85 70 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vValues$[ebp]
  0021e	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2635
  00225	8d 95 30 ff ff
	ff		 lea	 edx, DWORD PTR $T7[ebp]
  0022b	52		 push	 edx
  0022c	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_XMMaskY@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMMaskY
  00231	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  00236	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00239	0f 28 8d 60 ff
	ff ff		 movaps	 xmm1, XMMWORD PTR _vTemp$[ebp]
  00240	0f 54 c8	 andps	 xmm1, xmm0
  00243	0f 29 8d 20 ff
	ff ff		 movaps	 XMMWORD PTR $T6[ebp], xmm1
  0024a	0f 28 85 20 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T6[ebp]
  00251	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2636
  00258	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0025d	c1 e0 00	 shl	 eax, 0
  00260	0f 10 85 60 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _vTemp$[ebp]
  00267	0f 11 44 05 a0	 movups	 XMMWORD PTR _M$[ebp+eax], xmm0
; Line 2638
  0026c	0f 57 c0	 xorps	 xmm0, xmm0
  0026f	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR $T5[ebp], xmm0
  00276	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T5[ebp]
  0027d	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2639
  00284	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0028a	51		 push	 ecx
  0028b	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMIdentityR3
  00290	e8 00 00 00 00	 call	 ??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
  00295	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00298	0f 28 8d 70 ff
	ff ff		 movaps	 xmm1, XMMWORD PTR _vValues$[ebp]
  0029f	0f c6 c8 ee	 shufps	 xmm1, xmm0, 238		; 000000eeH
  002a3	0f 29 8d f0 fe
	ff ff		 movaps	 XMMWORD PTR $T3[ebp], xmm1
  002aa	0f 28 85 f0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T3[ebp]
  002b1	0f 29 85 70 ff
	ff ff		 movaps	 XMMWORD PTR _vValues$[ebp], xmm0
; Line 2641
  002b8	0f 28 85 60 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vTemp$[ebp]
  002bf	0f c6 85 70 ff
	ff ff 80	 shufps	 xmm0, XMMWORD PTR _vValues$[ebp], 128 ; 00000080H
  002c7	0f 29 85 e0 fe
	ff ff		 movaps	 XMMWORD PTR $T2[ebp], xmm0
  002ce	0f 28 85 e0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T2[ebp]
  002d5	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2642
  002dc	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  002e1	d1 e2		 shl	 edx, 1
  002e3	0f 10 85 60 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _vTemp$[ebp]
  002ea	0f 11 44 15 a0	 movups	 XMMWORD PTR _M$[ebp+edx], xmm0
; Line 2644
  002ef	0f 28 85 60 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vTemp$[ebp]
  002f6	0f c6 85 70 ff
	ff ff d0	 shufps	 xmm0, XMMWORD PTR _vValues$[ebp], 208 ; 000000d0H
  002fe	0f 29 85 d0 fe
	ff ff		 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00305	0f 28 85 d0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T1[ebp]
  0030c	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2645
  00313	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00318	6b c8 03	 imul	 ecx, eax, 3
  0031b	0f 10 85 60 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _vTemp$[ebp]
  00322	0f 11 44 0d a0	 movups	 XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 2646
  00327	0f 28 45 a0	 movaps	 xmm0, XMMWORD PTR _M$[ebp]
  0032b	0f 28 4d b0	 movaps	 xmm1, XMMWORD PTR _M$[ebp+16]
  0032f	0f 28 55 c0	 movaps	 xmm2, XMMWORD PTR _M$[ebp+32]
  00333	0f 28 5d d0	 movaps	 xmm3, XMMWORD PTR _M$[ebp+48]
; Line 2649
  00337	52		 push	 edx
  00338	8b cd		 mov	 ecx, ebp
  0033a	50		 push	 eax
  0033b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@XMMatrixOr
  00341	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00346	58		 pop	 eax
  00347	5a		 pop	 edx
  00348	5f		 pop	 edi
  00349	5e		 pop	 esi
  0034a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0034d	33 cd		 xor	 ecx, ebp
  0034f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00354	8b e5		 mov	 esp, ebp
  00356	5d		 pop	 ebp
  00357	8b e3		 mov	 esp, ebx
  00359	5b		 pop	 ebx
  0035a	c3		 ret	 0
  0035b	90		 npad	 1
$LN8@XMMatrixOr:
  0035c	01 00 00 00	 DD	 1
  00360	00 00 00 00	 DD	 $LN7@XMMatrixOr
$LN7@XMMatrixOr:
  00364	a0 ff ff ff	 DD	 -96			; ffffffa0H
  00368	40 00 00 00	 DD	 64			; 00000040H
  0036c	00 00 00 00	 DD	 $LN6@XMMatrixOr
$LN6@XMMatrixOr:
  00370	4d		 DB	 77			; 0000004dH
  00371	00		 DB	 0
?XMMatrixOrthographicLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ENDP ; DirectX::XMMatrixOrthographicLH
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z
_TEXT	SEGMENT
$T1 = -128						; size = 16
_M$ = -96						; size = 64
_OffsetZ$ = -16						; size = 4
_OffsetY$ = -12						; size = 4
_OffsetX$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z PROC ; DirectX::XMMatrixTranslation, COMDAT
; _OffsetX$ = xmm0s
; _OffsetY$ = xmm1s
; _OffsetZ$ = xmm2s
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 1079
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  0001c	57		 push	 edi
  0001d	51		 push	 ecx
  0001e	8d 7d 80	 lea	 edi, DWORD PTR [ebp-128]
  00021	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	f3 0f 11 55 f0	 movss	 DWORD PTR _OffsetZ$[ebp], xmm2
  0003d	f3 0f 11 4d f4	 movss	 DWORD PTR _OffsetY$[ebp], xmm1
  00042	f3 0f 11 45 f8	 movss	 DWORD PTR _OffsetX$[ebp], xmm0
; Line 1105
  00047	8d 4d a0	 lea	 ecx, DWORD PTR _M$[ebp]
  0004a	e8 00 00 00 00	 call	 ??0XMMATRIX@DirectX@@QAE@XZ ; DirectX::XMMATRIX::XMMATRIX
; Line 1106
  0004f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00054	6b c8 00	 imul	 ecx, eax, 0
  00057	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
  0005e	0f 11 44 0d a0	 movups	 XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 1107
  00063	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00068	c1 e2 00	 shl	 edx, 0
  0006b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
  00072	0f 11 44 15 a0	 movups	 XMMWORD PTR _M$[ebp+edx], xmm0
; Line 1108
  00077	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0007c	d1 e0		 shl	 eax, 1
  0007e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
  00085	0f 11 44 05 a0	 movups	 XMMWORD PTR _M$[ebp+eax], xmm0
; Line 1109
  0008a	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  00092	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR _OffsetZ$[ebp]
  00097	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR _OffsetY$[ebp]
  0009c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _OffsetX$[ebp]
  000a1	e8 00 00 00 00	 call	 ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
  000a6	0f 29 45 80	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  000aa	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  000af	6b d1 03	 imul	 edx, ecx, 3
  000b2	0f 10 45 80	 movups	 xmm0, XMMWORD PTR $T1[ebp]
  000b6	0f 11 44 15 a0	 movups	 XMMWORD PTR _M$[ebp+edx], xmm0
; Line 1110
  000bb	0f 28 45 a0	 movaps	 xmm0, XMMWORD PTR _M$[ebp]
  000bf	0f 28 4d b0	 movaps	 xmm1, XMMWORD PTR _M$[ebp+16]
  000c3	0f 28 55 c0	 movaps	 xmm2, XMMWORD PTR _M$[ebp+32]
  000c7	0f 28 5d d0	 movaps	 xmm3, XMMWORD PTR _M$[ebp+48]
; Line 1113
  000cb	52		 push	 edx
  000cc	8b cd		 mov	 ecx, ebp
  000ce	50		 push	 eax
  000cf	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@XMMatrixTr
  000d5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000da	58		 pop	 eax
  000db	5a		 pop	 edx
  000dc	5f		 pop	 edi
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e0	33 cd		 xor	 ecx, ebp
  000e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	8b e3		 mov	 esp, ebx
  000ec	5b		 pop	 ebx
  000ed	c3		 ret	 0
  000ee	8b ff		 npad	 2
$LN5@XMMatrixTr:
  000f0	01 00 00 00	 DD	 1
  000f4	00 00 00 00	 DD	 $LN4@XMMatrixTr
$LN4@XMMatrixTr:
  000f8	a0 ff ff ff	 DD	 -96			; ffffffa0H
  000fc	40 00 00 00	 DD	 64			; 00000040H
  00100	00 00 00 00	 DD	 $LN3@XMMatrixTr
$LN3@XMMatrixTr:
  00104	4d		 DB	 77			; 0000004dH
  00105	00		 DB	 0
?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ENDP ; DirectX::XMMatrixTranslation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z
_TEXT	SEGMENT
$T1 = -384						; size = 16
$T2 = -368						; size = 16
$T3 = -352						; size = 16
$T4 = -336						; size = 16
_mResult$ = -304					; size = 64
$T5 = -224						; size = 16
_vTemp4$ = -208						; size = 16
$T6 = -192						; size = 16
_vTemp2$ = -176						; size = 16
$T7 = -160						; size = 16
_vTemp3$ = -144						; size = 16
$T8 = -128						; size = 16
_vTemp1$ = -112						; size = 16
_M$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z PROC	; DirectX::XMMatrixTranspose, COMDAT
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 543
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec 80 01 00
	00		 sub	 esp, 384		; 00000180H
  0001c	57		 push	 edi
  0001d	51		 push	 ecx
  0001e	8d bd 80 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-384]
  00024	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	59		 pop	 ecx
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00036	33 c5		 xor	 eax, ebp
  00038	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0003b	0f 29 5d e0	 movaps	 XMMWORD PTR _M$[ebp+48], xmm3
  0003f	0f 29 55 d0	 movaps	 XMMWORD PTR _M$[ebp+32], xmm2
  00043	0f 29 4d c0	 movaps	 XMMWORD PTR _M$[ebp+16], xmm1
  00047	0f 29 45 b0	 movaps	 XMMWORD PTR _M$[ebp], xmm0
; Line 581
  0004b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00050	c1 e0 00	 shl	 eax, 0
  00053	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00058	6b d1 00	 imul	 edx, ecx, 0
  0005b	0f 10 44 15 b0	 movups	 xmm0, XMMWORD PTR _M$[ebp+edx]
  00060	0f c6 44 05 b0
	44		 shufps	 xmm0, XMMWORD PTR _M$[ebp+eax], 68 ; 00000044H
  00066	0f 29 45 80	 movaps	 XMMWORD PTR $T8[ebp], xmm0
  0006a	0f 28 45 80	 movaps	 xmm0, XMMWORD PTR $T8[ebp]
  0006e	0f 29 45 90	 movaps	 XMMWORD PTR _vTemp1$[ebp], xmm0
; Line 583
  00072	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00077	c1 e0 00	 shl	 eax, 0
  0007a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0007f	6b d1 00	 imul	 edx, ecx, 0
  00082	0f 10 44 15 b0	 movups	 xmm0, XMMWORD PTR _M$[ebp+edx]
  00087	0f c6 44 05 b0
	ee		 shufps	 xmm0, XMMWORD PTR _M$[ebp+eax], 238 ; 000000eeH
  0008d	0f 29 85 60 ff
	ff ff		 movaps	 XMMWORD PTR $T7[ebp], xmm0
  00094	0f 28 85 60 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T7[ebp]
  0009b	0f 29 85 70 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp3$[ebp], xmm0
; Line 585
  000a2	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000a7	6b c8 03	 imul	 ecx, eax, 3
  000aa	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  000af	d1 e2		 shl	 edx, 1
  000b1	0f 10 44 15 b0	 movups	 xmm0, XMMWORD PTR _M$[ebp+edx]
  000b6	0f c6 44 0d b0
	44		 shufps	 xmm0, XMMWORD PTR _M$[ebp+ecx], 68 ; 00000044H
  000bc	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR $T6[ebp], xmm0
  000c3	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T6[ebp]
  000ca	0f 29 85 50 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp2$[ebp], xmm0
; Line 587
  000d1	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000d6	6b c8 03	 imul	 ecx, eax, 3
  000d9	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  000de	d1 e2		 shl	 edx, 1
  000e0	0f 10 44 15 b0	 movups	 xmm0, XMMWORD PTR _M$[ebp+edx]
  000e5	0f c6 44 0d b0
	ee		 shufps	 xmm0, XMMWORD PTR _M$[ebp+ecx], 238 ; 000000eeH
  000eb	0f 29 85 20 ff
	ff ff		 movaps	 XMMWORD PTR $T5[ebp], xmm0
  000f2	0f 28 85 20 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T5[ebp]
  000f9	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vTemp4$[ebp], xmm0
; Line 588
  00100	8d 8d d0 fe ff
	ff		 lea	 ecx, DWORD PTR _mResult$[ebp]
  00106	e8 00 00 00 00	 call	 ??0XMMATRIX@DirectX@@QAE@XZ ; DirectX::XMMATRIX::XMMATRIX
; Line 591
  0010b	0f 28 45 90	 movaps	 xmm0, XMMWORD PTR _vTemp1$[ebp]
  0010f	0f c6 85 50 ff
	ff ff 88	 shufps	 xmm0, XMMWORD PTR _vTemp2$[ebp], 136 ; 00000088H
  00117	0f 29 85 b0 fe
	ff ff		 movaps	 XMMWORD PTR $T4[ebp], xmm0
  0011e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00123	6b c8 00	 imul	 ecx, eax, 0
  00126	0f 10 85 b0 fe
	ff ff		 movups	 xmm0, XMMWORD PTR $T4[ebp]
  0012d	0f 11 84 0d d0
	fe ff ff	 movups	 XMMWORD PTR _mResult$[ebp+ecx], xmm0
; Line 593
  00135	0f 28 45 90	 movaps	 xmm0, XMMWORD PTR _vTemp1$[ebp]
  00139	0f c6 85 50 ff
	ff ff dd	 shufps	 xmm0, XMMWORD PTR _vTemp2$[ebp], 221 ; 000000ddH
  00141	0f 29 85 a0 fe
	ff ff		 movaps	 XMMWORD PTR $T3[ebp], xmm0
  00148	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  0014d	c1 e2 00	 shl	 edx, 0
  00150	0f 10 85 a0 fe
	ff ff		 movups	 xmm0, XMMWORD PTR $T3[ebp]
  00157	0f 11 84 15 d0
	fe ff ff	 movups	 XMMWORD PTR _mResult$[ebp+edx], xmm0
; Line 595
  0015f	0f 28 85 70 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vTemp3$[ebp]
  00166	0f c6 85 30 ff
	ff ff 88	 shufps	 xmm0, XMMWORD PTR _vTemp4$[ebp], 136 ; 00000088H
  0016e	0f 29 85 90 fe
	ff ff		 movaps	 XMMWORD PTR $T2[ebp], xmm0
  00175	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0017a	d1 e0		 shl	 eax, 1
  0017c	0f 10 85 90 fe
	ff ff		 movups	 xmm0, XMMWORD PTR $T2[ebp]
  00183	0f 11 84 05 d0
	fe ff ff	 movups	 XMMWORD PTR _mResult$[ebp+eax], xmm0
; Line 597
  0018b	0f 28 85 70 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vTemp3$[ebp]
  00192	0f c6 85 30 ff
	ff ff dd	 shufps	 xmm0, XMMWORD PTR _vTemp4$[ebp], 221 ; 000000ddH
  0019a	0f 29 85 80 fe
	ff ff		 movaps	 XMMWORD PTR $T1[ebp], xmm0
  001a1	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  001a6	6b d1 03	 imul	 edx, ecx, 3
  001a9	0f 10 85 80 fe
	ff ff		 movups	 xmm0, XMMWORD PTR $T1[ebp]
  001b0	0f 11 84 15 d0
	fe ff ff	 movups	 XMMWORD PTR _mResult$[ebp+edx], xmm0
; Line 598
  001b8	0f 28 85 d0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR _mResult$[ebp]
  001bf	0f 28 8d e0 fe
	ff ff		 movaps	 xmm1, XMMWORD PTR _mResult$[ebp+16]
  001c6	0f 28 95 f0 fe
	ff ff		 movaps	 xmm2, XMMWORD PTR _mResult$[ebp+32]
  001cd	0f 28 9d 00 ff
	ff ff		 movaps	 xmm3, XMMWORD PTR _mResult$[ebp+48]
; Line 601
  001d4	52		 push	 edx
  001d5	8b cd		 mov	 ecx, ebp
  001d7	50		 push	 eax
  001d8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@XMMatrixTr
  001de	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001e3	58		 pop	 eax
  001e4	5a		 pop	 edx
  001e5	5f		 pop	 edi
  001e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e9	33 cd		 xor	 ecx, ebp
  001eb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f0	8b e5		 mov	 esp, ebp
  001f2	5d		 pop	 ebp
  001f3	8b e3		 mov	 esp, ebx
  001f5	5b		 pop	 ebx
  001f6	c3		 ret	 0
  001f7	90		 npad	 1
$LN6@XMMatrixTr:
  001f8	02 00 00 00	 DD	 2
  001fc	00 00 00 00	 DD	 $LN5@XMMatrixTr
$LN5@XMMatrixTr:
  00200	b0 ff ff ff	 DD	 -80			; ffffffb0H
  00204	40 00 00 00	 DD	 64			; 00000040H
  00208	00 00 00 00	 DD	 $LN3@XMMatrixTr
  0020c	d0 fe ff ff	 DD	 -304			; fffffed0H
  00210	40 00 00 00	 DD	 64			; 00000040H
  00214	00 00 00 00	 DD	 $LN4@XMMatrixTr
$LN4@XMMatrixTr:
  00218	6d		 DB	 109			; 0000006dH
  00219	52		 DB	 82			; 00000052H
  0021a	65		 DB	 101			; 00000065H
  0021b	73		 DB	 115			; 00000073H
  0021c	75		 DB	 117			; 00000075H
  0021d	6c		 DB	 108			; 0000006cH
  0021e	74		 DB	 116			; 00000074H
  0021f	00		 DB	 0
$LN3@XMMatrixTr:
  00220	4d		 DB	 77			; 0000004dH
  00221	00		 DB	 0
?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ENDP	; DirectX::XMMatrixTranspose
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z
_TEXT	SEGMENT
$T1 = -944						; size = 16
$T2 = -928						; size = 16
$T3 = -912						; size = 16
$T4 = -896						; size = 16
$T5 = -880						; size = 16
$T6 = -864						; size = 16
$T7 = -848						; size = 16
$T8 = -832						; size = 16
$T9 = -816						; size = 16
$T10 = -800						; size = 16
$T11 = -784						; size = 16
$T12 = -768						; size = 16
$T13 = -752						; size = 16
$T14 = -736						; size = 16
$T15 = -720						; size = 16
$T16 = -704						; size = 16
$T17 = -688						; size = 16
$T18 = -672						; size = 16
$T19 = -656						; size = 16
$T20 = -640						; size = 16
$T21 = -624						; size = 16
$T22 = -608						; size = 16
$T23 = -592						; size = 16
$T24 = -576						; size = 16
$T25 = -560						; size = 16
$T26 = -544						; size = 16
$T27 = -528						; size = 16
$T28 = -512						; size = 16
$T29 = -496						; size = 16
$T30 = -480						; size = 16
$T31 = -464						; size = 16
$T32 = -448						; size = 16
$T33 = -432						; size = 16
$T34 = -416						; size = 16
$T35 = -400						; size = 16
$T36 = -384						; size = 16
$T37 = -368						; size = 16
$T38 = -352						; size = 16
$T39 = -336						; size = 16
$T40 = -320						; size = 16
$T41 = -304						; size = 16
$T42 = -288						; size = 16
_vZ$ = -272						; size = 16
$T43 = -256						; size = 16
_vY$ = -240						; size = 16
$T44 = -224						; size = 16
_vX$ = -208						; size = 16
_vW$ = -192						; size = 16
_mResult$ = -160					; size = 64
_M2$ = -88						; size = 4
_M1$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z PROC ; DirectX::XMMatrixMultiply, COMDAT
; _M2$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 228
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec b0 03 00
	00		 sub	 esp, 944		; 000003b0H
  0001c	57		 push	 edi
  0001d	51		 push	 ecx
  0001e	8d bd 50 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-944]
  00024	b9 ec 00 00 00	 mov	 ecx, 236		; 000000ecH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	59		 pop	 ecx
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00036	33 c5		 xor	 eax, ebp
  00038	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0003b	89 4d a8	 mov	 DWORD PTR _M2$[ebp], ecx
  0003e	0f 29 5d e0	 movaps	 XMMWORD PTR _M1$[ebp+48], xmm3
  00042	0f 29 55 d0	 movaps	 XMMWORD PTR _M1$[ebp+32], xmm2
  00046	0f 29 4d c0	 movaps	 XMMWORD PTR _M1$[ebp+16], xmm1
  0004a	0f 29 45 b0	 movaps	 XMMWORD PTR _M1$[ebp], xmm0
; Line 301
  0004e	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _mResult$[ebp]
  00054	e8 00 00 00 00	 call	 ??0XMMATRIX@DirectX@@QAE@XZ ; DirectX::XMMATRIX::XMMATRIX
; Line 303
  00059	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0005e	6b c8 00	 imul	 ecx, eax, 0
  00061	0f 10 44 0d b0	 movups	 xmm0, XMMWORD PTR _M1$[ebp+ecx]
  00066	0f 11 85 40 ff
	ff ff		 movups	 XMMWORD PTR _vW$[ebp], xmm0
; Line 305
  0006d	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00074	0f c6 85 40 ff
	ff ff 00	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 0
  0007c	0f 29 85 20 ff
	ff ff		 movaps	 XMMWORD PTR $T44[ebp], xmm0
  00083	0f 28 85 20 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T44[ebp]
  0008a	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 306
  00091	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00098	0f c6 85 40 ff
	ff ff 55	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 85 ; 00000055H
  000a0	0f 29 85 00 ff
	ff ff		 movaps	 XMMWORD PTR $T43[ebp], xmm0
  000a7	0f 28 85 00 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR $T43[ebp]
  000ae	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 307
  000b5	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  000bc	0f c6 85 40 ff
	ff ff aa	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 170 ; 000000aaH
  000c4	0f 29 85 e0 fe
	ff ff		 movaps	 XMMWORD PTR $T42[ebp], xmm0
  000cb	0f 28 85 e0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T42[ebp]
  000d2	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR _vZ$[ebp], xmm0
; Line 308
  000d9	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  000e0	0f c6 85 40 ff
	ff ff ff	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 255 ; 000000ffH
  000e8	0f 29 85 d0 fe
	ff ff		 movaps	 XMMWORD PTR $T41[ebp], xmm0
  000ef	0f 28 85 d0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T41[ebp]
  000f6	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR _vW$[ebp], xmm0
; Line 310
  000fd	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00102	6b c2 00	 imul	 eax, edx, 0
  00105	03 45 a8	 add	 eax, DWORD PTR _M2$[ebp]
  00108	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  0010f	0f 59 00	 mulps	 xmm0, XMMWORD PTR [eax]
  00112	0f 29 85 c0 fe
	ff ff		 movaps	 XMMWORD PTR $T40[ebp], xmm0
  00119	0f 28 85 c0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T40[ebp]
  00120	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 311
  00127	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0012c	c1 e1 00	 shl	 ecx, 0
  0012f	03 4d a8	 add	 ecx, DWORD PTR _M2$[ebp]
  00132	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vY$[ebp]
  00139	0f 59 01	 mulps	 xmm0, XMMWORD PTR [ecx]
  0013c	0f 29 85 b0 fe
	ff ff		 movaps	 XMMWORD PTR $T39[ebp], xmm0
  00143	0f 28 85 b0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T39[ebp]
  0014a	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 312
  00151	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00156	d1 e2		 shl	 edx, 1
  00158	03 55 a8	 add	 edx, DWORD PTR _M2$[ebp]
  0015b	0f 28 85 f0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR _vZ$[ebp]
  00162	0f 59 02	 mulps	 xmm0, XMMWORD PTR [edx]
  00165	0f 29 85 a0 fe
	ff ff		 movaps	 XMMWORD PTR $T38[ebp], xmm0
  0016c	0f 28 85 a0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T38[ebp]
  00173	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR _vZ$[ebp], xmm0
; Line 313
  0017a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0017f	6b c8 03	 imul	 ecx, eax, 3
  00182	03 4d a8	 add	 ecx, DWORD PTR _M2$[ebp]
  00185	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  0018c	0f 59 01	 mulps	 xmm0, XMMWORD PTR [ecx]
  0018f	0f 29 85 90 fe
	ff ff		 movaps	 XMMWORD PTR $T37[ebp], xmm0
  00196	0f 28 85 90 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T37[ebp]
  0019d	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR _vW$[ebp], xmm0
; Line 315
  001a4	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  001ab	0f 58 85 f0 fe
	ff ff		 addps	 xmm0, XMMWORD PTR _vZ$[ebp]
  001b2	0f 29 85 80 fe
	ff ff		 movaps	 XMMWORD PTR $T36[ebp], xmm0
  001b9	0f 28 85 80 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T36[ebp]
  001c0	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 316
  001c7	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vY$[ebp]
  001ce	0f 58 85 40 ff
	ff ff		 addps	 xmm0, XMMWORD PTR _vW$[ebp]
  001d5	0f 29 85 70 fe
	ff ff		 movaps	 XMMWORD PTR $T35[ebp], xmm0
  001dc	0f 28 85 70 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T35[ebp]
  001e3	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 317
  001ea	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  001f1	0f 58 85 10 ff
	ff ff		 addps	 xmm0, XMMWORD PTR _vY$[ebp]
  001f8	0f 29 85 60 fe
	ff ff		 movaps	 XMMWORD PTR $T34[ebp], xmm0
  001ff	0f 28 85 60 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T34[ebp]
  00206	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 318
  0020d	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00212	6b c2 00	 imul	 eax, edx, 0
  00215	0f 10 85 30 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _vX$[ebp]
  0021c	0f 11 84 05 60
	ff ff ff	 movups	 XMMWORD PTR _mResult$[ebp+eax], xmm0
; Line 320
  00224	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00229	c1 e1 00	 shl	 ecx, 0
  0022c	0f 10 44 0d b0	 movups	 xmm0, XMMWORD PTR _M1$[ebp+ecx]
  00231	0f 11 85 40 ff
	ff ff		 movups	 XMMWORD PTR _vW$[ebp], xmm0
; Line 321
  00238	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  0023f	0f c6 85 40 ff
	ff ff 00	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 0
  00247	0f 29 85 50 fe
	ff ff		 movaps	 XMMWORD PTR $T33[ebp], xmm0
  0024e	0f 28 85 50 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T33[ebp]
  00255	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 322
  0025c	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00263	0f c6 85 40 ff
	ff ff 55	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 85 ; 00000055H
  0026b	0f 29 85 40 fe
	ff ff		 movaps	 XMMWORD PTR $T32[ebp], xmm0
  00272	0f 28 85 40 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T32[ebp]
  00279	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 323
  00280	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00287	0f c6 85 40 ff
	ff ff aa	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 170 ; 000000aaH
  0028f	0f 29 85 30 fe
	ff ff		 movaps	 XMMWORD PTR $T31[ebp], xmm0
  00296	0f 28 85 30 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T31[ebp]
  0029d	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR _vZ$[ebp], xmm0
; Line 324
  002a4	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  002ab	0f c6 85 40 ff
	ff ff ff	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 255 ; 000000ffH
  002b3	0f 29 85 20 fe
	ff ff		 movaps	 XMMWORD PTR $T30[ebp], xmm0
  002ba	0f 28 85 20 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T30[ebp]
  002c1	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR _vW$[ebp], xmm0
; Line 325
  002c8	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  002cd	6b c2 00	 imul	 eax, edx, 0
  002d0	03 45 a8	 add	 eax, DWORD PTR _M2$[ebp]
  002d3	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  002da	0f 59 00	 mulps	 xmm0, XMMWORD PTR [eax]
  002dd	0f 29 85 10 fe
	ff ff		 movaps	 XMMWORD PTR $T29[ebp], xmm0
  002e4	0f 28 85 10 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T29[ebp]
  002eb	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 326
  002f2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  002f7	c1 e1 00	 shl	 ecx, 0
  002fa	03 4d a8	 add	 ecx, DWORD PTR _M2$[ebp]
  002fd	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vY$[ebp]
  00304	0f 59 01	 mulps	 xmm0, XMMWORD PTR [ecx]
  00307	0f 29 85 00 fe
	ff ff		 movaps	 XMMWORD PTR $T28[ebp], xmm0
  0030e	0f 28 85 00 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR $T28[ebp]
  00315	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 327
  0031c	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00321	d1 e2		 shl	 edx, 1
  00323	03 55 a8	 add	 edx, DWORD PTR _M2$[ebp]
  00326	0f 28 85 f0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR _vZ$[ebp]
  0032d	0f 59 02	 mulps	 xmm0, XMMWORD PTR [edx]
  00330	0f 29 85 f0 fd
	ff ff		 movaps	 XMMWORD PTR $T27[ebp], xmm0
  00337	0f 28 85 f0 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T27[ebp]
  0033e	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR _vZ$[ebp], xmm0
; Line 328
  00345	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0034a	6b c8 03	 imul	 ecx, eax, 3
  0034d	03 4d a8	 add	 ecx, DWORD PTR _M2$[ebp]
  00350	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00357	0f 59 01	 mulps	 xmm0, XMMWORD PTR [ecx]
  0035a	0f 29 85 e0 fd
	ff ff		 movaps	 XMMWORD PTR $T26[ebp], xmm0
  00361	0f 28 85 e0 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T26[ebp]
  00368	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR _vW$[ebp], xmm0
; Line 329
  0036f	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  00376	0f 58 85 f0 fe
	ff ff		 addps	 xmm0, XMMWORD PTR _vZ$[ebp]
  0037d	0f 29 85 d0 fd
	ff ff		 movaps	 XMMWORD PTR $T25[ebp], xmm0
  00384	0f 28 85 d0 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T25[ebp]
  0038b	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 330
  00392	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vY$[ebp]
  00399	0f 58 85 40 ff
	ff ff		 addps	 xmm0, XMMWORD PTR _vW$[ebp]
  003a0	0f 29 85 c0 fd
	ff ff		 movaps	 XMMWORD PTR $T24[ebp], xmm0
  003a7	0f 28 85 c0 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T24[ebp]
  003ae	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 331
  003b5	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  003bc	0f 58 85 10 ff
	ff ff		 addps	 xmm0, XMMWORD PTR _vY$[ebp]
  003c3	0f 29 85 b0 fd
	ff ff		 movaps	 XMMWORD PTR $T23[ebp], xmm0
  003ca	0f 28 85 b0 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T23[ebp]
  003d1	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 332
  003d8	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  003dd	c1 e2 00	 shl	 edx, 0
  003e0	0f 10 85 30 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _vX$[ebp]
  003e7	0f 11 84 15 60
	ff ff ff	 movups	 XMMWORD PTR _mResult$[ebp+edx], xmm0
; Line 333
  003ef	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  003f4	d1 e0		 shl	 eax, 1
  003f6	0f 10 44 05 b0	 movups	 xmm0, XMMWORD PTR _M1$[ebp+eax]
  003fb	0f 11 85 40 ff
	ff ff		 movups	 XMMWORD PTR _vW$[ebp], xmm0
; Line 334
  00402	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00409	0f c6 85 40 ff
	ff ff 00	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 0
  00411	0f 29 85 a0 fd
	ff ff		 movaps	 XMMWORD PTR $T22[ebp], xmm0
  00418	0f 28 85 a0 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T22[ebp]
  0041f	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 335
  00426	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  0042d	0f c6 85 40 ff
	ff ff 55	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 85 ; 00000055H
  00435	0f 29 85 90 fd
	ff ff		 movaps	 XMMWORD PTR $T21[ebp], xmm0
  0043c	0f 28 85 90 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T21[ebp]
  00443	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 336
  0044a	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00451	0f c6 85 40 ff
	ff ff aa	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 170 ; 000000aaH
  00459	0f 29 85 80 fd
	ff ff		 movaps	 XMMWORD PTR $T20[ebp], xmm0
  00460	0f 28 85 80 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T20[ebp]
  00467	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR _vZ$[ebp], xmm0
; Line 337
  0046e	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00475	0f c6 85 40 ff
	ff ff ff	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 255 ; 000000ffH
  0047d	0f 29 85 70 fd
	ff ff		 movaps	 XMMWORD PTR $T19[ebp], xmm0
  00484	0f 28 85 70 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T19[ebp]
  0048b	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR _vW$[ebp], xmm0
; Line 338
  00492	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00497	6b d1 00	 imul	 edx, ecx, 0
  0049a	03 55 a8	 add	 edx, DWORD PTR _M2$[ebp]
  0049d	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  004a4	0f 59 02	 mulps	 xmm0, XMMWORD PTR [edx]
  004a7	0f 29 85 60 fd
	ff ff		 movaps	 XMMWORD PTR $T18[ebp], xmm0
  004ae	0f 28 85 60 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T18[ebp]
  004b5	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 339
  004bc	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  004c1	c1 e0 00	 shl	 eax, 0
  004c4	03 45 a8	 add	 eax, DWORD PTR _M2$[ebp]
  004c7	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vY$[ebp]
  004ce	0f 59 00	 mulps	 xmm0, XMMWORD PTR [eax]
  004d1	0f 29 85 50 fd
	ff ff		 movaps	 XMMWORD PTR $T17[ebp], xmm0
  004d8	0f 28 85 50 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T17[ebp]
  004df	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 340
  004e6	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  004eb	d1 e1		 shl	 ecx, 1
  004ed	03 4d a8	 add	 ecx, DWORD PTR _M2$[ebp]
  004f0	0f 28 85 f0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR _vZ$[ebp]
  004f7	0f 59 01	 mulps	 xmm0, XMMWORD PTR [ecx]
  004fa	0f 29 85 40 fd
	ff ff		 movaps	 XMMWORD PTR $T16[ebp], xmm0
  00501	0f 28 85 40 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T16[ebp]
  00508	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR _vZ$[ebp], xmm0
; Line 341
  0050f	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00514	6b c2 03	 imul	 eax, edx, 3
  00517	03 45 a8	 add	 eax, DWORD PTR _M2$[ebp]
  0051a	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  00521	0f 59 00	 mulps	 xmm0, XMMWORD PTR [eax]
  00524	0f 29 85 30 fd
	ff ff		 movaps	 XMMWORD PTR $T15[ebp], xmm0
  0052b	0f 28 85 30 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T15[ebp]
  00532	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR _vW$[ebp], xmm0
; Line 342
  00539	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  00540	0f 58 85 f0 fe
	ff ff		 addps	 xmm0, XMMWORD PTR _vZ$[ebp]
  00547	0f 29 85 20 fd
	ff ff		 movaps	 XMMWORD PTR $T14[ebp], xmm0
  0054e	0f 28 85 20 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T14[ebp]
  00555	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 343
  0055c	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vY$[ebp]
  00563	0f 58 85 40 ff
	ff ff		 addps	 xmm0, XMMWORD PTR _vW$[ebp]
  0056a	0f 29 85 10 fd
	ff ff		 movaps	 XMMWORD PTR $T13[ebp], xmm0
  00571	0f 28 85 10 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T13[ebp]
  00578	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 344
  0057f	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  00586	0f 58 85 10 ff
	ff ff		 addps	 xmm0, XMMWORD PTR _vY$[ebp]
  0058d	0f 29 85 00 fd
	ff ff		 movaps	 XMMWORD PTR $T12[ebp], xmm0
  00594	0f 28 85 00 fd
	ff ff		 movaps	 xmm0, XMMWORD PTR $T12[ebp]
  0059b	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 345
  005a2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  005a7	d1 e1		 shl	 ecx, 1
  005a9	0f 10 85 30 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _vX$[ebp]
  005b0	0f 11 84 0d 60
	ff ff ff	 movups	 XMMWORD PTR _mResult$[ebp+ecx], xmm0
; Line 346
  005b8	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  005bd	6b c2 03	 imul	 eax, edx, 3
  005c0	0f 10 44 05 b0	 movups	 xmm0, XMMWORD PTR _M1$[ebp+eax]
  005c5	0f 11 85 40 ff
	ff ff		 movups	 XMMWORD PTR _vW$[ebp], xmm0
; Line 347
  005cc	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  005d3	0f c6 85 40 ff
	ff ff 00	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 0
  005db	0f 29 85 f0 fc
	ff ff		 movaps	 XMMWORD PTR $T11[ebp], xmm0
  005e2	0f 28 85 f0 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T11[ebp]
  005e9	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 348
  005f0	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  005f7	0f c6 85 40 ff
	ff ff 55	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 85 ; 00000055H
  005ff	0f 29 85 e0 fc
	ff ff		 movaps	 XMMWORD PTR $T10[ebp], xmm0
  00606	0f 28 85 e0 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T10[ebp]
  0060d	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 349
  00614	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  0061b	0f c6 85 40 ff
	ff ff aa	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 170 ; 000000aaH
  00623	0f 29 85 d0 fc
	ff ff		 movaps	 XMMWORD PTR $T9[ebp], xmm0
  0062a	0f 28 85 d0 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T9[ebp]
  00631	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR _vZ$[ebp], xmm0
; Line 350
  00638	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  0063f	0f c6 85 40 ff
	ff ff ff	 shufps	 xmm0, XMMWORD PTR _vW$[ebp], 255 ; 000000ffH
  00647	0f 29 85 c0 fc
	ff ff		 movaps	 XMMWORD PTR $T8[ebp], xmm0
  0064e	0f 28 85 c0 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T8[ebp]
  00655	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR _vW$[ebp], xmm0
; Line 351
  0065c	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00661	6b d1 00	 imul	 edx, ecx, 0
  00664	03 55 a8	 add	 edx, DWORD PTR _M2$[ebp]
  00667	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  0066e	0f 59 02	 mulps	 xmm0, XMMWORD PTR [edx]
  00671	0f 29 85 b0 fc
	ff ff		 movaps	 XMMWORD PTR $T7[ebp], xmm0
  00678	0f 28 85 b0 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T7[ebp]
  0067f	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 352
  00686	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0068b	c1 e0 00	 shl	 eax, 0
  0068e	03 45 a8	 add	 eax, DWORD PTR _M2$[ebp]
  00691	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vY$[ebp]
  00698	0f 59 00	 mulps	 xmm0, XMMWORD PTR [eax]
  0069b	0f 29 85 a0 fc
	ff ff		 movaps	 XMMWORD PTR $T6[ebp], xmm0
  006a2	0f 28 85 a0 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T6[ebp]
  006a9	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 353
  006b0	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  006b5	d1 e1		 shl	 ecx, 1
  006b7	03 4d a8	 add	 ecx, DWORD PTR _M2$[ebp]
  006ba	0f 28 85 f0 fe
	ff ff		 movaps	 xmm0, XMMWORD PTR _vZ$[ebp]
  006c1	0f 59 01	 mulps	 xmm0, XMMWORD PTR [ecx]
  006c4	0f 29 85 90 fc
	ff ff		 movaps	 XMMWORD PTR $T5[ebp], xmm0
  006cb	0f 28 85 90 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T5[ebp]
  006d2	0f 29 85 f0 fe
	ff ff		 movaps	 XMMWORD PTR _vZ$[ebp], xmm0
; Line 354
  006d9	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  006de	6b c2 03	 imul	 eax, edx, 3
  006e1	03 45 a8	 add	 eax, DWORD PTR _M2$[ebp]
  006e4	0f 28 85 40 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vW$[ebp]
  006eb	0f 59 00	 mulps	 xmm0, XMMWORD PTR [eax]
  006ee	0f 29 85 80 fc
	ff ff		 movaps	 XMMWORD PTR $T4[ebp], xmm0
  006f5	0f 28 85 80 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T4[ebp]
  006fc	0f 29 85 40 ff
	ff ff		 movaps	 XMMWORD PTR _vW$[ebp], xmm0
; Line 355
  00703	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  0070a	0f 58 85 f0 fe
	ff ff		 addps	 xmm0, XMMWORD PTR _vZ$[ebp]
  00711	0f 29 85 70 fc
	ff ff		 movaps	 XMMWORD PTR $T3[ebp], xmm0
  00718	0f 28 85 70 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T3[ebp]
  0071f	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 356
  00726	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vY$[ebp]
  0072d	0f 58 85 40 ff
	ff ff		 addps	 xmm0, XMMWORD PTR _vW$[ebp]
  00734	0f 29 85 60 fc
	ff ff		 movaps	 XMMWORD PTR $T2[ebp], xmm0
  0073b	0f 28 85 60 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T2[ebp]
  00742	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR _vY$[ebp], xmm0
; Line 357
  00749	0f 28 85 30 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _vX$[ebp]
  00750	0f 58 85 10 ff
	ff ff		 addps	 xmm0, XMMWORD PTR _vY$[ebp]
  00757	0f 29 85 50 fc
	ff ff		 movaps	 XMMWORD PTR $T1[ebp], xmm0
  0075e	0f 28 85 50 fc
	ff ff		 movaps	 xmm0, XMMWORD PTR $T1[ebp]
  00765	0f 29 85 30 ff
	ff ff		 movaps	 XMMWORD PTR _vX$[ebp], xmm0
; Line 358
  0076c	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00771	6b d1 03	 imul	 edx, ecx, 3
  00774	0f 10 85 30 ff
	ff ff		 movups	 xmm0, XMMWORD PTR _vX$[ebp]
  0077b	0f 11 84 15 60
	ff ff ff	 movups	 XMMWORD PTR _mResult$[ebp+edx], xmm0
; Line 359
  00783	0f 28 85 60 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR _mResult$[ebp]
  0078a	0f 28 8d 70 ff
	ff ff		 movaps	 xmm1, XMMWORD PTR _mResult$[ebp+16]
  00791	0f 28 55 80	 movaps	 xmm2, XMMWORD PTR _mResult$[ebp+32]
  00795	0f 28 5d 90	 movaps	 xmm3, XMMWORD PTR _mResult$[ebp+48]
; Line 362
  00799	52		 push	 edx
  0079a	8b cd		 mov	 ecx, ebp
  0079c	50		 push	 eax
  0079d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@XMMatrixMu
  007a3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  007a8	58		 pop	 eax
  007a9	5a		 pop	 edx
  007aa	5f		 pop	 edi
  007ab	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007ae	33 cd		 xor	 ecx, ebp
  007b0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007b5	8b e5		 mov	 esp, ebp
  007b7	5d		 pop	 ebp
  007b8	8b e3		 mov	 esp, ebx
  007ba	5b		 pop	 ebx
  007bb	c3		 ret	 0
$LN6@XMMatrixMu:
  007bc	02 00 00 00	 DD	 2
  007c0	00 00 00 00	 DD	 $LN5@XMMatrixMu
$LN5@XMMatrixMu:
  007c4	b0 ff ff ff	 DD	 -80			; ffffffb0H
  007c8	40 00 00 00	 DD	 64			; 00000040H
  007cc	00 00 00 00	 DD	 $LN3@XMMatrixMu
  007d0	60 ff ff ff	 DD	 -160			; ffffff60H
  007d4	40 00 00 00	 DD	 64			; 00000040H
  007d8	00 00 00 00	 DD	 $LN4@XMMatrixMu
$LN4@XMMatrixMu:
  007dc	6d		 DB	 109			; 0000006dH
  007dd	52		 DB	 82			; 00000052H
  007de	65		 DB	 101			; 00000065H
  007df	73		 DB	 115			; 00000073H
  007e0	75		 DB	 117			; 00000075H
  007e1	6c		 DB	 108			; 0000006cH
  007e2	74		 DB	 116			; 00000074H
  007e3	00		 DB	 0
$LN3@XMMatrixMu:
  007e4	4d		 DB	 77			; 0000004dH
  007e5	31		 DB	 49			; 00000031H
  007e6	00		 DB	 0
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ENDP ; DirectX::XMMatrixMultiply
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
_TEXT	SEGMENT
$T1 = -32						; size = 16
_w$ = -16						; size = 4
_z$ = -12						; size = 4
_y$ = -8						; size = 4
_x$ = -4						; size = 4
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z PROC		; DirectX::XMVectorSet, COMDAT
; _x$ = xmm0s
; _y$ = xmm1s
; _z$ = xmm2s
; _w$ = xmm3s
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
; Line 72
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 20	 sub	 esp, 32			; 00000020H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00021	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00024	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00027	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002a	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002d	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00030	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00033	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00036	f3 0f 11 5d f0	 movss	 DWORD PTR _w$[ebp], xmm3
  0003b	f3 0f 11 55 f4	 movss	 DWORD PTR _z$[ebp], xmm2
  00040	f3 0f 11 4d f8	 movss	 DWORD PTR _y$[ebp], xmm1
  00045	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0
; Line 81
  0004a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  0004f	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _y$[ebp]
  00054	f3 0f 10 55 f4	 movss	 xmm2, DWORD PTR _z$[ebp]
  00059	f3 0f 10 5d f0	 movss	 xmm3, DWORD PTR _w$[ebp]
  0005e	0f 14 c2	 unpcklps xmm0, xmm2
  00061	0f 14 cb	 unpcklps xmm1, xmm3
  00064	0f 14 c1	 unpcklps xmm0, xmm1
  00067	0f 29 45 e0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  0006b	0f 28 45 e0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 84
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	8b e3		 mov	 esp, ebx
  00074	5b		 pop	 ebx
  00075	c3		 ret	 0
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ENDP		; DirectX::XMVectorSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z
_TEXT	SEGMENT
_M$ = -80						; size = 64
_pDestination$ = -8					; size = 4
__$ArrayPad$ = -4					; size = 4
?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z PROC ; DirectX::XMStoreFloat4x4, COMDAT
; _pDestination$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
; Line 1875
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  0001f	b9 17 00 00 00	 mov	 ecx, 23			; 00000017H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	59		 pop	 ecx
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00036	0f 29 5d e0	 movaps	 XMMWORD PTR _M$[ebp+48], xmm3
  0003a	0f 29 55 d0	 movaps	 XMMWORD PTR _M$[ebp+32], xmm2
  0003e	0f 29 4d c0	 movaps	 XMMWORD PTR _M$[ebp+16], xmm1
  00042	0f 29 45 b0	 movaps	 XMMWORD PTR _M$[ebp], xmm0
  00046	89 4d f8	 mov	 DWORD PTR _pDestination$[ebp], ecx
; Line 1876
  00049	83 7d f8 00	 cmp	 DWORD PTR _pDestination$[ebp], 0
  0004d	75 21		 jne	 SHORT $LN3@XMStoreFlo
  0004f	8b f4		 mov	 esi, esp
  00051	68 54 07 00 00	 push	 1876			; 00000754H
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00066	83 c4 0c	 add	 esp, 12			; 0000000cH
  00069	3b f4		 cmp	 esi, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@XMStoreFlo:
; Line 1905
  00070	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00075	6b d1 00	 imul	 edx, ecx, 0
  00078	0f 10 44 15 b0	 movups	 xmm0, XMMWORD PTR _M$[ebp+edx]
  0007d	8b 45 f8	 mov	 eax, DWORD PTR _pDestination$[ebp]
  00080	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
; Line 1906
  00083	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00088	c1 e1 00	 shl	 ecx, 0
  0008b	0f 10 44 0d b0	 movups	 xmm0, XMMWORD PTR _M$[ebp+ecx]
  00090	8b 55 f8	 mov	 edx, DWORD PTR _pDestination$[ebp]
  00093	83 c2 10	 add	 edx, 16			; 00000010H
  00096	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
; Line 1907
  00099	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0009e	d1 e0		 shl	 eax, 1
  000a0	0f 10 44 05 b0	 movups	 xmm0, XMMWORD PTR _M$[ebp+eax]
  000a5	8b 4d f8	 mov	 ecx, DWORD PTR _pDestination$[ebp]
  000a8	83 c1 20	 add	 ecx, 32			; 00000020H
  000ab	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; Line 1908
  000ae	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  000b3	6b c2 03	 imul	 eax, edx, 3
  000b6	0f 10 44 05 b0	 movups	 xmm0, XMMWORD PTR _M$[ebp+eax]
  000bb	8b 4d f8	 mov	 ecx, DWORD PTR _pDestination$[ebp]
  000be	83 c1 30	 add	 ecx, 48			; 00000030H
  000c1	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; Line 1911
  000c4	52		 push	 edx
  000c5	8b cd		 mov	 ecx, ebp
  000c7	50		 push	 eax
  000c8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@XMStoreFlo
  000ce	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000d3	58		 pop	 eax
  000d4	5a		 pop	 edx
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000da	33 cd		 xor	 ecx, ebp
  000dc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e1	8b e5		 mov	 esp, ebp
  000e3	5d		 pop	 ebp
  000e4	8b e3		 mov	 esp, ebx
  000e6	5b		 pop	 ebx
  000e7	c3		 ret	 0
$LN6@XMStoreFlo:
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN5@XMStoreFlo
$LN5@XMStoreFlo:
  000f0	b0 ff ff ff	 DD	 -80			; ffffffb0H
  000f4	40 00 00 00	 DD	 64			; 00000040H
  000f8	00 00 00 00	 DD	 $LN4@XMStoreFlo
$LN4@XMStoreFlo:
  000fc	4d		 DB	 77			; 0000004dH
  000fd	00		 DB	 0
?XMStoreFloat4x4@DirectX@@YQXPAUXMFLOAT4X4@1@UXMMATRIX@1@@Z ENDP ; DirectX::XMStoreFloat4x4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 16
_pSource$ = -4						; size = 4
?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z PROC ; DirectX::XMLoadFloat4, COMDAT
; _pSource$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
; Line 701
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0001f	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	59		 pop	 ecx
  0002c	89 4d fc	 mov	 DWORD PTR _pSource$[ebp], ecx
; Line 702
  0002f	83 7d fc 00	 cmp	 DWORD PTR _pSource$[ebp], 0
  00033	75 21		 jne	 SHORT $LN3@XMLoadFloa
  00035	8b f4		 mov	 esi, esp
  00037	68 be 02 00 00	 push	 702			; 000002beH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_1JE@EKCDEKPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@XMLoadFloa:
; Line 713
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _pSource$[ebp]
  00059	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  0005c	0f 29 45 e0	 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00060	0f 28 45 e0	 movaps	 xmm0, XMMWORD PTR $T1[ebp]
; Line 716
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	8b e3		 mov	 esp, ebx
  0006b	5b		 pop	 ebx
  0006c	c3		 ret	 0
?XMLoadFloat4@DirectX@@YQ?AT__m128@@PBUXMFLOAT4@1@@Z ENDP ; DirectX::XMLoadFloat4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4X4@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT4X4@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT4X4::XMFLOAT4X4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 716
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMFLOAT4X4@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT4X4::XMFLOAT4X4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4A@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT4A@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT4A::XMFLOAT4A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 588
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QAE@XZ ; DirectX::XMFLOAT4::XMFLOAT4
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0XMFLOAT4A@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT4A::XMFLOAT4A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4@DirectX@@QAE@MMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0XMFLOAT4@DirectX@@QAE@MMMM@Z PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 579
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00016	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00022	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR __z$[ebp]
  0002f	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR __w$[ebp]
  0003c	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0
  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 10 00	 ret	 16			; 00000010H
??0XMFLOAT4@DirectX@@QAE@MMMM@Z ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT4@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT4@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 578
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMFLOAT4@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Float3$ = 8						; size = 4
??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z PROC		; DirectX::XMFLOAT3A::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 537
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _Float3$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _Float3$[ebp]
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _Float3$[ebp]
  0002a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??4XMFLOAT3A@DirectX@@QAEAAU01@ABU01@@Z ENDP		; DirectX::XMFLOAT3A::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3A@DirectX@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0XMFLOAT3A@DirectX@@QAE@MMM@Z PROC			; DirectX::XMFLOAT3A::XMFLOAT3A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 534
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	51		 push	 ecx
  0000f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR __z$[ebp]
  00014	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00019	51		 push	 ecx
  0001a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  0001f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00024	51		 push	 ecx
  00025	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  0002a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	83 c4 04	 add	 esp, 4
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 0c 00	 ret	 12			; 0000000cH
??0XMFLOAT3A@DirectX@@QAE@MMM@Z ENDP			; DirectX::XMFLOAT3A::XMFLOAT3A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3A@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT3A@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT3A::XMFLOAT3A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 533
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QAE@XZ ; DirectX::XMFLOAT3::XMFLOAT3
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0XMFLOAT3A@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT3A::XMFLOAT3A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3@DirectX@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0XMFLOAT3@DirectX@@QAE@MMM@Z PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 524
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00016	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00022	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR __z$[ebp]
  0002f	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 0c 00	 ret	 12			; 0000000cH
??0XMFLOAT3@DirectX@@QAE@MMM@Z ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT3@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT3@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 523
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMFLOAT3@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Float2$ = 8						; size = 4
??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z PROC		; DirectX::XMFLOAT2A::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 485
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _Float2$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _Float2$[ebp]
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??4XMFLOAT2A@DirectX@@QAEAAU01@ABU01@@Z ENDP		; DirectX::XMFLOAT2A::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2A@DirectX@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0XMFLOAT2A@DirectX@@QAE@MM@Z PROC			; DirectX::XMFLOAT2A::XMFLOAT2A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	51		 push	 ecx
  0000f	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00014	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00019	51		 push	 ecx
  0001a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  0001f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@MM@Z ; DirectX::XMFLOAT2::XMFLOAT2
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
??0XMFLOAT2A@DirectX@@QAE@MM@Z ENDP			; DirectX::XMFLOAT2A::XMFLOAT2A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2A@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT2A@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT2A::XMFLOAT2A, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 481
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0XMFLOAT2@DirectX@@QAE@XZ ; DirectX::XMFLOAT2::XMFLOAT2
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0XMFLOAT2A@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT2A::XMFLOAT2A
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2@DirectX@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0XMFLOAT2@DirectX@@QAE@MM@Z PROC			; DirectX::XMFLOAT2::XMFLOAT2, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 472
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00016	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00022	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
??0XMFLOAT2@DirectX@@QAE@MM@Z ENDP			; DirectX::XMFLOAT2::XMFLOAT2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMFLOAT2@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMFLOAT2@DirectX@@QAE@XZ PROC			; DirectX::XMFLOAT2::XMFLOAT2, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 471
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMFLOAT2@DirectX@@QAE@XZ ENDP			; DirectX::XMFLOAT2::XMFLOAT2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 64
$T2 = -160						; size = 64
_this$ = -92						; size = 4
___$ReturnUdt$ = -88					; size = 4
_M$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z PROC		; DirectX::XMMATRIX::operator*, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = edx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
; Line 3091
  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	51		 push	 ecx
  0001f	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	59		 pop	 ecx
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	33 c5		 xor	 eax, ebp
  00039	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0003c	0f 29 5d e0	 movaps	 XMMWORD PTR _M$[ebp+48], xmm3
  00040	0f 29 55 d0	 movaps	 XMMWORD PTR _M$[ebp+32], xmm2
  00044	0f 29 4d c0	 movaps	 XMMWORD PTR _M$[ebp+16], xmm1
  00048	0f 29 45 b0	 movaps	 XMMWORD PTR _M$[ebp], xmm0
  0004c	89 55 a8	 mov	 DWORD PTR ___$ReturnUdt$[ebp], edx
  0004f	89 4d a4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 3092
  00052	8b 45 a4	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8d 4d b0	 lea	 ecx, DWORD PTR _M$[ebp]
  00058	0f 28 00	 movaps	 xmm0, XMMWORD PTR [eax]
  0005b	0f 28 48 10	 movaps	 xmm1, XMMWORD PTR [eax+16]
  0005f	0f 28 50 20	 movaps	 xmm2, XMMWORD PTR [eax+32]
  00063	0f 28 58 30	 movaps	 xmm3, XMMWORD PTR [eax+48]
  00067	e8 00 00 00 00	 call	 ?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ; DirectX::XMMatrixMultiply
  0006c	0f 29 9d 50 ff
	ff ff		 movaps	 XMMWORD PTR $T1[ebp+48], xmm3
  00073	0f 29 95 40 ff
	ff ff		 movaps	 XMMWORD PTR $T1[ebp+32], xmm2
  0007a	0f 29 8d 30 ff
	ff ff		 movaps	 XMMWORD PTR $T1[ebp+16], xmm1
  00081	0f 29 85 20 ff
	ff ff		 movaps	 XMMWORD PTR $T1[ebp], xmm0
  00088	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0008d	8d b5 20 ff ff
	ff		 lea	 esi, DWORD PTR $T1[ebp]
  00093	8d bd 60 ff ff
	ff		 lea	 edi, DWORD PTR $T2[ebp]
  00099	f3 a5		 rep movsd
  0009b	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  000a0	8d b5 60 ff ff
	ff		 lea	 esi, DWORD PTR $T2[ebp]
  000a6	8b 7d a8	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  000a9	f3 a5		 rep movsd
  000ab	8b 45 a8	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 3093
  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@operator
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c4	33 cd		 xor	 ecx, ebp
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	8b e3		 mov	 esp, ebx
  000d0	5b		 pop	 ebx
  000d1	c3		 ret	 0
  000d2	8b ff		 npad	 2
$LN5@operator:
  000d4	01 00 00 00	 DD	 1
  000d8	00 00 00 00	 DD	 $LN4@operator
$LN4@operator:
  000dc	b0 ff ff ff	 DD	 -80			; ffffffb0H
  000e0	40 00 00 00	 DD	 64			; 00000040H
  000e4	00 00 00 00	 DD	 $LN3@operator
$LN3@operator:
  000e8	4d		 DB	 77			; 0000004dH
  000e9	00		 DB	 0
??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z ENDP		; DirectX::XMMATRIX::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0XMMATRIX@DirectX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0XMMATRIX@DirectX@@QAE@XZ PROC			; DirectX::XMMATRIX::XMMATRIX, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 431
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0XMMATRIX@DirectX@@QAE@XZ ENDP			; DirectX::XMMATRIX::XMMATRIX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ PROC		; DirectX::XMVECTORI32::operator __m128, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 330
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00014	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00017	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??BXMVECTORI32@DirectX@@QBE?AT__m128@@XZ ENDP		; DirectX::XMVECTORI32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BXMVECTORF32@DirectX@@QBEPBMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BXMVECTORF32@DirectX@@QBEPBMXZ PROC			; DirectX::XMVECTORF32::operator float const *, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 315
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??BXMVECTORF32@DirectX@@QBEPBMXZ ENDP			; DirectX::XMVECTORF32::operator float const *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ PROC		; DirectX::XMVECTORF32::operator __m128, COMDAT
; _this$ = ecx
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
; Line 314
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00014	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00017	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ENDP		; DirectX::XMVECTORF32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 66
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET _ignore
  00008	e8 00 00 00 00	 call	 ??0_Ignore@std@@QAE@XZ	; std::_Ignore::_Ignore
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Ignore@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Ignore@std@@QAE@XZ PROC				; std::_Ignore::_Ignore, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 49
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 51
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0_Ignore@std@@QAE@XZ ENDP				; std::_Ignore::_Ignore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 69
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 65
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 60
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
; Line 61
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	33 c0		 xor	 eax, eax
  0000d	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 604
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 605
  00003	83 c8 ff	 or	 eax, -1
; Line 606
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
tv69 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 599
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 600
  00014	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Meta$[ebp]
  0001c	39 01		 cmp	 DWORD PTR [ecx], eax
  0001e	74 0a		 je	 SHORT $LN5@not_eof
  00020	8b 55 08	 mov	 edx, DWORD PTR __Meta$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
  00028	eb 1f		 jmp	 SHORT $LN6@not_eof
$LN5@not_eof:
  0002a	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0002f	85 c0		 test	 eax, eax
  00031	75 09		 jne	 SHORT $LN3@not_eof
  00033	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  0003a	eb 07		 jmp	 SHORT $LN4@not_eof
$LN3@not_eof:
  0003c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@not_eof:
  00043	8b 4d f8	 mov	 ecx, DWORD PTR tv68[ebp]
  00046	89 4d fc	 mov	 DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
  00049	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]
; Line 601
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 593
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 594
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00015	75 09		 jne	 SHORT $LN3@eq_int_typ
  00017	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  0001e	eb 07		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  00020	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
  00027	8a 45 fc	 mov	 al, BYTE PTR tv65[ebp]
; Line 595
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 588
  00003	8b 45 08	 mov	 eax, DWORD PTR __Ch$[ebp]
  00006	0f b6 00	 movzx	 eax, BYTE PTR [eax]
; Line 589
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 581
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 582
  00003	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]
; Line 583
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 569
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 570
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  00014	0f be 02	 movsx	 eax, BYTE PTR [edx]
  00017	3b c8		 cmp	 ecx, eax
  00019	75 09		 jne	 SHORT $LN3@eq
  0001b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00022	eb 07		 jmp	 SHORT $LN4@eq
$LN3@eq:
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN4@eq:
  0002b	8a 45 fc	 mov	 al, BYTE PTR tv67[ebp]
; Line 571
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 564
  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00009	8a 11		 mov	 dl, BYTE PTR [ecx]
  0000b	88 10		 mov	 BYTE PTR [eax], dl
; Line 565
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 553
  0000c	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00010	75 08		 jne	 SHORT $LN3@move
  00012	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00015	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
  00018	eb 21		 jmp	 SHORT $LN4@move
$LN3@move:
  0001a	8b f4		 mov	 esi, esp
  0001c	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00023	52		 push	 edx
  00024	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00027	50		 push	 eax
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
$LN4@move:
  0003b	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]
; Line 554
  0003e	5e		 pop	 esi
  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 530
  0000b	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0000f	75 08		 jne	 SHORT $LN3@copy
  00011	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00014	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
  00017	eb 17		 jmp	 SHORT $LN4@copy
$LN3@copy:
  00019	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00020	52		 push	 edx
  00021	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _memcpy
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002d	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
$LN4@copy:
  00030	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]
; Line 531
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -20						; size = 4
tv78 = -13						; size = 1
tv75 = -12						; size = 4
tv72 = -8						; size = 4
tv69 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 523
  0001a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0001d	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00020	85 c9		 test	 ecx, ecx
  00022	75 09		 jne	 SHORT $LN3@length
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  0002b	eb 30		 jmp	 SHORT $LN4@length
$LN3@length:
  0002d	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00030	89 55 f8	 mov	 DWORD PTR tv72[ebp], edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
  00036	83 c0 01	 add	 eax, 1
  00039	89 45 f4	 mov	 DWORD PTR tv75[ebp], eax
$LL5@length:
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR tv72[ebp]
  0003f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00041	88 55 f3	 mov	 BYTE PTR tv78[ebp], dl
  00044	83 45 f8 01	 add	 DWORD PTR tv72[ebp], 1
  00048	80 7d f3 00	 cmp	 BYTE PTR tv78[ebp], 0
  0004c	75 ee		 jne	 SHORT $LL5@length
  0004e	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
  00051	2b 45 f4	 sub	 eax, DWORD PTR tv75[ebp]
  00054	89 45 ec	 mov	 DWORD PTR tv68[ebp], eax
  00057	8b 4d ec	 mov	 ecx, DWORD PTR tv68[ebp]
  0005a	89 4d fc	 mov	 DWORD PTR tv69[ebp], ecx
$LN4@length:
  0005d	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]
; Line 524
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eof@?$char_traits@_W@std@@SAGXZ
_TEXT	SEGMENT
?eof@?$char_traits@_W@std@@SAGXZ PROC			; std::char_traits<wchar_t>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 387
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 388
  00003	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
; Line 389
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?eof@?$char_traits@_W@std@@SAGXZ ENDP			; std::char_traits<wchar_t>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?not_eof@?$char_traits@_W@std@@SAGABG@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
tv73 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@_W@std@@SAGABG@Z PROC		; std::char_traits<wchar_t>::not_eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 382
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 383
  00015	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00018	0f b7 30	 movzx	 esi, WORD PTR [eax]
  0001b	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  00020	0f b7 c8	 movzx	 ecx, ax
  00023	3b f1		 cmp	 esi, ecx
  00025	74 0b		 je	 SHORT $LN5@not_eof
  00027	8b 55 08	 mov	 edx, DWORD PTR __Meta$[ebp]
  0002a	0f b7 02	 movzx	 eax, WORD PTR [edx]
  0002d	89 45 fc	 mov	 DWORD PTR tv73[ebp], eax
  00030	eb 22		 jmp	 SHORT $LN6@not_eof
$LN5@not_eof:
  00032	e8 00 00 00 00	 call	 ?eof@?$char_traits@_W@std@@SAGXZ ; std::char_traits<wchar_t>::eof
  00037	0f b7 c8	 movzx	 ecx, ax
  0003a	85 c9		 test	 ecx, ecx
  0003c	75 09		 jne	 SHORT $LN3@not_eof
  0003e	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
  00045	eb 07		 jmp	 SHORT $LN4@not_eof
$LN3@not_eof:
  00047	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN4@not_eof:
  0004e	8b 55 f8	 mov	 edx, DWORD PTR tv72[ebp]
  00051	89 55 fc	 mov	 DWORD PTR tv73[ebp], edx
$LN6@not_eof:
  00054	66 8b 45 fc	 mov	 ax, WORD PTR tv73[ebp]
; Line 384
  00058	5e		 pop	 esi
  00059	83 c4 08	 add	 esp, 8
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?not_eof@?$char_traits@_W@std@@SAGABG@Z ENDP		; std::char_traits<wchar_t>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z PROC	; std::char_traits<wchar_t>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 376
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 377
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  00014	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00017	3b c8		 cmp	 ecx, eax
  00019	75 09		 jne	 SHORT $LN3@eq_int_typ
  0001b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00022	eb 07		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN4@eq_int_typ:
  0002b	8a 45 fc	 mov	 al, BYTE PTR tv67[ebp]
; Line 378
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?eq_int_type@?$char_traits@_W@std@@SA_NABG0@Z ENDP	; std::char_traits<wchar_t>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z PROC	; std::char_traits<wchar_t>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 370
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 371
  00003	8b 45 08	 mov	 eax, DWORD PTR __Ch$[ebp]
  00006	66 8b 00	 mov	 ax, WORD PTR [eax]
; Line 372
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?to_int_type@?$char_traits@_W@std@@SAGAB_W@Z ENDP	; std::char_traits<wchar_t>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_char_type@?$char_traits@_W@std@@SA_WABG@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@_W@std@@SA_WABG@Z PROC	; std::char_traits<wchar_t>::to_char_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 364
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 365
  00003	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00006	66 8b 00	 mov	 ax, WORD PTR [eax]
; Line 366
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?to_char_type@?$char_traits@_W@std@@SA_WABG@Z ENDP	; std::char_traits<wchar_t>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq@?$char_traits@_W@std@@SA_NAB_W0@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@_W@std@@SA_NAB_W0@Z PROC		; std::char_traits<wchar_t>::eq, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 352
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 353
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  00014	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00017	3b c8		 cmp	 ecx, eax
  00019	75 09		 jne	 SHORT $LN3@eq
  0001b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00022	eb 07		 jmp	 SHORT $LN4@eq
$LN3@eq:
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN4@eq:
  0002b	8a 45 fc	 mov	 al, BYTE PTR tv67[ebp]
; Line 354
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?eq@?$char_traits@_W@std@@SA_NAB_W0@Z ENDP		; std::char_traits<wchar_t>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 346
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 347
  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00009	66 8b 11	 mov	 dx, WORD PTR [ecx]
  0000c	66 89 10	 mov	 WORD PTR [eax], dx
; Line 348
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 334
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 336
  0000b	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0000f	75 08		 jne	 SHORT $LN3@move
  00011	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00014	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
  00017	eb 17		 jmp	 SHORT $LN4@move
$LN3@move:
  00019	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00020	52		 push	 edx
  00021	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _wmemmove
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002d	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
$LN4@move:
  00030	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]
; Line 337
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 311
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 313
  0000b	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0000f	75 08		 jne	 SHORT $LN3@copy
  00011	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00014	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
  00017	eb 17		 jmp	 SHORT $LN4@copy
$LN3@copy:
  00019	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  0001c	51		 push	 ecx
  0001d	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00020	52		 push	 edx
  00021	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _wmemcpy
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002d	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
$LN4@copy:
  00030	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]
; Line 314
  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?length@?$char_traits@_W@std@@SAIPB_W@Z
_TEXT	SEGMENT
tv68 = -20						; size = 4
tv78 = -14						; size = 2
tv75 = -12						; size = 4
tv72 = -8						; size = 4
tv69 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@_W@std@@SAIPB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 304
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
; Line 306
  0001a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0001d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00020	85 c9		 test	 ecx, ecx
  00022	75 09		 jne	 SHORT $LN3@length
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
  0002b	eb 35		 jmp	 SHORT $LN4@length
$LN3@length:
  0002d	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00030	89 55 f8	 mov	 DWORD PTR tv72[ebp], edx
  00033	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
  00036	83 c0 02	 add	 eax, 2
  00039	89 45 f4	 mov	 DWORD PTR tv75[ebp], eax
$LL5@length:
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR tv72[ebp]
  0003f	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00042	66 89 55 f2	 mov	 WORD PTR tv78[ebp], dx
  00046	83 45 f8 02	 add	 DWORD PTR tv72[ebp], 2
  0004a	66 83 7d f2 00	 cmp	 WORD PTR tv78[ebp], 0
  0004f	75 eb		 jne	 SHORT $LL5@length
  00051	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
  00054	2b 45 f4	 sub	 eax, DWORD PTR tv75[ebp]
  00057	d1 f8		 sar	 eax, 1
  00059	89 45 ec	 mov	 DWORD PTR tv68[ebp], eax
  0005c	8b 4d ec	 mov	 ecx, DWORD PTR tv68[ebp]
  0005f	89 4d fc	 mov	 DWORD PTR tv69[ebp], ecx
$LN4@length:
  00062	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]
; Line 307
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?length@?$char_traits@_W@std@@SAIPB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _wmemmove
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemmove PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1279
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 1284
  00004	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  00007	d1 e0		 shl	 eax, 1
  00009	8b f4		 mov	 esi, esp
  0000b	50		 push	 eax
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00013	52		 push	 edx
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001d	3b f4		 cmp	 esi, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1286
  00024	5e		 pop	 esi
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 1271
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1274
  00003	8b 45 10	 mov	 eax, DWORD PTR __N$[ebp]
  00006	d1 e0		 shl	 eax, 1
  00008	50		 push	 eax
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR __S2$[ebp]
  0000c	51		 push	 ecx
  0000d	8b 55 08	 mov	 edx, DWORD PTR __S1$[ebp]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 _memcpy
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1276
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 1136
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __X$[ebp]
  00009	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0000e	e8 00 00 00 00	 call	 _sqrtf
  00013	83 c4 04	 add	 esp, 4
  00016	3b ec		 cmp	 ebp, esp
  00018	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT
tv74 = -12						; size = 4
__Z$1 = -8						; size = 4
__N$ = -4						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
??$_Pow_int@M@@YAMMH@Z PROC				; _Pow_int<float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 1015
  0001b	83 7d 0c 00	 cmp	 DWORD PTR __Y$[ebp], 0
  0001f	7c 08		 jl	 SHORT $LN7@Pow_int
; Line 1016
  00021	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00024	89 45 fc	 mov	 DWORD PTR __N$[ebp], eax
; Line 1017
  00027	eb 08		 jmp	 SHORT $LN6@Pow_int
$LN7@Pow_int:
; Line 1018
  00029	8b 4d 0c	 mov	 ecx, DWORD PTR __Y$[ebp]
  0002c	f7 d9		 neg	 ecx
  0002e	89 4d fc	 mov	 DWORD PTR __N$[ebp], ecx
$LN6@Pow_int:
; Line 1019
  00031	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00039	f3 0f 11 45 f8	 movss	 DWORD PTR __Z$1[ebp], xmm0
  0003e	eb 0f		 jmp	 SHORT $LN5@Pow_int
$LN4@Pow_int:
  00040	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __X$[ebp]
  00045	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR __X$[ebp]
  0004a	f3 0f 11 45 08	 movss	 DWORD PTR __X$[ebp], xmm0
$LN5@Pow_int:
; Line 1020
  0004f	8b 55 fc	 mov	 edx, DWORD PTR __N$[ebp]
  00052	83 e2 01	 and	 edx, 1
  00055	74 0f		 je	 SHORT $LN2@Pow_int
; Line 1021
  00057	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR __Z$1[ebp]
  0005c	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR __X$[ebp]
  00061	f3 0f 11 45 f8	 movss	 DWORD PTR __Z$1[ebp], xmm0
$LN2@Pow_int:
; Line 1022
  00066	8b 45 fc	 mov	 eax, DWORD PTR __N$[ebp]
  00069	d1 e8		 shr	 eax, 1
  0006b	89 45 fc	 mov	 DWORD PTR __N$[ebp], eax
  0006e	75 29		 jne	 SHORT $LN1@Pow_int
; Line 1023
  00070	83 7d 0c 00	 cmp	 DWORD PTR __Y$[ebp], 0
  00074	7d 14		 jge	 SHORT $LN10@Pow_int
  00076	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0007e	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR __Z$1[ebp]
  00083	f3 0f 11 45 f4	 movss	 DWORD PTR tv74[ebp], xmm0
  00088	eb 0a		 jmp	 SHORT $LN11@Pow_int
$LN10@Pow_int:
  0008a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR __Z$1[ebp]
  0008f	f3 0f 11 45 f4	 movss	 DWORD PTR tv74[ebp], xmm0
$LN11@Pow_int:
  00094	d9 45 f4	 fld	 DWORD PTR tv74[ebp]
  00097	eb 02		 jmp	 SHORT $LN3@Pow_int
$LN1@Pow_int:
  00099	eb a5		 jmp	 SHORT $LN4@Pow_int
$LN3@Pow_int:
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
??$_Pow_int@M@@YAMMH@Z ENDP				; _Pow_int<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?pow@@YAMMH@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
?pow@@YAMMH@Z PROC					; pow, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 1118
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Y$[ebp]
  00006	50		 push	 eax
  00007	51		 push	 ecx
  00008	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __X$[ebp]
  0000d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00012	e8 00 00 00 00	 call	 ??$_Pow_int@M@@YAMMH@Z	; _Pow_int<float>
  00017	83 c4 08	 add	 esp, 8
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?pow@@YAMMH@Z ENDP					; pow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv70 = -4						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 774
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 775
  0000b	f3 0f 51 45 08	 sqrtss	 xmm0, DWORD PTR __X$[ebp]
  00010	f3 0f 11 45 fc	 movss	 DWORD PTR tv70[ebp], xmm0
  00015	d9 45 fc	 fld	 DWORD PTR tv70[ebp]
; Line 776
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -4						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 686
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
; Line 687
  0000b	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __X$[ebp]
  00010	0f 54 05 00 00
	00 00		 andps	 xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
  00017	f3 0f 11 45 fc	 movss	 DWORD PTR tv71[ebp], xmm0
  0001c	d9 45 fc	 fld	 DWORD PTR tv71[ebp]
; Line 688
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 557
  00004	8b f4		 mov	 esi, esp
  00006	83 ec 08	 sub	 esp, 8
  00009	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR __Y$[ebp]
  0000e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00013	83 ec 08	 sub	 esp, 8
  00016	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR __X$[ebp]
  0001b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___hypot
  00026	83 c4 10	 add	 esp, 16			; 00000010H
  00029	3b f4		 cmp	 esi, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 558
  00030	5e		 pop	 esi
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
_hypot	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_wWinMain@16 PROC
; File d:\users\pn9623\engine\sse_fluid\fluidcs11\fluidcs11.cpp
; Line 292
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 296
  00004	8b f4		 mov	 esi, esp
  00006	6a 21		 push	 33			; 00000021H
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtSetDbgFlag
  0000e	83 c4 04	 add	 esp, 4
  00011	3b f4		 cmp	 esi, esp
  00013	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 303
  00018	6a 00		 push	 0
  0001a	68 00 00 00 00	 push	 OFFSET ?ModifyDeviceSettings@@YG_NPAUDXUTDeviceSettings@@PAX@Z ; ModifyDeviceSettings
  0001f	e8 00 00 00 00	 call	 ?DXUTSetCallbackDeviceChanging@@YGXP6G_NPAUDXUTDeviceSettings@@PAX@Z1@Z ; DXUTSetCallbackDeviceChanging
; Line 304
  00024	6a 00		 push	 0
  00026	68 00 00 00 00	 push	 OFFSET ?MsgProc@@YGJPAUHWND__@@IIJPA_NPAX@Z ; MsgProc
  0002b	e8 00 00 00 00	 call	 ?DXUTSetCallbackMsgProc@@YGXP6GJPAUHWND__@@IIJPA_NPAX@Z2@Z ; DXUTSetCallbackMsgProc
; Line 306
  00030	6a 00		 push	 0
  00032	68 00 00 00 00	 push	 OFFSET ?IsD3D11DeviceAcceptable@@YG_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z ; IsD3D11DeviceAcceptable
  00037	e8 00 00 00 00	 call	 ?DXUTSetCallbackD3D11DeviceAcceptable@@YGXP6G_NPBVCD3D11EnumAdapterInfo@@IPBVCD3D11EnumDeviceInfo@@W4DXGI_FORMAT@@_NPAX@Z4@Z ; DXUTSetCallbackD3D11DeviceAcceptable
; Line 307
  0003c	6a 00		 push	 0
  0003e	68 00 00 00 00	 push	 OFFSET ?OnD3D11CreateDevice@@YGJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z ; OnD3D11CreateDevice
  00043	e8 00 00 00 00	 call	 ?DXUTSetCallbackD3D11DeviceCreated@@YGXP6GJPAUID3D11Device@@PBUDXGI_SURFACE_DESC@@PAX@Z2@Z ; DXUTSetCallbackD3D11DeviceCreated
; Line 308
  00048	6a 00		 push	 0
  0004a	68 00 00 00 00	 push	 OFFSET ?OnD3D11ResizedSwapChain@@YGJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z ; OnD3D11ResizedSwapChain
  0004f	e8 00 00 00 00	 call	 ?DXUTSetCallbackD3D11SwapChainResized@@YGXP6GJPAUID3D11Device@@PAUIDXGISwapChain@@PBUDXGI_SURFACE_DESC@@PAX@Z3@Z ; DXUTSetCallbackD3D11SwapChainResized
; Line 309
  00054	6a 00		 push	 0
  00056	68 00 00 00 00	 push	 OFFSET ?OnD3D11FrameRender@@YGXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z ; OnD3D11FrameRender
  0005b	e8 00 00 00 00	 call	 ?DXUTSetCallbackD3D11FrameRender@@YGXP6GXPAUID3D11Device@@PAUID3D11DeviceContext@@NMPAX@Z2@Z ; DXUTSetCallbackD3D11FrameRender
; Line 310
  00060	6a 00		 push	 0
  00062	68 00 00 00 00	 push	 OFFSET ?OnD3D11ReleasingSwapChain@@YGXPAX@Z ; OnD3D11ReleasingSwapChain
  00067	e8 00 00 00 00	 call	 ?DXUTSetCallbackD3D11SwapChainReleasing@@YGXP6GXPAX@Z0@Z ; DXUTSetCallbackD3D11SwapChainReleasing
; Line 311
  0006c	6a 00		 push	 0
  0006e	68 00 00 00 00	 push	 OFFSET ?OnD3D11DestroyDevice@@YGXPAX@Z ; OnD3D11DestroyDevice
  00073	e8 00 00 00 00	 call	 ?DXUTSetCallbackD3D11DeviceDestroyed@@YGXP6GXPAX@Z0@Z ; DXUTSetCallbackD3D11DeviceDestroyed
; Line 313
  00078	e8 00 00 00 00	 call	 ?InitApp@@YAXXZ		; InitApp
; Line 314
  0007d	6a 00		 push	 0
  0007f	6a 00		 push	 0
  00081	6a 01		 push	 1
  00083	6a 01		 push	 1
  00085	e8 00 00 00 00	 call	 ?DXUTInit@@YGJ_N0PA_W0@Z ; DXUTInit
; Line 315
  0008a	6a 01		 push	 1
  0008c	6a 01		 push	 1
  0008e	e8 00 00 00 00	 call	 ?DXUTSetCursorSettings@@YGX_N0@Z ; DXUTSetCursorSettings
; Line 316
  00093	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00098	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0009d	6a 00		 push	 0
  0009f	6a 00		 push	 0
  000a1	6a 00		 push	 0
  000a3	68 00 00 00 00	 push	 OFFSET $SG189007
  000a8	e8 00 00 00 00	 call	 ?DXUTCreateWindow@@YGJPB_WPAUHINSTANCE__@@PAUHICON__@@PAUHMENU__@@HH@Z ; DXUTCreateWindow
; Line 317
  000ad	68 38 04 00 00	 push	 1080			; 00000438H
  000b2	68 80 07 00 00	 push	 1920			; 00000780H
  000b7	6a 01		 push	 1
  000b9	68 00 a0 00 00	 push	 40960			; 0000a000H
  000be	e8 00 00 00 00	 call	 ?DXUTCreateDevice@@YGJW4D3D_FEATURE_LEVEL@@_NHH@Z ; DXUTCreateDevice
; Line 318
  000c3	e8 00 00 00 00	 call	 ?LoadTexture@@YAXXZ	; LoadTexture
; Line 320
  000c8	6a 00		 push	 0
  000ca	e8 00 00 00 00	 call	 ?DXUTMainLoop@@YGJPAUHACCEL__@@@Z ; DXUTMainLoop
; Line 321
  000cf	e8 00 00 00 00	 call	 ?DXUTGetExitCode@@YGHXZ	; DXUTGetExitCode
; Line 322
  000d4	5e		 pop	 esi
  000d5	3b ec		 cmp	 ebp, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dc	5d		 pop	 ebp
  000dd	c2 10 00	 ret	 16			; 00000010H
_wWinMain@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	83 e8 01	 sub	 eax, 1
  0000a	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  0000d	78 1a		 js	 SHORT $LN3@vector
  0000f	8b f4		 mov	 esi, esp
  00011	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00014	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00017	3b f4		 cmp	 esi, esp
  00019	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  00021	03 4d 0c	 add	 ecx, DWORD PTR ___s$[ebp]
  00024	89 4d 08	 mov	 DWORD PTR ___t$[ebp], ecx
  00027	eb db		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
